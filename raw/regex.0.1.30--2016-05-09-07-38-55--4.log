commit 32683ce1930ef1390f20e4ab72650e6804fd1c1b
Merge: 50909f2 dcdf761
Author: bors <bors@rust-lang.org>
Date:   Mon May 9 04:32:39 2016 -0700

    Auto merge of #33478 - xen0n:normalize-callee-trait-ref, r=eddyb
    
    trans: callee: normalize trait_ref before use
    
    This fixes #33436 and #33461. Ran the tests and nothing else seems to be affected.
    
    P.S. How to write the regression test for this fix? Does this qualify as run-pass or run-make, as the test only needs to be successfully compiled to be considered passed? Will add the testcase (the minimal example in #33461 seems fit) after clarifying this.
rustc: ./regex.0.1.30
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling regex v0.1.30 (file:///root/benchmarks/regex.0.1.30)
time: 0.104; rss: 54MB	parsing
Lines of code:             8558
Pre-expansion node count:  58217
time: 0.011; rss: 54MB	configuration 1
time: 0.000; rss: 54MB	recursion limit
time: 0.000; rss: 54MB	crate injection
time: 0.004; rss: 59MB	macro loading
time: 0.000; rss: 59MB	plugin loading
time: 0.000; rss: 59MB	plugin registration
time: 0.061; rss: 61MB	expansion
time: 0.014; rss: 61MB	configuration 2
time: 0.000; rss: 61MB	gated configuration checking
time: 0.006; rss: 61MB	maybe building test harness
time: 0.006; rss: 61MB	prelude injection
time: 0.001; rss: 61MB	checking that all macro invocations are gone
time: 0.000; rss: 61MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 61MB	complete gated feature checking
Post-expansion node count: 68491
time: 0.006; rss: 61MB	assigning node ids
time: 0.001; rss: 61MB	collecting defs
time: 0.001; rss: 61MB	external crate/lib resolution
time: 0.010; rss: 71MB	lowering ast -> hir
time: 0.004; rss: 72MB	indexing hir
time: 0.001; rss: 72MB	attribute checking
time: 0.007; rss: 72MB	early lint checks
time: 0.001; rss: 65MB	language item collection
time: 0.010; rss: 75MB	name resolution
time: 0.001; rss: 75MB	lifetime resolution
time: 0.000; rss: 75MB	looking for entry point
time: 0.000; rss: 75MB	looking for plugin registrar
time: 0.010; rss: 78MB	region resolution
time: 0.001; rss: 78MB	loop checking
time: 0.002; rss: 78MB	static item recursion checking
time: 0.000; rss: 78MB	load_dep_graph
time: 0.008; rss: 89MB	type collecting
time: 0.000; rss: 89MB	variance inference
time: 0.025; rss: 99MB	coherence checking
time: 0.011; rss: 99MB	wf checking
time: 0.290; rss: 104MB	item-types checking
time: 0.212; rss: 113MB	item-bodies checking
time: 0.000; rss: 113MB	drop-impl checking
time: 0.034; rss: 117MB	const checking
time: 0.004; rss: 117MB	privacy checking
time: 0.001; rss: 117MB	stability index
time: 0.001; rss: 117MB	intrinsic checking
time: 0.001; rss: 117MB	effect checking
time: 0.003; rss: 117MB	match checking
time: 0.002; rss: 118MB	liveness checking
time: 0.006; rss: 118MB	rvalue checking
time: 0.061; rss: 125MB	MIR dump
time: 0.017; rss: 125MB	MIR passes
time: 0.021; rss: 126MB	borrow checking
time: 0.000; rss: 126MB	reachability checking
time: 0.003; rss: 126MB	death checking
time: 0.003; rss: 126MB	stability checking
time: 0.000; rss: 126MB	unused lib feature checking
time: 0.029; rss: 126MB	lint checking
time: 0.000; rss: 126MB	resolving dependency formats
time: 0.007; rss: 127MB	Prepare MIR codegen passes
  time: 0.064; rss: 134MB	translation item collection
  time: 0.002; rss: 134MB	codegen unit partitioning
  time: 0.196; rss: 186MB	write metadata
time: 0.787; rss: 183MB	translation
time: 0.000; rss: 183MB	assert dep graph
time: 0.000; rss: 183MB	serialize dep graph
  time: 0.035; rss: 118MB	llvm function passes [0]
  time: 0.016; rss: 120MB	llvm module passes [0]
  time: 0.612; rss: 124MB	codegen passes [0]
  time: 0.001; rss: 106MB	codegen passes [0]
time: 0.742; rss: 103MB	LLVM passes
time: 0.066; rss: 102MB	linking
done
