commit 25e42ac10653e4d7178e36201608cc269e3c66c7
Merge: 0400d92 bc93fbc
Author: bors <bors@rust-lang.org>
Date:   Wed Mar 2 08:42:38 2016 +0000

    Auto merge of #31937 - petrochenkov:field, r=eddyb
    
    The names are "0", "1", "2" etc, the same as used in field access.
    
    This generally make things simpler and potentially allows to reuse braced struct machinery (struct patterns, struct expressions) for tuple structs.
    
    I haven't touched the AST for stability reasons, but I intend to do it later.
    
    r? @eddyb
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.029; rss: 44MB	parsing
Lines of code:             9154
Pre-expansion node count:  45594
time: 0.009; rss: 44MB	configuration 1
time: 0.000; rss: 44MB	recursion limit
time: 0.000; rss: 44MB	gated macro checking
time: 0.000; rss: 44MB	crate injection
time: 0.004; rss: 50MB	macro loading
time: 0.000; rss: 50MB	plugin loading
time: 0.000; rss: 50MB	plugin registration
time: 0.187; rss: 60MB	expansion
time: 0.005; rss: 60MB	complete gated feature checking 1
time: 0.035; rss: 60MB	configuration 2
time: 0.000; rss: 60MB	gated configuration checking
time: 0.014; rss: 60MB	maybe building test harness
time: 0.011; rss: 60MB	prelude injection
time: 0.001; rss: 60MB	checking that all macro invocations are gone
time: 0.000; rss: 60MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 60MB	complete gated feature checking 2
time: 0.001; rss: 60MB	const fn bodies and arguments
Post-expansion node count: 109258
time: 0.010; rss: 60MB	assigning node ids
time: 0.011; rss: 64MB	lowering ast -> hir
time: 0.004; rss: 66MB	indexing hir
time: 0.002; rss: 66MB	attribute checking
time: 0.006; rss: 66MB	early lint checks
time: 0.004; rss: 61MB	external crate/lib resolution
time: 0.001; rss: 61MB	language item collection
time: 0.024; rss: 82MB	resolution
time: 0.002; rss: 82MB	lifetime resolution
time: 0.000; rss: 82MB	looking for entry point
time: 0.000; rss: 82MB	looking for plugin registrar
time: 0.005; rss: 84MB	region resolution
time: 0.001; rss: 84MB	loop checking
time: 0.001; rss: 84MB	static item recursion checking
time: 0.012; rss: 89MB	type collecting
time: 0.000; rss: 89MB	variance inference
time: 0.037; rss: 107MB	coherence checking
time: 0.078; rss: 107MB	wf checking
time: 0.023; rss: 107MB	item-types checking
time: 0.470; rss: 129MB	item-bodies checking
time: 0.000; rss: 129MB	drop-impl checking
time: 0.036; rss: 130MB	const checking
time: 0.010; rss: 130MB	privacy checking
time: 0.001; rss: 130MB	stability index
time: 0.004; rss: 130MB	intrinsic checking
time: 0.002; rss: 130MB	effect checking
time: 0.012; rss: 130MB	match checking
time: 0.005; rss: 130MB	liveness checking
time: 0.032; rss: 130MB	rvalue checking
time: 0.059; rss: 134MB	MIR dump
time: 0.000; rss: 134MB	MIR passes
time: 0.065; rss: 134MB	borrow checking
time: 0.003; rss: 134MB	reachability checking
time: 0.006; rss: 134MB	death checking
time: 0.006; rss: 134MB	stability checking
time: 0.000; rss: 134MB	unused lib feature checking
time: 0.046; rss: 134MB	lint checking
time: 0.000; rss: 134MB	resolving dependency formats
time: 0.006; rss: 136MB	erasing regions from MIR
  time: 0.183; rss: 154MB	translation item collection
  time: 0.134; rss: 246MB	write metadata
time: 1.324; rss: 246MB	translation
  time: 0.097; rss: 169MB	llvm function passes [0]
  time: 0.047; rss: 170MB	llvm module passes [0]
  time: 1.634; rss: 173MB	codegen passes [0]
  time: 0.001; rss: 124MB	codegen passes [0]
time: 1.979; rss: 123MB	LLVM passes
time: 0.169; rss: 123MB	linking
done
