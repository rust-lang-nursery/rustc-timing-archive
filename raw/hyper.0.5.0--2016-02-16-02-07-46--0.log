commit 28bcafa4565f8676325c20dd2e700dfa7f08d4e1
Merge: 29e8ac5 c84ab39
Author: bors <bors@rust-lang.org>
Date:   Tue Feb 16 07:01:34 2016 +0000

    Auto merge of #31668 - cuviper:lfs, r=alexcrichton
    
    This follows the pattern already used for stat functions from #31551.  Now
    `ftruncate`, `lseek`, and `readdir_r` use their explicit 64-bit variants for
    LFS support, using wider `off_t` and `dirent` types.  This also updates to
    `open64`, which uses no different types but implies the `O_LARGEFILE` flag.
    
    Non-Linux platforms just map their normal functions to the 64-bit names.
    
    r? @alexcrichton
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling rustc-serialize v0.3.18
   Compiling typeable v0.1.2
   Compiling matches v0.1.2
   Compiling unicase v0.1.0
   Compiling winapi v0.2.5
   Compiling traitobject v0.0.1
   Compiling bitflags v0.3.3
   Compiling libc v0.1.12
   Compiling pkg-config v0.3.6
   Compiling gcc v0.3.24
   Compiling libc v0.2.7
   Compiling winapi-build v0.1.1
   Compiling httparse v0.1.6
   Compiling lazy_static v0.1.15
   Compiling kernel32-sys v0.2.1
   Compiling num_cpus v0.2.10
   Compiling time v0.1.34
   Compiling log v0.3.5
   Compiling rand v0.3.14
   Compiling mime v0.0.11
   Compiling openssl-sys v0.6.7
   Compiling openssl v0.6.7
   Compiling uuid v0.1.18
   Compiling url v0.2.38
   Compiling cookie v0.1.21
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.041; rss: 39MB	parsing
Lines of code:             9154
Pre-expansion node count:  45594
time: 0.010; rss: 40MB	configuration 1
time: 0.000; rss: 40MB	recursion limit
time: 0.000; rss: 40MB	gated macro checking
time: 0.000; rss: 40MB	crate injection
time: 0.005; rss: 45MB	macro loading
time: 0.000; rss: 45MB	plugin loading
time: 0.000; rss: 45MB	plugin registration
time: 0.199; rss: 55MB	expansion
time: 0.005; rss: 55MB	complete gated feature checking 1
time: 0.034; rss: 55MB	configuration 2
time: 0.000; rss: 55MB	gated configuration checking
time: 0.013; rss: 55MB	maybe building test harness
time: 0.011; rss: 55MB	prelude injection
time: 0.001; rss: 55MB	checking that all macro invocations are gone
time: 0.000; rss: 55MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 55MB	complete gated feature checking 2
time: 0.001; rss: 55MB	const fn bodies and arguments
Post-expansion node count: 109258
time: 0.010; rss: 55MB	assigning node ids
time: 0.018; rss: 60MB	lowering ast -> hir
time: 0.007; rss: 62MB	indexing hir
time: 0.000; rss: 62MB	attribute checking
time: 0.007; rss: 62MB	early lint checks
time: 0.004; rss: 56MB	external crate/lib resolution
time: 0.001; rss: 56MB	language item collection
time: 0.034; rss: 75MB	resolution
time: 0.002; rss: 75MB	lifetime resolution
time: 0.000; rss: 75MB	looking for entry point
time: 0.000; rss: 75MB	looking for plugin registrar
time: 0.006; rss: 78MB	region resolution
time: 0.001; rss: 78MB	loop checking
time: 0.001; rss: 78MB	static item recursion checking
time: 0.012; rss: 83MB	type collecting
time: 0.000; rss: 83MB	variance inference
time: 0.040; rss: 99MB	coherence checking
time: 0.078; rss: 101MB	wf checking
time: 0.024; rss: 102MB	item-types checking
time: 0.526; rss: 118MB	item-bodies checking
time: 0.000; rss: 118MB	drop-impl checking
time: 0.042; rss: 120MB	const checking
time: 0.010; rss: 120MB	privacy checking
time: 0.001; rss: 120MB	stability index
time: 0.004; rss: 120MB	intrinsic checking
time: 0.002; rss: 120MB	effect checking
time: 0.012; rss: 120MB	match checking
time: 0.055; rss: 123MB	MIR dump
time: 0.000; rss: 123MB	MIR passes
time: 0.006; rss: 124MB	liveness checking
time: 0.067; rss: 124MB	borrow checking
time: 0.034; rss: 124MB	rvalue checking
time: 0.003; rss: 124MB	reachability checking
time: 0.007; rss: 124MB	death checking
time: 0.006; rss: 124MB	stability checking
time: 0.000; rss: 124MB	unused lib feature checking
time: 0.046; rss: 124MB	lint checking
time: 0.000; rss: 124MB	resolving dependency formats
time: 0.007; rss: 125MB	erasing regions from MIR
  time: 0.207; rss: 145MB	translation item collection
  time: 0.139; rss: 238MB	write metadata
time: 1.569; rss: 238MB	translation
  time: 0.100; rss: 162MB	llvm function passes [0]
  time: 0.047; rss: 163MB	llvm module passes [0]
  time: 1.635; rss: 168MB	codegen passes [0]
  time: 0.001; rss: 119MB	codegen passes [0]
time: 1.991; rss: 118MB	LLVM passes
time: 0.172; rss: 118MB	linking
done
