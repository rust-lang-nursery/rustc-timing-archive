commit d508de6cf7c7bb9b5057ee63432dbbc899209101
Merge: d98da85 d37edef
Author: bors <bors@rust-lang.org>
Date:   Mon Jul 4 02:18:46 2016 -0700

    Auto merge of #34638 - zackmdavis:if_let_over_none_empty_block_arm, r=jseyfried
    
    prefer `if let` to match with `None => {}` arm in some places
    
    This is a spiritual succesor to #34268 / 8531d581, in which we replaced a
    number of matches of None to the unit value with `if let` conditionals
    where it was judged that this made for clearer/simpler code (as would be
    recommended by Manishearth/rust-clippy's `single_match` lint). The same
    rationale applies to matches of None to the empty block.
    
    ----
    
    r? @jseyfried
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.039; rss: 88MB	parsing
Lines of code:             9154
Pre-expansion node count:  44838
time: 0.006; rss: 88MB	configuration
time: 0.000; rss: 88MB	recursion limit
time: 0.000; rss: 88MB	crate injection
time: 0.000; rss: 88MB	plugin loading
time: 0.000; rss: 88MB	plugin registration
time: 0.179; rss: 128MB	expansion
time: 0.000; rss: 128MB	maybe building test harness
time: 0.000; rss: 128MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 128MB	complete gated feature checking
Post-expansion node count: 101579
time: 0.007; rss: 128MB	assigning node ids
time: 0.003; rss: 130MB	collecting defs
time: 0.010; rss: 139MB	external crate/lib resolution
time: 0.006; rss: 139MB	early lint checks
time: 0.001; rss: 139MB	AST validation
time: 0.017; rss: 146MB	name resolution
time: 0.009; rss: 152MB	lowering ast -> hir
time: 0.001; rss: 154MB	indexing hir
time: 0.001; rss: 154MB	attribute checking
time: 0.001; rss: 148MB	language item collection
time: 0.002; rss: 148MB	lifetime resolution
time: 0.000; rss: 148MB	looking for entry point
time: 0.000; rss: 148MB	looking for plugin registrar
time: 0.005; rss: 152MB	region resolution
time: 0.001; rss: 152MB	loop checking
time: 0.001; rss: 152MB	static item recursion checking
time: 0.000; rss: 152MB	load_dep_graph
time: 0.032; rss: 155MB	type collecting
time: 0.000; rss: 155MB	variance inference
time: 0.044; rss: 162MB	coherence checking
time: 0.097; rss: 163MB	wf checking
time: 0.035; rss: 163MB	item-types checking
time: 0.518; rss: 175MB	item-bodies checking
time: 0.000; rss: 175MB	drop-impl checking
time: 0.043; rss: 177MB	const checking
time: 0.006; rss: 177MB	privacy checking
time: 0.001; rss: 177MB	stability index
time: 0.006; rss: 177MB	intrinsic checking
time: 0.002; rss: 177MB	effect checking
time: 0.014; rss: 177MB	match checking
time: 0.005; rss: 177MB	liveness checking
time: 0.031; rss: 177MB	rvalue checking
time: 0.060; rss: 187MB	MIR dump
time: 0.042; rss: 187MB	MIR passes
time: 0.070; rss: 187MB	borrow checking
time: 0.003; rss: 187MB	reachability checking
time: 0.005; rss: 187MB	death checking
time: 0.005; rss: 187MB	stability checking
time: 0.000; rss: 187MB	unused lib feature checking
time: 0.047; rss: 187MB	lint checking
time: 0.000; rss: 187MB	resolving dependency formats
time: 0.090; rss: 189MB	Prepare MIR codegen passes
  time: 0.129; rss: 195MB	write metadata
  time: 0.183; rss: 199MB	translation item collection
  time: 0.007; rss: 201MB	codegen unit partitioning
time: 3.697; rss: 321MB	translation
time: 0.001; rss: 321MB	assert dep graph
time: 0.000; rss: 321MB	serialize dep graph
  time: 1.132; rss: 211MB	llvm function passes [0]
  time: 0.429; rss: 212MB	llvm module passes [0]
  time: 16.037; rss: 213MB	codegen passes [0]
  time: 0.002; rss: 165MB	codegen passes [0]
time: 18.988; rss: 165MB	LLVM passes
time: 0.177; rss: 163MB	linking
done
