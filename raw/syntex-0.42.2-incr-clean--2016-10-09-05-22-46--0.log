commit 9d4d0da7af77858f268a66ff144134945c880560
Merge: b98cc35 89870b3
Author: bors <bors@rust-lang.org>
Date:   Sun Oct 9 00:35:56 2016 -0700

    Auto merge of #36982 - GuillaumeGomez:slice_urls, r=frewsxcv
    
    Add missing urls in slice doc module
    
    r? @steveklabnik
rustc: ./syntex-0.42.2-incr-clean
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax -- -Ztime-passes -Zinput-stats -Z incremental-info
   Compiling rustc-serialize v0.3.19
   Compiling bitflags v0.5.0
   Compiling libc v0.2.15
   Compiling log v0.3.6
   Compiling winapi-build v0.1.1
   Compiling unicode-xid v0.0.3
   Compiling winapi v0.2.8
   Compiling kernel32-sys v0.2.2
   Compiling term v0.4.4
   Compiling syntex_pos v0.42.0
   Compiling syntex_errors v0.42.0
   Compiling syntex_syntax v0.42.0
time: 0.108; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  224033
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.270; rss: 145MB	expansion
time: 0.000; rss: 145MB	maybe building test harness
time: 0.006; rss: 145MB	maybe creating a macro crate
Post-expansion node count: 641571
time: 0.000; rss: 145MB	checking for inline asm in case the target doesn't support it
time: 0.013; rss: 145MB	complete gated feature checking
time: 0.023; rss: 145MB	early lint checks
time: 0.007; rss: 145MB	AST validation
time: 0.084; rss: 160MB	name resolution
time: 0.050; rss: 202MB	lowering ast -> hir
time: 0.009; rss: 211MB	indexing hir
time: 0.006; rss: 211MB	attribute checking
time: 0.006; rss: 161MB	language item collection
time: 0.012; rss: 161MB	lifetime resolution
time: 0.000; rss: 161MB	looking for entry point
time: 0.000; rss: 161MB	looking for plugin registrar
time: 0.044; rss: 172MB	region resolution
time: 0.006; rss: 172MB	loop checking
time: 0.006; rss: 172MB	static item recursion checking
time: 0.264; rss: 173MB	compute_incremental_hashes_map
time: 0.000; rss: 173MB	load_dep_graph
time: 0.043; rss: 177MB	type collecting
time: 0.001; rss: 177MB	variance inference
time: 0.039; rss: 181MB	coherence checking
time: 0.099; rss: 183MB	wf checking
time: 0.190; rss: 188MB	item-types checking
time: 3.937; rss: 240MB	item-bodies checking
time: 0.000; rss: 240MB	drop-impl checking
time: 0.311; rss: 240MB	const checking
time: 0.054; rss: 240MB	privacy checking
time: 0.007; rss: 240MB	stability index
time: 0.022; rss: 240MB	intrinsic checking
time: 0.018; rss: 240MB	effect checking
time: 0.056; rss: 240MB	match checking
time: 0.055; rss: 237MB	liveness checking
time: 0.282; rss: 237MB	rvalue checking
time: 0.416; rss: 426MB	MIR dump
  time: 0.057; rss: 427MB	SimplifyCfg
  time: 0.082; rss: 427MB	QualifyAndPromoteConstants
  time: 0.110; rss: 427MB	TypeckMir
  time: 0.004; rss: 427MB	SimplifyBranches
  time: 0.032; rss: 427MB	SimplifyCfg
time: 0.284; rss: 427MB	MIR passes
time: 0.687; rss: 427MB	borrow checking
time: 0.022; rss: 427MB	reachability checking
time: 0.045; rss: 427MB	death checking
time: 0.041; rss: 430MB	stability checking
time: 0.000; rss: 430MB	unused lib feature checking
time: 0.216; rss: 430MB	lint checking
time: 0.000; rss: 430MB	resolving dependency formats
  time: 0.003; rss: 430MB	NoLandingPads
  time: 0.027; rss: 430MB	SimplifyCfg
  time: 0.071; rss: 438MB	EraseRegions
  time: 0.011; rss: 438MB	AddCallGuards
  time: 1.048; rss: 454MB	ElaborateDrops
  time: 0.003; rss: 454MB	NoLandingPads
  time: 0.052; rss: 454MB	SimplifyCfg
  time: 0.030; rss: 454MB	InstCombine
  time: 0.012; rss: 454MB	Deaggregator
  time: 0.003; rss: 454MB	CopyPropagation
  time: 0.009; rss: 454MB	AddCallGuards
  time: 0.003; rss: 454MB	PreTrans
time: 1.273; rss: 454MB	Prepare MIR codegen passes
  time: 0.263; rss: 463MB	write metadata
  time: 0.463; rss: 473MB	translation item collection
  time: 0.067; rss: 479MB	codegen unit partitioning
  time: 0.057; rss: 724MB	internalize symbols
time: 5.135; rss: 602MB	translation
time: 0.000; rss: 602MB	assert dep graph
time: 0.000; rss: 602MB	serialize dep graph
incremental: re-using 0 out of 1 modules
  time: 0.504; rss: 414MB	llvm function passes [0]
  time: 0.244; rss: 419MB	llvm module passes [0]
  time: 10.031; rss: 413MB	codegen passes [0]
  time: 0.001; rss: 414MB	codegen passes [0]
time: 11.518; rss: 414MB	LLVM passes
time: 0.000; rss: 414MB	serialize work products
time: 0.661; rss: 107MB	linking
done
