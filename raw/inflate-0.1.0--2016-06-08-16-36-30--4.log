commit 4b240fe96a8b8fcaa412624c398547dbc447a81e
Merge: d3e014e 1564e92
Author: bors <bors@rust-lang.org>
Date:   Wed Jun 8 07:43:29 2016 -0700

    Auto merge of #34083 - alexcrichton:dumb-hack, r=nrc
    
    rustc: Try to contain prepends to PATH
    
    This commit attempts to bring our prepends to PATH on Windows when loading
    plugins because we've been seeing quite a few issues with failing to spawn a
    process on Windows, the leading theory of which is that PATH is too large as a
    result of this. Currently this is mostly a stab in the dark as it's not
    confirmed to actually fix the problem, but it's probably not a bad change to
    have anyway!
    
    cc #33844
    Closes #17360
rustc: ./inflate-0.1.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling inflate v0.1.0 (file:///root/benchmarks/inflate-0.1.0)
time: 0.004; rss: 46MB	parsing
Lines of code:             956
Pre-expansion node count:  4743
time: 0.001; rss: 46MB	configuration 1
time: 0.000; rss: 46MB	recursion limit
time: 0.000; rss: 46MB	crate injection
time: 0.019; rss: 84MB	macro loading
time: 0.000; rss: 84MB	plugin loading
time: 0.000; rss: 84MB	plugin registration
time: 0.111; rss: 94MB	expansion
time: 0.000; rss: 94MB	gated configuration checking
time: 0.005; rss: 94MB	maybe building test harness
time: 0.004; rss: 94MB	prelude injection
time: 0.000; rss: 94MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 94MB	complete gated feature checking
Post-expansion node count: 54776
time: 0.004; rss: 94MB	assigning node ids
time: 0.005; rss: 94MB	collecting defs
time: 0.001; rss: 94MB	external crate/lib resolution
time: 0.003; rss: 94MB	early lint checks
time: 0.000; rss: 94MB	AST validation
time: 0.013; rss: 96MB	name resolution
time: 0.009; rss: 100MB	lowering ast -> hir
time: 0.001; rss: 100MB	indexing hir
time: 0.001; rss: 100MB	attribute checking
time: 0.001; rss: 95MB	language item collection
time: 0.001; rss: 95MB	lifetime resolution
time: 0.000; rss: 95MB	looking for entry point
time: 0.000; rss: 95MB	looking for plugin registrar
time: 0.003; rss: 97MB	region resolution
time: 0.000; rss: 97MB	loop checking
time: 0.000; rss: 97MB	static item recursion checking
time: 0.000; rss: 97MB	load_dep_graph
time: 0.002; rss: 100MB	type collecting
time: 0.000; rss: 100MB	variance inference
time: 0.010; rss: 101MB	coherence checking
time: 0.002; rss: 101MB	wf checking
time: 0.002; rss: 101MB	item-types checking
time: 3.605; rss: 116MB	item-bodies checking
time: 0.000; rss: 116MB	drop-impl checking
time: 0.015; rss: 116MB	const checking
time: 0.001; rss: 116MB	privacy checking
time: 0.000; rss: 116MB	stability index
time: 0.001; rss: 116MB	intrinsic checking
time: 0.001; rss: 116MB	effect checking
time: 0.005; rss: 116MB	match checking
time: 0.060; rss: 114MB	liveness checking
time: 0.011; rss: 114MB	rvalue checking
time: 0.039; rss: 127MB	MIR dump
time: 0.021; rss: 126MB	MIR passes
time: 0.250; rss: 127MB	borrow checking
time: 0.000; rss: 127MB	reachability checking
time: 0.003; rss: 127MB	death checking
time: 0.003; rss: 127MB	stability checking
time: 0.000; rss: 127MB	unused lib feature checking
time: 0.021; rss: 128MB	lint checking
time: 0.000; rss: 128MB	resolving dependency formats
time: 0.161; rss: 130MB	Prepare MIR codegen passes
  time: 0.003; rss: 131MB	write metadata
  time: 0.010; rss: 135MB	translation item collection
  time: 0.000; rss: 135MB	codegen unit partitioning
time: 0.389; rss: 140MB	translation
time: 0.000; rss: 140MB	assert dep graph
time: 0.000; rss: 140MB	serialize dep graph
  time: 0.027; rss: 111MB	llvm function passes [0]
  time: 0.005; rss: 111MB	llvm module passes [0]
  time: 0.501; rss: 116MB	codegen passes [0]
  time: 0.000; rss: 103MB	codegen passes [0]
time: 0.575; rss: 103MB	LLVM passes
time: 0.034; rss: 104MB	linking
done
