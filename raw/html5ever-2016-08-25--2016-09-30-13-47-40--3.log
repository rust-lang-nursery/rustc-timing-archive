commit 954873055a998a06841ac19b39b1fe18a6641731
Merge: 1d64acd a84b550
Author: bors <bors@rust-lang.org>
Date:   Fri Sep 30 07:35:04 2016 -0700

    Auto merge of #36823 - durka:discriminant_value, r=nagisa
    
    add wrapper for discriminant_value, take 2
    
    [This is #34785 reopened, since @bors apparently gave up on that thread.]
    
    add wrapper for discriminant_value intrinsic
    
    Implementation of [RFC 1696](https://github.com/rust-lang/rfcs/blob/master/text/1696-discriminant.md).
    
    Wraps the `discriminant_value` intrinsic under the name `std::mem::discriminant`. In order to avoid prematurely leaking information about the implementation of enums, the return value is an opaque type, generic over the enum type, which implements Copy, Clone, PartialEq, Eq, Hash, and Debug (notably not PartialOrd). There is currently no way to get the value out excepting printing the debug representation.
    
    The wrapper is safe and can be stabilized soon as per discussion in #24263.
    
    cc @aturon
    r? @nagisa
rustc: ./html5ever-2016-08-25
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling html5ever v0.5.4 (file:///root/benchmarks/html5ever-2016-08-25)
time: 0.027; rss: 52MB	parsing
Lines of code:             8210
Pre-expansion node count:  52238
time: 0.000; rss: 52MB	recursion limit
time: 0.000; rss: 52MB	crate injection
time: 0.000; rss: 52MB	plugin loading
time: 0.000; rss: 52MB	plugin registration
time: 1.246; rss: 104MB	expansion
time: 0.000; rss: 104MB	maybe building test harness
time: 0.002; rss: 104MB	maybe creating a macro crate
Post-expansion node count: 163524
time: 0.000; rss: 104MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 104MB	complete gated feature checking
time: 0.009; rss: 104MB	early lint checks
time: 0.002; rss: 104MB	AST validation
time: 0.018; rss: 109MB	name resolution
time: 0.016; rss: 124MB	lowering ast -> hir
time: 0.003; rss: 128MB	indexing hir
time: 0.002; rss: 128MB	attribute checking
time: 0.002; rss: 105MB	language item collection
time: 0.003; rss: 105MB	lifetime resolution
time: 0.000; rss: 105MB	looking for entry point
time: 0.000; rss: 105MB	looking for plugin registrar
time: 0.016; rss: 111MB	region resolution
time: 0.002; rss: 111MB	loop checking
time: 0.003; rss: 111MB	static item recursion checking
time: 0.024; rss: 111MB	compute_incremental_hashes_map
time: 0.000; rss: 111MB	load_dep_graph
time: 0.014; rss: 112MB	type collecting
time: 0.000; rss: 112MB	variance inference
time: 0.026; rss: 113MB	coherence checking
time: 0.025; rss: 114MB	wf checking
time: 0.360; rss: 122MB	item-types checking
time: 0.513; rss: 135MB	item-bodies checking
time: 0.000; rss: 135MB	drop-impl checking
time: 0.073; rss: 139MB	const checking
time: 0.009; rss: 139MB	privacy checking
time: 0.002; rss: 139MB	stability index
time: 0.004; rss: 139MB	intrinsic checking
time: 0.003; rss: 139MB	effect checking
time: 0.024; rss: 139MB	match checking
time: 0.013; rss: 133MB	liveness checking
time: 0.029; rss: 133MB	rvalue checking
time: 0.118; rss: 182MB	MIR dump
  time: 0.009; rss: 182MB	SimplifyCfg
  time: 0.015; rss: 181MB	QualifyAndPromoteConstants
  time: 0.024; rss: 181MB	TypeckMir
  time: 0.000; rss: 181MB	SimplifyBranches
  time: 0.005; rss: 181MB	SimplifyCfg
time: 0.054; rss: 181MB	MIR passes
time: 0.095; rss: 185MB	borrow checking
time: 0.003; rss: 185MB	reachability checking
time: 0.007; rss: 185MB	death checking
time: 0.009; rss: 185MB	stability checking
time: 0.000; rss: 185MB	unused lib feature checking
time: 0.065; rss: 185MB	lint checking
time: 0.000; rss: 185MB	resolving dependency formats
  time: 0.000; rss: 185MB	NoLandingPads
  time: 0.004; rss: 185MB	SimplifyCfg
  time: 0.010; rss: 185MB	EraseRegions
  time: 0.001; rss: 185MB	AddCallGuards
  time: 0.077; rss: 190MB	ElaborateDrops
  time: 0.000; rss: 190MB	NoLandingPads
  time: 0.007; rss: 186MB	SimplifyCfg
  time: 0.008; rss: 185MB	InstCombine
  time: 0.001; rss: 185MB	Deaggregator
  time: 0.000; rss: 185MB	CopyPropagation
  time: 0.001; rss: 185MB	AddCallGuards
  time: 0.000; rss: 185MB	PreTrans
time: 0.110; rss: 185MB	Prepare MIR codegen passes
  time: 0.052; rss: 185MB	write metadata
  time: 0.052; rss: 187MB	translation item collection
  time: 0.006; rss: 187MB	codegen unit partitioning
  time: 0.006; rss: 201MB	internalize symbols
time: 0.368; rss: 171MB	translation
time: 0.000; rss: 171MB	assert dep graph
time: 0.000; rss: 171MB	serialize dep graph
  time: 0.020; rss: 103MB	llvm function passes [0]
  time: 0.012; rss: 105MB	llvm module passes [0]
  time: 0.479; rss: 110MB	codegen passes [0]
  time: 0.001; rss: 110MB	codegen passes [0]
time: 0.551; rss: 110MB	LLVM passes
time: 0.000; rss: 110MB	serialize work products
time: 0.058; rss: 92MB	linking
done
