commit 2e7176f98bf64c3644408cec40c4b2541d96148e
Merge: d9bdc63 ba07a1b
Author: bors <bors@rust-lang.org>
Date:   Thu Nov 24 19:03:07 2016 -0600

    Auto merge of #37974 - japaric:abort, r=alexcrichton
    
    std: make compilation of libpanic_unwind optional via a Cargo feature
    
    with this feature disabled, you can (Cargo) compile std with
    "panic=abort"
    
    rustbuild will build std with this feature enabled, to maintain the
    status quo
    
    fixes #37252
    
    r? @alexcrichton
rustc: ./syntex-0.42.2-incr-clean
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
   Compiling log v0.3.6
   Compiling bitflags v0.5.0
   Compiling winapi v0.2.8
   Compiling rustc-serialize v0.3.19
   Compiling winapi-build v0.1.1
   Compiling unicode-xid v0.0.3
   Compiling libc v0.2.15
   Compiling kernel32-sys v0.2.2
   Compiling term v0.4.4
   Compiling syntex_pos v0.42.0
   Compiling syntex_errors v0.42.0
   Compiling syntex_syntax v0.42.0
time: 0.099; rss: 71MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 71MB	recursion limit
time: 0.000; rss: 71MB	crate injection
time: 0.000; rss: 71MB	plugin loading
time: 0.000; rss: 71MB	plugin registration
time: 0.237; rss: 144MB	expansion
time: 0.000; rss: 144MB	maybe building test harness
time: 0.006; rss: 144MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 144MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 144MB	complete gated feature checking
time: 0.022; rss: 144MB	early lint checks
time: 0.007; rss: 144MB	AST validation
time: 0.077; rss: 159MB	name resolution
time: 0.045; rss: 184MB	lowering ast -> hir
time: 0.008; rss: 194MB	indexing hir
time: 0.006; rss: 194MB	attribute checking
time: 0.004; rss: 150MB	language item collection
time: 0.011; rss: 150MB	lifetime resolution
time: 0.000; rss: 150MB	looking for entry point
time: 0.000; rss: 150MB	looking for plugin registrar
time: 0.041; rss: 170MB	region resolution
time: 0.005; rss: 170MB	loop checking
time: 0.005; rss: 170MB	static item recursion checking
time: 0.327; rss: 171MB	compute_incremental_hashes_map
time: 0.000; rss: 171MB	load_dep_graph
time: 0.046; rss: 175MB	type collecting
time: 0.001; rss: 175MB	variance inference
time: 0.002; rss: 175MB	impl wf inference
time: 0.018; rss: 177MB	coherence checking
time: 0.089; rss: 179MB	wf checking
time: 0.181; rss: 182MB	item-types checking
time: 6.174; rss: 232MB	item-bodies checking
time: 0.000; rss: 232MB	drop-impl checking
time: 0.213; rss: 253MB	const checking
time: 0.049; rss: 254MB	privacy checking
time: 0.006; rss: 254MB	stability index
time: 0.018; rss: 254MB	intrinsic checking
time: 0.014; rss: 254MB	effect checking
time: 0.047; rss: 254MB	match checking
time: 0.049; rss: 254MB	liveness checking
time: 0.178; rss: 254MB	rvalue checking
time: 0.359; rss: 437MB	MIR dump
  time: 0.056; rss: 438MB	SimplifyCfg
  time: 0.073; rss: 438MB	QualifyAndPromoteConstants
  time: 0.103; rss: 438MB	TypeckMir
  time: 0.004; rss: 438MB	SimplifyBranches
  time: 0.030; rss: 438MB	SimplifyCfg
time: 0.266; rss: 438MB	MIR cleanup and validation
time: 0.540; rss: 439MB	borrow checking
time: 0.020; rss: 439MB	reachability checking
time: 0.039; rss: 439MB	death checking
time: 0.031; rss: 441MB	stability checking
time: 0.000; rss: 441MB	unused lib feature checking
time: 0.193; rss: 441MB	lint checking
time: 0.000; rss: 441MB	resolving dependency formats
  time: 0.003; rss: 441MB	NoLandingPads
  time: 0.026; rss: 441MB	SimplifyCfg
  time: 0.062; rss: 449MB	EraseRegions
  time: 0.011; rss: 449MB	AddCallGuards
  time: 0.268; rss: 465MB	ElaborateDrops
  time: 0.003; rss: 465MB	NoLandingPads
  time: 0.051; rss: 465MB	SimplifyCfg
  time: 0.028; rss: 465MB	InstCombine
  time: 0.012; rss: 465MB	Deaggregator
  time: 0.002; rss: 465MB	CopyPropagation
  time: 0.034; rss: 465MB	SimplifyLocals
  time: 0.009; rss: 465MB	AddCallGuards
  time: 0.002; rss: 465MB	PreTrans
time: 0.512; rss: 465MB	MIR optimisations
  time: 0.062; rss: 475MB	write metadata
  time: 0.374; rss: 488MB	translation item collection
  time: 0.056; rss: 494MB	codegen unit partitioning
  time: 0.040; rss: 739MB	internalize symbols
time: 4.310; rss: 739MB	translation
time: 0.000; rss: 739MB	assert dep graph
time: 0.000; rss: 739MB	serialize dep graph
incremental: re-using 0 out of 1 modules
  time: 0.520; rss: 427MB	llvm function passes [0]
  time: 0.255; rss: 433MB	llvm module passes [0]
  time: 10.452; rss: 424MB	codegen passes [0]
  time: 0.000; rss: 424MB	codegen passes [0]
time: 11.994; rss: 424MB	LLVM passes
time: 0.000; rss: 424MB	serialize work products
time: 0.502; rss: 116MB	linking
done
