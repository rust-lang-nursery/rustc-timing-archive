commit 141012dd523e6c13924e7c092e1f7f1407430e8c
Merge: 9dc9f34 6f0ee45
Author: bors <bors@rust-lang.org>
Date:   Fri Sep 16 23:29:15 2016 -0700

    Auto merge of #36482 - jseyfried:dont_load_unconfigured_noninline_modules, r=nrc
    
    Avoid loading and parsing unconfigured non-inline modules.
    
    For example, `#[cfg(any())] mod foo;` will always compile after this PR, even if `foo.rs` and `foo/mod.rs` do not exist or do not contain valid Rust.
    
    Fixes #36478 and fixes #27873.
    
    r? @nrc
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.027; rss: 51MB	parsing
Lines of code:             9154
Pre-expansion node count:  44873
time: 0.000; rss: 51MB	recursion limit
time: 0.000; rss: 51MB	crate injection
time: 0.000; rss: 51MB	plugin loading
time: 0.000; rss: 51MB	plugin registration
time: 0.095; rss: 79MB	expansion
time: 0.000; rss: 79MB	maybe building test harness
time: 0.001; rss: 79MB	maybe creating a macro crate
time: 0.005; rss: 79MB	assigning node ids
Post-expansion node count: 101537
time: 0.000; rss: 79MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 79MB	complete gated feature checking
time: 0.003; rss: 82MB	collecting defs
time: 0.009; rss: 88MB	external crate/lib resolution
time: 0.003; rss: 88MB	early lint checks
time: 0.001; rss: 88MB	AST validation
time: 0.015; rss: 96MB	name resolution
time: 0.008; rss: 100MB	lowering ast -> hir
time: 0.002; rss: 102MB	indexing hir
time: 0.001; rss: 102MB	attribute checking
time: 0.001; rss: 96MB	language item collection
time: 0.002; rss: 96MB	lifetime resolution
time: 0.000; rss: 96MB	looking for entry point
time: 0.000; rss: 96MB	looking for plugin registrar
time: 0.006; rss: 101MB	region resolution
time: 0.001; rss: 101MB	loop checking
time: 0.001; rss: 101MB	static item recursion checking
time: 0.041; rss: 101MB	compute_incremental_hashes_map
time: 0.000; rss: 101MB	load_dep_graph
time: 0.022; rss: 103MB	type collecting
time: 0.000; rss: 103MB	variance inference
time: 0.035; rss: 105MB	coherence checking
time: 0.056; rss: 108MB	wf checking
time: 0.028; rss: 108MB	item-types checking
time: 0.361; rss: 120MB	item-bodies checking
time: 0.000; rss: 120MB	drop-impl checking
time: 0.038; rss: 122MB	const checking
time: 0.006; rss: 122MB	privacy checking
time: 0.001; rss: 122MB	stability index
time: 0.005; rss: 122MB	intrinsic checking
time: 0.002; rss: 122MB	effect checking
time: 0.013; rss: 122MB	match checking
time: 0.005; rss: 122MB	liveness checking
time: 0.027; rss: 122MB	rvalue checking
time: 0.055; rss: 139MB	MIR dump
  time: 0.007; rss: 139MB	SimplifyCfg
  time: 0.013; rss: 139MB	QualifyAndPromoteConstants
  time: 0.016; rss: 139MB	TypeckMir
  time: 0.001; rss: 139MB	SimplifyBranches
  time: 0.004; rss: 139MB	SimplifyCfg
time: 0.041; rss: 139MB	MIR passes
time: 0.061; rss: 139MB	borrow checking
time: 0.003; rss: 139MB	reachability checking
time: 0.005; rss: 139MB	death checking
time: 0.005; rss: 139MB	stability checking
time: 0.000; rss: 139MB	unused lib feature checking
time: 0.041; rss: 139MB	lint checking
time: 0.000; rss: 139MB	resolving dependency formats
  time: 0.001; rss: 139MB	NoLandingPads
  time: 0.003; rss: 139MB	SimplifyCfg
  time: 0.009; rss: 139MB	EraseRegions
  time: 0.001; rss: 139MB	AddCallGuards
  time: 0.054; rss: 142MB	ElaborateDrops
  time: 0.001; rss: 142MB	NoLandingPads
  time: 0.005; rss: 142MB	SimplifyCfg
  time: 0.003; rss: 142MB	Deaggregator
  time: 0.001; rss: 142MB	AddCallGuards
  time: 0.000; rss: 142MB	PreTrans
time: 0.078; rss: 142MB	Prepare MIR codegen passes
  time: 0.054; rss: 147MB	write metadata
  time: 0.113; rss: 151MB	translation item collection
  time: 0.019; rss: 153MB	codegen unit partitioning
  time: 0.032; rss: 219MB	internalize symbols
time: 1.357; rss: 209MB	translation
time: 0.000; rss: 209MB	assert dep graph
time: 0.000; rss: 209MB	serialize dep graph
  time: 0.100; rss: 160MB	llvm function passes [0]
  time: 0.048; rss: 163MB	llvm module passes [0]
  time: 1.855; rss: 163MB	codegen passes [0]
  time: 0.001; rss: 164MB	codegen passes [0]
time: 2.171; rss: 164MB	LLVM passes
time: 0.000; rss: 164MB	serialize work products
time: 0.157; rss: 99MB	linking
done
