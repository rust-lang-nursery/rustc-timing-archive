commit 0a3180baab7c361ee85958c88d971190649c3b70
Merge: a0b4e67 63f0c4d
Author: bors <bors@rust-lang.org>
Date:   Wed Aug 3 13:24:53 2016 -0700

    Auto merge of #35261 - eddyb:llvm-autoupgrade, r=nikomatsakis
    
    Support removed LLVM intrinsics by invoking its AutoUpgrade mechanism.
    
    Turns out that LLVM sometimes renames platform intrinsics or replaces them with first-class instructions.
    For example, signed minimum became `select (icmp SLT, a, b), a, b` where `a` and `b` are vectors.
    
    This is blocking the Servo rustup ([relevant failure](http://build.servo.org/builders/windows-dev/builds/226/steps/compile/logs/stdio)), as they're using a few such intrinsics.
    The fix in this PR is to invoke LLVM's own `AutoUpgrade` mechanism to do the replacements.
rustc: ./regex.0.1.30
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling regex v0.1.30 (file:///root/benchmarks/regex.0.1.30)
time: 0.064; rss: 63MB	parsing
Lines of code:             8558
Pre-expansion node count:  58076
time: 0.010; rss: 63MB	configuration
time: 0.000; rss: 63MB	recursion limit
time: 0.000; rss: 63MB	crate injection
time: 0.000; rss: 63MB	plugin loading
time: 0.000; rss: 63MB	plugin registration
time: 0.037; rss: 98MB	expansion
time: 0.000; rss: 98MB	maybe building test harness
time: 0.006; rss: 98MB	assigning node ids
Post-expansion node count: 68148
time: 0.000; rss: 98MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 98MB	complete gated feature checking
time: 0.001; rss: 99MB	collecting defs
time: 0.001; rss: 99MB	external crate/lib resolution
time: 0.006; rss: 99MB	early lint checks
time: 0.001; rss: 99MB	AST validation
time: 0.007; rss: 100MB	name resolution
time: 0.009; rss: 110MB	lowering ast -> hir
time: 0.002; rss: 112MB	indexing hir
time: 0.001; rss: 112MB	attribute checking
time: 0.001; rss: 103MB	language item collection
time: 0.001; rss: 103MB	lifetime resolution
time: 0.000; rss: 103MB	looking for entry point
time: 0.000; rss: 103MB	looking for plugin registrar
time: 0.006; rss: 106MB	region resolution
time: 0.001; rss: 106MB	loop checking
time: 0.001; rss: 106MB	static item recursion checking
time: 0.000; rss: 106MB	load_dep_graph
time: 0.010; rss: 108MB	type collecting
time: 0.000; rss: 108MB	variance inference
time: 0.026; rss: 112MB	coherence checking
time: 0.014; rss: 112MB	wf checking
time: 0.332; rss: 121MB	item-types checking
time: 0.210; rss: 126MB	item-bodies checking
time: 0.000; rss: 126MB	drop-impl checking
time: 0.029; rss: 128MB	const checking
time: 0.004; rss: 128MB	privacy checking
time: 0.001; rss: 128MB	stability index
time: 0.002; rss: 128MB	intrinsic checking
time: 0.001; rss: 128MB	effect checking
time: 0.004; rss: 128MB	match checking
time: 0.002; rss: 128MB	liveness checking
time: 0.008; rss: 128MB	rvalue checking
time: 0.054; rss: 139MB	MIR dump
time: 0.022; rss: 139MB	MIR passes
time: 0.022; rss: 139MB	borrow checking
time: 0.000; rss: 139MB	reachability checking
time: 0.003; rss: 139MB	death checking
time: 0.002; rss: 139MB	stability checking
time: 0.000; rss: 139MB	unused lib feature checking
time: 0.028; rss: 139MB	lint checking
time: 0.000; rss: 139MB	resolving dependency formats
time: 0.019; rss: 141MB	Prepare MIR codegen passes
  time: 0.178; rss: 152MB	write metadata
  time: 0.059; rss: 154MB	translation item collection
  time: 0.008; rss: 154MB	codegen unit partitioning
  time: 0.016; rss: 199MB	internalize symbols
time: 0.724; rss: 199MB	translation
time: 0.000; rss: 199MB	assert dep graph
time: 0.000; rss: 199MB	serialize dep graph
  time: 0.033; rss: 129MB	llvm function passes [0]
  time: 0.017; rss: 131MB	llvm module passes [0]
  time: 0.602; rss: 133MB	codegen passes [0]
  time: 0.001; rss: 133MB	codegen passes [0]
time: 0.702; rss: 133MB	LLVM passes
time: 0.061; rss: 114MB	linking
done
