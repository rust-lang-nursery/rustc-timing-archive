commit adb4279e549f51d287140658c1c64b51d7715bfa
Merge: 6a495f7 d38db82
Author: bors <bors@rust-lang.org>
Date:   Fri Dec 9 07:08:29 2016 +0000

    Auto merge of #38256 - alexcrichton:distcheck, r=brson
    
    rustbuild: Implement distcheck
    
    This commit implements the `distcheck` target for rustbuild which is only ever
    run on our nightly bots. This essentially just creates a tarball, un-tars it,
    and then runs a full build, validating that the release tarballs do indeed have
    everything they need to build Rust.
rustc: ./syntex-0.42.2@010-incr@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.246; rss: 151MB	expansion
time: 0.000; rss: 151MB	maybe building test harness
time: 0.006; rss: 151MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 151MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 151MB	complete gated feature checking
time: 0.023; rss: 151MB	early lint checks
time: 0.007; rss: 151MB	AST validation
time: 0.075; rss: 166MB	name resolution
time: 0.059; rss: 199MB	lowering ast -> hir
time: 0.010; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 153MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.046; rss: 176MB	region resolution
time: 0.008; rss: 176MB	loop checking
time: 0.002; rss: 176MB	static item recursion checking
time: 0.382; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.021; rss: 181MB	stability checking
time: 0.056; rss: 189MB	type collecting
time: 0.004; rss: 189MB	variance inference
time: 0.006; rss: 193MB	impl wf inference
time: 0.026; rss: 196MB	coherence checking
time: 0.091; rss: 199MB	wf checking
time: 0.196; rss: 207MB	item-types checking
time: 3.605; rss: 266MB	item-bodies checking
time: 0.000; rss: 266MB	drop-impl checking
time: 0.223; rss: 276MB	const checking
time: 0.069; rss: 276MB	privacy checking
time: 0.021; rss: 283MB	intrinsic checking
time: 0.016; rss: 283MB	effect checking
time: 0.049; rss: 283MB	match checking
time: 0.047; rss: 290MB	liveness checking
time: 0.178; rss: 292MB	rvalue checking
time: 0.373; rss: 481MB	MIR dump
  time: 0.058; rss: 483MB	SimplifyCfg
  time: 0.076; rss: 483MB	QualifyAndPromoteConstants
  time: 0.123; rss: 499MB	TypeckMir
  time: 0.005; rss: 499MB	SimplifyBranches
  time: 0.034; rss: 500MB	SimplifyCfg
time: 0.295; rss: 500MB	MIR cleanup and validation
time: 0.483; rss: 500MB	borrow checking
time: 0.026; rss: 500MB	reachability checking
time: 0.044; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.184; rss: 500MB	lint checking
time: 0.000; rss: 500MB	resolving dependency formats
  time: 0.004; rss: 500MB	NoLandingPads
  time: 0.030; rss: 500MB	SimplifyCfg
  time: 0.069; rss: 509MB	EraseRegions
  time: 0.011; rss: 509MB	AddCallGuards
  time: 0.274; rss: 531MB	ElaborateDrops
  time: 0.004; rss: 531MB	NoLandingPads
  time: 0.054; rss: 531MB	SimplifyCfg
  time: 0.029; rss: 530MB	InstCombine
  time: 0.013; rss: 530MB	Deaggregator
  time: 0.004; rss: 530MB	CopyPropagation
  time: 0.036; rss: 530MB	SimplifyLocals
  time: 0.010; rss: 530MB	AddCallGuards
  time: 0.003; rss: 530MB	PreTrans
time: 0.541; rss: 530MB	MIR optimisations
  time: 0.068; rss: 537MB	write metadata
  time: 0.399; rss: 551MB	translation item collection
  time: 0.074; rss: 554MB	codegen unit partitioning
  time: 0.054; rss: 1453MB	internalize symbols
time: 13.422; rss: 1453MB	translation
time: 0.000; rss: 1453MB	assert dep graph
time: 2.154; rss: 1482MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1190MB	llvm function passes [0]
time: 0.000; rss: 1194MB	llvm module passes [0]
time: 0.001; rss: 1196MB	llvm function passes [2]
time: 0.000; rss: 1196MB	llvm module passes [2]
time: 0.002; rss: 1207MB	llvm function passes [1]
time: 0.000; rss: 1207MB	llvm module passes [1]
time: 0.002; rss: 1207MB	llvm function passes [3]
time: 0.000; rss: 1207MB	llvm module passes [3]
time: 0.002; rss: 1207MB	codegen passes [0]
time: 0.004; rss: 1207MB	llvm function passes [5]
time: 0.005; rss: 1207MB	codegen passes [2]
time: 0.002; rss: 1207MB	llvm module passes [5]
time: 0.001; rss: 1207MB	llvm function passes [2]
time: 0.000; rss: 1207MB	llvm module passes [2]
time: 0.008; rss: 1213MB	codegen passes [1]
time: 0.012; rss: 1213MB	llvm function passes [7]
time: 0.018; rss: 1217MB	llvm function passes [4]
time: 0.006; rss: 1217MB	llvm module passes [7]
time: 0.000; rss: 1226MB	llvm function passes [45]
time: 0.000; rss: 1226MB	llvm module passes [45]
time: 0.008; rss: 1226MB	llvm module passes [4]
time: 0.001; rss: 1226MB	codegen passes [45]
time: 0.003; rss: 1228MB	llvm function passes [45]
time: 0.001; rss: 1228MB	llvm module passes [45]
time: 0.017; rss: 1228MB	llvm function passes [9]
time: 0.022; rss: 1228MB	llvm function passes [41]
time: 0.005; rss: 1228MB	llvm module passes [9]
time: 0.035; rss: 1231MB	codegen passes [2]
time: 0.013; rss: 1233MB	llvm module passes [41]
time: 0.042; rss: 1237MB	llvm function passes [40]
time: 0.011; rss: 1241MB	llvm module passes [40]
time: 0.000; rss: 1241MB	llvm function passes [24]
time: 0.000; rss: 1241MB	llvm module passes [24]
time: 0.059; rss: 1241MB	codegen passes [3]
time: 0.004; rss: 1241MB	codegen passes [24]
time: 0.000; rss: 1241MB	llvm function passes [24]
time: 0.000; rss: 1241MB	llvm module passes [24]
time: 0.001; rss: 1241MB	codegen passes [24]
time: 0.060; rss: 1246MB	llvm function passes [1]
time: 0.086; rss: 1254MB	codegen passes [5]
time: 0.092; rss: 1264MB	llvm function passes [11]
time: 0.049; rss: 1267MB	llvm module passes [1]
time: 0.085; rss: 1267MB	codegen passes [45]
time: 0.066; rss: 1269MB	llvm function passes [14]
time: 0.000; rss: 1269MB	llvm module passes [14]
time: 0.066; rss: 1269MB	llvm function passes [13]
time: 0.000; rss: 1269MB	llvm module passes [13]
time: 0.016; rss: 1271MB	llvm module passes [11]
time: 0.110; rss: 1271MB	llvm function passes [46]
time: 0.015; rss: 1281MB	llvm module passes [46]
time: 0.147; rss: 1281MB	llvm function passes [6]
time: 0.103; rss: 1281MB	llvm function passes [24]
time: 0.030; rss: 1280MB	llvm function passes [16]
time: 0.002; rss: 1280MB	llvm module passes [16]
time: 0.031; rss: 1280MB	llvm module passes [24]
time: 0.207; rss: 1280MB	llvm function passes [0]
time: 0.148; rss: 1280MB	llvm function passes [47]
time: 0.095; rss: 1279MB	llvm function passes [43]
time: 0.028; rss: 1279MB	llvm module passes [47]
time: 0.019; rss: 1279MB	llvm module passes [43]
time: 0.096; rss: 1279MB	llvm function passes [49]
time: 0.088; rss: 1280MB	llvm module passes [6]
time: 0.191; rss: 1282MB	llvm function passes [3]
time: 0.008; rss: 1282MB	llvm module passes [49]
time: 0.124; rss: 1282MB	llvm function passes [15]
time: 0.018; rss: 1280MB	llvm module passes [15]
time: 0.173; rss: 1280MB	codegen passes [14]
time: 0.173; rss: 1279MB	codegen passes [13]
time: 0.003; rss: 1280MB	llvm function passes [18]
time: 0.002; rss: 1280MB	llvm module passes [18]
time: 0.282; rss: 1277MB	llvm function passes [2]
time: 0.004; rss: 1277MB	llvm function passes [36]
time: 0.001; rss: 1279MB	llvm module passes [36]
time: 0.009; rss: 1280MB	llvm function passes [30]
time: 0.028; rss: 1280MB	llvm function passes [22]
time: 0.000; rss: 1282MB	llvm function passes [37]
time: 0.000; rss: 1282MB	llvm module passes [37]
time: 0.000; rss: 1282MB	codegen passes [23]
time: 0.085; rss: 1282MB	llvm function passes [17]
time: 0.014; rss: 1282MB	llvm module passes [22]
time: 0.017; rss: 1284MB	llvm module passes [17]
time: 0.031; rss: 1283MB	llvm module passes [30]
time: 0.281; rss: 1285MB	llvm function passes [48]
time: 0.287; rss: 1287MB	llvm function passes [10]
time: 0.098; rss: 1295MB	codegen passes [37]
time: 0.133; rss: 1295MB	llvm function passes [34]
time: 0.173; rss: 1296MB	llvm function passes [13]
time: 0.246; rss: 1300MB	llvm module passes [3]
time: 0.418; rss: 1298MB	llvm function passes [5]
time: 0.274; rss: 1301MB	llvm function passes [19]
time: 0.229; rss: 1304MB	llvm function passes [21]
time: 0.023; rss: 1304MB	llvm module passes [19]
time: 0.548; rss: 1305MB	llvm function passes [8]
time: 0.253; rss: 1309MB	codegen passes [36]
time: 0.501; rss: 1314MB	llvm function passes [45]
time: 0.315; rss: 1316MB	llvm module passes [2]
time: 0.353; rss: 1316MB	llvm function passes [14]
time: 0.277; rss: 1319MB	llvm module passes [10]
time: 0.334; rss: 1322MB	codegen passes [18]
time: 0.261; rss: 1322MB	llvm module passes [34]
time: 0.328; rss: 1322MB	llvm module passes [48]
time: 0.257; rss: 1320MB	llvm module passes [13]
time: 0.231; rss: 1321MB	llvm module passes [5]
time: 0.094; rss: 1321MB	llvm module passes [14]
time: 0.448; rss: 1321MB	llvm function passes [38]
time: 0.743; rss: 1327MB	llvm function passes [12]
time: 0.423; rss: 1329MB	llvm function passes [42]
time: 0.165; rss: 1329MB	llvm module passes [45]
time: 0.533; rss: 1332MB	llvm function passes [39]
time: 0.629; rss: 1334MB	llvm module passes [0]
time: 0.085; rss: 1341MB	llvm module passes [39]
time: 0.382; rss: 1344MB	llvm module passes [8]
time: 0.430; rss: 1344MB	llvm module passes [21]
time: 0.346; rss: 1356MB	llvm module passes [38]
time: 1.084; rss: 1365MB	codegen passes [7]
time: 0.821; rss: 1361MB	codegen passes [16]
time: 0.515; rss: 1365MB	llvm module passes [12]
time: 0.846; rss: 1366MB	codegen passes [30]
time: 0.611; rss: 1368MB	llvm module passes [42]
time: 1.428; rss: 1423MB	codegen passes [4]
time: 1.494; rss: 1408MB	codegen passes [41]
time: 1.615; rss: 1409MB	codegen passes [9]
time: 1.454; rss: 1415MB	codegen passes [49]
time: 2.070; rss: 1452MB	codegen passes [40]
time: 1.641; rss: 1449MB	codegen passes [43]
time: 2.001; rss: 1444MB	codegen passes [11]
time: 1.752; rss: 1425MB	codegen passes [17]
time: 1.815; rss: 1421MB	codegen passes [46]
time: 1.866; rss: 1439MB	codegen passes [22]
time: 1.990; rss: 1427MB	codegen passes [19]
time: 1.973; rss: 1428MB	codegen passes [34]
time: 2.172; rss: 1417MB	codegen passes [24]
time: 2.369; rss: 1408MB	codegen passes [3]
time: 2.730; rss: 1449MB	codegen passes [15]
time: 2.652; rss: 1469MB	codegen passes [13]
time: 2.823; rss: 1558MB	codegen passes [45]
time: 3.315; rss: 1571MB	codegen passes [47]
time: 3.688; rss: 1551MB	codegen passes [1]
time: 3.711; rss: 1617MB	codegen passes [39]
time: 3.717; rss: 1584MB	codegen passes [2]
time: 4.021; rss: 1620MB	codegen passes [5]
time: 4.176; rss: 1604MB	codegen passes [21]
time: 4.536; rss: 1618MB	codegen passes [6]
time: 4.207; rss: 1604MB	codegen passes [10]
time: 4.023; rss: 1553MB	codegen passes [48]
time: 4.511; rss: 1535MB	codegen passes [14]
time: 4.282; rss: 1485MB	codegen passes [38]
time: 4.462; rss: 1461MB	codegen passes [8]
time: 4.595; rss: 1419MB	codegen passes [42]
time: 5.294; rss: 1374MB	codegen passes [0]
time: 5.576; rss: 1304MB	codegen passes [12]
time: 8.585; rss: 1302MB	LLVM passes
time: 0.000; rss: 1302MB	serialize work products
time: 1.052; rss: 278MB	linking
done
