commit 6e8f92f11cdc713ddec4c60c66097d05c194bab2
Merge: ca76c7e 0714024
Author: bors <bors@rust-lang.org>
Date:   Fri Oct 7 11:38:27 2016 -0700

    Auto merge of #36981 - alexcrichton:catch-unwind-for-tests, r=sfackler
    
    std: Minor cleanup to libtest
    
    * Don't spawn two threads for all tests, just one now that `catch_unwind` is
      stable.
    * Remove usage of the unstable `box` keyword
    * Remove usage of the unstable `FnBox` trait
rustc: ./syntex-0.42.2-incr-clean
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax -- -Ztime-passes -Zinput-stats -Z incremental-info
   Compiling syntex_syntax v0.42.0
time: 0.167; rss: 69MB	parsing
Lines of code:             33687
Pre-expansion node count:  224033
time: 0.000; rss: 69MB	recursion limit
time: 0.000; rss: 69MB	crate injection
time: 0.000; rss: 69MB	plugin loading
time: 0.000; rss: 69MB	plugin registration
time: 0.364; rss: 137MB	expansion
time: 0.000; rss: 137MB	maybe building test harness
time: 0.007; rss: 137MB	maybe creating a macro crate
Post-expansion node count: 641571
time: 0.000; rss: 137MB	checking for inline asm in case the target doesn't support it
time: 0.015; rss: 137MB	complete gated feature checking
time: 0.025; rss: 137MB	early lint checks
time: 0.008; rss: 137MB	AST validation
time: 0.116; rss: 151MB	name resolution
time: 0.129; rss: 193MB	lowering ast -> hir
time: 0.024; rss: 200MB	indexing hir
time: 0.007; rss: 200MB	attribute checking
time: 0.006; rss: 152MB	language item collection
time: 0.013; rss: 152MB	lifetime resolution
time: 0.000; rss: 152MB	looking for entry point
time: 0.000; rss: 152MB	looking for plugin registrar
time: 0.068; rss: 161MB	region resolution
time: 0.006; rss: 161MB	loop checking
time: 0.006; rss: 161MB	static item recursion checking
time: 0.268; rss: 163MB	compute_incremental_hashes_map
time: 0.000; rss: 163MB	load_dep_graph
time: 0.082; rss: 166MB	type collecting
time: 0.001; rss: 166MB	variance inference
time: 0.039; rss: 170MB	coherence checking
time: 0.103; rss: 172MB	wf checking
time: 0.201; rss: 177MB	item-types checking
time: 4.166; rss: 221MB	item-bodies checking
time: 0.000; rss: 221MB	drop-impl checking
time: 0.336; rss: 223MB	const checking
time: 0.059; rss: 223MB	privacy checking
time: 0.007; rss: 223MB	stability index
time: 0.024; rss: 223MB	intrinsic checking
time: 0.020; rss: 223MB	effect checking
time: 0.061; rss: 223MB	match checking
time: 0.094; rss: 220MB	liveness checking
time: 0.302; rss: 220MB	rvalue checking
time: 0.692; rss: 394MB	MIR dump
  time: 0.060; rss: 401MB	SimplifyCfg
  time: 0.087; rss: 401MB	QualifyAndPromoteConstants
  time: 0.114; rss: 401MB	TypeckMir
  time: 0.005; rss: 401MB	SimplifyBranches
  time: 0.032; rss: 401MB	SimplifyCfg
time: 0.298; rss: 401MB	MIR passes
time: 0.724; rss: 404MB	borrow checking
time: 0.023; rss: 404MB	reachability checking
time: 0.049; rss: 404MB	death checking
time: 0.050; rss: 405MB	stability checking
time: 0.000; rss: 405MB	unused lib feature checking
time: 0.236; rss: 405MB	lint checking
time: 0.000; rss: 405MB	resolving dependency formats
  time: 0.004; rss: 405MB	NoLandingPads
  time: 0.027; rss: 405MB	SimplifyCfg
  time: 0.091; rss: 412MB	EraseRegions
  time: 0.012; rss: 412MB	AddCallGuards
  time: 1.097; rss: 433MB	ElaborateDrops
  time: 0.004; rss: 433MB	NoLandingPads
  time: 0.054; rss: 433MB	SimplifyCfg
  time: 0.032; rss: 433MB	InstCombine
  time: 0.012; rss: 433MB	Deaggregator
  time: 0.003; rss: 433MB	CopyPropagation
  time: 0.010; rss: 433MB	AddCallGuards
  time: 0.003; rss: 433MB	PreTrans
time: 1.348; rss: 433MB	Prepare MIR codegen passes
  time: 0.283; rss: 440MB	write metadata
  time: 0.492; rss: 450MB	translation item collection
  time: 0.076; rss: 456MB	codegen unit partitioning
  time: 0.059; rss: 703MB	internalize symbols
time: 5.772; rss: 583MB	translation
time: 0.000; rss: 583MB	assert dep graph
time: 0.000; rss: 583MB	serialize dep graph
incremental: re-using 0 out of 1 modules
  time: 0.517; rss: 405MB	llvm function passes [0]
  time: 0.261; rss: 413MB	llvm module passes [0]
  time: 10.120; rss: 403MB	codegen passes [0]
  time: 0.001; rss: 405MB	codegen passes [0]
time: 11.820; rss: 405MB	LLVM passes
time: 0.000; rss: 405MB	serialize work products
time: 0.662; rss: 102MB	linking
done
