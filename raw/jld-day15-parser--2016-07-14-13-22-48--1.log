commit fe5c439f695fd72b7be0d0f28ee8397b3256630c
Merge: 6998018 3205c51
Author: bors <bors@rust-lang.org>
Date:   Thu Jul 14 06:37:30 2016 -0700

    Auto merge of #34783 - Dridi:cdylib_usage, r=alexcrichton
    
    Mention the crate type cdylib in rustc's usage
    
    Hello,
    
    I just tried to build a `cdylib` with the latest stable release, I've been passively waiting for this for quite some time now. Tested successfully on my machine, although it doesn't appear in `rustc`'s usage it seems to work like a charm so far. :grinning:
    
    Thanks!
rustc: ./jld-day15-parser
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling day15 v0.1.0 (file:///root/benchmarks/jld-day15-parser)
time: 0.001; rss: 81MB	parsing
Lines of code:             72
Pre-expansion node count:  654
time: 0.000; rss: 85MB	configuration
time: 0.000; rss: 85MB	recursion limit
time: 0.000; rss: 85MB	crate injection
time: 0.000; rss: 85MB	plugin loading
time: 0.000; rss: 85MB	plugin registration
time: 0.021; rss: 120MB	expansion
time: 0.000; rss: 120MB	maybe building test harness
time: 0.000; rss: 120MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 120MB	complete gated feature checking
Post-expansion node count: 1155
time: 0.000; rss: 120MB	assigning node ids
time: 0.000; rss: 120MB	collecting defs
time: 0.004; rss: 124MB	external crate/lib resolution
time: 0.000; rss: 124MB	early lint checks
time: 0.000; rss: 124MB	AST validation
time: 0.001; rss: 124MB	name resolution
time: 0.000; rss: 124MB	lowering ast -> hir
time: 0.000; rss: 124MB	indexing hir
time: 0.000; rss: 124MB	attribute checking
time: 0.000; rss: 124MB	language item collection
time: 0.000; rss: 124MB	lifetime resolution
time: 0.000; rss: 124MB	looking for entry point
time: 0.000; rss: 124MB	looking for plugin registrar
time: 0.000; rss: 124MB	region resolution
time: 0.000; rss: 124MB	loop checking
time: 0.000; rss: 124MB	static item recursion checking
time: 0.000; rss: 124MB	load_dep_graph
time: 0.001; rss: 124MB	type collecting
time: 0.000; rss: 124MB	variance inference
time: 0.005; rss: 124MB	coherence checking
time: 0.007; rss: 124MB	wf checking
time: 0.000; rss: 124MB	item-types checking
time: 0.048; rss: 137MB	item-bodies checking
time: 0.000; rss: 137MB	drop-impl checking
time: 0.001; rss: 137MB	const checking
time: 0.000; rss: 137MB	privacy checking
time: 0.000; rss: 137MB	stability index
time: 0.000; rss: 137MB	intrinsic checking
time: 0.000; rss: 137MB	effect checking
time: 0.000; rss: 137MB	match checking
time: 0.000; rss: 137MB	liveness checking
time: 0.001; rss: 137MB	rvalue checking
time: 0.001; rss: 137MB	MIR dump
time: 0.001; rss: 137MB	MIR passes
time: 0.001; rss: 137MB	borrow checking
time: 0.000; rss: 137MB	reachability checking
time: 0.000; rss: 137MB	death checking
time: 0.000; rss: 137MB	stability checking
time: 0.000; rss: 137MB	unused lib feature checking
time: 0.004; rss: 137MB	lint checking
time: 0.002; rss: 137MB	resolving dependency formats
time: 0.002; rss: 137MB	Prepare MIR codegen passes
  time: 0.000; rss: 137MB	write metadata
  time: 0.620; rss: 143MB	translation item collection
  time: 0.003; rss: 143MB	codegen unit partitioning
time: 3.354; rss: 168MB	translation
time: 0.000; rss: 168MB	assert dep graph
time: 0.000; rss: 168MB	serialize dep graph
  time: 0.174; rss: 146MB	llvm function passes [0]
  time: 0.046; rss: 147MB	llvm module passes [0]
  time: 2.723; rss: 151MB	codegen passes [0]
  time: 0.001; rss: 151MB	codegen passes [0]
time: 2.950; rss: 151MB	LLVM passes
  time: 0.127; rss: 145MB	running linker
time: 0.127; rss: 145MB	linking
done
