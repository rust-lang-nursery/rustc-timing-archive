commit c772948b687488a087356cb91432425662e034b9
Merge: 2c2552b 480287e
Author: bors <bors@rust-lang.org>
Date:   Tue Sep 20 08:01:01 2016 -0700

    Auto merge of #36388 - pcwalton:copy-propagation, r=nikomatsakis
    
    librustc_mir: Implement def-use chains and trivial copy propagation on MIR.
    
    This only supports trivial cases in which there is exactly one def and
    one use.
    
    Currently, some random unrelated MIR tests are failing, probably just because they haven't been updated.
    
    r? @eddyb
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.028; rss: 51MB	parsing
Lines of code:             9154
Pre-expansion node count:  44873
time: 0.000; rss: 51MB	recursion limit
time: 0.000; rss: 51MB	crate injection
time: 0.000; rss: 51MB	plugin loading
time: 0.000; rss: 51MB	plugin registration
time: 0.094; rss: 79MB	expansion
time: 0.000; rss: 79MB	maybe building test harness
time: 0.001; rss: 79MB	maybe creating a macro crate
time: 0.005; rss: 79MB	assigning node ids
Post-expansion node count: 101537
time: 0.000; rss: 79MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 79MB	complete gated feature checking
time: 0.003; rss: 82MB	collecting defs
time: 0.010; rss: 88MB	external crate/lib resolution
time: 0.003; rss: 88MB	early lint checks
time: 0.001; rss: 88MB	AST validation
time: 0.015; rss: 96MB	name resolution
time: 0.008; rss: 100MB	lowering ast -> hir
time: 0.002; rss: 102MB	indexing hir
time: 0.001; rss: 102MB	attribute checking
time: 0.001; rss: 96MB	language item collection
time: 0.002; rss: 96MB	lifetime resolution
time: 0.000; rss: 96MB	looking for entry point
time: 0.000; rss: 96MB	looking for plugin registrar
time: 0.006; rss: 101MB	region resolution
time: 0.001; rss: 101MB	loop checking
time: 0.001; rss: 101MB	static item recursion checking
time: 0.041; rss: 101MB	compute_incremental_hashes_map
time: 0.000; rss: 101MB	load_dep_graph
time: 0.022; rss: 103MB	type collecting
time: 0.000; rss: 103MB	variance inference
time: 0.035; rss: 105MB	coherence checking
time: 0.056; rss: 108MB	wf checking
time: 0.029; rss: 108MB	item-types checking
time: 0.362; rss: 119MB	item-bodies checking
time: 0.000; rss: 119MB	drop-impl checking
time: 0.038; rss: 121MB	const checking
time: 0.006; rss: 121MB	privacy checking
time: 0.001; rss: 121MB	stability index
time: 0.005; rss: 121MB	intrinsic checking
time: 0.002; rss: 121MB	effect checking
time: 0.013; rss: 121MB	match checking
time: 0.005; rss: 121MB	liveness checking
time: 0.028; rss: 121MB	rvalue checking
time: 0.054; rss: 138MB	MIR dump
  time: 0.007; rss: 140MB	SimplifyCfg
  time: 0.013; rss: 140MB	QualifyAndPromoteConstants
  time: 0.016; rss: 140MB	TypeckMir
  time: 0.001; rss: 140MB	SimplifyBranches
  time: 0.004; rss: 140MB	SimplifyCfg
time: 0.040; rss: 140MB	MIR passes
time: 0.061; rss: 140MB	borrow checking
time: 0.003; rss: 140MB	reachability checking
time: 0.005; rss: 140MB	death checking
time: 0.005; rss: 140MB	stability checking
time: 0.000; rss: 140MB	unused lib feature checking
time: 0.042; rss: 140MB	lint checking
time: 0.000; rss: 140MB	resolving dependency formats
  time: 0.001; rss: 140MB	NoLandingPads
  time: 0.003; rss: 140MB	SimplifyCfg
  time: 0.008; rss: 140MB	EraseRegions
  time: 0.001; rss: 140MB	AddCallGuards
  time: 0.053; rss: 142MB	ElaborateDrops
  time: 0.001; rss: 142MB	NoLandingPads
  time: 0.005; rss: 142MB	SimplifyCfg
  time: 0.003; rss: 142MB	Deaggregator
  time: 0.001; rss: 142MB	AddCallGuards
  time: 0.000; rss: 142MB	PreTrans
time: 0.076; rss: 142MB	Prepare MIR codegen passes
  time: 0.054; rss: 146MB	write metadata
  time: 0.110; rss: 150MB	translation item collection
  time: 0.019; rss: 152MB	codegen unit partitioning
  time: 0.032; rss: 219MB	internalize symbols
time: 1.341; rss: 209MB	translation
time: 0.000; rss: 209MB	assert dep graph
time: 0.000; rss: 209MB	serialize dep graph
  time: 0.102; rss: 161MB	llvm function passes [0]
  time: 0.048; rss: 162MB	llvm module passes [0]
  time: 1.851; rss: 163MB	codegen passes [0]
  time: 0.001; rss: 164MB	codegen passes [0]
time: 2.163; rss: 164MB	LLVM passes
time: 0.000; rss: 164MB	serialize work products
time: 0.162; rss: 99MB	linking
done
