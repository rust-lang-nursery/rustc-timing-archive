commit c78cc52afd99ec0b3dd7f83cd257f0be767a508a
Merge: 2e7176f 4d0618e
Author: bors <bors@rust-lang.org>
Date:   Fri Nov 25 00:22:49 2016 -0600

    Auto merge of #37979 - nnethercote:Ty-super_fold_with, r=eddyb
    
    Avoid more unnecessary mk_ty calls in Ty::super_fold_with.
    
    This speeds up several rustc-benchmarks by 1--5%.
    
    This PR is the lovechild of #37108 and #37705.
    ```
    futures-rs-test  4.059s vs  4.011s --> 1.012x faster (variance: 1.016x, 1.026x)
    helloworld       0.236s vs  0.239s --> 0.986x faster (variance: 1.051x, 1.014x)
    html5ever-2016-  3.831s vs  3.824s --> 1.002x faster (variance: 1.020x, 1.019x)
    hyper.0.5.0      4.928s vs  4.936s --> 0.998x faster (variance: 1.003x, 1.012x)
    inflate-0.1.0    4.135s vs  4.104s --> 1.007x faster (variance: 1.026x, 1.028x)
    issue-32062-equ  0.309s vs  0.303s --> 1.017x faster (variance: 1.019x, 1.084x)
    issue-32278-big  1.818s vs  1.797s --> 1.011x faster (variance: 1.011x, 1.008x)
    jld-day15-parse  1.304s vs  1.271s --> 1.026x faster (variance: 1.018x, 1.012x)
    piston-image-0. 10.938s vs 10.921s --> 1.002x faster (variance: 1.025x, 1.016x)
    reddit-stress    2.327s vs  2.208s --> 1.054x faster (variance: 1.016x, 1.006x)
    regex-0.1.80     8.796s vs  8.727s --> 1.008x faster (variance: 1.012x, 1.019x)
    regex.0.1.30     2.294s vs  2.249s --> 1.020x faster (variance: 1.013x, 1.026x)
    rust-encoding-0  1.914s vs  1.886s --> 1.015x faster (variance: 1.027x, 1.026x)
    ```
rustc: ./hyper.0.5.0
cargo rustc  -- -Ztime-passes -Zinput-stats
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.023; rss: 48MB	parsing
Lines of code:             9003
Pre-expansion node count:  44055
time: 0.000; rss: 48MB	recursion limit
time: 0.000; rss: 48MB	crate injection
time: 0.000; rss: 48MB	plugin loading
time: 0.000; rss: 48MB	plugin registration
time: 0.076; rss: 87MB	expansion
time: 0.000; rss: 87MB	maybe building test harness
time: 0.001; rss: 87MB	maybe creating a macro crate
Post-expansion node count: 101769
time: 0.000; rss: 87MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 87MB	complete gated feature checking
time: 0.003; rss: 87MB	early lint checks
time: 0.001; rss: 87MB	AST validation
time: 0.013; rss: 92MB	name resolution
time: 0.007; rss: 96MB	lowering ast -> hir
time: 0.001; rss: 96MB	indexing hir
time: 0.001; rss: 96MB	attribute checking
time: 0.001; rss: 91MB	language item collection
time: 0.002; rss: 91MB	lifetime resolution
time: 0.000; rss: 91MB	looking for entry point
time: 0.000; rss: 91MB	looking for plugin registrar
time: 0.005; rss: 95MB	region resolution
time: 0.001; rss: 95MB	loop checking
time: 0.001; rss: 95MB	static item recursion checking
time: 0.039; rss: 94MB	compute_incremental_hashes_map
time: 0.000; rss: 94MB	load_dep_graph
time: 0.014; rss: 97MB	type collecting
time: 0.000; rss: 97MB	variance inference
time: 0.001; rss: 97MB	impl wf inference
time: 0.014; rss: 98MB	coherence checking
time: 0.038; rss: 100MB	wf checking
time: 0.023; rss: 101MB	item-types checking
time: 0.447; rss: 110MB	item-bodies checking
time: 0.000; rss: 110MB	drop-impl checking
time: 0.030; rss: 112MB	const checking
time: 0.006; rss: 112MB	privacy checking
time: 0.001; rss: 112MB	stability index
time: 0.003; rss: 112MB	intrinsic checking
time: 0.001; rss: 112MB	effect checking
time: 0.008; rss: 112MB	match checking
time: 0.004; rss: 113MB	liveness checking
time: 0.019; rss: 113MB	rvalue checking
time: 0.046; rss: 132MB	MIR dump
  time: 0.006; rss: 133MB	SimplifyCfg
  time: 0.011; rss: 135MB	QualifyAndPromoteConstants
  time: 0.013; rss: 135MB	TypeckMir
  time: 0.000; rss: 135MB	SimplifyBranches
  time: 0.003; rss: 135MB	SimplifyCfg
time: 0.035; rss: 135MB	MIR cleanup and validation
time: 0.053; rss: 135MB	borrow checking
time: 0.003; rss: 135MB	reachability checking
time: 0.004; rss: 135MB	death checking
time: 0.004; rss: 135MB	stability checking
time: 0.000; rss: 135MB	unused lib feature checking
time: 0.036; rss: 135MB	lint checking
time: 0.000; rss: 135MB	resolving dependency formats
  time: 0.000; rss: 135MB	NoLandingPads
  time: 0.003; rss: 135MB	SimplifyCfg
  time: 0.007; rss: 135MB	EraseRegions
  time: 0.001; rss: 135MB	AddCallGuards
  time: 0.021; rss: 138MB	ElaborateDrops
  time: 0.000; rss: 138MB	NoLandingPads
  time: 0.005; rss: 138MB	SimplifyCfg
  time: 0.003; rss: 138MB	InstCombine
  time: 0.003; rss: 138MB	Deaggregator
  time: 0.000; rss: 138MB	CopyPropagation
  time: 0.004; rss: 138MB	SimplifyLocals
  time: 0.001; rss: 138MB	AddCallGuards
  time: 0.000; rss: 138MB	PreTrans
time: 0.049; rss: 138MB	MIR optimisations
  time: 0.011; rss: 140MB	write metadata
  time: 0.115; rss: 147MB	translation item collection
  time: 0.013; rss: 151MB	codegen unit partitioning
  time: 0.011; rss: 205MB	internalize symbols
time: 0.917; rss: 205MB	translation
time: 0.000; rss: 205MB	assert dep graph
time: 0.000; rss: 205MB	serialize dep graph
  time: 0.087; rss: 152MB	llvm function passes [0]
  time: 0.041; rss: 154MB	llvm module passes [0]
  time: 1.635; rss: 154MB	codegen passes [0]
  time: 0.000; rss: 154MB	codegen passes [0]
time: 1.897; rss: 154MB	LLVM passes
time: 0.000; rss: 154MB	serialize work products
time: 0.069; rss: 99MB	linking
done
