commit ca76c7e0148f87876dbf8ad1f7dd13fb9f268481
Merge: e51190c 2148bdf
Author: bors <bors@rust-lang.org>
Date:   Fri Oct 7 07:58:27 2016 -0700

    Auto merge of #36945 - alexcrichton:proc-macro-rename, r=nrc
    
    rustc: Rename rustc_macro to proc_macro
    
    This commit blanket renames the `rustc_macro` infrastructure to `proc_macro`,
    which reflects the general consensus of #35900. A follow up PR to Cargo will be
    required to purge the `rustc-macro` name as well.
rustc: ./syntex-0.42.2
cargo rustc -p syntex_syntax -- -Ztime-passes -Zinput-stats
   Compiling syntex_syntax v0.42.0
time: 0.108; rss: 76MB	parsing
Lines of code:             33687
Pre-expansion node count:  224033
time: 0.000; rss: 76MB	recursion limit
time: 0.000; rss: 76MB	crate injection
time: 0.000; rss: 76MB	plugin loading
time: 0.000; rss: 76MB	plugin registration
time: 0.279; rss: 146MB	expansion
time: 0.000; rss: 146MB	maybe building test harness
time: 0.007; rss: 146MB	maybe creating a macro crate
Post-expansion node count: 641571
time: 0.000; rss: 146MB	checking for inline asm in case the target doesn't support it
time: 0.016; rss: 146MB	complete gated feature checking
time: 0.026; rss: 146MB	early lint checks
time: 0.009; rss: 146MB	AST validation
time: 0.089; rss: 160MB	name resolution
time: 0.057; rss: 202MB	lowering ast -> hir
time: 0.011; rss: 211MB	indexing hir
time: 0.007; rss: 211MB	attribute checking
time: 0.007; rss: 161MB	language item collection
time: 0.014; rss: 161MB	lifetime resolution
time: 0.000; rss: 161MB	looking for entry point
time: 0.000; rss: 161MB	looking for plugin registrar
time: 0.049; rss: 172MB	region resolution
time: 0.007; rss: 172MB	loop checking
time: 0.007; rss: 172MB	static item recursion checking
time: 0.269; rss: 174MB	compute_incremental_hashes_map
time: 0.000; rss: 174MB	load_dep_graph
time: 0.082; rss: 175MB	type collecting
time: 0.001; rss: 175MB	variance inference
time: 0.040; rss: 179MB	coherence checking
time: 0.103; rss: 181MB	wf checking
time: 0.197; rss: 186MB	item-types checking
time: 3.963; rss: 241MB	item-bodies checking
time: 0.000; rss: 241MB	drop-impl checking
time: 0.312; rss: 241MB	const checking
time: 0.054; rss: 241MB	privacy checking
time: 0.007; rss: 241MB	stability index
time: 0.021; rss: 241MB	intrinsic checking
time: 0.018; rss: 241MB	effect checking
time: 0.056; rss: 241MB	match checking
time: 0.055; rss: 238MB	liveness checking
time: 0.282; rss: 238MB	rvalue checking
time: 0.415; rss: 427MB	MIR dump
  time: 0.057; rss: 428MB	SimplifyCfg
  time: 0.081; rss: 428MB	QualifyAndPromoteConstants
  time: 0.111; rss: 428MB	TypeckMir
  time: 0.004; rss: 428MB	SimplifyBranches
  time: 0.031; rss: 428MB	SimplifyCfg
time: 0.284; rss: 428MB	MIR passes
time: 0.687; rss: 428MB	borrow checking
time: 0.022; rss: 428MB	reachability checking
time: 0.044; rss: 428MB	death checking
time: 0.041; rss: 430MB	stability checking
time: 0.000; rss: 430MB	unused lib feature checking
time: 0.216; rss: 430MB	lint checking
time: 0.000; rss: 430MB	resolving dependency formats
  time: 0.003; rss: 430MB	NoLandingPads
  time: 0.027; rss: 430MB	SimplifyCfg
  time: 0.072; rss: 439MB	EraseRegions
  time: 0.011; rss: 439MB	AddCallGuards
  time: 1.050; rss: 459MB	ElaborateDrops
  time: 0.003; rss: 459MB	NoLandingPads
  time: 0.053; rss: 458MB	SimplifyCfg
  time: 0.031; rss: 458MB	InstCombine
  time: 0.012; rss: 458MB	Deaggregator
  time: 0.003; rss: 458MB	CopyPropagation
  time: 0.009; rss: 458MB	AddCallGuards
  time: 0.003; rss: 458MB	PreTrans
time: 1.278; rss: 458MB	Prepare MIR codegen passes
  time: 0.265; rss: 465MB	write metadata
  time: 0.469; rss: 477MB	translation item collection
  time: 0.068; rss: 480MB	codegen unit partitioning
  time: 0.058; rss: 724MB	internalize symbols
time: 5.226; rss: 603MB	translation
time: 0.000; rss: 603MB	assert dep graph
time: 0.000; rss: 603MB	serialize dep graph
  time: 0.501; rss: 412MB	llvm function passes [0]
  time: 0.243; rss: 419MB	llvm module passes [0]
  time: 9.963; rss: 412MB	codegen passes [0]
  time: 0.001; rss: 414MB	codegen passes [0]
time: 11.437; rss: 414MB	LLVM passes
time: 0.000; rss: 414MB	serialize work products
time: 0.668; rss: 107MB	linking
done
