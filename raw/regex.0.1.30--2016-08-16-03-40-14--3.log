commit e25542cb02d946959517ebb68e2f7b1318817237
Merge: 197be89 f59f1f0
Author: bors <bors@rust-lang.org>
Date:   Tue Aug 16 00:12:12 2016 -0700

    Auto merge of #35162 - canndrew:bang_type_coerced, r=nikomatsakis
    
    Implement the `!` type
    
    This implements the never type (`!`) and hides it behind the feature gate `#[feature(never_type)]`. With the feature gate off, things should build as normal (although some error messages may be different). With the gate on, `!` is usable as a type and diverging type variables (ie. types that are unconstrained by anything in the code) will default to `!` instead of `()`.
rustc: ./regex.0.1.30
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling regex v0.1.30 (file:///root/benchmarks/regex.0.1.30)
time: 0.051; rss: 57MB	parsing
Lines of code:             8558
Pre-expansion node count:  58076
time: 0.005; rss: 57MB	configuration
time: 0.000; rss: 57MB	recursion limit
time: 0.000; rss: 57MB	crate injection
time: 0.000; rss: 57MB	plugin loading
time: 0.000; rss: 57MB	plugin registration
time: 0.029; rss: 94MB	expansion
time: 0.000; rss: 94MB	maybe building test harness
time: 0.004; rss: 94MB	assigning node ids
Post-expansion node count: 68148
time: 0.000; rss: 94MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 94MB	complete gated feature checking
time: 0.001; rss: 95MB	collecting defs
time: 0.001; rss: 95MB	external crate/lib resolution
time: 0.003; rss: 95MB	early lint checks
time: 0.001; rss: 95MB	AST validation
time: 0.007; rss: 96MB	name resolution
time: 0.008; rss: 106MB	lowering ast -> hir
time: 0.002; rss: 108MB	indexing hir
time: 0.001; rss: 108MB	attribute checking
time: 0.001; rss: 98MB	language item collection
time: 0.001; rss: 98MB	lifetime resolution
time: 0.000; rss: 98MB	looking for entry point
time: 0.000; rss: 98MB	looking for plugin registrar
time: 0.007; rss: 102MB	region resolution
time: 0.001; rss: 102MB	loop checking
time: 0.001; rss: 102MB	static item recursion checking
time: 0.000; rss: 102MB	load_dep_graph
time: 0.008; rss: 104MB	type collecting
time: 0.000; rss: 104MB	variance inference
time: 0.026; rss: 108MB	coherence checking
time: 0.011; rss: 108MB	wf checking
time: 0.306; rss: 116MB	item-types checking
time: 0.191; rss: 121MB	item-bodies checking
time: 0.000; rss: 121MB	drop-impl checking
time: 0.028; rss: 123MB	const checking
time: 0.004; rss: 123MB	privacy checking
time: 0.001; rss: 123MB	stability index
time: 0.002; rss: 123MB	intrinsic checking
time: 0.001; rss: 123MB	effect checking
time: 0.004; rss: 123MB	match checking
time: 0.002; rss: 123MB	liveness checking
time: 0.008; rss: 123MB	rvalue checking
time: 0.044; rss: 139MB	MIR dump
time: 0.022; rss: 139MB	MIR passes
time: 0.021; rss: 139MB	borrow checking
time: 0.000; rss: 139MB	reachability checking
time: 0.002; rss: 139MB	death checking
time: 0.003; rss: 139MB	stability checking
time: 0.000; rss: 139MB	unused lib feature checking
time: 0.028; rss: 139MB	lint checking
time: 0.000; rss: 139MB	resolving dependency formats
time: 0.019; rss: 141MB	Prepare MIR codegen passes
  time: 0.171; rss: 150MB	write metadata
  time: 0.057; rss: 154MB	translation item collection
  time: 0.008; rss: 154MB	codegen unit partitioning
  time: 0.015; rss: 203MB	internalize symbols
time: 0.783; rss: 201MB	translation
time: 0.000; rss: 201MB	assert dep graph
time: 0.000; rss: 201MB	serialize dep graph
  time: 0.036; rss: 130MB	llvm function passes [0]
  time: 0.019; rss: 131MB	llvm module passes [0]
  time: 0.667; rss: 134MB	codegen passes [0]
  time: 0.001; rss: 134MB	codegen passes [0]
time: 0.785; rss: 134MB	LLVM passes
time: 0.000; rss: 134MB	serialize work products
time: 0.065; rss: 107MB	linking
done
