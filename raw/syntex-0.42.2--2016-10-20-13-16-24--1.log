commit 7bccb829d0fe9a733bd6efcf6f7313186ae237ab
Merge: eb38d42 81d9795
Author: bors <bors@rust-lang.org>
Date:   Thu Oct 20 05:16:49 2016 -0700

    Auto merge of #37273 - cuviper:major-minor-rebuild, r=alexcrichton
    
    Detect local-rebuild by just the MAJOR.MINOR version
    
    A new point-release shouldn't change any language semantics, so a local
    stage0 that matches MAJOR.MINOR version should still be considered a
    local-rebuild as far as `--cfg stageN` features go.
    
    e.g. `1.14.0` should be considered a local-rebuild for any `1.14.X`.
    
    (Bootstrap keys used to be an issue too, until #37265.)
rustc: ./syntex-0.42.2
cargo rustc -p syntex_syntax -- -Ztime-passes -Zinput-stats
   Compiling syntex_syntax v0.42.0
time: 0.109; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  224033
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.267; rss: 148MB	expansion
time: 0.000; rss: 148MB	maybe building test harness
time: 0.006; rss: 148MB	maybe creating a macro crate
Post-expansion node count: 641571
time: 0.000; rss: 148MB	checking for inline asm in case the target doesn't support it
time: 0.013; rss: 148MB	complete gated feature checking
time: 0.022; rss: 148MB	early lint checks
time: 0.007; rss: 148MB	AST validation
time: 0.086; rss: 162MB	name resolution
time: 0.049; rss: 202MB	lowering ast -> hir
time: 0.009; rss: 213MB	indexing hir
time: 0.007; rss: 213MB	attribute checking
time: 0.005; rss: 164MB	language item collection
time: 0.011; rss: 164MB	lifetime resolution
time: 0.000; rss: 164MB	looking for entry point
time: 0.000; rss: 164MB	looking for plugin registrar
time: 0.044; rss: 175MB	region resolution
time: 0.006; rss: 175MB	loop checking
time: 0.006; rss: 175MB	static item recursion checking
time: 0.529; rss: 177MB	compute_incremental_hashes_map
time: 0.000; rss: 177MB	load_dep_graph
time: 0.042; rss: 181MB	type collecting
time: 0.001; rss: 181MB	variance inference
time: 0.034; rss: 183MB	coherence checking
time: 0.100; rss: 186MB	wf checking
time: 0.185; rss: 193MB	item-types checking
time: 3.919; rss: 245MB	item-bodies checking
time: 0.000; rss: 245MB	drop-impl checking
time: 0.251; rss: 248MB	const checking
time: 0.052; rss: 248MB	privacy checking
time: 0.007; rss: 248MB	stability index
time: 0.021; rss: 248MB	intrinsic checking
time: 0.018; rss: 248MB	effect checking
time: 0.055; rss: 248MB	match checking
time: 0.052; rss: 238MB	liveness checking
time: 0.213; rss: 238MB	rvalue checking
time: 0.404; rss: 429MB	MIR dump
  time: 0.058; rss: 430MB	SimplifyCfg
  time: 0.080; rss: 430MB	QualifyAndPromoteConstants
  time: 0.110; rss: 430MB	TypeckMir
  time: 0.004; rss: 430MB	SimplifyBranches
  time: 0.032; rss: 430MB	SimplifyCfg
time: 0.285; rss: 430MB	MIR passes
time: 0.561; rss: 431MB	borrow checking
time: 0.018; rss: 431MB	reachability checking
time: 0.043; rss: 431MB	death checking
time: 0.041; rss: 433MB	stability checking
time: 0.000; rss: 433MB	unused lib feature checking
time: 0.212; rss: 433MB	lint checking
time: 0.000; rss: 433MB	resolving dependency formats
  time: 0.003; rss: 433MB	NoLandingPads
  time: 0.028; rss: 433MB	SimplifyCfg
  time: 0.068; rss: 439MB	EraseRegions
  time: 0.011; rss: 439MB	AddCallGuards
  time: 0.288; rss: 458MB	ElaborateDrops
  time: 0.003; rss: 458MB	NoLandingPads
  time: 0.053; rss: 458MB	SimplifyCfg
  time: 0.029; rss: 458MB	InstCombine
  time: 0.011; rss: 458MB	Deaggregator
  time: 0.002; rss: 458MB	CopyPropagation
  time: 0.009; rss: 458MB	AddCallGuards
  time: 0.002; rss: 458MB	PreTrans
time: 0.507; rss: 458MB	Prepare MIR codegen passes
  time: 0.060; rss: 467MB	write metadata
  time: 0.422; rss: 474MB	translation item collection
  time: 0.057; rss: 485MB	codegen unit partitioning
  time: 0.048; rss: 730MB	internalize symbols
time: 4.743; rss: 609MB	translation
time: 0.000; rss: 609MB	assert dep graph
time: 0.000; rss: 609MB	serialize dep graph
  time: 0.513; rss: 408MB	llvm function passes [0]
  time: 0.241; rss: 417MB	llvm module passes [0]
  time: 9.990; rss: 417MB	codegen passes [0]
  time: 0.000; rss: 417MB	codegen passes [0]
time: 11.486; rss: 411MB	LLVM passes
time: 0.000; rss: 411MB	serialize work products
time: 0.660; rss: 105MB	linking
done
