commit 303892ee156e5c31222b10786e661abb24dcf241
Merge: 074f49a 58f1b9c
Author: bors <bors@rust-lang.org>
Date:   Sat Jan 30 00:25:44 2016 +0000

    Auto merge of #30448 - alexcrichton:llvmup, r=nikomatsakis
    
    These commits perform a few high-level changes with the goal of enabling i686 MSVC unwinding:
    
    * LLVM is upgraded to pick up the new exception handling instructions and intrinsics for MSVC. This puts us somewhere along the 3.8 branch, but we should still be compatible with LLVM 3.7 for non-MSVC targets.
    * All unwinding for MSVC targets (both 32 and 64-bit) are implemented in terms of this new LLVM support. I would like to also extend this to Windows GNU targets to drop the runtime dependencies we have on MinGW, but I'd like to land this first.
    * Some tests were fixed up for i686 MSVC here and there where necessary. The full test suite should be passing now for that target.
    
    In terms of landing this I plan to have this go through first, then verify that i686 MSVC works, then I'll enable `make check` on the bots for that target instead of just `make` as-is today.
    
    Closes #25869
rustc: ./helloworld
/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc hello.rs -Ztime-passes -Zinput-stats
time: 0.000; rss: 31MB	parsing
Lines of code:             3
Pre-expansion node count:  8
time: 0.000; rss: 35MB	configuration 1
time: 0.000; rss: 35MB	recursion limit
time: 0.000; rss: 35MB	gated macro checking
time: 0.000; rss: 35MB	crate injection
time: 0.002; rss: 38MB	macro loading
time: 0.000; rss: 38MB	plugin loading
time: 0.000; rss: 38MB	plugin registration
time: 0.001; rss: 38MB	expansion
time: 0.000; rss: 38MB	complete gated feature checking 1
time: 0.000; rss: 38MB	configuration 2
time: 0.000; rss: 38MB	gated configuration checking
time: 0.000; rss: 38MB	maybe building test harness
time: 0.000; rss: 38MB	prelude injection
time: 0.000; rss: 38MB	checking that all macro invocations are gone
time: 0.000; rss: 38MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 38MB	complete gated feature checking 2
Post-expansion node count: 68
time: 0.000; rss: 38MB	assigning node ids
time: 0.000; rss: 38MB	lowering ast -> hir
time: 0.000; rss: 38MB	indexing hir
time: 0.000; rss: 38MB	attribute checking
time: 0.000; rss: 38MB	early lint checks
time: 0.001; rss: 38MB	external crate/lib resolution
time: 0.000; rss: 38MB	language item collection
time: 0.001; rss: 46MB	resolution
time: 0.000; rss: 46MB	lifetime resolution
time: 0.000; rss: 46MB	looking for entry point
time: 0.000; rss: 46MB	looking for plugin registrar
time: 0.000; rss: 46MB	region resolution
time: 0.000; rss: 46MB	loop checking
time: 0.000; rss: 46MB	static item recursion checking
time: 0.000; rss: 46MB	type collecting
time: 0.000; rss: 46MB	variance inference
time: 0.005; rss: 54MB	coherence checking
time: 0.000; rss: 54MB	wf checking
time: 0.000; rss: 54MB	item-types checking
time: 0.000; rss: 54MB	item-bodies checking
time: 0.000; rss: 54MB	drop-impl checking
time: 0.000; rss: 54MB	const checking
time: 0.000; rss: 54MB	privacy checking
time: 0.000; rss: 54MB	stability index
time: 0.000; rss: 54MB	intrinsic checking
time: 0.000; rss: 54MB	effect checking
time: 0.000; rss: 54MB	match checking
time: 0.000; rss: 54MB	MIR dump
time: 0.000; rss: 54MB	liveness checking
time: 0.000; rss: 54MB	borrow checking
time: 0.000; rss: 54MB	rvalue checking
time: 0.000; rss: 54MB	reachability checking
time: 0.000; rss: 54MB	death checking
time: 0.000; rss: 54MB	stability checking
time: 0.000; rss: 54MB	unused lib feature checking
time: 0.000; rss: 54MB	lint checking
time: 0.001; rss: 54MB	resolving dependency formats
time: 0.000; rss: 54MB	erasing regions from MIR
  time: 0.000; rss: 64MB	write metadata
time: 0.003; rss: 64MB	translation
  time: 0.000; rss: 67MB	llvm function passes [0]
  time: 0.000; rss: 67MB	llvm module passes [0]
  time: 0.001; rss: 68MB	codegen passes [0]
  time: 0.000; rss: 68MB	codegen passes [0]
time: 0.003; rss: 68MB	LLVM passes
  time: 0.092; rss: 74MB	running linker
time: 0.092; rss: 74MB	linking
done
