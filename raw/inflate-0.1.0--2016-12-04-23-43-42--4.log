commit 6bc551a261de4b62a50761e624dc8fd27c85c4ce
Merge: ebeee0e b8d8ab8
Author: bors <bors@rust-lang.org>
Date:   Mon Dec 5 02:48:03 2016 +0000

    Auto merge of #38093 - mikhail-m1:stack-overflow, r=arielb1
    
    fix stack overflow by enum and cont issue #36163
    
    some paths were skipped while checking for recursion.
    
    I fixed bug reproduces on win64 cargo test. In previous PR #36458 time complexity was exponential in case of linked const values. Now it's linear.
    
    r? @alexcrichton
rustc: ./inflate-0.1.0
cargo rustc  -- -Ztime-passes -Zinput-stats
time: 0.003; rss: 44MB	parsing
Lines of code:             956
Pre-expansion node count:  4736
time: 0.000; rss: 44MB	recursion limit
time: 0.000; rss: 44MB	crate injection
time: 0.000; rss: 44MB	plugin loading
time: 0.000; rss: 44MB	plugin registration
time: 0.058; rss: 75MB	expansion
time: 0.000; rss: 75MB	maybe building test harness
time: 0.000; rss: 75MB	maybe creating a macro crate
Post-expansion node count: 55748
time: 0.000; rss: 75MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 75MB	complete gated feature checking
time: 0.002; rss: 75MB	early lint checks
time: 0.000; rss: 75MB	AST validation
time: 0.007; rss: 75MB	name resolution
time: 0.006; rss: 80MB	lowering ast -> hir
time: 0.001; rss: 80MB	indexing hir
time: 0.001; rss: 80MB	attribute checking
time: 0.000; rss: 77MB	language item collection
time: 0.001; rss: 77MB	lifetime resolution
time: 0.000; rss: 77MB	looking for entry point
time: 0.000; rss: 77MB	looking for plugin registrar
time: 0.002; rss: 76MB	region resolution
time: 0.000; rss: 76MB	loop checking
time: 0.000; rss: 76MB	static item recursion checking
time: 0.018; rss: 76MB	compute_incremental_hashes_map
time: 0.000; rss: 76MB	load_dep_graph
time: 0.000; rss: 76MB	stability index
time: 0.001; rss: 76MB	stability checking
time: 0.001; rss: 78MB	type collecting
time: 0.000; rss: 78MB	variance inference
time: 0.000; rss: 78MB	impl wf inference
time: 0.005; rss: 81MB	coherence checking
time: 0.001; rss: 81MB	wf checking
time: 0.002; rss: 81MB	item-types checking
time: 1.570; rss: 89MB	item-bodies checking
time: 0.000; rss: 89MB	drop-impl checking
time: 0.014; rss: 89MB	const checking
time: 0.001; rss: 89MB	privacy checking
time: 0.000; rss: 89MB	intrinsic checking
time: 0.000; rss: 89MB	effect checking
time: 0.002; rss: 89MB	match checking
time: 0.065; rss: 87MB	liveness checking
time: 0.011; rss: 87MB	rvalue checking
time: 0.034; rss: 107MB	MIR dump
  time: 0.007; rss: 107MB	SimplifyCfg
  time: 0.005; rss: 107MB	QualifyAndPromoteConstants
  time: 0.007; rss: 107MB	TypeckMir
  time: 0.000; rss: 107MB	SimplifyBranches
  time: 0.002; rss: 107MB	SimplifyCfg
time: 0.021; rss: 107MB	MIR cleanup and validation
time: 0.197; rss: 107MB	borrow checking
time: 0.000; rss: 107MB	reachability checking
time: 0.002; rss: 107MB	death checking
time: 0.000; rss: 107MB	unused lib feature checking
time: 0.015; rss: 109MB	lint checking
time: 0.000; rss: 109MB	resolving dependency formats
  time: 0.000; rss: 109MB	NoLandingPads
  time: 0.002; rss: 109MB	SimplifyCfg
  time: 0.003; rss: 109MB	EraseRegions
  time: 0.001; rss: 110MB	AddCallGuards
  time: 0.222; rss: 113MB	ElaborateDrops
  time: 0.000; rss: 113MB	NoLandingPads
  time: 0.006; rss: 111MB	SimplifyCfg
  time: 0.003; rss: 111MB	InstCombine
  time: 0.000; rss: 111MB	Deaggregator
  time: 0.000; rss: 111MB	CopyPropagation
  time: 0.003; rss: 111MB	SimplifyLocals
  time: 0.001; rss: 111MB	AddCallGuards
  time: 0.000; rss: 111MB	PreTrans
time: 0.240; rss: 111MB	MIR optimisations
  time: 0.001; rss: 111MB	write metadata
  time: 0.008; rss: 115MB	translation item collection
  time: 0.001; rss: 115MB	codegen unit partitioning
  time: 0.001; rss: 127MB	internalize symbols
time: 0.146; rss: 127MB	translation
time: 0.000; rss: 127MB	assert dep graph
time: 0.000; rss: 127MB	serialize dep graph
  time: 0.026; rss: 92MB	llvm function passes [0]
  time: 0.007; rss: 93MB	llvm module passes [0]
  time: 0.662; rss: 100MB	codegen passes [0]
  time: 0.000; rss: 100MB	codegen passes [0]
time: 0.730; rss: 100MB	LLVM passes
time: 0.000; rss: 100MB	serialize work products
time: 0.019; rss: 84MB	linking
done
