commit 8289a8916f9cf7d290a98121a75cee840faa9d0f
Merge: 7bef60a cf9ff2b
Author: bors <bors@rust-lang.org>
Date:   Mon Nov 14 02:46:12 2016 -0800

    Auto merge of #37278 - matklad:lone-lifetime, r=jseyfried
    
    Fix syntax error in the compiler
    
    Currently `rustc` accepts the following code: `fn f<'a>() where 'a {}`. This should be a syntax error, shouldn't it?
    
    Not sure if my changes actually compile, waiting for the LLVM to build.
rustc: ./html5ever-2016-08-25
cargo rustc  -- -Ztime-passes -Zinput-stats
   Compiling log v0.3.6
   Compiling serde v0.8.9
   Compiling rustc-serialize v0.3.19
   Compiling phf_shared v0.7.16
   Compiling mac v0.0.2
   Compiling matches v0.1.2
   Compiling libc v0.2.16
   Compiling encoding_index_tests v0.1.4
   Compiling void v1.0.2
   Compiling utf-8 v0.6.0
   Compiling encoding-index-tradchinese v1.20141219.5
   Compiling encoding-index-singlebyte v1.20141219.5
   Compiling encoding-index-korean v1.20141219.5
   Compiling encoding-index-simpchinese v1.20141219.5
   Compiling phf v0.7.16
   Compiling encoding-index-japanese v1.20141219.5
   Compiling unreachable v0.1.1
   Compiling debug_unreachable v0.1.1
   Compiling futf v0.1.2
   Compiling rand v0.3.14
   Compiling lazy_static v0.2.1
   Compiling encoding v0.2.33
   Compiling tendril v0.2.3
   Compiling phf_generator v0.7.16
   Compiling string_cache v0.2.29
   Compiling phf_codegen v0.7.16
   Compiling html5ever v0.5.4 (file:///root/benchmarks/html5ever-2016-08-25)
time: 0.023; rss: 48MB	parsing
Lines of code:             8210
Pre-expansion node count:  52140
time: 0.000; rss: 48MB	recursion limit
time: 0.000; rss: 48MB	crate injection
time: 0.000; rss: 48MB	plugin loading
time: 0.000; rss: 48MB	plugin registration
time: 0.621; rss: 101MB	expansion
time: 0.000; rss: 101MB	maybe building test harness
time: 0.002; rss: 101MB	maybe creating a macro crate
Post-expansion node count: 163412
time: 0.000; rss: 101MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 101MB	complete gated feature checking
time: 0.008; rss: 101MB	early lint checks
time: 0.002; rss: 101MB	AST validation
time: 0.016; rss: 104MB	name resolution
time: 0.011; rss: 113MB	lowering ast -> hir
time: 0.003; rss: 118MB	indexing hir
time: 0.002; rss: 118MB	attribute checking
time: 0.001; rss: 98MB	language item collection
time: 0.002; rss: 98MB	lifetime resolution
time: 0.000; rss: 98MB	looking for entry point
time: 0.000; rss: 98MB	looking for plugin registrar
time: 0.011; rss: 106MB	region resolution
time: 0.001; rss: 106MB	loop checking
time: 0.001; rss: 106MB	static item recursion checking
time: 0.020; rss: 107MB	compute_incremental_hashes_map
time: 0.000; rss: 107MB	load_dep_graph
time: 0.010; rss: 109MB	type collecting
time: 0.000; rss: 109MB	variance inference
time: 0.011; rss: 110MB	coherence checking
time: 0.020; rss: 111MB	wf checking
time: 0.260; rss: 121MB	item-types checking
time: 0.406; rss: 128MB	item-bodies checking
time: 0.000; rss: 128MB	drop-impl checking
time: 0.060; rss: 136MB	const checking
time: 0.006; rss: 136MB	privacy checking
time: 0.001; rss: 136MB	stability index
time: 0.002; rss: 136MB	intrinsic checking
time: 0.002; rss: 136MB	effect checking
time: 0.014; rss: 136MB	match checking
time: 0.011; rss: 132MB	liveness checking
time: 0.021; rss: 132MB	rvalue checking
time: 0.108; rss: 176MB	MIR dump
  time: 0.008; rss: 177MB	SimplifyCfg
  time: 0.013; rss: 177MB	QualifyAndPromoteConstants
  time: 0.020; rss: 177MB	TypeckMir
  time: 0.000; rss: 177MB	SimplifyBranches
  time: 0.004; rss: 177MB	SimplifyCfg
time: 0.045; rss: 177MB	MIR cleanup and validation
time: 0.077; rss: 180MB	borrow checking
time: 0.002; rss: 180MB	reachability checking
time: 0.005; rss: 180MB	death checking
time: 0.006; rss: 180MB	stability checking
time: 0.000; rss: 180MB	unused lib feature checking
time: 0.057; rss: 180MB	lint checking
time: 0.000; rss: 180MB	resolving dependency formats
  time: 0.000; rss: 180MB	NoLandingPads
  time: 0.004; rss: 180MB	SimplifyCfg
  time: 0.009; rss: 180MB	EraseRegions
  time: 0.001; rss: 180MB	AddCallGuards
  time: 0.073; rss: 186MB	ElaborateDrops
  time: 0.000; rss: 186MB	NoLandingPads
  time: 0.007; rss: 183MB	SimplifyCfg
  time: 0.007; rss: 181MB	InstCombine
  time: 0.001; rss: 181MB	Deaggregator
  time: 0.000; rss: 181MB	CopyPropagation
  time: 0.007; rss: 179MB	SimplifyLocals
  time: 0.001; rss: 179MB	AddCallGuards
  time: 0.000; rss: 179MB	PreTrans
time: 0.111; rss: 179MB	MIR optimisations
  time: 0.011; rss: 180MB	write metadata
  time: 0.040; rss: 181MB	translation item collection
  time: 0.005; rss: 181MB	codegen unit partitioning
  time: 0.005; rss: 196MB	internalize symbols
time: 0.263; rss: 196MB	translation
time: 0.000; rss: 196MB	assert dep graph
time: 0.000; rss: 196MB	serialize dep graph
  time: 0.020; rss: 105MB	llvm function passes [0]
  time: 0.012; rss: 105MB	llvm module passes [0]
  time: 0.474; rss: 109MB	codegen passes [0]
  time: 0.000; rss: 109MB	codegen passes [0]
time: 0.546; rss: 109MB	LLVM passes
time: 0.000; rss: 109MB	serialize work products
time: 0.024; rss: 92MB	linking
done
