commit 5938eba4e30b766751483e93776a87a4db1681f4
Merge: 02ea82d d53f82c
Author: bors <bors@rust-lang.org>
Date:   Wed Dec 7 07:15:31 2016 +0000

    Auto merge of #38149 - bluss:is-empty, r=alexcrichton
    
    Forward more ExactSizeIterator methods and `is_empty` edits
    
    - Forward ExactSizeIterator methods in more places, like `&mut I` and `Box<I>` iterator impls.
    - Improve `VecDeque::is_empty` itself (see commit 4)
    - All the collections iterators now have `len` or `is_empty` forwarded if doing so is a benefit. In the remaining cases, they already use a simple size hint (using something like a stored `usize` value), which is sufficient for the default implementation of len and is_empty.
rustc: ./syntex-0.42.2@010-incr@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.241; rss: 151MB	expansion
time: 0.000; rss: 151MB	maybe building test harness
time: 0.006; rss: 151MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 151MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 151MB	complete gated feature checking
time: 0.023; rss: 151MB	early lint checks
time: 0.007; rss: 151MB	AST validation
time: 0.075; rss: 166MB	name resolution
time: 0.058; rss: 199MB	lowering ast -> hir
time: 0.010; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 153MB	language item collection
time: 0.011; rss: 155MB	lifetime resolution
time: 0.000; rss: 155MB	looking for entry point
time: 0.000; rss: 155MB	looking for plugin registrar
time: 0.046; rss: 176MB	region resolution
time: 0.007; rss: 176MB	loop checking
time: 0.002; rss: 176MB	static item recursion checking
time: 0.381; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.021; rss: 181MB	stability checking
time: 0.056; rss: 189MB	type collecting
time: 0.004; rss: 189MB	variance inference
time: 0.006; rss: 193MB	impl wf inference
time: 0.026; rss: 197MB	coherence checking
time: 0.088; rss: 199MB	wf checking
time: 0.195; rss: 208MB	item-types checking
time: 3.561; rss: 266MB	item-bodies checking
time: 0.000; rss: 266MB	drop-impl checking
time: 0.220; rss: 276MB	const checking
time: 0.059; rss: 277MB	privacy checking
time: 0.021; rss: 283MB	intrinsic checking
time: 0.016; rss: 283MB	effect checking
time: 0.049; rss: 283MB	match checking
time: 0.046; rss: 290MB	liveness checking
time: 0.177; rss: 292MB	rvalue checking
time: 0.370; rss: 481MB	MIR dump
  time: 0.057; rss: 483MB	SimplifyCfg
  time: 0.076; rss: 483MB	QualifyAndPromoteConstants
  time: 0.121; rss: 500MB	TypeckMir
  time: 0.005; rss: 500MB	SimplifyBranches
  time: 0.033; rss: 500MB	SimplifyCfg
time: 0.292; rss: 500MB	MIR cleanup and validation
time: 0.478; rss: 500MB	borrow checking
time: 0.024; rss: 500MB	reachability checking
time: 0.038; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.182; rss: 500MB	lint checking
time: 0.000; rss: 500MB	resolving dependency formats
  time: 0.004; rss: 500MB	NoLandingPads
  time: 0.027; rss: 500MB	SimplifyCfg
  time: 0.064; rss: 509MB	EraseRegions
  time: 0.011; rss: 509MB	AddCallGuards
  time: 0.271; rss: 531MB	ElaborateDrops
  time: 0.004; rss: 531MB	NoLandingPads
  time: 0.054; rss: 529MB	SimplifyCfg
  time: 0.029; rss: 528MB	InstCombine
  time: 0.012; rss: 528MB	Deaggregator
  time: 0.003; rss: 528MB	CopyPropagation
  time: 0.035; rss: 528MB	SimplifyLocals
  time: 0.010; rss: 528MB	AddCallGuards
  time: 0.003; rss: 528MB	PreTrans
time: 0.527; rss: 528MB	MIR optimisations
  time: 0.064; rss: 536MB	write metadata
  time: 0.400; rss: 551MB	translation item collection
  time: 0.071; rss: 554MB	codegen unit partitioning
  time: 0.048; rss: 1456MB	internalize symbols
time: 11.691; rss: 1456MB	translation
time: 0.000; rss: 1456MB	assert dep graph
time: 1.364; rss: 1484MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.001; rss: 1201MB	llvm function passes [1]
time: 0.000; rss: 1201MB	llvm module passes [1]
time: 0.001; rss: 1207MB	llvm function passes [0]
time: 0.000; rss: 1207MB	llvm module passes [0]
time: 0.001; rss: 1209MB	llvm function passes [5]
time: 0.000; rss: 1209MB	llvm module passes [5]
time: 0.004; rss: 1218MB	llvm function passes [2]
time: 0.004; rss: 1218MB	llvm function passes [6]
time: 0.000; rss: 1218MB	llvm module passes [2]
time: 0.001; rss: 1218MB	llvm function passes [9]
time: 0.000; rss: 1218MB	llvm module passes [9]
time: 0.006; rss: 1218MB	codegen passes [1]
time: 0.004; rss: 1218MB	llvm module passes [6]
time: 0.009; rss: 1218MB	llvm function passes [4]
time: 0.006; rss: 1218MB	llvm module passes [4]
time: 0.020; rss: 1218MB	llvm function passes [3]
time: 0.021; rss: 1218MB	codegen passes [0]
time: 0.007; rss: 1222MB	llvm module passes [3]
time: 0.023; rss: 1222MB	llvm function passes [1]
time: 0.009; rss: 1224MB	llvm module passes [1]
time: 0.033; rss: 1224MB	codegen passes [2]
time: 0.022; rss: 1224MB	llvm function passes [0]
time: 0.008; rss: 1231MB	llvm module passes [0]
time: 0.045; rss: 1231MB	codegen passes [9]
time: 0.019; rss: 1244MB	llvm function passes [11]
time: 0.074; rss: 1244MB	codegen passes [5]
time: 0.000; rss: 1244MB	llvm function passes [5]
time: 0.000; rss: 1244MB	llvm module passes [5]
time: 0.001; rss: 1244MB	codegen passes [5]
time: 0.003; rss: 1246MB	llvm function passes [5]
time: 0.001; rss: 1246MB	llvm module passes [5]
time: 0.007; rss: 1246MB	llvm module passes [11]
time: 0.065; rss: 1254MB	llvm function passes [12]
time: 0.058; rss: 1271MB	llvm function passes [9]
time: 0.101; rss: 1273MB	codegen passes [6]
time: 0.000; rss: 1273MB	llvm function passes [6]
time: 0.000; rss: 1273MB	llvm module passes [6]
time: 0.004; rss: 1277MB	codegen passes [6]
time: 0.010; rss: 1277MB	llvm module passes [9]
time: 0.000; rss: 1288MB	llvm function passes [28]
time: 0.000; rss: 1288MB	llvm module passes [28]
time: 0.001; rss: 1288MB	codegen passes [28]
time: 0.046; rss: 1292MB	codegen passes [5]
time: 0.138; rss: 1292MB	llvm function passes [7]
time: 0.040; rss: 1292MB	llvm function passes [25]
time: 0.000; rss: 1292MB	llvm module passes [25]
time: 0.038; rss: 1296MB	llvm function passes [19]
time: 0.000; rss: 1296MB	llvm module passes [19]
time: 0.059; rss: 1296MB	llvm function passes [23]
time: 0.016; rss: 1301MB	llvm module passes [23]
time: 0.081; rss: 1301MB	llvm module passes [12]
time: 0.049; rss: 1301MB	llvm function passes [21]
time: 0.041; rss: 1312MB	codegen passes [19]
time: 0.046; rss: 1312MB	codegen passes [25]
time: 0.057; rss: 1318MB	llvm module passes [7]
time: 0.011; rss: 1319MB	llvm function passes [19]
time: 0.004; rss: 1319MB	llvm module passes [19]
time: 0.202; rss: 1319MB	llvm function passes [10]
time: 0.034; rss: 1319MB	llvm module passes [21]
time: 0.109; rss: 1363MB	llvm function passes [27]
time: 0.063; rss: 1363MB	llvm function passes [31]
time: 0.022; rss: 1369MB	llvm module passes [27]
time: 0.023; rss: 1369MB	llvm module passes [31]
time: 0.126; rss: 1367MB	llvm function passes [30]
time: 0.090; rss: 1369MB	llvm function passes [18]
time: 0.158; rss: 1377MB	llvm function passes [22]
time: 0.205; rss: 1377MB	llvm function passes [26]
time: 0.012; rss: 1377MB	llvm module passes [18]
time: 0.180; rss: 1381MB	llvm function passes [29]
time: 0.038; rss: 1381MB	llvm module passes [30]
time: 0.085; rss: 1386MB	llvm function passes [17]
time: 0.002; rss: 1385MB	llvm module passes [17]
time: 0.000; rss: 1384MB	codegen passes [38]
time: 0.071; rss: 1388MB	llvm module passes [22]
time: 0.055; rss: 1388MB	llvm module passes [29]
time: 0.234; rss: 1388MB	llvm function passes [20]
time: 0.257; rss: 1388MB	llvm function passes [28]
time: 0.022; rss: 1389MB	llvm function passes [39]
time: 0.192; rss: 1389MB	llvm module passes [10]
time: 0.034; rss: 1389MB	llvm function passes [37]
time: 0.095; rss: 1381MB	codegen passes [17]
time: 0.131; rss: 1383MB	llvm module passes [26]
time: 0.039; rss: 1383MB	llvm module passes [39]
time: 0.043; rss: 1383MB	llvm module passes [37]
time: 0.075; rss: 1383MB	llvm module passes [20]
time: 0.071; rss: 1385MB	llvm module passes [28]
time: 0.263; rss: 1396MB	llvm function passes [15]
time: 0.017; rss: 1397MB	llvm module passes [15]
time: 0.059; rss: 1397MB	llvm function passes [36]
time: 0.390; rss: 1400MB	llvm function passes [6]
time: 0.013; rss: 1400MB	llvm module passes [36]
time: 0.281; rss: 1401MB	llvm function passes [16]
time: 0.217; rss: 1405MB	llvm function passes [35]
time: 0.362; rss: 1409MB	llvm function passes [32]
time: 0.058; rss: 1409MB	llvm module passes [16]
time: 0.039; rss: 1408MB	llvm module passes [35]
time: 0.424; rss: 1405MB	llvm function passes [25]
time: 0.490; rss: 1408MB	llvm function passes [5]
time: 0.087; rss: 1405MB	llvm module passes [32]
time: 0.626; rss: 1405MB	llvm function passes [2]
time: 0.162; rss: 1405MB	llvm module passes [6]
time: 0.345; rss: 1410MB	llvm function passes [34]
time: 0.269; rss: 1415MB	llvm function passes [13]
time: 0.214; rss: 1419MB	codegen passes [39]
time: 0.619; rss: 1422MB	codegen passes [4]
time: 0.372; rss: 1420MB	llvm function passes [33]
time: 0.125; rss: 1407MB	llvm module passes [25]
time: 0.029; rss: 1407MB	llvm module passes [33]
time: 0.673; rss: 1410MB	llvm function passes [24]
time: 0.109; rss: 1413MB	llvm module passes [2]
time: 0.198; rss: 1418MB	llvm module passes [5]
time: 0.190; rss: 1428MB	llvm module passes [13]
time: 0.595; rss: 1448MB	llvm function passes [8]
time: 0.251; rss: 1440MB	llvm module passes [34]
time: 0.282; rss: 1441MB	codegen passes [37]
time: 0.732; rss: 1441MB	codegen passes [19]
time: 0.201; rss: 1447MB	llvm module passes [8]
time: 0.766; rss: 1448MB	codegen passes [3]
time: 0.606; rss: 1479MB	llvm module passes [24]
time: 1.061; rss: 1481MB	codegen passes [0]
time: 0.848; rss: 1475MB	codegen passes [36]
time: 1.450; rss: 1476MB	codegen passes [11]
time: 1.398; rss: 1485MB	codegen passes [9]
time: 1.484; rss: 1439MB	codegen passes [31]
time: 1.693; rss: 1452MB	codegen passes [18]
time: 1.930; rss: 1446MB	codegen passes [1]
time: 1.217; rss: 1460MB	codegen passes [13]
time: 1.853; rss: 1457MB	codegen passes [21]
time: 1.717; rss: 1446MB	codegen passes [15]
time: 1.859; rss: 1458MB	codegen passes [5]
time: 2.069; rss: 1450MB	codegen passes [27]
time: 2.455; rss: 1483MB	codegen passes [23]
time: 2.322; rss: 1493MB	codegen passes [35]
time: 2.408; rss: 1548MB	codegen passes [33]
time: 2.933; rss: 1566MB	codegen passes [30]
time: 3.004; rss: 1582MB	codegen passes [22]
time: 3.148; rss: 1591MB	codegen passes [12]
time: 2.951; rss: 1589MB	codegen passes [6]
time: 3.288; rss: 1663MB	codegen passes [16]
time: 3.396; rss: 1633MB	codegen passes [26]
time: 3.572; rss: 1636MB	codegen passes [29]
time: 4.132; rss: 1648MB	codegen passes [28]
time: 4.044; rss: 1598MB	codegen passes [7]
time: 4.001; rss: 1615MB	codegen passes [34]
time: 4.243; rss: 1626MB	codegen passes [20]
time: 4.340; rss: 1566MB	codegen passes [32]
time: 4.482; rss: 1539MB	codegen passes [8]
time: 4.814; rss: 1536MB	codegen passes [2]
time: 4.922; rss: 1470MB	codegen passes [10]
time: 5.100; rss: 1431MB	codegen passes [25]
time: 4.849; rss: 1340MB	codegen passes [24]
time: 7.328; rss: 1338MB	LLVM passes
time: 0.000; rss: 1338MB	serialize work products
time: 1.072; rss: 300MB	linking
done
