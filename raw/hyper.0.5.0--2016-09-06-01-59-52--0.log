commit 1d04201565790e17890f300c2bedeab6b895c313
Merge: e1d0de8 b56d61c
Author: bors <bors@rust-lang.org>
Date:   Mon Sep 5 22:32:36 2016 -0700

    Auto merge of #36078 - ollie27:rustdoc_search_assocconst, r=alexcrichton
    
    rustdoc: Fix associated consts in search results
    
    Associated consts can appear in none trait impls so need to be treated
    like methods when generating the search index.
    
    Fixes #36031
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling rustc-serialize v0.3.19
   Compiling bitflags v0.3.3
   Compiling typeable v0.1.2
   Compiling winapi v0.2.8
   Compiling lazy_static v0.1.16
   Compiling httparse v0.1.6
   Compiling traitobject v0.0.1
   Compiling libc v0.2.15
   Compiling unicase v0.1.0
   Compiling winapi-build v0.1.1
   Compiling matches v0.1.2
   Compiling libc v0.1.12
   Compiling gcc v0.3.35
   Compiling log v0.3.6
   Compiling kernel32-sys v0.2.2
   Compiling pkg-config v0.3.8
   Compiling mime v0.0.11
   Compiling rand v0.3.14
   Compiling time v0.1.35
   Compiling num_cpus v0.2.13
   Compiling openssl-sys v0.6.7
   Compiling openssl v0.6.7
   Compiling uuid v0.1.18
   Compiling url v0.2.38
   Compiling cookie v0.1.21
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.028; rss: 51MB	parsing
Lines of code:             9154
Pre-expansion node count:  44873
time: 0.003; rss: 51MB	configuration
time: 0.000; rss: 51MB	recursion limit
time: 0.000; rss: 51MB	crate injection
time: 0.000; rss: 51MB	plugin loading
time: 0.000; rss: 51MB	plugin registration
time: 0.091; rss: 78MB	expansion
time: 0.000; rss: 78MB	maybe building test harness
time: 0.001; rss: 78MB	maybe creating a macro crate
time: 0.005; rss: 78MB	assigning node ids
Post-expansion node count: 101537
time: 0.000; rss: 78MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 78MB	complete gated feature checking
time: 0.003; rss: 81MB	collecting defs
time: 0.009; rss: 87MB	external crate/lib resolution
time: 0.003; rss: 87MB	early lint checks
time: 0.001; rss: 87MB	AST validation
time: 0.015; rss: 95MB	name resolution
time: 0.008; rss: 99MB	lowering ast -> hir
time: 0.002; rss: 101MB	indexing hir
time: 0.001; rss: 101MB	attribute checking
time: 0.001; rss: 94MB	language item collection
time: 0.002; rss: 94MB	lifetime resolution
time: 0.000; rss: 94MB	looking for entry point
time: 0.000; rss: 94MB	looking for plugin registrar
time: 0.006; rss: 99MB	region resolution
time: 0.001; rss: 99MB	loop checking
time: 0.001; rss: 99MB	static item recursion checking
time: 0.013; rss: 99MB	compute_incremental_hashes_map
time: 0.000; rss: 99MB	load_dep_graph
time: 0.023; rss: 99MB	type collecting
time: 0.000; rss: 99MB	variance inference
time: 0.035; rss: 104MB	coherence checking
time: 0.056; rss: 105MB	wf checking
time: 0.029; rss: 105MB	item-types checking
time: 0.362; rss: 118MB	item-bodies checking
time: 0.000; rss: 118MB	drop-impl checking
time: 0.038; rss: 120MB	const checking
time: 0.006; rss: 120MB	privacy checking
time: 0.001; rss: 120MB	stability index
time: 0.005; rss: 120MB	intrinsic checking
time: 0.002; rss: 120MB	effect checking
time: 0.013; rss: 120MB	match checking
time: 0.004; rss: 120MB	liveness checking
time: 0.028; rss: 120MB	rvalue checking
time: 0.055; rss: 136MB	MIR dump
time: 0.041; rss: 136MB	MIR passes
time: 0.062; rss: 137MB	borrow checking
time: 0.003; rss: 137MB	reachability checking
time: 0.005; rss: 137MB	death checking
time: 0.005; rss: 139MB	stability checking
time: 0.000; rss: 139MB	unused lib feature checking
time: 0.042; rss: 139MB	lint checking
time: 0.000; rss: 139MB	resolving dependency formats
time: 0.078; rss: 141MB	Prepare MIR codegen passes
  time: 0.055; rss: 146MB	write metadata
  time: 0.113; rss: 150MB	translation item collection
  time: 0.018; rss: 152MB	codegen unit partitioning
  time: 0.031; rss: 219MB	internalize symbols
time: 1.330; rss: 208MB	translation
time: 0.000; rss: 208MB	assert dep graph
time: 0.000; rss: 208MB	serialize dep graph
  time: 0.100; rss: 161MB	llvm function passes [0]
  time: 0.048; rss: 163MB	llvm module passes [0]
  time: 1.832; rss: 164MB	codegen passes [0]
  time: 0.001; rss: 165MB	codegen passes [0]
time: 2.145; rss: 165MB	LLVM passes
time: 0.000; rss: 165MB	serialize work products
time: 0.155; rss: 99MB	linking
done
