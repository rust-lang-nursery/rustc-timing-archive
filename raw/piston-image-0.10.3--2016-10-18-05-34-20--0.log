commit 753ea76336be2def223335c63d7b20188651a8c6
Merge: 3543a0f 6a4bb35
Author: bors <bors@rust-lang.org>
Date:   Tue Oct 18 01:49:13 2016 -0700

    Auto merge of #37083 - nnethercote:uleb128, r=eddyb
    
    Inline read_{un,}signed_leb128 and opaque::Decoder functions.
    
    `read_unsigned_leb128` is hot within rustc because it's heavily used
    during the reading of crate metadata. This commit tweaks its signature
    (and that of `read_signed_leb128`, for consistency) so it can increment
    the buffer index directly instead of maintaining its own copy, the
    change in which is then used by the caller to advance the index.
    
    This reduces the instruction count (as measured by Cachegrind) for some
    benchmarks a bit, e.g. hyper-0.5.0 by 0.7%.
rustc: ./piston-image-0.10.3
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling num-traits v0.1.35
   Compiling bitflags v0.7.0
   Compiling libc v0.2.16
   Compiling gcc v0.3.35
   Compiling lzw v0.10.0
   Compiling scoped_threadpool v0.1.7
   Compiling glob v0.2.11
   Compiling rustc-serialize v0.3.19
   Compiling byteorder v0.5.3
   Compiling inflate v0.1.1
   Compiling color_quant v1.0.0
   Compiling num_cpus v0.2.13
   Compiling rand v0.3.14
   Compiling num-integer v0.1.32
   Compiling gif v0.9.0
   Compiling num-iter v0.1.32
   Compiling num v0.1.35
   Compiling miniz-sys v0.1.7
   Compiling enum_primitive v0.1.0
   Compiling flate2 v0.2.14
   Compiling deque v0.3.1
   Compiling rayon v0.4.2
   Compiling jpeg-decoder v0.1.6
   Compiling num-bigint v0.1.35
   Compiling png v0.5.2
   Compiling num-rational v0.1.35
   Compiling image v0.10.3 (file:///root/benchmarks/piston-image-0.10.3)
time: 0.044; rss: 57MB	parsing
Lines of code:             12000
Pre-expansion node count:  90272
time: 0.000; rss: 57MB	recursion limit
time: 0.000; rss: 57MB	crate injection
time: 0.000; rss: 57MB	plugin loading
time: 0.000; rss: 57MB	plugin registration
time: 0.075; rss: 95MB	expansion
time: 0.000; rss: 95MB	maybe building test harness
time: 0.001; rss: 95MB	maybe creating a macro crate
Post-expansion node count: 148999
time: 0.000; rss: 95MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 95MB	complete gated feature checking
time: 0.005; rss: 95MB	early lint checks
time: 0.001; rss: 95MB	AST validation
time: 0.020; rss: 99MB	name resolution
time: 0.013; rss: 109MB	lowering ast -> hir
time: 0.003; rss: 114MB	indexing hir
time: 0.002; rss: 114MB	attribute checking
time: 0.002; rss: 103MB	language item collection
time: 0.003; rss: 103MB	lifetime resolution
time: 0.000; rss: 103MB	looking for entry point
time: 0.000; rss: 103MB	looking for plugin registrar
time: 0.010; rss: 109MB	region resolution
time: 0.002; rss: 109MB	loop checking
time: 0.001; rss: 109MB	static item recursion checking
time: 0.054; rss: 109MB	compute_incremental_hashes_map
time: 0.000; rss: 109MB	load_dep_graph
time: 0.016; rss: 109MB	type collecting
time: 0.000; rss: 109MB	variance inference
time: 0.026; rss: 113MB	coherence checking
time: 0.092; rss: 114MB	wf checking
time: 0.147; rss: 119MB	item-types checking
time: 0.901; rss: 134MB	item-bodies checking
time: 0.000; rss: 134MB	drop-impl checking
time: 0.056; rss: 134MB	const checking
time: 0.011; rss: 134MB	privacy checking
time: 0.001; rss: 134MB	stability index
time: 0.008; rss: 134MB	intrinsic checking
time: 0.003; rss: 134MB	effect checking
time: 0.017; rss: 134MB	match checking
time: 0.011; rss: 134MB	liveness checking
time: 0.048; rss: 134MB	rvalue checking
time: 0.097; rss: 177MB	MIR dump
  time: 0.012; rss: 177MB	SimplifyCfg
  time: 0.022; rss: 177MB	QualifyAndPromoteConstants
  time: 0.024; rss: 177MB	TypeckMir
  time: 0.001; rss: 177MB	SimplifyBranches
  time: 0.005; rss: 177MB	SimplifyCfg
time: 0.064; rss: 177MB	MIR passes
time: 0.120; rss: 178MB	borrow checking
time: 0.004; rss: 178MB	reachability checking
time: 0.008; rss: 178MB	death checking
time: 0.010; rss: 180MB	stability checking
time: 0.000; rss: 180MB	unused lib feature checking
time: 0.072; rss: 180MB	lint checking
time: 0.000; rss: 180MB	resolving dependency formats
  time: 0.001; rss: 180MB	NoLandingPads
  time: 0.005; rss: 180MB	SimplifyCfg
  time: 0.012; rss: 180MB	EraseRegions
  time: 0.002; rss: 180MB	AddCallGuards
  time: 0.045; rss: 184MB	ElaborateDrops
  time: 0.001; rss: 184MB	NoLandingPads
  time: 0.009; rss: 184MB	SimplifyCfg
  time: 0.006; rss: 184MB	InstCombine
  time: 0.002; rss: 184MB	Deaggregator
  time: 0.000; rss: 184MB	CopyPropagation
  time: 0.001; rss: 184MB	AddCallGuards
  time: 0.000; rss: 184MB	PreTrans
time: 0.085; rss: 184MB	Prepare MIR codegen passes
  time: 0.073; rss: 186MB	write metadata
  time: 0.443; rss: 198MB	translation item collection
  time: 0.025; rss: 203MB	codegen unit partitioning
  time: 0.021; rss: 321MB	internalize symbols
time: 2.822; rss: 294MB	translation
time: 0.000; rss: 294MB	assert dep graph
time: 0.000; rss: 294MB	serialize dep graph
  time: 0.205; rss: 219MB	llvm function passes [0]
  time: 0.079; rss: 224MB	llvm module passes [0]
  time: 4.074; rss: 227MB	codegen passes [0]
  time: 0.001; rss: 228MB	codegen passes [0]
time: 4.658; rss: 228MB	LLVM passes
time: 0.000; rss: 228MB	serialize work products
time: 0.256; rss: 100MB	linking
done
