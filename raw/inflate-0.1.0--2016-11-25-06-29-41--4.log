commit c78cc52afd99ec0b3dd7f83cd257f0be767a508a
Merge: 2e7176f 4d0618e
Author: bors <bors@rust-lang.org>
Date:   Fri Nov 25 00:22:49 2016 -0600

    Auto merge of #37979 - nnethercote:Ty-super_fold_with, r=eddyb
    
    Avoid more unnecessary mk_ty calls in Ty::super_fold_with.
    
    This speeds up several rustc-benchmarks by 1--5%.
    
    This PR is the lovechild of #37108 and #37705.
    ```
    futures-rs-test  4.059s vs  4.011s --> 1.012x faster (variance: 1.016x, 1.026x)
    helloworld       0.236s vs  0.239s --> 0.986x faster (variance: 1.051x, 1.014x)
    html5ever-2016-  3.831s vs  3.824s --> 1.002x faster (variance: 1.020x, 1.019x)
    hyper.0.5.0      4.928s vs  4.936s --> 0.998x faster (variance: 1.003x, 1.012x)
    inflate-0.1.0    4.135s vs  4.104s --> 1.007x faster (variance: 1.026x, 1.028x)
    issue-32062-equ  0.309s vs  0.303s --> 1.017x faster (variance: 1.019x, 1.084x)
    issue-32278-big  1.818s vs  1.797s --> 1.011x faster (variance: 1.011x, 1.008x)
    jld-day15-parse  1.304s vs  1.271s --> 1.026x faster (variance: 1.018x, 1.012x)
    piston-image-0. 10.938s vs 10.921s --> 1.002x faster (variance: 1.025x, 1.016x)
    reddit-stress    2.327s vs  2.208s --> 1.054x faster (variance: 1.016x, 1.006x)
    regex-0.1.80     8.796s vs  8.727s --> 1.008x faster (variance: 1.012x, 1.019x)
    regex.0.1.30     2.294s vs  2.249s --> 1.020x faster (variance: 1.013x, 1.026x)
    rust-encoding-0  1.914s vs  1.886s --> 1.015x faster (variance: 1.027x, 1.026x)
    ```
rustc: ./inflate-0.1.0
cargo rustc  -- -Ztime-passes -Zinput-stats
   Compiling inflate v0.1.0 (file:///root/benchmarks/inflate-0.1.0)
time: 0.003; rss: 43MB	parsing
Lines of code:             956
Pre-expansion node count:  4736
time: 0.000; rss: 43MB	recursion limit
time: 0.000; rss: 43MB	crate injection
time: 0.000; rss: 43MB	plugin loading
time: 0.000; rss: 43MB	plugin registration
time: 0.058; rss: 73MB	expansion
time: 0.000; rss: 73MB	maybe building test harness
time: 0.000; rss: 73MB	maybe creating a macro crate
Post-expansion node count: 55748
time: 0.000; rss: 73MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 73MB	complete gated feature checking
time: 0.002; rss: 73MB	early lint checks
time: 0.000; rss: 73MB	AST validation
time: 0.008; rss: 75MB	name resolution
time: 0.004; rss: 77MB	lowering ast -> hir
time: 0.001; rss: 77MB	indexing hir
time: 0.000; rss: 77MB	attribute checking
time: 0.000; rss: 74MB	language item collection
time: 0.000; rss: 74MB	lifetime resolution
time: 0.000; rss: 74MB	looking for entry point
time: 0.000; rss: 74MB	looking for plugin registrar
time: 0.003; rss: 75MB	region resolution
time: 0.000; rss: 75MB	loop checking
time: 0.000; rss: 75MB	static item recursion checking
time: 0.018; rss: 75MB	compute_incremental_hashes_map
time: 0.000; rss: 75MB	load_dep_graph
time: 0.002; rss: 77MB	type collecting
time: 0.000; rss: 77MB	variance inference
time: 0.000; rss: 77MB	impl wf inference
time: 0.006; rss: 80MB	coherence checking
time: 0.001; rss: 80MB	wf checking
time: 0.001; rss: 81MB	item-types checking
time: 1.604; rss: 86MB	item-bodies checking
time: 0.000; rss: 86MB	drop-impl checking
time: 0.014; rss: 87MB	const checking
time: 0.001; rss: 87MB	privacy checking
time: 0.000; rss: 87MB	stability index
time: 0.000; rss: 87MB	intrinsic checking
time: 0.000; rss: 87MB	effect checking
time: 0.002; rss: 87MB	match checking
time: 0.065; rss: 86MB	liveness checking
time: 0.011; rss: 85MB	rvalue checking
time: 0.036; rss: 104MB	MIR dump
  time: 0.007; rss: 105MB	SimplifyCfg
  time: 0.005; rss: 105MB	QualifyAndPromoteConstants
  time: 0.007; rss: 105MB	TypeckMir
  time: 0.000; rss: 105MB	SimplifyBranches
  time: 0.002; rss: 105MB	SimplifyCfg
time: 0.021; rss: 105MB	MIR cleanup and validation
time: 0.211; rss: 107MB	borrow checking
time: 0.000; rss: 107MB	reachability checking
time: 0.003; rss: 107MB	death checking
time: 0.001; rss: 107MB	stability checking
time: 0.000; rss: 107MB	unused lib feature checking
time: 0.016; rss: 108MB	lint checking
time: 0.000; rss: 108MB	resolving dependency formats
  time: 0.000; rss: 108MB	NoLandingPads
  time: 0.002; rss: 108MB	SimplifyCfg
  time: 0.002; rss: 108MB	EraseRegions
  time: 0.001; rss: 108MB	AddCallGuards
  time: 0.223; rss: 111MB	ElaborateDrops
  time: 0.000; rss: 111MB	NoLandingPads
  time: 0.006; rss: 110MB	SimplifyCfg
  time: 0.003; rss: 110MB	InstCombine
  time: 0.000; rss: 110MB	Deaggregator
  time: 0.000; rss: 110MB	CopyPropagation
  time: 0.003; rss: 110MB	SimplifyLocals
  time: 0.001; rss: 110MB	AddCallGuards
  time: 0.000; rss: 110MB	PreTrans
time: 0.241; rss: 110MB	MIR optimisations
  time: 0.001; rss: 110MB	write metadata
  time: 0.008; rss: 110MB	translation item collection
  time: 0.001; rss: 110MB	codegen unit partitioning
  time: 0.001; rss: 123MB	internalize symbols
time: 0.145; rss: 123MB	translation
time: 0.000; rss: 123MB	assert dep graph
time: 0.000; rss: 123MB	serialize dep graph
  time: 0.026; rss: 92MB	llvm function passes [0]
  time: 0.005; rss: 93MB	llvm module passes [0]
  time: 0.657; rss: 97MB	codegen passes [0]
  time: 0.000; rss: 97MB	codegen passes [0]
time: 0.722; rss: 97MB	LLVM passes
time: 0.000; rss: 97MB	serialize work products
time: 0.019; rss: 83MB	linking
done
