commit ebc037390964ba19e2094caf2b448f475888c43f
Merge: c78cc52 7304001
Author: bors <bors@rust-lang.org>
Date:   Fri Nov 25 09:01:33 2016 -0600

    Auto merge of #37982 - rkruppe:llvm-diagnostic-fwdcompat, r=alexcrichton
    
    [LLVM 4.0] OptimizationDiagnostic FFI forward compatibility
    
    - getMsg() changed to return std::string by-value. Fix: copy the data to a rust String during unpacking.
    - getPassName() changed to return StringRef
    
    cc #37609
rustc: ./syntex-0.42.2-incr-clean
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
   Compiling syntex_syntax v0.42.0
time: 0.091; rss: 71MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 71MB	recursion limit
time: 0.000; rss: 71MB	crate injection
time: 0.000; rss: 71MB	plugin loading
time: 0.000; rss: 71MB	plugin registration
time: 0.238; rss: 144MB	expansion
time: 0.000; rss: 144MB	maybe building test harness
time: 0.006; rss: 144MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 144MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 144MB	complete gated feature checking
time: 0.022; rss: 144MB	early lint checks
time: 0.007; rss: 144MB	AST validation
time: 0.075; rss: 159MB	name resolution
time: 0.044; rss: 184MB	lowering ast -> hir
time: 0.008; rss: 194MB	indexing hir
time: 0.006; rss: 194MB	attribute checking
time: 0.004; rss: 150MB	language item collection
time: 0.010; rss: 150MB	lifetime resolution
time: 0.000; rss: 150MB	looking for entry point
time: 0.000; rss: 150MB	looking for plugin registrar
time: 0.041; rss: 170MB	region resolution
time: 0.005; rss: 170MB	loop checking
time: 0.004; rss: 170MB	static item recursion checking
time: 0.327; rss: 171MB	compute_incremental_hashes_map
time: 0.000; rss: 171MB	load_dep_graph
time: 0.045; rss: 175MB	type collecting
time: 0.001; rss: 175MB	variance inference
time: 0.002; rss: 175MB	impl wf inference
time: 0.017; rss: 177MB	coherence checking
time: 0.085; rss: 179MB	wf checking
time: 0.176; rss: 182MB	item-types checking
time: 6.085; rss: 232MB	item-bodies checking
time: 0.000; rss: 232MB	drop-impl checking
time: 0.211; rss: 253MB	const checking
time: 0.047; rss: 254MB	privacy checking
time: 0.006; rss: 254MB	stability index
time: 0.017; rss: 254MB	intrinsic checking
time: 0.014; rss: 254MB	effect checking
time: 0.045; rss: 254MB	match checking
time: 0.048; rss: 254MB	liveness checking
time: 0.173; rss: 254MB	rvalue checking
time: 0.355; rss: 437MB	MIR dump
  time: 0.056; rss: 438MB	SimplifyCfg
  time: 0.072; rss: 438MB	QualifyAndPromoteConstants
  time: 0.103; rss: 438MB	TypeckMir
  time: 0.004; rss: 438MB	SimplifyBranches
  time: 0.030; rss: 438MB	SimplifyCfg
time: 0.266; rss: 438MB	MIR cleanup and validation
time: 0.536; rss: 438MB	borrow checking
time: 0.019; rss: 438MB	reachability checking
time: 0.038; rss: 438MB	death checking
time: 0.030; rss: 441MB	stability checking
time: 0.000; rss: 441MB	unused lib feature checking
time: 0.192; rss: 441MB	lint checking
time: 0.000; rss: 441MB	resolving dependency formats
  time: 0.003; rss: 441MB	NoLandingPads
  time: 0.026; rss: 441MB	SimplifyCfg
  time: 0.061; rss: 449MB	EraseRegions
  time: 0.011; rss: 449MB	AddCallGuards
  time: 0.265; rss: 463MB	ElaborateDrops
  time: 0.003; rss: 463MB	NoLandingPads
  time: 0.052; rss: 463MB	SimplifyCfg
  time: 0.028; rss: 463MB	InstCombine
  time: 0.012; rss: 463MB	Deaggregator
  time: 0.002; rss: 463MB	CopyPropagation
  time: 0.033; rss: 463MB	SimplifyLocals
  time: 0.009; rss: 463MB	AddCallGuards
  time: 0.002; rss: 463MB	PreTrans
time: 0.508; rss: 463MB	MIR optimisations
  time: 0.061; rss: 474MB	write metadata
  time: 0.364; rss: 486MB	translation item collection
  time: 0.057; rss: 499MB	codegen unit partitioning
  time: 0.040; rss: 739MB	internalize symbols
time: 4.286; rss: 739MB	translation
time: 0.000; rss: 739MB	assert dep graph
time: 0.000; rss: 739MB	serialize dep graph
incremental: re-using 0 out of 1 modules
  time: 0.521; rss: 427MB	llvm function passes [0]
  time: 0.278; rss: 434MB	llvm module passes [0]
  time: 10.290; rss: 427MB	codegen passes [0]
  time: 0.000; rss: 427MB	codegen passes [0]
time: 11.838; rss: 427MB	LLVM passes
time: 0.000; rss: 427MB	serialize work products
time: 0.335; rss: 116MB	linking
done
