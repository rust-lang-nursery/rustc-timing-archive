commit 63760acf31e605c8a91bb5cbcbcb4bfb95435e48
Merge: ed7c567 6ae8027
Author: bors <bors@rust-lang.org>
Date:   Sun Apr 17 19:11:20 2016 -0700

    Auto merge of #33064 - jseyfried:improve_resolve_performance, r=eddyb
    
    resolve: Improve performance
    
    This fixes #33061 by speeding up searchs through all traits in scope, a bottleneck in `resolve`.
    
    According to my measurements, this PR improves resolution performance by a factor of 3.4x on `librustc`, which almost completely reverses the 3.75x performance regression reported in #33061.
    
    r? @eddyb
rustc: ./jld-day15-parser
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling combine v1.3.0
   Compiling day15 v0.1.0 (file:///root/benchmarks/jld-day15-parser)
time: 0.001; rss: 37MB	parsing
Lines of code:             72
Pre-expansion node count:  673
time: 0.000; rss: 37MB	configuration 1
time: 0.000; rss: 37MB	recursion limit
time: 0.000; rss: 37MB	gated macro checking
time: 0.000; rss: 37MB	crate injection
time: 0.003; rss: 43MB	macro loading
time: 0.000; rss: 43MB	plugin loading
time: 0.000; rss: 43MB	plugin registration
time: 0.002; rss: 44MB	expansion
time: 0.000; rss: 44MB	complete gated feature checking 1
time: 0.000; rss: 44MB	configuration 2
time: 0.000; rss: 44MB	gated configuration checking
time: 0.000; rss: 44MB	maybe building test harness
time: 0.000; rss: 44MB	prelude injection
time: 0.000; rss: 44MB	checking that all macro invocations are gone
time: 0.000; rss: 44MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 44MB	complete gated feature checking 2
time: 0.000; rss: 44MB	const fn bodies and arguments
Post-expansion node count: 1176
time: 0.000; rss: 44MB	assigning node ids
time: 0.000; rss: 44MB	lowering ast -> hir
time: 0.000; rss: 44MB	indexing hir
time: 0.000; rss: 44MB	attribute checking
time: 0.000; rss: 44MB	early lint checks
time: 0.002; rss: 44MB	external crate/lib resolution
time: 0.000; rss: 44MB	language item collection
time: 0.001; rss: 53MB	resolution
time: 0.000; rss: 53MB	lifetime resolution
time: 0.000; rss: 53MB	looking for entry point
time: 0.000; rss: 53MB	looking for plugin registrar
time: 0.000; rss: 53MB	region resolution
time: 0.000; rss: 53MB	loop checking
time: 0.000; rss: 53MB	static item recursion checking
time: 0.000; rss: 53MB	load_dep_graph
time: 0.001; rss: 56MB	type collecting
time: 0.000; rss: 56MB	variance inference
time: 0.005; rss: 63MB	coherence checking
time: 0.009; rss: 68MB	wf checking
time: 0.000; rss: 68MB	item-types checking
time: 1.850; rss: 138MB	item-bodies checking
time: 0.000; rss: 138MB	drop-impl checking
time: 0.001; rss: 138MB	const checking
time: 0.000; rss: 138MB	privacy checking
time: 0.000; rss: 138MB	stability index
time: 0.000; rss: 138MB	intrinsic checking
time: 0.000; rss: 138MB	effect checking
time: 0.000; rss: 138MB	match checking
time: 0.000; rss: 138MB	liveness checking
time: 0.002; rss: 138MB	rvalue checking
time: 0.001; rss: 139MB	MIR dump
time: 0.000; rss: 139MB	MIR passes
time: 0.001; rss: 139MB	borrow checking
time: 0.000; rss: 139MB	reachability checking
time: 0.000; rss: 139MB	death checking
time: 0.000; rss: 139MB	stability checking
time: 0.000; rss: 139MB	unused lib feature checking
time: 0.004; rss: 140MB	lint checking
time: 0.001; rss: 141MB	resolving dependency formats
time: 0.000; rss: 141MB	Prepare MIR codegen passes
  time: 12.366; rss: 184MB	translation item collection
  time: 0.001; rss: 184MB	codegen unit partitioning
  time: 0.000; rss: 221MB	write metadata
time: 38.730; rss: 221MB	translation
time: 0.000; rss: 221MB	assert dep graph
time: 0.000; rss: 221MB	serialize dep graph
  time: 0.015; rss: 104MB	llvm function passes [0]
  time: 0.002; rss: 104MB	llvm module passes [0]
  time: 0.273; rss: 110MB	codegen passes [0]
  time: 0.000; rss: 103MB	codegen passes [0]
time: 0.298; rss: 103MB	LLVM passes
  time: 0.120; rss: 103MB	running linker
time: 0.121; rss: 103MB	linking
done
