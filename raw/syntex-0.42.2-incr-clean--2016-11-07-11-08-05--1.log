commit c9f16bbc419d1a945823d91419bbb1fc75bfbc79
Merge: 045a727 a28c01b
Author: bors <bors@rust-lang.org>
Date:   Mon Nov 7 04:14:00 2016 -0800

    Auto merge of #37624 - xen0n:remove-bogus-mipsel-arches, r=alexcrichton
    
    Remove mention of mipsel target_arch
    
    This is the only remaining instance in rustc. All others were in the libc repo, removed with rust-lang/libc#445.
    
    Actually there's more to clean in `libsyntax/abi.rs`, but let's save that for another commit...
rustc: ./syntex-0.42.2-incr-clean
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax -- -Ztime-passes -Zinput-stats -Z incremental-info
   Compiling syntex_syntax v0.42.0
time: 0.092; rss: 70MB	parsing
Lines of code:             33687
Pre-expansion node count:  224033
time: 0.000; rss: 70MB	recursion limit
time: 0.000; rss: 70MB	crate injection
time: 0.000; rss: 70MB	plugin loading
time: 0.000; rss: 70MB	plugin registration
time: 0.236; rss: 143MB	expansion
time: 0.000; rss: 143MB	maybe building test harness
time: 0.006; rss: 143MB	maybe creating a macro crate
Post-expansion node count: 641571
time: 0.000; rss: 143MB	checking for inline asm in case the target doesn't support it
time: 0.013; rss: 143MB	complete gated feature checking
time: 0.022; rss: 143MB	early lint checks
time: 0.007; rss: 143MB	AST validation
time: 0.084; rss: 158MB	name resolution
time: 0.044; rss: 183MB	lowering ast -> hir
time: 0.008; rss: 194MB	indexing hir
time: 0.006; rss: 194MB	attribute checking
time: 0.004; rss: 150MB	language item collection
time: 0.010; rss: 150MB	lifetime resolution
time: 0.000; rss: 150MB	looking for entry point
time: 0.000; rss: 150MB	looking for plugin registrar
time: 0.042; rss: 160MB	region resolution
time: 0.004; rss: 160MB	loop checking
time: 0.004; rss: 160MB	static item recursion checking
time: 0.328; rss: 162MB	compute_incremental_hashes_map
time: 0.000; rss: 162MB	load_dep_graph
time: 0.040; rss: 167MB	type collecting
time: 0.001; rss: 167MB	variance inference
time: 0.034; rss: 171MB	coherence checking
time: 0.099; rss: 175MB	wf checking
time: 0.196; rss: 180MB	item-types checking
time: 3.670; rss: 228MB	item-bodies checking
time: 0.000; rss: 228MB	drop-impl checking
time: 0.244; rss: 233MB	const checking
time: 0.046; rss: 233MB	privacy checking
time: 0.005; rss: 233MB	stability index
time: 0.019; rss: 233MB	intrinsic checking
time: 0.015; rss: 233MB	effect checking
time: 0.048; rss: 233MB	match checking
time: 0.051; rss: 227MB	liveness checking
time: 0.205; rss: 227MB	rvalue checking
time: 0.408; rss: 418MB	MIR dump
  time: 0.057; rss: 422MB	SimplifyCfg
  time: 0.075; rss: 422MB	QualifyAndPromoteConstants
  time: 0.107; rss: 422MB	TypeckMir
  time: 0.004; rss: 422MB	SimplifyBranches
  time: 0.032; rss: 422MB	SimplifyCfg
time: 0.275; rss: 422MB	MIR cleanup and validation
time: 0.545; rss: 423MB	borrow checking
time: 0.021; rss: 423MB	reachability checking
time: 0.040; rss: 423MB	death checking
time: 0.039; rss: 423MB	stability checking
time: 0.000; rss: 423MB	unused lib feature checking
time: 0.214; rss: 423MB	lint checking
time: 0.000; rss: 423MB	resolving dependency formats
  time: 0.003; rss: 423MB	NoLandingPads
  time: 0.027; rss: 423MB	SimplifyCfg
  time: 0.067; rss: 431MB	EraseRegions
  time: 0.011; rss: 431MB	AddCallGuards
  time: 0.284; rss: 451MB	ElaborateDrops
  time: 0.003; rss: 451MB	NoLandingPads
  time: 0.054; rss: 450MB	SimplifyCfg
  time: 0.030; rss: 450MB	InstCombine
  time: 0.013; rss: 450MB	Deaggregator
  time: 0.002; rss: 450MB	CopyPropagation
  time: 0.036; rss: 450MB	SimplifyLocals
  time: 0.010; rss: 450MB	AddCallGuards
  time: 0.003; rss: 450MB	PreTrans
time: 0.544; rss: 450MB	MIR optimisations
  time: 0.061; rss: 457MB	write metadata
  time: 0.432; rss: 468MB	translation item collection
  time: 0.057; rss: 477MB	codegen unit partitioning
  time: 0.047; rss: 726MB	internalize symbols
time: 4.893; rss: 726MB	translation
time: 0.000; rss: 726MB	assert dep graph
time: 0.000; rss: 726MB	serialize dep graph
incremental: re-using 0 out of 1 modules
  time: 0.532; rss: 416MB	llvm function passes [0]
  time: 0.252; rss: 424MB	llvm module passes [0]
  time: 10.536; rss: 421MB	codegen passes [0]
  time: 0.000; rss: 421MB	codegen passes [0]
time: 12.097; rss: 421MB	LLVM passes
time: 0.000; rss: 421MB	serialize work products
time: 0.355; rss: 104MB	linking
done
