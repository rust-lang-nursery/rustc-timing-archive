commit 57ef015132ec09345b88d2ec20a9d9809b5d3dfc
Merge: 1ccada6 eb67f49
Author: bors <bors@rust-lang.org>
Date:   Mon May 23 13:31:59 2016 -0700

    Auto merge of #33664 - huonw:abs_sub, r=alexcrichton
    
    Deprecate {f32,f64}::abs_sub.
    
    The abs_sub name is misleading: the function actually computes the
    positive difference (`fdim` in C), not the `(x - y).abs()` that *many* people expect
    from the name.
    
    This function can be replaced with just `(x - y).max(0.0)`, mirroring
    the `abs` version, but this behaves differently with NAN: `NAN.max(0.0)
    == 0.0`, while `NAN.positive_diff(0.0) == NAN`. People who absolutely
    need that behaviour can use the C function directly and/or talk to the libs
    team (we haven't encountered a concrete use-case for this functionality).
    
    Closes #30315.
rustc: ./regex.0.1.30
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling regex v0.1.30 (file:///root/benchmarks/regex.0.1.30)
time: 0.063; rss: 63MB	parsing
Lines of code:             8558
Pre-expansion node count:  58331
time: 0.011; rss: 63MB	configuration 1
time: 0.000; rss: 63MB	recursion limit
time: 0.000; rss: 63MB	crate injection
time: 0.019; rss: 94MB	macro loading
time: 0.000; rss: 94MB	plugin loading
time: 0.000; rss: 94MB	plugin registration
time: 0.057; rss: 98MB	expansion
time: 0.013; rss: 98MB	configuration 2
time: 0.000; rss: 98MB	gated configuration checking
time: 0.006; rss: 98MB	maybe building test harness
time: 0.006; rss: 98MB	prelude injection
time: 0.001; rss: 98MB	checking that all macro invocations are gone
time: 0.000; rss: 98MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 98MB	complete gated feature checking
Post-expansion node count: 68487
time: 0.006; rss: 98MB	assigning node ids
time: 0.001; rss: 98MB	collecting defs
time: 0.001; rss: 98MB	external crate/lib resolution
time: 0.006; rss: 98MB	early lint checks
time: 0.008; rss: 100MB	name resolution
time: 0.009; rss: 110MB	lowering ast -> hir
time: 0.001; rss: 110MB	indexing hir
time: 0.001; rss: 110MB	attribute checking
time: 0.001; rss: 103MB	language item collection
time: 0.001; rss: 103MB	lifetime resolution
time: 0.000; rss: 103MB	looking for entry point
time: 0.000; rss: 103MB	looking for plugin registrar
time: 0.005; rss: 107MB	region resolution
time: 0.001; rss: 107MB	loop checking
time: 0.001; rss: 107MB	static item recursion checking
time: 0.000; rss: 107MB	load_dep_graph
time: 0.007; rss: 110MB	type collecting
time: 0.000; rss: 110MB	variance inference
time: 0.025; rss: 115MB	coherence checking
time: 0.013; rss: 116MB	wf checking
time: 0.329; rss: 123MB	item-types checking
time: 0.211; rss: 127MB	item-bodies checking
time: 0.000; rss: 127MB	drop-impl checking
time: 0.027; rss: 127MB	const checking
time: 0.004; rss: 127MB	privacy checking
time: 0.001; rss: 127MB	stability index
time: 0.002; rss: 127MB	intrinsic checking
time: 0.001; rss: 127MB	effect checking
time: 0.004; rss: 127MB	match checking
time: 0.002; rss: 127MB	liveness checking
time: 0.008; rss: 127MB	rvalue checking
time: 0.052; rss: 138MB	MIR dump
time: 0.020; rss: 138MB	MIR passes
time: 0.022; rss: 138MB	borrow checking
time: 0.000; rss: 138MB	reachability checking
time: 0.003; rss: 138MB	death checking
time: 0.002; rss: 138MB	stability checking
time: 0.000; rss: 138MB	unused lib feature checking
time: 0.028; rss: 138MB	lint checking
time: 0.000; rss: 138MB	resolving dependency formats
time: 0.005; rss: 140MB	Prepare MIR codegen passes
  time: 0.090; rss: 144MB	translation item collection
  time: 0.001; rss: 144MB	codegen unit partitioning
  time: 0.179; rss: 202MB	write metadata
time: 0.761; rss: 199MB	translation
time: 0.000; rss: 199MB	assert dep graph
time: 0.000; rss: 199MB	serialize dep graph
  time: 0.035; rss: 130MB	llvm function passes [0]
  time: 0.018; rss: 132MB	llvm module passes [0]
  time: 0.611; rss: 136MB	codegen passes [0]
  time: 0.001; rss: 117MB	codegen passes [0]
time: 0.739; rss: 114MB	LLVM passes
time: 0.067; rss: 113MB	linking
done
