commit de78655bca47cac8e783dbb563e7e5c25c1fae40
Merge: 5c674a1 547a930
Author: bors <bors@rust-lang.org>
Date:   Wed Jul 6 20:04:11 2016 -0700

    Auto merge of #34652 - jseyfried:fix_expansion_perf, r=nrc
    
    Fix expansion performance regression
    
    **syntax-[breaking-change] cc #31645**
    
    This fixes #34630 by reverting commit 5bf7970 of PR #33943, which landed in #34424.
    
    By removing the `Rc<_>` wrapping around `Delimited` and `SequenceRepetition` in `TokenTree`, 5bf7970 made cloning `TokenTree`s more expensive. While this had no measurable performance impact on the compiler's crates, it caused an order of magnitude performance regression on some macro-heavy code in the wild. I believe this is due to clones of `TokenTree`s in `macro_parser.rs` and/or `macro_rules.rs`.
    
    r? @nrc
rustc: ./regex-macros.0.1.30
cd regex_macros && cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling regex_macros v0.1.17 (file:///root/benchmarks/regex-macros.0.1.30/regex_macros)
time: 0.002; rss: 79MB	parsing
Lines of code:             639
Pre-expansion node count:  2088
time: 0.000; rss: 79MB	configuration
time: 0.000; rss: 79MB	recursion limit
time: 0.000; rss: 79MB	crate injection
time: 0.000; rss: 79MB	plugin loading
time: 0.000; rss: 79MB	plugin registration
time: 0.049; rss: 121MB	expansion
time: 0.000; rss: 121MB	maybe building test harness
time: 0.000; rss: 121MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 121MB	complete gated feature checking
Post-expansion node count: 69587
time: 0.004; rss: 121MB	assigning node ids
time: 0.000; rss: 121MB	collecting defs
time: 0.106; rss: 217MB	external crate/lib resolution
time: 0.003; rss: 217MB	early lint checks
time: 0.000; rss: 217MB	AST validation
time: 0.021; rss: 226MB	name resolution
time: 0.004; rss: 230MB	lowering ast -> hir
time: 0.001; rss: 230MB	indexing hir
time: 0.001; rss: 230MB	attribute checking
time: 0.000; rss: 223MB	language item collection
time: 0.001; rss: 223MB	lifetime resolution
time: 0.000; rss: 223MB	looking for entry point
time: 0.000; rss: 223MB	looking for plugin registrar
time: 0.002; rss: 224MB	region resolution
time: 0.000; rss: 224MB	loop checking
time: 0.000; rss: 224MB	static item recursion checking
time: 0.000; rss: 224MB	load_dep_graph
time: 0.014; rss: 228MB	type collecting
time: 0.000; rss: 228MB	variance inference
time: 0.010; rss: 228MB	coherence checking
time: 0.008; rss: 229MB	wf checking
time: 0.001; rss: 229MB	item-types checking
time: 0.888; rss: 247MB	item-bodies checking
makefile:2: recipe for target 'all' failed
done
