commit aa97dafe018de235b544b13e5beceba1b5d0593b
Merge: 2f4368b 4fc02f6
Author: bors <bors@rust-lang.org>
Date:   Sat Nov 19 01:49:07 2016 -0800

    Auto merge of #37797 - arielb1:inline-closure, r=michaelwoerister
    
    instantiate closures on demand
    
    this should fix compilation with `-C codegen-units=4` - tested locally
    with `RUSTFLAGS='-C codegen-units=4' ../x.py test`
    
    r? @michaelwoerister
rustc: ./html5ever-2016-08-25
cargo rustc  -- -Ztime-passes -Zinput-stats
   Compiling serde v0.8.9
   Compiling lazy_static v0.2.1
   Compiling encoding_index_tests v0.1.4
   Compiling void v1.0.2
   Compiling matches v0.1.2
   Compiling mac v0.0.2
   Compiling libc v0.2.16
   Compiling phf_shared v0.7.16
   Compiling utf-8 v0.6.0
   Compiling encoding-index-simpchinese v1.20141219.5
   Compiling encoding-index-korean v1.20141219.5
   Compiling unreachable v0.1.1
   Compiling encoding-index-tradchinese v1.20141219.5
   Compiling encoding-index-japanese v1.20141219.5
   Compiling debug_unreachable v0.1.1
   Compiling futf v0.1.2
   Compiling phf v0.7.16
   Compiling log v0.3.6
   Compiling rustc-serialize v0.3.19
   Compiling encoding-index-singlebyte v1.20141219.5
   Compiling rand v0.3.14
   Compiling encoding v0.2.33
   Compiling tendril v0.2.3
   Compiling phf_generator v0.7.16
   Compiling string_cache v0.2.29
   Compiling phf_codegen v0.7.16
   Compiling html5ever v0.5.4 (file:///root/benchmarks/html5ever-2016-08-25)
time: 0.023; rss: 48MB	parsing
Lines of code:             8210
Pre-expansion node count:  52140
time: 0.000; rss: 48MB	recursion limit
time: 0.000; rss: 48MB	crate injection
time: 0.000; rss: 48MB	plugin loading
time: 0.000; rss: 48MB	plugin registration
time: 0.634; rss: 103MB	expansion
time: 0.000; rss: 103MB	maybe building test harness
time: 0.002; rss: 103MB	maybe creating a macro crate
Post-expansion node count: 163412
time: 0.000; rss: 103MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 103MB	complete gated feature checking
time: 0.008; rss: 103MB	early lint checks
time: 0.002; rss: 103MB	AST validation
time: 0.015; rss: 105MB	name resolution
time: 0.012; rss: 113MB	lowering ast -> hir
time: 0.003; rss: 117MB	indexing hir
time: 0.002; rss: 117MB	attribute checking
time: 0.001; rss: 97MB	language item collection
time: 0.002; rss: 97MB	lifetime resolution
time: 0.000; rss: 97MB	looking for entry point
time: 0.000; rss: 97MB	looking for plugin registrar
time: 0.011; rss: 104MB	region resolution
time: 0.001; rss: 104MB	loop checking
time: 0.001; rss: 104MB	static item recursion checking
time: 0.020; rss: 105MB	compute_incremental_hashes_map
time: 0.000; rss: 105MB	load_dep_graph
time: 0.010; rss: 107MB	type collecting
time: 0.000; rss: 107MB	variance inference
time: 0.000; rss: 107MB	impl wf inference
time: 0.011; rss: 108MB	coherence checking
time: 0.020; rss: 109MB	wf checking
time: 0.268; rss: 116MB	item-types checking
time: 0.458; rss: 129MB	item-bodies checking
time: 0.000; rss: 129MB	drop-impl checking
time: 0.061; rss: 135MB	const checking
time: 0.006; rss: 135MB	privacy checking
time: 0.001; rss: 135MB	stability index
time: 0.004; rss: 135MB	intrinsic checking
time: 0.003; rss: 135MB	effect checking
time: 0.014; rss: 135MB	match checking
time: 0.011; rss: 130MB	liveness checking
time: 0.022; rss: 130MB	rvalue checking
time: 0.103; rss: 169MB	MIR dump
  time: 0.008; rss: 169MB	SimplifyCfg
  time: 0.013; rss: 172MB	QualifyAndPromoteConstants
  time: 0.022; rss: 172MB	TypeckMir
  time: 0.000; rss: 172MB	SimplifyBranches
  time: 0.004; rss: 172MB	SimplifyCfg
time: 0.047; rss: 172MB	MIR cleanup and validation
time: 0.079; rss: 176MB	borrow checking
time: 0.002; rss: 176MB	reachability checking
time: 0.005; rss: 176MB	death checking
time: 0.006; rss: 176MB	stability checking
time: 0.000; rss: 176MB	unused lib feature checking
time: 0.056; rss: 176MB	lint checking
time: 0.000; rss: 176MB	resolving dependency formats
  time: 0.000; rss: 176MB	NoLandingPads
  time: 0.004; rss: 176MB	SimplifyCfg
  time: 0.009; rss: 176MB	EraseRegions
  time: 0.001; rss: 176MB	AddCallGuards
  time: 0.073; rss: 183MB	ElaborateDrops
  time: 0.000; rss: 183MB	NoLandingPads
  time: 0.007; rss: 180MB	SimplifyCfg
  time: 0.007; rss: 178MB	InstCombine
  time: 0.001; rss: 178MB	Deaggregator
  time: 0.000; rss: 178MB	CopyPropagation
  time: 0.007; rss: 177MB	SimplifyLocals
  time: 0.001; rss: 177MB	AddCallGuards
  time: 0.000; rss: 177MB	PreTrans
time: 0.110; rss: 177MB	MIR optimisations
  time: 0.011; rss: 178MB	write metadata
  time: 0.040; rss: 180MB	translation item collection
  time: 0.005; rss: 180MB	codegen unit partitioning
  time: 0.005; rss: 193MB	internalize symbols
time: 0.263; rss: 193MB	translation
time: 0.000; rss: 193MB	assert dep graph
time: 0.000; rss: 193MB	serialize dep graph
  time: 0.022; rss: 104MB	llvm function passes [0]
  time: 0.012; rss: 105MB	llvm module passes [0]
  time: 0.487; rss: 108MB	codegen passes [0]
  time: 0.000; rss: 108MB	codegen passes [0]
time: 0.560; rss: 108MB	LLVM passes
time: 0.000; rss: 108MB	serialize work products
time: 0.025; rss: 91MB	linking
done
