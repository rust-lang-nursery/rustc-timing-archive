commit 77f9231818514c4ded23e6aa1ae431a8ba4668bf
Merge: 4b2c703 274f27a
Author: bors <bors@rust-lang.org>
Date:   Fri Feb 12 05:53:18 2016 +0000

    Auto merge of #31368 - JohanLorenzo:dont-strip-if-test-build, r=alexcrichton
    
    Tools which rely on DWARF for generating code coverage report, don't generate accurate numbers on test builds. For instance, [this sample main](https://github.com/JohanLorenzo/rust-testing-example/blob/757bdbf3887f43db9771c20cb72dfc32aa8f4321/src/main.rs) returns [100% coverage](https://coveralls.io/builds/4940156/source?filename=main.rs) when [kcov](https://github.com/SimonKagstrom/kcov/) runs.
    
    With @pnkfelix 's great help, we could narrow down the issue: The linker strips unused function during phase 6. Here's a patch which stops stripping when someone calls `rustc --test $ARGS`. @pnkfelix wasn't sure if we should add a new flag, or just use --test. What do you think @alexcrichton ?
    
    Also, I'm not too sure: where is the best place to add a test for this addition?
    
    Thanks for the help!
rustc: ./piston-image-0.3.11
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling image v0.3.11 (file:///root/benchmarks/piston-image-0.3.11)
time: 0.047; rss: 49MB	parsing
Lines of code:             10676
Pre-expansion node count:  84646
time: 0.017; rss: 49MB	configuration 1
time: 0.000; rss: 49MB	recursion limit
time: 0.001; rss: 49MB	gated macro checking
time: 0.000; rss: 49MB	crate injection
time: 0.005; rss: 54MB	macro loading
time: 0.000; rss: 54MB	plugin loading
time: 0.000; rss: 54MB	plugin registration
time: 0.120; rss: 57MB	expansion
time: 0.004; rss: 57MB	complete gated feature checking 1
time: 0.027; rss: 57MB	configuration 2
time: 0.000; rss: 57MB	gated configuration checking
time: 0.013; rss: 57MB	maybe building test harness
time: 0.012; rss: 57MB	prelude injection
time: 0.001; rss: 57MB	checking that all macro invocations are gone
time: 0.000; rss: 57MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 57MB	complete gated feature checking 2
time: 0.001; rss: 57MB	const fn bodies and arguments
Post-expansion node count: 144338
time: 0.012; rss: 57MB	assigning node ids
time: 0.020; rss: 69MB	lowering ast -> hir
time: 0.006; rss: 71MB	indexing hir
time: 0.000; rss: 71MB	attribute checking
time: 0.012; rss: 71MB	early lint checks
time: 0.003; rss: 63MB	external crate/lib resolution
time: 0.001; rss: 63MB	language item collection
time: 0.029; rss: 80MB	resolution
time: 0.003; rss: 80MB	lifetime resolution
time: 0.000; rss: 80MB	looking for entry point
time: 0.000; rss: 80MB	looking for plugin registrar
time: 0.010; rss: 86MB	region resolution
time: 0.001; rss: 86MB	loop checking
time: 0.001; rss: 86MB	static item recursion checking
time: 0.011; rss: 90MB	type collecting
time: 0.000; rss: 90MB	variance inference
time: 0.031; rss: 107MB	coherence checking
time: 0.161; rss: 111MB	wf checking
time: 0.051; rss: 114MB	item-types checking
time: 1.716; rss: 142MB	item-bodies checking
time: 0.000; rss: 142MB	drop-impl checking
time: 0.074; rss: 142MB	const checking
time: 0.013; rss: 142MB	privacy checking
time: 0.001; rss: 142MB	stability index
time: 0.010; rss: 142MB	intrinsic checking
time: 0.003; rss: 142MB	effect checking
time: 0.026; rss: 142MB	match checking
time: 0.099; rss: 152MB	MIR dump
time: 0.000; rss: 152MB	MIR passes
time: 0.011; rss: 152MB	liveness checking
time: 0.161; rss: 152MB	borrow checking
time: 0.079; rss: 152MB	rvalue checking
time: 0.004; rss: 152MB	reachability checking
time: 0.009; rss: 152MB	death checking
time: 0.010; rss: 154MB	stability checking
time: 0.000; rss: 154MB	unused lib feature checking
time: 0.087; rss: 154MB	lint checking
time: 0.000; rss: 154MB	resolving dependency formats
time: 0.009; rss: 154MB	erasing regions from MIR
  time: 1.391; rss: 173MB	translation item collection
  time: 0.215; rss: 264MB	write metadata
time: 3.973; rss: 260MB	translation
  time: 0.099; rss: 155MB	llvm function passes [0]
  time: 0.044; rss: 157MB	llvm module passes [0]
  time: 1.782; rss: 205MB	codegen passes [0]
  time: 0.001; rss: 181MB	codegen passes [0]
time: 2.112; rss: 181MB	LLVM passes
time: 0.148; rss: 181MB	linking
done
