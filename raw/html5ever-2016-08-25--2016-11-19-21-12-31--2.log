commit 0bd2ce62b27e2b9a7dfe92fc23d9098854008089
Merge: bfa709a 30daedf
Author: bors <bors@rust-lang.org>
Date:   Sat Nov 19 16:39:25 2016 -0600

    Auto merge of #37831 - rkruppe:llvm-attr-fwdcompat, r=eddyb
    
    [LLVM 4.0] Use llvm::Attribute APIs instead of "raw value" APIs
    
    The latter will be removed in LLVM 4.0 (see https://github.com/llvm-mirror/llvm/commit/4a6fc8bacf11d8066da72cf8481467167877ed16).
    
    The librustc_llvm API remains mostly unchanged, except that llvm::Attribute is no longer a bitflag but represents only a *single* attribute.
    The ability to store many attributes in a small number of bits and modify them without interacting with LLVM is only used in rustc_trans::abi and closely related modules, and only attributes for function arguments are considered there.
    Thus rustc_trans::abi now has its own bit-packed representation of argument attributes, which are translated to rustc_llvm::Attribute when applying the attributes.
    
    cc #37609
rustc: ./html5ever-2016-08-25
cargo rustc  -- -Ztime-passes -Zinput-stats
   Compiling html5ever v0.5.4 (file:///root/benchmarks/html5ever-2016-08-25)
time: 0.034; rss: 46MB	parsing
Lines of code:             8210
Pre-expansion node count:  52140
time: 0.000; rss: 46MB	recursion limit
time: 0.000; rss: 46MB	crate injection
time: 0.000; rss: 46MB	plugin loading
time: 0.000; rss: 46MB	plugin registration
time: 0.682; rss: 99MB	expansion
time: 0.000; rss: 99MB	maybe building test harness
time: 0.002; rss: 99MB	maybe creating a macro crate
Post-expansion node count: 163412
time: 0.000; rss: 99MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 99MB	complete gated feature checking
time: 0.008; rss: 99MB	early lint checks
time: 0.002; rss: 99MB	AST validation
time: 0.019; rss: 102MB	name resolution
time: 0.023; rss: 111MB	lowering ast -> hir
time: 0.007; rss: 114MB	indexing hir
time: 0.002; rss: 114MB	attribute checking
time: 0.001; rss: 95MB	language item collection
time: 0.002; rss: 95MB	lifetime resolution
time: 0.000; rss: 95MB	looking for entry point
time: 0.000; rss: 95MB	looking for plugin registrar
time: 0.011; rss: 102MB	region resolution
time: 0.001; rss: 102MB	loop checking
time: 0.001; rss: 102MB	static item recursion checking
time: 0.021; rss: 103MB	compute_incremental_hashes_map
time: 0.000; rss: 103MB	load_dep_graph
time: 0.010; rss: 105MB	type collecting
time: 0.000; rss: 105MB	variance inference
time: 0.000; rss: 105MB	impl wf inference
time: 0.011; rss: 106MB	coherence checking
time: 0.020; rss: 107MB	wf checking
time: 0.349; rss: 116MB	item-types checking
time: 0.460; rss: 123MB	item-bodies checking
time: 0.000; rss: 123MB	drop-impl checking
time: 0.064; rss: 129MB	const checking
time: 0.006; rss: 129MB	privacy checking
time: 0.001; rss: 129MB	stability index
time: 0.003; rss: 129MB	intrinsic checking
time: 0.002; rss: 129MB	effect checking
time: 0.014; rss: 129MB	match checking
time: 0.035; rss: 126MB	liveness checking
time: 0.023; rss: 126MB	rvalue checking
time: 0.107; rss: 163MB	MIR dump
  time: 0.008; rss: 164MB	SimplifyCfg
  time: 0.014; rss: 166MB	QualifyAndPromoteConstants
  time: 0.023; rss: 166MB	TypeckMir
  time: 0.000; rss: 166MB	SimplifyBranches
  time: 0.004; rss: 166MB	SimplifyCfg
time: 0.049; rss: 166MB	MIR cleanup and validation
time: 0.085; rss: 172MB	borrow checking
time: 0.002; rss: 172MB	reachability checking
time: 0.006; rss: 172MB	death checking
time: 0.006; rss: 172MB	stability checking
time: 0.000; rss: 172MB	unused lib feature checking
time: 0.057; rss: 172MB	lint checking
time: 0.000; rss: 172MB	resolving dependency formats
  time: 0.000; rss: 172MB	NoLandingPads
  time: 0.004; rss: 172MB	SimplifyCfg
  time: 0.009; rss: 172MB	EraseRegions
  time: 0.001; rss: 172MB	AddCallGuards
  time: 0.081; rss: 176MB	ElaborateDrops
  time: 0.000; rss: 176MB	NoLandingPads
  time: 0.007; rss: 174MB	SimplifyCfg
  time: 0.007; rss: 174MB	InstCombine
  time: 0.001; rss: 174MB	Deaggregator
  time: 0.000; rss: 174MB	CopyPropagation
  time: 0.007; rss: 171MB	SimplifyLocals
  time: 0.001; rss: 171MB	AddCallGuards
  time: 0.000; rss: 171MB	PreTrans
time: 0.119; rss: 171MB	MIR optimisations
  time: 0.011; rss: 172MB	write metadata
  time: 0.041; rss: 173MB	translation item collection
  time: 0.005; rss: 174MB	codegen unit partitioning
  time: 0.005; rss: 187MB	internalize symbols
time: 0.288; rss: 187MB	translation
time: 0.000; rss: 187MB	assert dep graph
time: 0.000; rss: 187MB	serialize dep graph
  time: 0.021; rss: 101MB	llvm function passes [0]
  time: 0.012; rss: 102MB	llvm module passes [0]
  time: 0.475; rss: 107MB	codegen passes [0]
  time: 0.000; rss: 107MB	codegen passes [0]
time: 0.551; rss: 107MB	LLVM passes
time: 0.000; rss: 107MB	serialize work products
time: 0.025; rss: 89MB	linking
done
