commit 888970370a3f4b9e8be399869581422c67638d7b
Merge: 85592fb 826f673
Author: bors <bors@rust-lang.org>
Date:   Mon Sep 12 07:43:57 2016 -0700

    Auto merge of #36414 - nnethercote:char_lit, r=jseyfried
    
    Improve char_lit's readability and speed
    
    This is my first contribution to rustc. Please let me know if I've done anything wrong. (I ran `make tidy` before making the pull request.)
rustc: ./piston-image-0.10.3
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling image v0.10.3 (file:///root/benchmarks/piston-image-0.10.3)
time: 0.046; rss: 58MB	parsing
Lines of code:             12000
Pre-expansion node count:  90272
time: 0.000; rss: 58MB	recursion limit
time: 0.000; rss: 58MB	crate injection
time: 0.000; rss: 58MB	plugin loading
time: 0.000; rss: 58MB	plugin registration
time: 0.067; rss: 88MB	expansion
time: 0.000; rss: 88MB	maybe building test harness
time: 0.002; rss: 88MB	maybe creating a macro crate
time: 0.007; rss: 88MB	assigning node ids
Post-expansion node count: 149551
time: 0.000; rss: 88MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 88MB	complete gated feature checking
time: 0.004; rss: 88MB	collecting defs
time: 0.011; rss: 96MB	external crate/lib resolution
time: 0.006; rss: 96MB	early lint checks
time: 0.002; rss: 96MB	AST validation
time: 0.022; rss: 101MB	name resolution
time: 0.014; rss: 112MB	lowering ast -> hir
time: 0.003; rss: 116MB	indexing hir
time: 0.002; rss: 116MB	attribute checking
time: 0.002; rss: 106MB	language item collection
time: 0.003; rss: 106MB	lifetime resolution
time: 0.000; rss: 106MB	looking for entry point
time: 0.000; rss: 106MB	looking for plugin registrar
time: 0.011; rss: 111MB	region resolution
time: 0.002; rss: 111MB	loop checking
time: 0.001; rss: 111MB	static item recursion checking
time: 0.058; rss: 112MB	compute_incremental_hashes_map
time: 0.000; rss: 112MB	load_dep_graph
time: 0.024; rss: 113MB	type collecting
time: 0.000; rss: 113MB	variance inference
time: 0.031; rss: 116MB	coherence checking
time: 0.099; rss: 117MB	wf checking
time: 0.219; rss: 125MB	item-types checking
time: 0.945; rss: 137MB	item-bodies checking
time: 0.000; rss: 137MB	drop-impl checking
time: 0.071; rss: 137MB	const checking
time: 0.011; rss: 137MB	privacy checking
time: 0.001; rss: 137MB	stability index
time: 0.010; rss: 137MB	intrinsic checking
time: 0.003; rss: 137MB	effect checking
time: 0.024; rss: 137MB	match checking
time: 0.011; rss: 137MB	liveness checking
time: 0.067; rss: 137MB	rvalue checking
time: 0.112; rss: 180MB	MIR dump
  time: 0.011; rss: 180MB	SimplifyCfg
  time: 0.025; rss: 180MB	QualifyAndPromoteConstants
  time: 0.028; rss: 180MB	TypeckMir
  time: 0.001; rss: 180MB	SimplifyBranches
  time: 0.007; rss: 180MB	SimplifyCfg
time: 0.072; rss: 180MB	MIR passes
time: 0.143; rss: 180MB	borrow checking
time: 0.004; rss: 180MB	reachability checking
time: 0.008; rss: 180MB	death checking
time: 0.010; rss: 180MB	stability checking
time: 0.000; rss: 180MB	unused lib feature checking
time: 0.074; rss: 180MB	lint checking
time: 0.000; rss: 180MB	resolving dependency formats
  time: 0.001; rss: 180MB	NoLandingPads
  time: 0.005; rss: 180MB	SimplifyCfg
  time: 0.013; rss: 182MB	EraseRegions
  time: 0.002; rss: 182MB	AddCallGuards
  time: 0.133; rss: 187MB	ElaborateDrops
  time: 0.001; rss: 187MB	NoLandingPads
  time: 0.009; rss: 187MB	SimplifyCfg
  time: 0.002; rss: 187MB	Deaggregator
  time: 0.001; rss: 187MB	AddCallGuards
  time: 0.000; rss: 187MB	PreTrans
time: 0.166; rss: 187MB	Prepare MIR codegen passes
  time: 0.082; rss: 189MB	write metadata
  time: 0.537; rss: 199MB	translation item collection
  time: 0.028; rss: 203MB	codegen unit partitioning
  time: 0.051; rss: 326MB	internalize symbols
time: 3.504; rss: 299MB	translation
time: 0.000; rss: 299MB	assert dep graph
time: 0.000; rss: 299MB	serialize dep graph
  time: 0.203; rss: 227MB	llvm function passes [0]
  time: 0.085; rss: 231MB	llvm module passes [0]
  time: 4.045; rss: 233MB	codegen passes [0]
  time: 0.001; rss: 234MB	codegen passes [0]
time: 4.627; rss: 234MB	LLVM passes
time: 0.000; rss: 234MB	serialize work products
time: 0.271; rss: 105MB	linking
done
