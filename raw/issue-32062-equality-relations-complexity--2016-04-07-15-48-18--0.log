commit 7979dd6089ee5cba39cfbe6e880a3edeb7fff788
Merge: 470ca1c 9eaae92
Author: bors <bors@rust-lang.org>
Date:   Thu Apr 7 10:55:37 2016 -0700

    Auto merge of #32016 - nikomatsakis:incr-comp-save, r=mw
    
    Save/load incremental compilation dep graph
    
    Contains the code to serialize/deserialize the dep graph to disk between executions. We also hash the item contents and compare to the new hashes. Also includes a unit test harness. There are definitely some known limitations, such as https://github.com/rust-lang/rust/issues/32014 and https://github.com/rust-lang/rust/issues/32015, but I am leaving those for follow-up work.
    
    Note that this PR builds on https://github.com/rust-lang/rust/pull/32007, so the overlapping commits can be excluded from review.
    
    r? @michaelwoerister
rustc: ./issue-32062-equality-relations-complexity
/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc issue-32062.rs -Ztime-passes -Zinput-stats
time: 0.001; rss: 36MB	parsing
Lines of code:             60
Pre-expansion node count:  586
time: 0.000; rss: 40MB	configuration 1
time: 0.000; rss: 40MB	recursion limit
time: 0.000; rss: 40MB	gated macro checking
time: 0.000; rss: 40MB	crate injection
time: 0.003; rss: 43MB	macro loading
time: 0.000; rss: 43MB	plugin loading
time: 0.000; rss: 43MB	plugin registration
time: 0.001; rss: 43MB	expansion
time: 0.000; rss: 43MB	complete gated feature checking 1
time: 0.000; rss: 43MB	configuration 2
time: 0.000; rss: 43MB	gated configuration checking
time: 0.000; rss: 43MB	maybe building test harness
time: 0.000; rss: 43MB	prelude injection
time: 0.000; rss: 43MB	checking that all macro invocations are gone
time: 0.000; rss: 43MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 43MB	complete gated feature checking 2
time: 0.000; rss: 43MB	const fn bodies and arguments
Post-expansion node count: 599
time: 0.000; rss: 43MB	assigning node ids
time: 0.000; rss: 43MB	lowering ast -> hir
time: 0.000; rss: 43MB	indexing hir
time: 0.000; rss: 43MB	attribute checking
time: 0.000; rss: 43MB	early lint checks
time: 0.001; rss: 43MB	external crate/lib resolution
time: 0.000; rss: 43MB	language item collection
time: 0.000; rss: 47MB	resolution
time: 0.000; rss: 47MB	lifetime resolution
time: 0.000; rss: 47MB	looking for entry point
time: 0.000; rss: 47MB	looking for plugin registrar
time: 0.000; rss: 47MB	region resolution
time: 0.000; rss: 47MB	loop checking
time: 0.000; rss: 47MB	static item recursion checking
time: 0.000; rss: 47MB	load_dep_graph
time: 0.001; rss: 51MB	type collecting
time: 0.000; rss: 51MB	variance inference
time: 0.005; rss: 60MB	coherence checking
time: 0.007; rss: 63MB	wf checking
time: 0.000; rss: 63MB	item-types checking
time: 1.776; rss: 107MB	item-bodies checking
time: 0.000; rss: 107MB	drop-impl checking
time: 0.001; rss: 107MB	const checking
time: 0.000; rss: 107MB	privacy checking
time: 0.000; rss: 107MB	stability index
time: 0.000; rss: 107MB	intrinsic checking
time: 0.000; rss: 107MB	effect checking
time: 0.000; rss: 107MB	match checking
time: 0.000; rss: 107MB	liveness checking
time: 0.002; rss: 107MB	rvalue checking
time: 0.001; rss: 107MB	MIR dump
time: 0.000; rss: 107MB	MIR passes
time: 0.001; rss: 107MB	borrow checking
time: 0.000; rss: 107MB	reachability checking
time: 0.000; rss: 107MB	death checking
time: 0.000; rss: 107MB	stability checking
time: 0.000; rss: 107MB	unused lib feature checking
time: 0.000; rss: 107MB	lint checking
time: 0.001; rss: 107MB	resolving dependency formats
time: 0.000; rss: 107MB	Prepare MIR codegen passes
  time: 0.095; rss: 122MB	translation item collection
  time: 0.000; rss: 127MB	write metadata
time: 0.472; rss: 127MB	translation
time: 0.000; rss: 127MB	assert dep graph
time: 0.000; rss: 127MB	serialize dep graph
  time: 0.000; rss: 83MB	llvm function passes [0]
  time: 0.000; rss: 83MB	llvm module passes [0]
  time: 0.005; rss: 88MB	codegen passes [0]
  time: 0.000; rss: 88MB	codegen passes [0]
time: 0.006; rss: 88MB	LLVM passes
  time: 0.101; rss: 88MB	running linker
time: 0.101; rss: 88MB	linking
done
