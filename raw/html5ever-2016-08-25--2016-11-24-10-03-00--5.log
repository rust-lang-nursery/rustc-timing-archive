commit ddf011d7730594f4db36b01858b8c6733b07c084
Merge: 217f57c 75825fe
Author: bors <bors@rust-lang.org>
Date:   Thu Nov 24 08:26:36 2016 -0600

    Auto merge of #37770 - pnkfelix:print-type-sizes, r=arielb1
    
    Add debug flag `-Z print-type-sizes` for instrumention type/variant sizes
    
    Add debug flag `-Z print-type-sizes` for instrumention type/variant sizes
    
    This is meant to help with things like #36799 in a very local way; namely, once you have a hypothesis as to which types have a large population or are "too large", you can use `-Z print-type-sizes` to learn how large each type is, and how much each variant in an enum contributes to the size of that overall enum.
rustc: ./html5ever-2016-08-25
cargo rustc  -- -Ztime-passes -Zinput-stats
   Compiling html5ever v0.5.4 (file:///root/benchmarks/html5ever-2016-08-25)
time: 0.023; rss: 50MB	parsing
Lines of code:             8210
Pre-expansion node count:  52140
time: 0.000; rss: 50MB	recursion limit
time: 0.000; rss: 50MB	crate injection
time: 0.000; rss: 50MB	plugin loading
time: 0.000; rss: 50MB	plugin registration
time: 0.631; rss: 102MB	expansion
time: 0.000; rss: 102MB	maybe building test harness
time: 0.002; rss: 102MB	maybe creating a macro crate
Post-expansion node count: 163412
time: 0.000; rss: 102MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 102MB	complete gated feature checking
time: 0.008; rss: 102MB	early lint checks
time: 0.002; rss: 102MB	AST validation
time: 0.015; rss: 105MB	name resolution
time: 0.011; rss: 111MB	lowering ast -> hir
time: 0.002; rss: 116MB	indexing hir
time: 0.002; rss: 116MB	attribute checking
time: 0.001; rss: 96MB	language item collection
time: 0.002; rss: 96MB	lifetime resolution
time: 0.000; rss: 96MB	looking for entry point
time: 0.000; rss: 96MB	looking for plugin registrar
time: 0.010; rss: 104MB	region resolution
time: 0.001; rss: 104MB	loop checking
time: 0.001; rss: 104MB	static item recursion checking
time: 0.020; rss: 105MB	compute_incremental_hashes_map
time: 0.000; rss: 105MB	load_dep_graph
time: 0.009; rss: 106MB	type collecting
time: 0.000; rss: 106MB	variance inference
time: 0.000; rss: 106MB	impl wf inference
time: 0.010; rss: 108MB	coherence checking
time: 0.019; rss: 108MB	wf checking
time: 0.286; rss: 115MB	item-types checking
time: 0.457; rss: 128MB	item-bodies checking
time: 0.000; rss: 128MB	drop-impl checking
time: 0.058; rss: 134MB	const checking
time: 0.005; rss: 134MB	privacy checking
time: 0.001; rss: 134MB	stability index
time: 0.003; rss: 134MB	intrinsic checking
time: 0.002; rss: 134MB	effect checking
time: 0.014; rss: 134MB	match checking
time: 0.011; rss: 129MB	liveness checking
time: 0.021; rss: 129MB	rvalue checking
time: 0.099; rss: 172MB	MIR dump
  time: 0.008; rss: 173MB	SimplifyCfg
  time: 0.013; rss: 175MB	QualifyAndPromoteConstants
  time: 0.023; rss: 175MB	TypeckMir
  time: 0.000; rss: 175MB	SimplifyBranches
  time: 0.004; rss: 175MB	SimplifyCfg
time: 0.048; rss: 175MB	MIR cleanup and validation
time: 0.078; rss: 180MB	borrow checking
time: 0.002; rss: 180MB	reachability checking
time: 0.005; rss: 180MB	death checking
time: 0.006; rss: 180MB	stability checking
time: 0.000; rss: 180MB	unused lib feature checking
time: 0.052; rss: 180MB	lint checking
time: 0.000; rss: 180MB	resolving dependency formats
  time: 0.000; rss: 180MB	NoLandingPads
  time: 0.003; rss: 180MB	SimplifyCfg
  time: 0.009; rss: 180MB	EraseRegions
  time: 0.001; rss: 180MB	AddCallGuards
  time: 0.072; rss: 182MB	ElaborateDrops
  time: 0.000; rss: 182MB	NoLandingPads
  time: 0.006; rss: 182MB	SimplifyCfg
  time: 0.007; rss: 180MB	InstCombine
  time: 0.001; rss: 180MB	Deaggregator
  time: 0.000; rss: 180MB	CopyPropagation
  time: 0.007; rss: 177MB	SimplifyLocals
  time: 0.001; rss: 177MB	AddCallGuards
  time: 0.000; rss: 177MB	PreTrans
time: 0.109; rss: 177MB	MIR optimisations
  time: 0.011; rss: 177MB	write metadata
  time: 0.038; rss: 178MB	translation item collection
  time: 0.004; rss: 178MB	codegen unit partitioning
  time: 0.004; rss: 193MB	internalize symbols
time: 0.265; rss: 193MB	translation
time: 0.000; rss: 193MB	assert dep graph
time: 0.000; rss: 193MB	serialize dep graph
  time: 0.020; rss: 110MB	llvm function passes [0]
  time: 0.012; rss: 111MB	llvm module passes [0]
  time: 0.480; rss: 113MB	codegen passes [0]
  time: 0.016; rss: 113MB	codegen passes [0]
time: 0.569; rss: 113MB	LLVM passes
time: 0.000; rss: 113MB	serialize work products
time: 0.024; rss: 95MB	linking
done
