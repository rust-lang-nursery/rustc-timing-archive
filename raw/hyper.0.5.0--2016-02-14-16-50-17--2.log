commit a888333ea6acad7e289fa3f0f9e6c1058aa2a011
Merge: 9b367d9 e3b414d
Author: bors <bors@rust-lang.org>
Date:   Sun Feb 14 21:24:45 2016 +0000

    Auto merge of #31460 - alexcrichton:supafast-rustc, r=brson
    
    Looking at some profiles of rustc recently, these seemed like two pretty easy wins we could get in terms of performance on the table.
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.040; rss: 39MB	parsing
Lines of code:             9154
Pre-expansion node count:  45594
time: 0.010; rss: 40MB	configuration 1
time: 0.000; rss: 40MB	recursion limit
time: 0.000; rss: 40MB	gated macro checking
time: 0.000; rss: 40MB	crate injection
time: 0.005; rss: 45MB	macro loading
time: 0.000; rss: 45MB	plugin loading
time: 0.000; rss: 45MB	plugin registration
time: 0.200; rss: 55MB	expansion
time: 0.005; rss: 55MB	complete gated feature checking 1
time: 0.034; rss: 55MB	configuration 2
time: 0.000; rss: 55MB	gated configuration checking
time: 0.014; rss: 55MB	maybe building test harness
time: 0.011; rss: 55MB	prelude injection
time: 0.001; rss: 55MB	checking that all macro invocations are gone
time: 0.000; rss: 55MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 55MB	complete gated feature checking 2
time: 0.001; rss: 55MB	const fn bodies and arguments
Post-expansion node count: 109258
time: 0.010; rss: 55MB	assigning node ids
time: 0.018; rss: 60MB	lowering ast -> hir
time: 0.006; rss: 62MB	indexing hir
time: 0.000; rss: 62MB	attribute checking
time: 0.007; rss: 62MB	early lint checks
time: 0.004; rss: 57MB	external crate/lib resolution
time: 0.001; rss: 57MB	language item collection
time: 0.034; rss: 75MB	resolution
time: 0.002; rss: 75MB	lifetime resolution
time: 0.000; rss: 75MB	looking for entry point
time: 0.000; rss: 75MB	looking for plugin registrar
time: 0.006; rss: 78MB	region resolution
time: 0.001; rss: 78MB	loop checking
time: 0.001; rss: 78MB	static item recursion checking
time: 0.012; rss: 82MB	type collecting
time: 0.000; rss: 82MB	variance inference
time: 0.040; rss: 100MB	coherence checking
time: 0.080; rss: 101MB	wf checking
time: 0.024; rss: 101MB	item-types checking
time: 0.536; rss: 118MB	item-bodies checking
time: 0.000; rss: 118MB	drop-impl checking
time: 0.039; rss: 121MB	const checking
time: 0.010; rss: 121MB	privacy checking
time: 0.001; rss: 121MB	stability index
time: 0.004; rss: 121MB	intrinsic checking
time: 0.002; rss: 121MB	effect checking
time: 0.012; rss: 121MB	match checking
time: 0.054; rss: 124MB	MIR dump
time: 0.000; rss: 124MB	MIR passes
time: 0.006; rss: 124MB	liveness checking
time: 0.067; rss: 124MB	borrow checking
time: 0.033; rss: 124MB	rvalue checking
time: 0.003; rss: 124MB	reachability checking
time: 0.007; rss: 124MB	death checking
time: 0.006; rss: 124MB	stability checking
time: 0.000; rss: 124MB	unused lib feature checking
time: 0.047; rss: 124MB	lint checking
time: 0.000; rss: 124MB	resolving dependency formats
time: 0.007; rss: 125MB	erasing regions from MIR
  time: 0.206; rss: 145MB	translation item collection
  time: 0.139; rss: 238MB	write metadata
time: 1.558; rss: 238MB	translation
  time: 0.098; rss: 162MB	llvm function passes [0]
  time: 0.048; rss: 163MB	llvm module passes [0]
  time: 1.654; rss: 168MB	codegen passes [0]
  time: 0.001; rss: 119MB	codegen passes [0]
time: 2.018; rss: 118MB	LLVM passes
time: 0.172; rss: 118MB	linking
done
