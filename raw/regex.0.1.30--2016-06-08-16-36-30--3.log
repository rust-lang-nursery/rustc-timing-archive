commit 4b240fe96a8b8fcaa412624c398547dbc447a81e
Merge: d3e014e 1564e92
Author: bors <bors@rust-lang.org>
Date:   Wed Jun 8 07:43:29 2016 -0700

    Auto merge of #34083 - alexcrichton:dumb-hack, r=nrc
    
    rustc: Try to contain prepends to PATH
    
    This commit attempts to bring our prepends to PATH on Windows when loading
    plugins because we've been seeing quite a few issues with failing to spawn a
    process on Windows, the leading theory of which is that PATH is too large as a
    result of this. Currently this is mostly a stab in the dark as it's not
    confirmed to actually fix the problem, but it's probably not a bad change to
    have anyway!
    
    cc #33844
    Closes #17360
rustc: ./regex.0.1.30
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling regex v0.1.30 (file:///root/benchmarks/regex.0.1.30)
time: 0.061; rss: 63MB	parsing
Lines of code:             8558
Pre-expansion node count:  57894
time: 0.009; rss: 63MB	configuration 1
time: 0.000; rss: 63MB	recursion limit
time: 0.000; rss: 63MB	crate injection
time: 0.018; rss: 94MB	macro loading
time: 0.000; rss: 94MB	plugin loading
time: 0.000; rss: 94MB	plugin registration
time: 0.056; rss: 100MB	expansion
time: 0.000; rss: 100MB	gated configuration checking
time: 0.006; rss: 100MB	maybe building test harness
time: 0.006; rss: 100MB	prelude injection
time: 0.000; rss: 100MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 100MB	complete gated feature checking
Post-expansion node count: 68033
time: 0.006; rss: 100MB	assigning node ids
time: 0.001; rss: 101MB	collecting defs
time: 0.002; rss: 101MB	external crate/lib resolution
time: 0.006; rss: 101MB	early lint checks
time: 0.001; rss: 101MB	AST validation
time: 0.009; rss: 103MB	name resolution
time: 0.009; rss: 111MB	lowering ast -> hir
time: 0.001; rss: 113MB	indexing hir
time: 0.001; rss: 113MB	attribute checking
time: 0.001; rss: 105MB	language item collection
time: 0.001; rss: 105MB	lifetime resolution
time: 0.000; rss: 105MB	looking for entry point
time: 0.000; rss: 105MB	looking for plugin registrar
time: 0.005; rss: 107MB	region resolution
time: 0.001; rss: 107MB	loop checking
time: 0.001; rss: 107MB	static item recursion checking
time: 0.000; rss: 107MB	load_dep_graph
time: 0.011; rss: 109MB	type collecting
time: 0.000; rss: 109MB	variance inference
time: 0.025; rss: 114MB	coherence checking
time: 0.014; rss: 114MB	wf checking
time: 0.324; rss: 124MB	item-types checking
time: 0.201; rss: 128MB	item-bodies checking
time: 0.000; rss: 128MB	drop-impl checking
time: 0.028; rss: 128MB	const checking
time: 0.003; rss: 128MB	privacy checking
time: 0.001; rss: 128MB	stability index
time: 0.002; rss: 128MB	intrinsic checking
time: 0.001; rss: 128MB	effect checking
time: 0.004; rss: 128MB	match checking
time: 0.002; rss: 128MB	liveness checking
time: 0.008; rss: 128MB	rvalue checking
time: 0.053; rss: 141MB	MIR dump
time: 0.021; rss: 141MB	MIR passes
time: 0.022; rss: 141MB	borrow checking
time: 0.000; rss: 141MB	reachability checking
time: 0.003; rss: 141MB	death checking
time: 0.002; rss: 141MB	stability checking
time: 0.000; rss: 141MB	unused lib feature checking
time: 0.028; rss: 141MB	lint checking
time: 0.000; rss: 141MB	resolving dependency formats
time: 0.017; rss: 141MB	Prepare MIR codegen passes
  time: 0.178; rss: 152MB	write metadata
  time: 0.055; rss: 154MB	translation item collection
  time: 0.001; rss: 154MB	codegen unit partitioning
time: 0.714; rss: 200MB	translation
time: 0.000; rss: 200MB	assert dep graph
time: 0.000; rss: 200MB	serialize dep graph
  time: 0.035; rss: 131MB	llvm function passes [0]
  time: 0.018; rss: 133MB	llvm module passes [0]
  time: 0.614; rss: 136MB	codegen passes [0]
  time: 0.001; rss: 118MB	codegen passes [0]
time: 0.741; rss: 114MB	LLVM passes
time: 0.066; rss: 114MB	linking
done
