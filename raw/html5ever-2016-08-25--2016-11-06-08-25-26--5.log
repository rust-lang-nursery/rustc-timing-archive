commit 161f2623bd078017dfc9a06bd3417b36f6a58de9
Merge: 3fc8304 434c314
Author: bors <bors@rust-lang.org>
Date:   Sun Nov 6 02:28:58 2016 -0800

    Auto merge of #37386 - johnthagen:Self-reference-example, r=GuillaumeGomez
    
    Add example using Self to reference
    
    When I first came across `Self` I had a hard time finding references to it in the docs (and it's also been asked about on [StackOverflow](http://stackoverflow.com/questions/32304595/whats-the-difference-between-self-and-self).
    
    I hope this example provides someone who comes across it for the first time a little more help.  If there is a better way to show an example actually using `Self`, I'm happy to modify this.  It was just the simplest place to start I could see.
rustc: ./html5ever-2016-08-25
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling html5ever v0.5.4 (file:///root/benchmarks/html5ever-2016-08-25)
time: 0.023; rss: 48MB	parsing
Lines of code:             8210
Pre-expansion node count:  52238
time: 0.000; rss: 48MB	recursion limit
time: 0.000; rss: 48MB	crate injection
time: 0.000; rss: 48MB	plugin loading
time: 0.000; rss: 48MB	plugin registration
time: 0.664; rss: 103MB	expansion
time: 0.000; rss: 103MB	maybe building test harness
time: 0.002; rss: 103MB	maybe creating a macro crate
Post-expansion node count: 163524
time: 0.000; rss: 103MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 103MB	complete gated feature checking
time: 0.008; rss: 103MB	early lint checks
time: 0.002; rss: 103MB	AST validation
time: 0.017; rss: 105MB	name resolution
time: 0.012; rss: 114MB	lowering ast -> hir
time: 0.002; rss: 118MB	indexing hir
time: 0.002; rss: 118MB	attribute checking
time: 0.001; rss: 98MB	language item collection
time: 0.002; rss: 98MB	lifetime resolution
time: 0.000; rss: 98MB	looking for entry point
time: 0.000; rss: 98MB	looking for plugin registrar
time: 0.014; rss: 106MB	region resolution
time: 0.001; rss: 106MB	loop checking
time: 0.001; rss: 106MB	static item recursion checking
time: 0.020; rss: 107MB	compute_incremental_hashes_map
time: 0.000; rss: 107MB	load_dep_graph
time: 0.008; rss: 109MB	type collecting
time: 0.000; rss: 109MB	variance inference
time: 0.022; rss: 112MB	coherence checking
time: 0.021; rss: 113MB	wf checking
time: 0.320; rss: 120MB	item-types checking
time: 0.474; rss: 134MB	item-bodies checking
time: 0.000; rss: 134MB	drop-impl checking
time: 0.068; rss: 138MB	const checking
time: 0.006; rss: 138MB	privacy checking
time: 0.001; rss: 138MB	stability index
time: 0.003; rss: 138MB	intrinsic checking
time: 0.002; rss: 138MB	effect checking
time: 0.015; rss: 138MB	match checking
time: 0.012; rss: 132MB	liveness checking
time: 0.025; rss: 132MB	rvalue checking
time: 0.118; rss: 180MB	MIR dump
  time: 0.009; rss: 179MB	SimplifyCfg
  time: 0.014; rss: 179MB	QualifyAndPromoteConstants
  time: 0.023; rss: 179MB	TypeckMir
  time: 0.000; rss: 179MB	SimplifyBranches
  time: 0.004; rss: 179MB	SimplifyCfg
time: 0.049; rss: 179MB	MIR cleanup and validation
time: 0.087; rss: 180MB	borrow checking
time: 0.002; rss: 180MB	reachability checking
time: 0.005; rss: 180MB	death checking
time: 0.007; rss: 181MB	stability checking
time: 0.000; rss: 181MB	unused lib feature checking
time: 0.067; rss: 181MB	lint checking
time: 0.000; rss: 181MB	resolving dependency formats
  time: 0.000; rss: 181MB	NoLandingPads
  time: 0.004; rss: 181MB	SimplifyCfg
  time: 0.010; rss: 181MB	EraseRegions
  time: 0.001; rss: 181MB	AddCallGuards
  time: 0.075; rss: 188MB	ElaborateDrops
  time: 0.000; rss: 188MB	NoLandingPads
  time: 0.007; rss: 184MB	SimplifyCfg
  time: 0.008; rss: 182MB	InstCombine
  time: 0.001; rss: 182MB	Deaggregator
  time: 0.000; rss: 182MB	CopyPropagation
  time: 0.007; rss: 180MB	SimplifyLocals
  time: 0.001; rss: 180MB	AddCallGuards
  time: 0.000; rss: 180MB	PreTrans
time: 0.115; rss: 180MB	MIR optimisations
  time: 0.011; rss: 182MB	write metadata
  time: 0.045; rss: 183MB	translation item collection
  time: 0.005; rss: 183MB	codegen unit partitioning
  time: 0.005; rss: 197MB	internalize symbols
time: 0.289; rss: 197MB	translation
time: 0.000; rss: 197MB	assert dep graph
time: 0.000; rss: 197MB	serialize dep graph
  time: 0.021; rss: 106MB	llvm function passes [0]
  time: 0.012; rss: 106MB	llvm module passes [0]
  time: 0.467; rss: 110MB	codegen passes [0]
  time: 0.000; rss: 110MB	codegen passes [0]
time: 0.539; rss: 110MB	LLVM passes
time: 0.000; rss: 110MB	serialize work products
time: 0.025; rss: 92MB	linking
done
