commit 531b928ea65270a47aeb91c33a4ede447f152103
Merge: a2c56de c306853
Author: bors <bors@rust-lang.org>
Date:   Sat Mar 12 16:18:34 2016 -0800

    Auto merge of #32140 - ruud-v-a:avx-intrinsics, r=alexcrichton
    
    Add AVX broadcast and conversion intrinsics
    
    This adds the following intrinsics:
    
     * `_mm256_broadcast_pd`
     * `_mm256_broadcast_ps`
     * `_mm256_cvtepi32_pd`
     * `_mm256_cvtepi32_ps`
     * `_mm256_cvtpd_epi32`
     * `_mm256_cvtpd_ps`
     * `_mm256_cvtps_epi32`
     * `_mm256_cvtps_pd`
     * `_mm256_cvttpd_epi32`
     * `_mm256_cvttps_epi32`
    
    The "avx" codegen feature must be enabled to use these.
rustc: ./regex.0.1.30
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling regex v0.1.30 (file:///root/benchmarks/regex.0.1.30)
time: 0.060; rss: 49MB	parsing
Lines of code:             8558
Pre-expansion node count:  58217
time: 0.011; rss: 49MB	configuration 1
time: 0.000; rss: 49MB	recursion limit
time: 0.001; rss: 49MB	gated macro checking
time: 0.000; rss: 49MB	crate injection
time: 0.003; rss: 53MB	macro loading
time: 0.000; rss: 53MB	plugin loading
time: 0.000; rss: 53MB	plugin registration
time: 0.057; rss: 56MB	expansion
time: 0.001; rss: 56MB	complete gated feature checking 1
time: 0.013; rss: 55MB	configuration 2
time: 0.000; rss: 55MB	gated configuration checking
time: 0.006; rss: 55MB	maybe building test harness
time: 0.006; rss: 55MB	prelude injection
time: 0.001; rss: 55MB	checking that all macro invocations are gone
time: 0.000; rss: 55MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 55MB	complete gated feature checking 2
time: 0.001; rss: 55MB	const fn bodies and arguments
Post-expansion node count: 68657
time: 0.006; rss: 55MB	assigning node ids
time: 0.008; rss: 62MB	lowering ast -> hir
time: 0.002; rss: 64MB	indexing hir
time: 0.001; rss: 64MB	attribute checking
time: 0.007; rss: 64MB	early lint checks
time: 0.001; rss: 58MB	external crate/lib resolution
time: 0.001; rss: 58MB	language item collection
time: 0.009; rss: 68MB	resolution
time: 0.001; rss: 68MB	lifetime resolution
time: 0.000; rss: 68MB	looking for entry point
time: 0.000; rss: 68MB	looking for plugin registrar
time: 0.005; rss: 72MB	region resolution
time: 0.001; rss: 72MB	loop checking
time: 0.001; rss: 72MB	static item recursion checking
time: 0.003; rss: 74MB	type collecting
time: 0.000; rss: 74MB	variance inference
time: 0.023; rss: 92MB	coherence checking
time: 0.010; rss: 92MB	wf checking
time: 0.077; rss: 95MB	item-types checking
time: 0.185; rss: 109MB	item-bodies checking
time: 0.000; rss: 109MB	drop-impl checking
time: 0.022; rss: 109MB	const checking
time: 0.004; rss: 109MB	privacy checking
time: 0.000; rss: 109MB	stability index
time: 0.001; rss: 109MB	intrinsic checking
time: 0.001; rss: 109MB	effect checking
time: 0.003; rss: 109MB	match checking
time: 0.002; rss: 109MB	liveness checking
time: 0.006; rss: 109MB	rvalue checking
time: 0.019; rss: 111MB	MIR dump
time: 0.000; rss: 111MB	MIR passes
time: 0.019; rss: 112MB	borrow checking
time: 0.000; rss: 112MB	reachability checking
time: 0.002; rss: 112MB	death checking
time: 0.002; rss: 112MB	stability checking
time: 0.000; rss: 112MB	unused lib feature checking
time: 0.027; rss: 112MB	lint checking
time: 0.000; rss: 112MB	resolving dependency formats
time: 0.002; rss: 112MB	erasing regions from MIR
  time: 0.055; rss: 124MB	translation item collection
  time: 0.131; rss: 177MB	write metadata
time: 0.585; rss: 177MB	translation
  time: 0.035; rss: 117MB	llvm function passes [0]
  time: 0.018; rss: 117MB	llvm module passes [0]
  time: 0.596; rss: 121MB	codegen passes [0]
  time: 0.001; rss: 103MB	codegen passes [0]
time: 0.722; rss: 101MB	LLVM passes
time: 0.064; rss: 100MB	linking
done
