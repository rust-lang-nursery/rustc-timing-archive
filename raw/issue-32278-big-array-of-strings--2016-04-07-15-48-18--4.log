commit 7979dd6089ee5cba39cfbe6e880a3edeb7fff788
Merge: 470ca1c 9eaae92
Author: bors <bors@rust-lang.org>
Date:   Thu Apr 7 10:55:37 2016 -0700

    Auto merge of #32016 - nikomatsakis:incr-comp-save, r=mw
    
    Save/load incremental compilation dep graph
    
    Contains the code to serialize/deserialize the dep graph to disk between executions. We also hash the item contents and compare to the new hashes. Also includes a unit test harness. There are definitely some known limitations, such as https://github.com/rust-lang/rust/issues/32014 and https://github.com/rust-lang/rust/issues/32015, but I am leaving those for follow-up work.
    
    Note that this PR builds on https://github.com/rust-lang/rust/pull/32007, so the overlapping commits can be excluded from review.
    
    r? @michaelwoerister
rustc: ./issue-32278-big-array-of-strings
/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc big-array-of-strings.rs -Ztime-passes -Zinput-stats
time: 0.151; rss: 60MB	parsing
Lines of code:             65577
Pre-expansion node count:  65552
time: 0.011; rss: 60MB	configuration 1
time: 0.000; rss: 60MB	recursion limit
time: 0.001; rss: 60MB	gated macro checking
time: 0.000; rss: 60MB	crate injection
time: 0.004; rss: 63MB	macro loading
time: 0.000; rss: 63MB	plugin loading
time: 0.000; rss: 63MB	plugin registration
time: 0.042; rss: 68MB	expansion
time: 0.001; rss: 68MB	complete gated feature checking 1
time: 0.011; rss: 68MB	configuration 2
time: 0.000; rss: 68MB	gated configuration checking
time: 0.005; rss: 68MB	maybe building test harness
time: 0.005; rss: 68MB	prelude injection
time: 0.000; rss: 68MB	checking that all macro invocations are gone
time: 0.000; rss: 68MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 68MB	complete gated feature checking 2
time: 0.001; rss: 68MB	const fn bodies and arguments
Post-expansion node count: 65565
time: 0.006; rss: 68MB	assigning node ids
time: 0.009; rss: 82MB	lowering ast -> hir
time: 0.002; rss: 84MB	indexing hir
time: 0.001; rss: 84MB	attribute checking
time: 0.008; rss: 84MB	early lint checks
time: 0.001; rss: 71MB	external crate/lib resolution
time: 0.001; rss: 71MB	language item collection
time: 0.002; rss: 74MB	resolution
time: 0.001; rss: 74MB	lifetime resolution
time: 0.000; rss: 74MB	looking for entry point
time: 0.000; rss: 74MB	looking for plugin registrar
time: 0.007; rss: 80MB	region resolution
time: 0.001; rss: 80MB	loop checking
time: 0.001; rss: 80MB	static item recursion checking
time: 0.000; rss: 80MB	load_dep_graph
time: 0.000; rss: 80MB	type collecting
time: 0.000; rss: 80MB	variance inference
time: 0.006; rss: 88MB	coherence checking
time: 0.001; rss: 88MB	wf checking
time: 0.754; rss: 189MB	item-types checking
time: 0.000; rss: 189MB	item-bodies checking
time: 0.000; rss: 189MB	drop-impl checking
time: 0.020; rss: 187MB	const checking
time: 0.002; rss: 187MB	privacy checking
time: 0.001; rss: 187MB	stability index
time: 0.000; rss: 187MB	intrinsic checking
time: 0.000; rss: 187MB	effect checking
time: 0.000; rss: 187MB	match checking
time: 0.001; rss: 187MB	liveness checking
time: 0.000; rss: 187MB	rvalue checking
time: 0.001; rss: 187MB	MIR dump
time: 0.000; rss: 187MB	MIR passes
time: 0.001; rss: 187MB	borrow checking
time: 0.000; rss: 187MB	reachability checking
time: 0.001; rss: 187MB	death checking
time: 0.001; rss: 187MB	stability checking
time: 0.000; rss: 187MB	unused lib feature checking
time: 0.028; rss: 187MB	lint checking
time: 0.001; rss: 187MB	resolving dependency formats
time: 0.000; rss: 187MB	Prepare MIR codegen passes
  time: 0.001; rss: 195MB	translation item collection
  time: 0.000; rss: 205MB	write metadata
time: 0.088; rss: 205MB	translation
time: 0.000; rss: 205MB	assert dep graph
time: 0.000; rss: 205MB	serialize dep graph
  time: 0.003; rss: 85MB	llvm function passes [0]
  time: 0.000; rss: 85MB	llvm module passes [0]
  time: 0.163; rss: 87MB	codegen passes [0]
  time: 0.000; rss: 76MB	codegen passes [0]
time: 0.178; rss: 76MB	LLVM passes
  time: 0.180; rss: 76MB	running linker
time: 0.181; rss: 76MB	linking
done
