commit 888970370a3f4b9e8be399869581422c67638d7b
Merge: 85592fb 826f673
Author: bors <bors@rust-lang.org>
Date:   Mon Sep 12 07:43:57 2016 -0700

    Auto merge of #36414 - nnethercote:char_lit, r=jseyfried
    
    Improve char_lit's readability and speed
    
    This is my first contribution to rustc. Please let me know if I've done anything wrong. (I ran `make tidy` before making the pull request.)
rustc: ./html5ever-2016-08-25
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling html5ever v0.5.4 (file:///root/benchmarks/html5ever-2016-08-25)
time: 0.029; rss: 53MB	parsing
Lines of code:             8210
Pre-expansion node count:  52238
time: 0.000; rss: 53MB	recursion limit
time: 0.000; rss: 53MB	crate injection
time: 0.000; rss: 53MB	plugin loading
time: 0.000; rss: 53MB	plugin registration
time: 1.475; rss: 100MB	expansion
time: 0.000; rss: 100MB	maybe building test harness
time: 0.002; rss: 100MB	maybe creating a macro crate
time: 0.008; rss: 100MB	assigning node ids
Post-expansion node count: 164262
time: 0.000; rss: 100MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 100MB	complete gated feature checking
time: 0.005; rss: 101MB	collecting defs
time: 0.006; rss: 104MB	external crate/lib resolution
time: 0.009; rss: 104MB	early lint checks
time: 0.002; rss: 104MB	AST validation
time: 0.019; rss: 108MB	name resolution
time: 0.016; rss: 125MB	lowering ast -> hir
time: 0.004; rss: 129MB	indexing hir
time: 0.002; rss: 129MB	attribute checking
time: 0.002; rss: 110MB	language item collection
time: 0.003; rss: 110MB	lifetime resolution
time: 0.000; rss: 110MB	looking for entry point
time: 0.000; rss: 110MB	looking for plugin registrar
time: 0.015; rss: 116MB	region resolution
time: 0.002; rss: 116MB	loop checking
time: 0.003; rss: 116MB	static item recursion checking
time: 0.023; rss: 117MB	compute_incremental_hashes_map
time: 0.000; rss: 117MB	load_dep_graph
time: 0.014; rss: 118MB	type collecting
time: 0.000; rss: 118MB	variance inference
time: 0.026; rss: 121MB	coherence checking
time: 0.028; rss: 121MB	wf checking
time: 0.368; rss: 132MB	item-types checking
time: 0.593; rss: 145MB	item-bodies checking
time: 0.000; rss: 145MB	drop-impl checking
time: 0.077; rss: 147MB	const checking
time: 0.009; rss: 147MB	privacy checking
time: 0.002; rss: 147MB	stability index
time: 0.005; rss: 147MB	intrinsic checking
time: 0.003; rss: 147MB	effect checking
time: 0.027; rss: 148MB	match checking
time: 0.013; rss: 141MB	liveness checking
time: 0.031; rss: 141MB	rvalue checking
time: 0.120; rss: 184MB	MIR dump
  time: 0.009; rss: 185MB	SimplifyCfg
  time: 0.015; rss: 185MB	QualifyAndPromoteConstants
  time: 0.027; rss: 185MB	TypeckMir
  time: 0.000; rss: 185MB	SimplifyBranches
  time: 0.005; rss: 185MB	SimplifyCfg
time: 0.055; rss: 185MB	MIR passes
time: 0.094; rss: 191MB	borrow checking
time: 0.003; rss: 191MB	reachability checking
time: 0.007; rss: 191MB	death checking
time: 0.008; rss: 191MB	stability checking
time: 0.000; rss: 191MB	unused lib feature checking
time: 0.064; rss: 191MB	lint checking
time: 0.000; rss: 191MB	resolving dependency formats
  time: 0.000; rss: 191MB	NoLandingPads
  time: 0.004; rss: 191MB	SimplifyCfg
  time: 0.009; rss: 191MB	EraseRegions
  time: 0.001; rss: 191MB	AddCallGuards
  time: 0.083; rss: 195MB	ElaborateDrops
  time: 0.000; rss: 195MB	NoLandingPads
  time: 0.007; rss: 192MB	SimplifyCfg
  time: 0.001; rss: 192MB	Deaggregator
  time: 0.001; rss: 192MB	AddCallGuards
  time: 0.000; rss: 192MB	PreTrans
time: 0.107; rss: 192MB	Prepare MIR codegen passes
  time: 0.060; rss: 192MB	write metadata
  time: 0.043; rss: 194MB	translation item collection
  time: 0.005; rss: 194MB	codegen unit partitioning
  time: 0.010; rss: 212MB	internalize symbols
time: 0.424; rss: 186MB	translation
time: 0.000; rss: 186MB	assert dep graph
time: 0.000; rss: 186MB	serialize dep graph
  time: 0.024; rss: 115MB	llvm function passes [0]
  time: 0.013; rss: 116MB	llvm module passes [0]
  time: 0.523; rss: 117MB	codegen passes [0]
  time: 0.001; rss: 117MB	codegen passes [0]
time: 0.603; rss: 117MB	LLVM passes
time: 0.000; rss: 117MB	serialize work products
time: 0.061; rss: 97MB	linking
done
