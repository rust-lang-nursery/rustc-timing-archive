commit 897199a0fbe01ab6f7e7f8096656603e238e85a2
Merge: 01a0207 36d9ee3
Author: bors <bors@rust-lang.org>
Date:   Tue Apr 26 12:00:35 2016 -0700

    Auto merge of #33191 - alexcrichton:rustdoc-create-dir-all-racy, r=steveklabnik
    
    rustdoc: Handle concurrent mkdir requests
    
    It's likely that `rustdoc` as a tool is run concurrently in the same output
    (e.g. documenting multiple crates as Cargo does), in which case it needs to
    handle concurrent calls to `fs::create_dir`.
rustc: ./rust-encoding.0.2.32
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling encoding v0.2.32 (file:///root/benchmarks/rust-encoding.0.2.32)
time: 0.028; rss: 47MB	parsing
Lines of code:             6441
Pre-expansion node count:  30335
time: 0.006; rss: 48MB	configuration 1
time: 0.000; rss: 48MB	recursion limit
time: 0.000; rss: 48MB	gated macro checking
time: 0.000; rss: 48MB	crate injection
time: 0.003; rss: 50MB	macro loading
time: 0.000; rss: 50MB	plugin loading
time: 0.000; rss: 50MB	plugin registration
time: 0.044; rss: 53MB	expansion
time: 0.001; rss: 53MB	complete gated feature checking 1
time: 0.006; rss: 53MB	configuration 2
time: 0.000; rss: 53MB	gated configuration checking
time: 0.003; rss: 53MB	maybe building test harness
time: 0.003; rss: 53MB	prelude injection
time: 0.000; rss: 53MB	checking that all macro invocations are gone
time: 0.000; rss: 53MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 53MB	complete gated feature checking 2
time: 0.000; rss: 53MB	const fn bodies and arguments
Post-expansion node count: 41611
time: 0.003; rss: 53MB	assigning node ids
time: 0.002; rss: 55MB	collecting defs
time: 0.001; rss: 55MB	external crate/lib resolution
time: 0.005; rss: 57MB	lowering ast -> hir
time: 0.002; rss: 58MB	indexing hir
time: 0.000; rss: 58MB	attribute checking
time: 0.002; rss: 58MB	early lint checks
time: 0.000; rss: 57MB	language item collection
time: 0.008; rss: 67MB	name resolution
time: 0.001; rss: 67MB	lifetime resolution
time: 0.000; rss: 67MB	looking for entry point
time: 0.000; rss: 67MB	looking for plugin registrar
time: 0.003; rss: 68MB	region resolution
time: 0.000; rss: 68MB	loop checking
time: 0.000; rss: 68MB	static item recursion checking
time: 0.000; rss: 68MB	load_dep_graph
time: 0.005; rss: 70MB	type collecting
time: 0.000; rss: 70MB	variance inference
time: 0.023; rss: 86MB	coherence checking
time: 0.017; rss: 87MB	wf checking
time: 0.014; rss: 88MB	item-types checking
time: 0.214; rss: 98MB	item-bodies checking
time: 0.000; rss: 98MB	drop-impl checking
time: 0.011; rss: 98MB	const checking
time: 0.003; rss: 98MB	privacy checking
time: 0.000; rss: 98MB	stability index
time: 0.001; rss: 98MB	intrinsic checking
time: 0.000; rss: 98MB	effect checking
time: 0.006; rss: 98MB	match checking
time: 0.002; rss: 99MB	liveness checking
time: 0.006; rss: 99MB	rvalue checking
time: 0.030; rss: 105MB	MIR dump
time: 0.008; rss: 105MB	MIR passes
time: 0.022; rss: 105MB	borrow checking
time: 0.000; rss: 105MB	reachability checking
time: 0.002; rss: 105MB	death checking
time: 0.002; rss: 105MB	stability checking
time: 0.000; rss: 105MB	unused lib feature checking
time: 0.024; rss: 106MB	lint checking
time: 0.000; rss: 106MB	resolving dependency formats
time: 0.003; rss: 107MB	Prepare MIR codegen passes
  time: 0.028; rss: 111MB	translation item collection
  time: 0.002; rss: 112MB	codegen unit partitioning
  time: 0.059; rss: 144MB	write metadata
time: 0.398; rss: 144MB	translation
time: 0.000; rss: 144MB	assert dep graph
time: 0.000; rss: 144MB	serialize dep graph
  time: 0.026; rss: 108MB	llvm function passes [0]
  time: 0.050; rss: 112MB	llvm module passes [0]
  time: 0.577; rss: 116MB	codegen passes [0]
  time: 0.001; rss: 102MB	codegen passes [0]
time: 0.721; rss: 101MB	LLVM passes
time: 0.054; rss: 99MB	linking
done
