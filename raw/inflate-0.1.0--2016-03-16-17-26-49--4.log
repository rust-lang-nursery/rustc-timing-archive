commit eeb062b8b1a1bb26151bed05ddd16fe55c979ee1
Merge: fd5603b 0e3334e
Author: bors <bors@rust-lang.org>
Date:   Wed Mar 16 14:20:36 2016 -0700

    Auto merge of #31746 - erickt:newline, r=sfackler
    
    syntax: Always pretty print a newline after doc comments
    
    Before this patch, code that had a doc comment as the first
    line, as in:
    
    ```rust
    /// Foo
    struct Foo;
    ```
    
    Was pretty printed into:
    
    ```rust
    ///Foostruct Foo;
    ```
    
    This makes sure that that there is always a trailing newline
    after a doc comment.
    
    Closes #31722
rustc: ./inflate-0.1.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling inflate v0.1.0 (file:///root/benchmarks/inflate-0.1.0)
time: 0.004; rss: 39MB	parsing
Lines of code:             956
Pre-expansion node count:  4761
time: 0.001; rss: 39MB	configuration 1
time: 0.000; rss: 39MB	recursion limit
time: 0.000; rss: 39MB	gated macro checking
time: 0.000; rss: 39MB	crate injection
time: 0.003; rss: 42MB	macro loading
time: 0.000; rss: 42MB	plugin loading
time: 0.000; rss: 42MB	plugin registration
time: 0.079; rss: 49MB	expansion
time: 0.001; rss: 49MB	complete gated feature checking 1
time: 0.009; rss: 49MB	configuration 2
time: 0.000; rss: 49MB	gated configuration checking
time: 0.004; rss: 49MB	maybe building test harness
time: 0.004; rss: 49MB	prelude injection
time: 0.000; rss: 49MB	checking that all macro invocations are gone
time: 0.000; rss: 49MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 49MB	complete gated feature checking 2
time: 0.000; rss: 49MB	const fn bodies and arguments
Post-expansion node count: 54798
time: 0.004; rss: 49MB	assigning node ids
time: 0.008; rss: 53MB	lowering ast -> hir
time: 0.002; rss: 55MB	indexing hir
time: 0.001; rss: 55MB	attribute checking
time: 0.004; rss: 55MB	early lint checks
time: 0.001; rss: 53MB	external crate/lib resolution
time: 0.001; rss: 53MB	language item collection
time: 0.010; rss: 61MB	resolution
time: 0.000; rss: 61MB	lifetime resolution
time: 0.000; rss: 61MB	looking for entry point
time: 0.000; rss: 61MB	looking for plugin registrar
time: 0.003; rss: 63MB	region resolution
time: 0.000; rss: 63MB	loop checking
time: 0.000; rss: 63MB	static item recursion checking
time: 0.001; rss: 65MB	type collecting
time: 0.000; rss: 65MB	variance inference
time: 0.014; rss: 79MB	coherence checking
time: 0.002; rss: 79MB	wf checking
time: 0.002; rss: 79MB	item-types checking
time: 2.778; rss: 101MB	item-bodies checking
time: 0.000; rss: 101MB	drop-impl checking
time: 0.013; rss: 102MB	const checking
time: 0.002; rss: 102MB	privacy checking
time: 0.000; rss: 102MB	stability index
time: 0.000; rss: 102MB	intrinsic checking
time: 0.000; rss: 102MB	effect checking
time: 0.003; rss: 102MB	match checking
time: 0.064; rss: 102MB	liveness checking
time: 0.009; rss: 102MB	rvalue checking
time: 0.026; rss: 115MB	MIR dump
time: 0.014; rss: 115MB	MIR passes
time: 0.208; rss: 114MB	borrow checking
time: 0.000; rss: 114MB	reachability checking
time: 0.003; rss: 114MB	death checking
time: 0.002; rss: 114MB	stability checking
time: 0.000; rss: 114MB	unused lib feature checking
time: 0.017; rss: 114MB	lint checking
time: 0.000; rss: 114MB	resolving dependency formats
  time: 0.011; rss: 125MB	translation item collection
  time: 0.003; rss: 143MB	write metadata
time: 0.375; rss: 135MB	translation
  time: 0.026; rss: 100MB	llvm function passes [0]
  time: 0.005; rss: 100MB	llvm module passes [0]
  time: 0.485; rss: 106MB	codegen passes [0]
  time: 0.000; rss: 94MB	codegen passes [0]
time: 0.556; rss: 94MB	LLVM passes
time: 0.033; rss: 94MB	linking
done
