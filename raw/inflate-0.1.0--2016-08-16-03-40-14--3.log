commit e25542cb02d946959517ebb68e2f7b1318817237
Merge: 197be89 f59f1f0
Author: bors <bors@rust-lang.org>
Date:   Tue Aug 16 00:12:12 2016 -0700

    Auto merge of #35162 - canndrew:bang_type_coerced, r=nikomatsakis
    
    Implement the `!` type
    
    This implements the never type (`!`) and hides it behind the feature gate `#[feature(never_type)]`. With the feature gate off, things should build as normal (although some error messages may be different). With the gate on, `!` is usable as a type and diverging type variables (ie. types that are unconstrained by anything in the code) will default to `!` instead of `()`.
rustc: ./inflate-0.1.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling inflate v0.1.0 (file:///root/benchmarks/inflate-0.1.0)
time: 0.004; rss: 44MB	parsing
Lines of code:             956
Pre-expansion node count:  4740
time: 0.000; rss: 44MB	configuration
time: 0.000; rss: 44MB	recursion limit
time: 0.000; rss: 44MB	crate injection
time: 0.000; rss: 44MB	plugin loading
time: 0.000; rss: 44MB	plugin registration
time: 0.075; rss: 86MB	expansion
time: 0.000; rss: 86MB	maybe building test harness
time: 0.003; rss: 86MB	assigning node ids
Post-expansion node count: 55770
time: 0.000; rss: 86MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 86MB	complete gated feature checking
time: 0.005; rss: 86MB	collecting defs
time: 0.001; rss: 86MB	external crate/lib resolution
time: 0.002; rss: 86MB	early lint checks
time: 0.000; rss: 86MB	AST validation
time: 0.010; rss: 88MB	name resolution
time: 0.006; rss: 92MB	lowering ast -> hir
time: 0.001; rss: 94MB	indexing hir
time: 0.001; rss: 94MB	attribute checking
time: 0.001; rss: 92MB	language item collection
time: 0.001; rss: 92MB	lifetime resolution
time: 0.000; rss: 92MB	looking for entry point
time: 0.000; rss: 92MB	looking for plugin registrar
time: 0.004; rss: 93MB	region resolution
time: 0.000; rss: 93MB	loop checking
time: 0.000; rss: 93MB	static item recursion checking
time: 0.000; rss: 93MB	load_dep_graph
time: 0.002; rss: 94MB	type collecting
time: 0.000; rss: 94MB	variance inference
time: 0.010; rss: 95MB	coherence checking
time: 0.002; rss: 96MB	wf checking
time: 0.002; rss: 96MB	item-types checking
time: 2.724; rss: 113MB	item-bodies checking
time: 0.000; rss: 113MB	drop-impl checking
time: 0.017; rss: 112MB	const checking
time: 0.001; rss: 112MB	privacy checking
time: 0.000; rss: 112MB	stability index
time: 0.001; rss: 112MB	intrinsic checking
time: 0.001; rss: 112MB	effect checking
time: 0.004; rss: 112MB	match checking
time: 0.062; rss: 110MB	liveness checking
time: 0.012; rss: 110MB	rvalue checking
time: 0.037; rss: 134MB	MIR dump
time: 0.024; rss: 133MB	MIR passes
time: 0.202; rss: 135MB	borrow checking
time: 0.000; rss: 135MB	reachability checking
time: 0.003; rss: 135MB	death checking
time: 0.003; rss: 135MB	stability checking
time: 0.000; rss: 135MB	unused lib feature checking
time: 0.020; rss: 133MB	lint checking
time: 0.000; rss: 133MB	resolving dependency formats
time: 0.176; rss: 133MB	Prepare MIR codegen passes
  time: 0.003; rss: 134MB	write metadata
  time: 0.010; rss: 134MB	translation item collection
  time: 0.001; rss: 134MB	codegen unit partitioning
  time: 0.002; rss: 158MB	internalize symbols
time: 0.223; rss: 143MB	translation
time: 0.000; rss: 143MB	assert dep graph
time: 0.000; rss: 143MB	serialize dep graph
  time: 0.030; rss: 106MB	llvm function passes [0]
  time: 0.005; rss: 107MB	llvm module passes [0]
  time: 0.642; rss: 115MB	codegen passes [0]
  time: 0.000; rss: 115MB	codegen passes [0]
time: 0.712; rss: 112MB	LLVM passes
time: 0.000; rss: 112MB	serialize work products
time: 0.048; rss: 100MB	linking
done
