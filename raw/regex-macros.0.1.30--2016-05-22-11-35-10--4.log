commit 6e455640950c4e8cb8bff919edb4854fcf7773ca
Merge: e24d621 cfc3865
Author: bors <bors@rust-lang.org>
Date:   Sun May 22 23:14:11 2016 -0700

    Auto merge of #31457 - lambda:rtabort-use-libc-abort, r=alexcrichton
    
    Use libc::abort, not intrinsics::abort, in rtabort!
    
    intrinsics::abort compiles down to an illegal instruction, which on
    Unix-like platforms causes the process to be killed with SIGILL.  A more
    appropriate way to kill the process would be SIGABRT; this indicates
    better that the runtime has explicitly aborted, rather than some kind of
    compiler bug or architecture mismatch that SIGILL might indicate.
    
    For rtassert!, replace this with libc::abort.  libc::abort raises
    SIGABRT, but is defined to do so in such a way that it will terminate
    the process even if SIGABRT is currently masked or caught by a signal
    handler that returns.
    
    On non-Unix platforms, retain the existing behavior.  On Windows we
    prefer to avoid depending on the C runtime, and we need a fallback for
    any other platforms that may be defined.  An alternative on Windows
    would be to call TerminateProcess, but this seems less essential than
    switching to using SIGABRT on Unix-like platforms, where it is common
    for the process-killing signal to be printed out or logged.
    
    This is a [breaking-change] for any code that depends on the exact
    signal raised to abort a process via rtabort!
    
    cc #31273
    cc #31333
rustc: ./regex-macros.0.1.30
cd regex_macros && cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling regex_macros v0.1.17 (file:///root/benchmarks/regex-macros.0.1.30/regex_macros)
time: 0.002; rss: 46MB	parsing
Lines of code:             639
Pre-expansion node count:  2180
time: 0.001; rss: 50MB	configuration 1
time: 0.000; rss: 50MB	recursion limit
time: 0.000; rss: 50MB	crate injection
time: 0.019; rss: 84MB	macro loading
time: 0.000; rss: 84MB	plugin loading
time: 0.000; rss: 84MB	plugin registration
time: 0.032; rss: 90MB	expansion
time: 0.010; rss: 90MB	configuration 2
time: 0.000; rss: 90MB	gated configuration checking
time: 0.005; rss: 90MB	maybe building test harness
time: 0.005; rss: 90MB	prelude injection
time: 0.000; rss: 90MB	checking that all macro invocations are gone
time: 0.000; rss: 90MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 90MB	complete gated feature checking
Post-expansion node count: 69751
time: 0.004; rss: 90MB	assigning node ids
time: 0.000; rss: 90MB	collecting defs
time: 0.105; rss: 177MB	external crate/lib resolution
time: 0.003; rss: 177MB	early lint checks
time: 0.010; rss: 178MB	name resolution
time: 0.006; rss: 182MB	lowering ast -> hir
time: 0.001; rss: 182MB	indexing hir
time: 0.000; rss: 182MB	attribute checking
time: 0.000; rss: 178MB	language item collection
time: 0.001; rss: 178MB	lifetime resolution
time: 0.000; rss: 178MB	looking for entry point
time: 0.000; rss: 178MB	looking for plugin registrar
time: 0.002; rss: 179MB	region resolution
time: 0.000; rss: 179MB	loop checking
time: 0.000; rss: 179MB	static item recursion checking
time: 0.000; rss: 179MB	load_dep_graph
time: 0.015; rss: 183MB	type collecting
time: 0.000; rss: 183MB	variance inference
time: 0.010; rss: 183MB	coherence checking
time: 0.007; rss: 184MB	wf checking
time: 0.001; rss: 184MB	item-types checking
time: 0.935; rss: 202MB	item-bodies checking
makefile:2: recipe for target 'all' failed
done
