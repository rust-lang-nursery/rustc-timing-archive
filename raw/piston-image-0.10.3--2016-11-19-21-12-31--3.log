commit 0bd2ce62b27e2b9a7dfe92fc23d9098854008089
Merge: bfa709a 30daedf
Author: bors <bors@rust-lang.org>
Date:   Sat Nov 19 16:39:25 2016 -0600

    Auto merge of #37831 - rkruppe:llvm-attr-fwdcompat, r=eddyb
    
    [LLVM 4.0] Use llvm::Attribute APIs instead of "raw value" APIs
    
    The latter will be removed in LLVM 4.0 (see https://github.com/llvm-mirror/llvm/commit/4a6fc8bacf11d8066da72cf8481467167877ed16).
    
    The librustc_llvm API remains mostly unchanged, except that llvm::Attribute is no longer a bitflag but represents only a *single* attribute.
    The ability to store many attributes in a small number of bits and modify them without interacting with LLVM is only used in rustc_trans::abi and closely related modules, and only attributes for function arguments are considered there.
    Thus rustc_trans::abi now has its own bit-packed representation of argument attributes, which are translated to rustc_llvm::Attribute when applying the attributes.
    
    cc #37609
rustc: ./piston-image-0.10.3
cargo rustc  -- -Ztime-passes -Zinput-stats
   Compiling image v0.10.3 (file:///root/benchmarks/piston-image-0.10.3)
time: 0.051; rss: 49MB	parsing
Lines of code:             12000
Pre-expansion node count:  90152
time: 0.000; rss: 49MB	recursion limit
time: 0.000; rss: 49MB	crate injection
time: 0.000; rss: 49MB	plugin loading
time: 0.000; rss: 49MB	plugin registration
time: 0.088; rss: 89MB	expansion
time: 0.000; rss: 89MB	maybe building test harness
time: 0.001; rss: 89MB	maybe creating a macro crate
Post-expansion node count: 148881
time: 0.000; rss: 89MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 89MB	complete gated feature checking
time: 0.006; rss: 89MB	early lint checks
time: 0.002; rss: 89MB	AST validation
time: 0.024; rss: 93MB	name resolution
time: 0.024; rss: 101MB	lowering ast -> hir
time: 0.009; rss: 103MB	indexing hir
time: 0.002; rss: 103MB	attribute checking
time: 0.002; rss: 93MB	language item collection
time: 0.003; rss: 93MB	lifetime resolution
time: 0.000; rss: 93MB	looking for entry point
time: 0.000; rss: 93MB	looking for plugin registrar
time: 0.019; rss: 98MB	region resolution
time: 0.001; rss: 98MB	loop checking
time: 0.001; rss: 98MB	static item recursion checking
time: 0.052; rss: 98MB	compute_incremental_hashes_map
time: 0.000; rss: 98MB	load_dep_graph
time: 0.018; rss: 100MB	type collecting
time: 0.000; rss: 100MB	variance inference
time: 0.000; rss: 100MB	impl wf inference
time: 0.015; rss: 102MB	coherence checking
time: 0.067; rss: 103MB	wf checking
time: 0.139; rss: 106MB	item-types checking
time: 0.798; rss: 115MB	item-bodies checking
time: 0.000; rss: 115MB	drop-impl checking
time: 0.061; rss: 120MB	const checking
time: 0.009; rss: 120MB	privacy checking
time: 0.001; rss: 120MB	stability index
time: 0.006; rss: 120MB	intrinsic checking
time: 0.003; rss: 120MB	effect checking
time: 0.014; rss: 120MB	match checking
time: 0.009; rss: 121MB	liveness checking
time: 0.040; rss: 121MB	rvalue checking
time: 0.142; rss: 159MB	MIR dump
  time: 0.012; rss: 161MB	SimplifyCfg
  time: 0.020; rss: 161MB	QualifyAndPromoteConstants
  time: 0.023; rss: 161MB	TypeckMir
  time: 0.001; rss: 161MB	SimplifyBranches
  time: 0.005; rss: 161MB	SimplifyCfg
time: 0.060; rss: 161MB	MIR cleanup and validation
time: 0.112; rss: 162MB	borrow checking
time: 0.003; rss: 162MB	reachability checking
time: 0.008; rss: 162MB	death checking
time: 0.010; rss: 163MB	stability checking
time: 0.000; rss: 163MB	unused lib feature checking
time: 0.064; rss: 163MB	lint checking
time: 0.000; rss: 163MB	resolving dependency formats
  time: 0.001; rss: 163MB	NoLandingPads
  time: 0.005; rss: 163MB	SimplifyCfg
  time: 0.011; rss: 163MB	EraseRegions
  time: 0.002; rss: 163MB	AddCallGuards
  time: 0.047; rss: 166MB	ElaborateDrops
  time: 0.001; rss: 166MB	NoLandingPads
  time: 0.009; rss: 166MB	SimplifyCfg
  time: 0.006; rss: 166MB	InstCombine
  time: 0.002; rss: 166MB	Deaggregator
  time: 0.001; rss: 166MB	CopyPropagation
  time: 0.008; rss: 166MB	SimplifyLocals
  time: 0.002; rss: 166MB	AddCallGuards
  time: 0.000; rss: 166MB	PreTrans
time: 0.093; rss: 166MB	MIR optimisations
  time: 0.018; rss: 168MB	write metadata
  time: 0.444; rss: 181MB	translation item collection
  time: 0.024; rss: 184MB	codegen unit partitioning
  time: 0.022; rss: 304MB	internalize symbols
time: 2.640; rss: 304MB	translation
time: 0.000; rss: 304MB	assert dep graph
time: 0.000; rss: 304MB	serialize dep graph
  time: 0.206; rss: 219MB	llvm function passes [0]
  time: 0.082; rss: 222MB	llvm module passes [0]
  time: 4.236; rss: 222MB	codegen passes [0]
  time: 0.000; rss: 222MB	codegen passes [0]
time: 4.913; rss: 222MB	LLVM passes
time: 0.000; rss: 222MB	serialize work products
time: 0.131; rss: 94MB	linking
done
