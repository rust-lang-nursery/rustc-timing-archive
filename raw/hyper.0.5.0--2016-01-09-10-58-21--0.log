commit 69e1f57dfbd32a1a342d696a3e79624da97ebe1b
Merge: d70ab2b 834fb17
Author: bors <bors@rust-lang.org>
Date:   Mon Jan 11 06:40:58 2016 +0000

    Auto merge of #30295 - jseyfried:fix_extern_crate_duplicate, r=nrc
    
    Fix a bug allowing an item and an external crate to collide so long as the external crate is declared after the item. For example,
    ```rust
    mod core { pub fn f() {} } // This would be an error if it followed the `extern crate`
    extern crate core; // This declaration is shadowed by the preceding module
    
    fn main() { core::f(); }
    ```
    This is a [breaking-change], but it looks unlikely to cause breakage in practice, and any breakage can be fixed by removing colliding `extern crate` declarations, which are shadowed and hence unused.
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling winapi-build v0.1.1
   Compiling winapi v0.2.5
   Compiling traitobject v0.0.1
   Compiling gcc v0.3.21
   Compiling bitflags v0.3.3
   Compiling matches v0.1.2
   Compiling unicase v0.1.0
   Compiling lazy_static v0.1.15
   Compiling typeable v0.1.2
   Compiling httparse v0.1.6
   Compiling rustc-serialize v0.3.16
   Compiling libc v0.2.4
   Compiling pkg-config v0.3.6
   Compiling libc v0.1.12
   Compiling kernel32-sys v0.2.1
   Compiling advapi32-sys v0.1.2
   Compiling time v0.1.34
   Compiling rand v0.3.13
   Compiling num_cpus v0.2.10
   Compiling log v0.3.4
   Compiling mime v0.0.11
   Compiling openssl-sys v0.6.7
   Compiling openssl v0.6.7
   Compiling uuid v0.1.18
   Compiling url v0.2.38
   Compiling cookie v0.1.21
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.030; rss: 38MB	parsing
Lines of code:             9154
Pre-expansion node count:  45594
time: 0.009; rss: 38MB	configuration 1
time: 0.000; rss: 38MB	recursion limit
time: 0.000; rss: 38MB	gated macro checking
time: 0.000; rss: 38MB	crate injection
time: 0.004; rss: 43MB	macro loading
time: 0.000; rss: 43MB	plugin loading
time: 0.000; rss: 43MB	plugin registration
time: 0.202; rss: 52MB	expansion
time: 0.005; rss: 52MB	complete gated feature checking 1
time: 0.035; rss: 52MB	configuration 2
time: 0.000; rss: 52MB	gated configuration checking
time: 0.013; rss: 52MB	maybe building test harness
time: 0.011; rss: 52MB	prelude injection
time: 0.001; rss: 52MB	checking that all macro invocations are gone
time: 0.000; rss: 52MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 52MB	complete gated feature checking 2
Post-expansion node count: 109258
time: 0.010; rss: 52MB	assigning node ids
time: 0.011; rss: 56MB	lowering ast -> hir
time: 0.005; rss: 61MB	indexing hir
time: 0.000; rss: 61MB	attribute checking
time: 0.005; rss: 61MB	early lint checks
time: 0.003; rss: 57MB	external crate/lib resolution
time: 0.001; rss: 57MB	language item collection
time: 0.030; rss: 79MB	resolution
time: 0.002; rss: 79MB	lifetime resolution
time: 0.000; rss: 79MB	looking for entry point
time: 0.000; rss: 79MB	looking for plugin registrar
time: 0.006; rss: 81MB	region resolution
time: 0.001; rss: 81MB	loop checking
time: 0.001; rss: 81MB	static item recursion checking
time: 0.013; rss: 85MB	type collecting
time: 0.000; rss: 85MB	variance inference
time: 0.039; rss: 105MB	coherence checking
time: 0.070; rss: 105MB	wf checking
time: 0.026; rss: 105MB	item-types checking
time: 0.520; rss: 126MB	item-bodies checking
time: 0.000; rss: 126MB	drop-impl checking
time: 0.044; rss: 128MB	const checking
time: 0.008; rss: 128MB	privacy checking
time: 0.001; rss: 128MB	stability index
time: 0.004; rss: 128MB	intrinsic checking
time: 0.002; rss: 128MB	effect checking
time: 0.014; rss: 128MB	match checking
time: 0.050; rss: 128MB	MIR dump
time: 0.006; rss: 128MB	liveness checking
time: 0.073; rss: 128MB	borrow checking
time: 0.036; rss: 128MB	rvalue checking
time: 0.003; rss: 128MB	reachability checking
time: 0.006; rss: 128MB	death checking
time: 0.006; rss: 128MB	stability checking
time: 0.000; rss: 128MB	unused lib feature checking
time: 0.047; rss: 128MB	lint checking
time: 0.000; rss: 128MB	resolving dependency formats
time: 0.008; rss: 132MB	erasing regions from MIR
  time: 0.135; rss: 272MB	write metadata
time: 1.435; rss: 272MB	translation
  time: 0.101; rss: 165MB	llvm function passes [0]
  time: 0.050; rss: 166MB	llvm module passes [0]
  time: 1.629; rss: 211MB	codegen passes [0]
  time: 0.001; rss: 168MB	codegen passes [0]
time: 2.005; rss: 168MB	LLVM passes
time: 0.175; rss: 168MB	linking
done
