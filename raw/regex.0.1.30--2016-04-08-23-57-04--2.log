commit 17790570373a7f560950d53ea4d67807232db255
Merge: bf44003 5b29f9a
Author: bors <bors@rust-lang.org>
Date:   Fri Apr 8 15:36:34 2016 -0700

    Auto merge of #32751 - alexcrichton:dist-docs, r=brson
    
    rustbuild: Support cross rust-docs packages
    
    Right now if you configure multiple hosts rustbuild will only build
    documentation for the build triple, but we've got all the support necessary to
    build documentation for different architectures as well. This commit
    reinterprets the `target` field of doc `Step` instances to be the target of the
    documentation rather than the target of the rustdoc/tool being run.
    
    This should enable `make dist` to start producing a bunch of `rust-docs`
    packages for all the cross architectures that rustbuild is producing now.
rustc: ./regex.0.1.30
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling regex v0.1.30 (file:///root/benchmarks/regex.0.1.30)
time: 0.060; rss: 52MB	parsing
Lines of code:             8558
Pre-expansion node count:  58217
time: 0.011; rss: 52MB	configuration 1
time: 0.000; rss: 52MB	recursion limit
time: 0.001; rss: 52MB	gated macro checking
time: 0.000; rss: 52MB	crate injection
time: 0.003; rss: 55MB	macro loading
time: 0.000; rss: 55MB	plugin loading
time: 0.000; rss: 55MB	plugin registration
time: 0.057; rss: 58MB	expansion
time: 0.001; rss: 58MB	complete gated feature checking 1
time: 0.013; rss: 58MB	configuration 2
time: 0.000; rss: 58MB	gated configuration checking
time: 0.006; rss: 58MB	maybe building test harness
time: 0.006; rss: 58MB	prelude injection
time: 0.001; rss: 58MB	checking that all macro invocations are gone
time: 0.000; rss: 58MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 58MB	complete gated feature checking 2
time: 0.001; rss: 58MB	const fn bodies and arguments
Post-expansion node count: 68485
time: 0.006; rss: 58MB	assigning node ids
time: 0.009; rss: 69MB	lowering ast -> hir
time: 0.002; rss: 71MB	indexing hir
time: 0.001; rss: 71MB	attribute checking
time: 0.006; rss: 71MB	early lint checks
time: 0.001; rss: 64MB	external crate/lib resolution
time: 0.001; rss: 64MB	language item collection
time: 0.010; rss: 74MB	resolution
time: 0.001; rss: 74MB	lifetime resolution
time: 0.000; rss: 74MB	looking for entry point
time: 0.000; rss: 74MB	looking for plugin registrar
time: 0.005; rss: 78MB	region resolution
time: 0.001; rss: 78MB	loop checking
time: 0.001; rss: 78MB	static item recursion checking
time: 0.000; rss: 78MB	load_dep_graph
time: 0.007; rss: 88MB	type collecting
time: 0.000; rss: 88MB	variance inference
time: 0.023; rss: 99MB	coherence checking
time: 0.010; rss: 99MB	wf checking
time: 0.249; rss: 102MB	item-types checking
time: 0.189; rss: 114MB	item-bodies checking
time: 0.000; rss: 114MB	drop-impl checking
time: 0.023; rss: 116MB	const checking
time: 0.004; rss: 116MB	privacy checking
time: 0.001; rss: 116MB	stability index
time: 0.001; rss: 116MB	intrinsic checking
time: 0.001; rss: 116MB	effect checking
time: 0.003; rss: 116MB	match checking
time: 0.002; rss: 116MB	liveness checking
time: 0.007; rss: 116MB	rvalue checking
time: 0.015; rss: 119MB	MIR dump
time: 0.007; rss: 119MB	MIR passes
time: 0.019; rss: 119MB	borrow checking
time: 0.000; rss: 119MB	reachability checking
time: 0.003; rss: 119MB	death checking
time: 0.002; rss: 119MB	stability checking
time: 0.000; rss: 119MB	unused lib feature checking
time: 0.028; rss: 119MB	lint checking
time: 0.000; rss: 119MB	resolving dependency formats
time: 0.003; rss: 121MB	Prepare MIR codegen passes
  time: 0.053; rss: 133MB	translation item collection
  time: 0.130; rss: 187MB	write metadata
time: 0.612; rss: 187MB	translation
time: 0.000; rss: 187MB	assert dep graph
time: 0.000; rss: 187MB	serialize dep graph
  time: 0.036; rss: 121MB	llvm function passes [0]
  time: 0.018; rss: 122MB	llvm module passes [0]
  time: 0.615; rss: 126MB	codegen passes [0]
  time: 0.001; rss: 107MB	codegen passes [0]
time: 0.741; rss: 105MB	LLVM passes
time: 0.066; rss: 103MB	linking
done
