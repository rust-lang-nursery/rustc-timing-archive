commit 816a34aca23f3ebd0fddf79ebdf96c9fae976f58
Merge: d9aae63 a1882ca
Author: bors <bors@rust-lang.org>
Date:   Thu Dec 8 07:05:19 2016 +0000

    Auto merge of #38146 - kali:master, r=alexcrichton
    
    fix objc ABI in std::env::args
    
    iOS use different calling convention for `objc_msgSend` depending on the platform. armv7 expect good old variadic arguments, but aarch64 wants "normal" convention: `objc_msgSend` has to be called mimicking the actual callee prototype.
    
    https://developer.apple.com/library/content/documentation/General/Conceptual/CocoaTouch64BitGuide/ConvertingYourAppto64-Bit/ConvertingYourAppto64-Bit.html#//apple_ref/doc/uid/TP40013501-CH3-SW26
    
    This currently breaks std::env:args() on aarch64 iOS devices. As far as I can tell, in the standard library, this is the only occurrence of ObjectiveC dispatching.
rustc: ./syntex-0.42.2@010-incr@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.249; rss: 151MB	expansion
time: 0.000; rss: 151MB	maybe building test harness
time: 0.007; rss: 151MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 151MB	checking for inline asm in case the target doesn't support it
time: 0.013; rss: 151MB	complete gated feature checking
time: 0.025; rss: 151MB	early lint checks
time: 0.008; rss: 151MB	AST validation
time: 0.080; rss: 166MB	name resolution
time: 0.066; rss: 199MB	lowering ast -> hir
time: 0.011; rss: 192MB	indexing hir
time: 0.007; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.012; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.049; rss: 177MB	region resolution
time: 0.007; rss: 177MB	loop checking
time: 0.002; rss: 177MB	static item recursion checking
time: 0.523; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.011; rss: 178MB	stability index
time: 0.022; rss: 181MB	stability checking
time: 0.068; rss: 190MB	type collecting
time: 0.003; rss: 190MB	variance inference
time: 0.006; rss: 193MB	impl wf inference
time: 0.032; rss: 197MB	coherence checking
time: 0.122; rss: 200MB	wf checking
time: 0.291; rss: 208MB	item-types checking
time: 3.570; rss: 265MB	item-bodies checking
time: 0.000; rss: 265MB	drop-impl checking
time: 0.218; rss: 276MB	const checking
time: 0.067; rss: 277MB	privacy checking
time: 0.021; rss: 283MB	intrinsic checking
time: 0.016; rss: 283MB	effect checking
time: 0.049; rss: 283MB	match checking
time: 0.049; rss: 290MB	liveness checking
time: 0.172; rss: 292MB	rvalue checking
time: 0.359; rss: 482MB	MIR dump
  time: 0.056; rss: 483MB	SimplifyCfg
  time: 0.074; rss: 483MB	QualifyAndPromoteConstants
  time: 0.120; rss: 500MB	TypeckMir
  time: 0.004; rss: 500MB	SimplifyBranches
  time: 0.033; rss: 500MB	SimplifyCfg
time: 0.287; rss: 500MB	MIR cleanup and validation
time: 0.478; rss: 500MB	borrow checking
time: 0.025; rss: 500MB	reachability checking
time: 0.043; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.185; rss: 500MB	lint checking
time: 0.000; rss: 500MB	resolving dependency formats
  time: 0.004; rss: 500MB	NoLandingPads
  time: 0.029; rss: 500MB	SimplifyCfg
  time: 0.072; rss: 509MB	EraseRegions
  time: 0.012; rss: 509MB	AddCallGuards
  time: 0.277; rss: 531MB	ElaborateDrops
  time: 0.004; rss: 531MB	NoLandingPads
  time: 0.057; rss: 529MB	SimplifyCfg
  time: 0.032; rss: 528MB	InstCombine
  time: 0.013; rss: 528MB	Deaggregator
  time: 0.004; rss: 528MB	CopyPropagation
  time: 0.041; rss: 528MB	SimplifyLocals
  time: 0.011; rss: 528MB	AddCallGuards
  time: 0.003; rss: 528MB	PreTrans
time: 0.557; rss: 528MB	MIR optimisations
  time: 0.067; rss: 538MB	write metadata
  time: 0.393; rss: 551MB	translation item collection
  time: 0.072; rss: 554MB	codegen unit partitioning
  time: 0.048; rss: 1457MB	internalize symbols
time: 11.690; rss: 1457MB	translation
time: 0.000; rss: 1457MB	assert dep graph
time: 1.419; rss: 1485MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1195MB	llvm function passes [2]
time: 0.000; rss: 1197MB	llvm module passes [2]
time: 0.001; rss: 1205MB	llvm function passes [0]
time: 0.000; rss: 1208MB	llvm module passes [0]
time: 0.001; rss: 1210MB	llvm function passes [3]
time: 0.000; rss: 1210MB	llvm module passes [3]
time: 0.002; rss: 1210MB	llvm function passes [1]
time: 0.000; rss: 1210MB	llvm module passes [1]
time: 0.002; rss: 1210MB	codegen passes [2]
time: 0.005; rss: 1212MB	llvm function passes [6]
time: 0.005; rss: 1212MB	codegen passes [0]
time: 0.002; rss: 1212MB	llvm module passes [6]
time: 0.001; rss: 1212MB	llvm function passes [0]
time: 0.000; rss: 1212MB	llvm module passes [0]
time: 0.008; rss: 1218MB	codegen passes [3]
time: 0.012; rss: 1218MB	llvm function passes [5]
time: 0.017; rss: 1220MB	llvm function passes [4]
time: 0.006; rss: 1220MB	llvm module passes [5]
time: 0.016; rss: 1229MB	llvm module passes [4]
time: 0.035; rss: 1232MB	codegen passes [0]
time: 0.000; rss: 1232MB	llvm function passes [0]
time: 0.000; rss: 1232MB	llvm module passes [0]
time: 0.001; rss: 1232MB	codegen passes [0]
time: 0.003; rss: 1232MB	llvm function passes [0]
time: 0.001; rss: 1232MB	llvm module passes [0]
time: 0.042; rss: 1232MB	llvm function passes [47]
time: 0.043; rss: 1232MB	llvm function passes [42]
time: 0.035; rss: 1232MB	llvm function passes [44]
time: 0.009; rss: 1232MB	llvm module passes [42]
time: 0.014; rss: 1232MB	llvm module passes [47]
time: 0.059; rss: 1232MB	codegen passes [1]
time: 0.012; rss: 1232MB	llvm module passes [44]
time: 0.041; rss: 1232MB	llvm function passes [7]
time: 0.008; rss: 1244MB	llvm module passes [7]
time: 0.068; rss: 1244MB	llvm function passes [3]
time: 0.082; rss: 1263MB	codegen passes [6]
time: 0.037; rss: 1263MB	llvm module passes [3]
time: 0.123; rss: 1263MB	llvm function passes [8]
time: 0.000; rss: 1270MB	llvm function passes [41]
time: 0.000; rss: 1273MB	llvm function passes [9]
time: 0.000; rss: 1273MB	llvm module passes [9]
time: 0.001; rss: 1273MB	codegen passes [9]
time: 0.082; rss: 1273MB	codegen passes [0]
time: 0.044; rss: 1274MB	llvm function passes [49]
time: 0.000; rss: 1273MB	llvm module passes [49]
time: 0.011; rss: 1273MB	llvm module passes [41]
time: 0.004; rss: 1277MB	codegen passes [41]
time: 0.046; rss: 1285MB	llvm function passes [48]
time: 0.000; rss: 1285MB	llvm module passes [48]
time: 0.026; rss: 1285MB	llvm function passes [10]
time: 0.009; rss: 1292MB	llvm module passes [10]
time: 0.024; rss: 1292MB	codegen passes [49]
time: 0.110; rss: 1297MB	llvm function passes [1]
time: 0.013; rss: 1299MB	llvm function passes [49]
time: 0.008; rss: 1299MB	llvm module passes [49]
time: 0.068; rss: 1299MB	llvm module passes [8]
time: 0.037; rss: 1301MB	llvm function passes [14]
time: 0.003; rss: 1301MB	llvm module passes [14]
time: 0.071; rss: 1303MB	codegen passes [48]
time: 0.095; rss: 1302MB	llvm function passes [40]
time: 0.221; rss: 1302MB	llvm function passes [43]
time: 0.235; rss: 1302MB	llvm function passes [2]
time: 0.096; rss: 1302MB	llvm function passes [11]
time: 0.021; rss: 1302MB	llvm module passes [40]
time: 0.027; rss: 1302MB	llvm function passes [48]
time: 0.002; rss: 1302MB	llvm module passes [48]
time: 0.105; rss: 1308MB	llvm function passes [39]
time: 0.180; rss: 1314MB	llvm function passes [46]
time: 0.028; rss: 1314MB	llvm module passes [11]
time: 0.020; rss: 1316MB	llvm module passes [39]
time: 0.128; rss: 1320MB	llvm function passes [12]
time: 0.034; rss: 1319MB	codegen passes [48]
time: 0.024; rss: 1319MB	llvm module passes [12]
time: 0.004; rss: 1320MB	llvm function passes [21]
time: 0.127; rss: 1324MB	llvm function passes [13]
time: 0.061; rss: 1324MB	llvm module passes [46]
time: 0.012; rss: 1324MB	llvm module passes [13]
time: 0.035; rss: 1323MB	llvm module passes [21]
time: 0.186; rss: 1323MB	llvm module passes [1]
time: 0.230; rss: 1332MB	llvm function passes [41]
time: 0.174; rss: 1332MB	llvm function passes [36]
time: 0.165; rss: 1331MB	llvm module passes [43]
time: 0.173; rss: 1335MB	llvm module passes [2]
time: 0.018; rss: 1335MB	llvm module passes [36]
time: 0.107; rss: 1336MB	llvm function passes [15]
time: 0.288; rss: 1337MB	llvm function passes [9]
time: 0.016; rss: 1339MB	llvm module passes [15]
time: 0.065; rss: 1349MB	llvm function passes [23]
time: 0.000; rss: 1349MB	llvm module passes [23]
time: 0.069; rss: 1376MB	llvm module passes [41]
time: 0.064; rss: 1394MB	llvm module passes [9]
time: 0.378; rss: 1394MB	llvm function passes [6]
time: 0.037; rss: 1394MB	codegen passes [23]
time: 0.077; rss: 1395MB	codegen passes [24]
time: 0.224; rss: 1394MB	llvm function passes [18]
time: 0.196; rss: 1402MB	llvm function passes [22]
time: 0.294; rss: 1402MB	codegen passes [14]
time: 0.055; rss: 1410MB	llvm module passes [18]
time: 0.404; rss: 1410MB	llvm function passes [38]
time: 0.293; rss: 1410MB	llvm function passes [19]
time: 0.055; rss: 1402MB	llvm module passes [22]
time: 0.597; rss: 1408MB	llvm function passes [45]
time: 0.070; rss: 1408MB	llvm module passes [19]
time: 0.168; rss: 1403MB	llvm function passes [16]
time: 0.174; rss: 1409MB	llvm module passes [38]
time: 0.613; rss: 1409MB	llvm function passes [0]
time: 0.085; rss: 1419MB	llvm module passes [16]
time: 0.480; rss: 1416MB	llvm function passes [20]
time: 0.305; rss: 1416MB	llvm module passes [6]
time: 0.682; rss: 1415MB	codegen passes [5]
time: 0.386; rss: 1415MB	llvm function passes [32]
time: 0.484; rss: 1417MB	codegen passes [21]
time: 0.562; rss: 1418MB	llvm function passes [48]
time: 0.157; rss: 1429MB	llvm module passes [20]
time: 0.272; rss: 1450MB	llvm module passes [32]
time: 0.327; rss: 1438MB	llvm module passes [48]
time: 0.463; rss: 1446MB	llvm module passes [0]
time: 1.235; rss: 1463MB	codegen passes [7]
time: 0.693; rss: 1447MB	codegen passes [22]
time: 1.048; rss: 1436MB	codegen passes [4]
time: 0.956; rss: 1415MB	codegen passes [49]
time: 0.884; rss: 1410MB	llvm module passes [45]
time: 1.649; rss: 1445MB	codegen passes [42]
time: 1.232; rss: 1443MB	codegen passes [18]
time: 1.648; rss: 1422MB	codegen passes [44]
time: 1.609; rss: 1413MB	codegen passes [39]
time: 1.812; rss: 1432MB	codegen passes [47]
time: 1.927; rss: 1474MB	codegen passes [13]
time: 1.919; rss: 1481MB	codegen passes [1]
time: 1.905; rss: 1478MB	codegen passes [15]
time: 2.087; rss: 1472MB	codegen passes [36]
time: 2.210; rss: 1462MB	codegen passes [40]
time: 2.243; rss: 1475MB	codegen passes [10]
time: 2.769; rss: 1562MB	codegen passes [12]
time: 2.632; rss: 1537MB	codegen passes [3]
time: 2.308; rss: 1552MB	codegen passes [20]
time: 2.943; rss: 1573MB	codegen passes [11]
time: 2.984; rss: 1588MB	codegen passes [6]
time: 3.473; rss: 1618MB	codegen passes [46]
time: 2.907; rss: 1601MB	codegen passes [32]
time: 3.466; rss: 1584MB	codegen passes [9]
time: 4.077; rss: 1652MB	codegen passes [8]
time: 3.676; rss: 1664MB	codegen passes [0]
time: 3.776; rss: 1618MB	codegen passes [48]
time: 4.405; rss: 1583MB	codegen passes [41]
time: 4.689; rss: 1601MB	codegen passes [19]
time: 4.575; rss: 1539MB	codegen passes [16]
time: 5.080; rss: 1502MB	codegen passes [43]
time: 5.408; rss: 1478MB	codegen passes [38]
time: 5.554; rss: 1408MB	codegen passes [2]
time: 4.512; rss: 1334MB	codegen passes [45]
time: 7.640; rss: 1333MB	LLVM passes
time: 0.000; rss: 1333MB	serialize work products
time: 1.296; rss: 288MB	linking
done
