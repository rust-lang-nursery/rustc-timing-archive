commit 19765f2ab18ebb79f8615951b7cb8b86d896ecda
Merge: 1ece9ca ac73335
Author: bors <bors@rust-lang.org>
Date:   Mon Aug 1 20:05:57 2016 -0700

    Auto merge of #35054 - pwoolcoc:stringfromchars, r=brson
    
    implement `From<Vec<char>>` and `From<&'a [char]>` for `String`
    
    Though there are ways to convert a slice or vec of chars into a string,
    it would be nice to be able to just do `String::from(&['a', 'b', 'c'])`,
    so this PR implements `From<Vec<char>>` and `From<&'a [char]>` for
    String.
rustc: ./jld-day15-parser
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling combine v1.3.0
   Compiling day15 v0.1.0 (file:///root/benchmarks/jld-day15-parser)
time: 0.001; rss: 50MB	parsing
Lines of code:             72
Pre-expansion node count:  654
time: 0.000; rss: 50MB	configuration
time: 0.000; rss: 50MB	recursion limit
time: 0.000; rss: 50MB	crate injection
time: 0.000; rss: 50MB	plugin loading
time: 0.000; rss: 50MB	plugin registration
time: 0.020; rss: 87MB	expansion
time: 0.000; rss: 87MB	maybe building test harness
time: 0.000; rss: 87MB	assigning node ids
Post-expansion node count: 1155
time: 0.000; rss: 87MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 87MB	complete gated feature checking
time: 0.000; rss: 87MB	collecting defs
time: 0.004; rss: 91MB	external crate/lib resolution
time: 0.000; rss: 91MB	early lint checks
time: 0.000; rss: 91MB	AST validation
time: 0.001; rss: 91MB	name resolution
time: 0.000; rss: 91MB	lowering ast -> hir
time: 0.000; rss: 91MB	indexing hir
time: 0.000; rss: 91MB	attribute checking
time: 0.000; rss: 91MB	language item collection
time: 0.000; rss: 91MB	lifetime resolution
time: 0.000; rss: 91MB	looking for entry point
time: 0.000; rss: 91MB	looking for plugin registrar
time: 0.000; rss: 91MB	region resolution
time: 0.000; rss: 91MB	loop checking
time: 0.000; rss: 91MB	static item recursion checking
time: 0.000; rss: 91MB	load_dep_graph
time: 0.001; rss: 91MB	type collecting
time: 0.000; rss: 91MB	variance inference
time: 0.005; rss: 91MB	coherence checking
time: 0.006; rss: 91MB	wf checking
time: 0.000; rss: 91MB	item-types checking
time: 0.046; rss: 99MB	item-bodies checking
time: 0.000; rss: 99MB	drop-impl checking
time: 0.001; rss: 99MB	const checking
time: 0.000; rss: 99MB	privacy checking
time: 0.000; rss: 99MB	stability index
time: 0.000; rss: 99MB	intrinsic checking
time: 0.000; rss: 99MB	effect checking
time: 0.000; rss: 103MB	match checking
time: 0.000; rss: 103MB	liveness checking
time: 0.001; rss: 103MB	rvalue checking
time: 0.001; rss: 103MB	MIR dump
time: 0.001; rss: 103MB	MIR passes
time: 0.001; rss: 103MB	borrow checking
time: 0.000; rss: 103MB	reachability checking
time: 0.000; rss: 103MB	death checking
time: 0.000; rss: 103MB	stability checking
time: 0.000; rss: 103MB	unused lib feature checking
time: 0.004; rss: 103MB	lint checking
time: 0.002; rss: 103MB	resolving dependency formats
time: 0.002; rss: 103MB	Prepare MIR codegen passes
  time: 0.000; rss: 103MB	write metadata
  time: 0.595; rss: 109MB	translation item collection
  time: 0.003; rss: 109MB	codegen unit partitioning
  time: 0.007; rss: 134MB	internalize symbols
time: 2.935; rss: 134MB	translation
time: 0.000; rss: 134MB	assert dep graph
time: 0.000; rss: 134MB	serialize dep graph
  time: 0.013; rss: 110MB	llvm function passes [0]
  time: 0.001; rss: 110MB	llvm module passes [0]
  time: 0.278; rss: 116MB	codegen passes [0]
  time: 0.000; rss: 116MB	codegen passes [0]
time: 0.294; rss: 115MB	LLVM passes
time: 0.000; rss: 115MB	serialize work products
  time: 0.120; rss: 108MB	running linker
time: 0.120; rss: 108MB	linking
done
