commit 1c11ea3aedebac562f5125e1cf22ac56a3a8993c
Merge: 82d8833 fa8c53b
Author: bors <bors@rust-lang.org>
Date:   Mon Nov 21 21:15:48 2016 -0600

    Auto merge of #37602 - jseyfried:directory_ownership, r=nikomatsakis
    
    parser: simplify directory ownership semantics
    
    This PR simplifies the semantics of "directory ownership". After this PR,
     - a non-inline module without a `#[path]` attribute (e.g. `mod foo;`) is allowed iff its parent module/block (whichever is nearer) is a directory owner,
     - an non-inline module is a directory owner iff its corresponding file is named `mod.rs` (c.f. [comment](https://github.com/rust-lang/rust/issues/32401#issuecomment-201021902)),
     - a block is never a directory owner (c.f. #31534), and
     - an inline module is a directory owner iff either
       - its parent module/block is a directory owner (again, c.f. #31534), or
       - it has a `#[path]` attribute (c.f. #36789).
    
    These semantics differ from today's in three orthogonal ways:
     - `#[path = "foo.rs"] mod foo;` is no longer a directory owner. This is a [breaking-change].
     - #36789 is generalized to apply to modules that are not directory owners in addition to blocks.
     - A macro-expanded non-inline module is only allowed where an ordinary non-inline module would be allowed. Today, we incorrectly allow macro-expanded non-inline modules in modules that are not directory owners (but not in blocks). This is a [breaking-change].
    
    Fixes #32401.
    r? @nikomatsakis
rustc: ./piston-image-0.10.3
cargo rustc  -- -Ztime-passes -Zinput-stats
   Compiling image v0.10.3 (file:///root/benchmarks/piston-image-0.10.3)
time: 0.037; rss: 54MB	parsing
Lines of code:             12000
Pre-expansion node count:  90152
time: 0.000; rss: 54MB	recursion limit
time: 0.000; rss: 54MB	crate injection
time: 0.000; rss: 54MB	plugin loading
time: 0.000; rss: 54MB	plugin registration
time: 0.066; rss: 95MB	expansion
time: 0.000; rss: 95MB	maybe building test harness
time: 0.001; rss: 95MB	maybe creating a macro crate
Post-expansion node count: 148881
time: 0.000; rss: 95MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 95MB	complete gated feature checking
time: 0.006; rss: 95MB	early lint checks
time: 0.002; rss: 95MB	AST validation
time: 0.018; rss: 97MB	name resolution
time: 0.012; rss: 105MB	lowering ast -> hir
time: 0.002; rss: 109MB	indexing hir
time: 0.002; rss: 109MB	attribute checking
time: 0.001; rss: 100MB	language item collection
time: 0.002; rss: 100MB	lifetime resolution
time: 0.000; rss: 100MB	looking for entry point
time: 0.000; rss: 100MB	looking for plugin registrar
time: 0.009; rss: 105MB	region resolution
time: 0.001; rss: 105MB	loop checking
time: 0.001; rss: 105MB	static item recursion checking
time: 0.050; rss: 103MB	compute_incremental_hashes_map
time: 0.000; rss: 103MB	load_dep_graph
time: 0.016; rss: 106MB	type collecting
time: 0.000; rss: 106MB	variance inference
time: 0.000; rss: 106MB	impl wf inference
time: 0.013; rss: 108MB	coherence checking
time: 0.067; rss: 109MB	wf checking
time: 0.132; rss: 111MB	item-types checking
time: 0.765; rss: 122MB	item-bodies checking
time: 0.000; rss: 122MB	drop-impl checking
time: 0.048; rss: 127MB	const checking
time: 0.009; rss: 127MB	privacy checking
time: 0.001; rss: 127MB	stability index
time: 0.006; rss: 127MB	intrinsic checking
time: 0.002; rss: 127MB	effect checking
time: 0.013; rss: 127MB	match checking
time: 0.009; rss: 127MB	liveness checking
time: 0.039; rss: 127MB	rvalue checking
time: 0.087; rss: 169MB	MIR dump
  time: 0.011; rss: 169MB	SimplifyCfg
  time: 0.019; rss: 169MB	QualifyAndPromoteConstants
  time: 0.022; rss: 169MB	TypeckMir
  time: 0.001; rss: 169MB	SimplifyBranches
  time: 0.004; rss: 169MB	SimplifyCfg
time: 0.058; rss: 169MB	MIR cleanup and validation
time: 0.106; rss: 169MB	borrow checking
time: 0.003; rss: 169MB	reachability checking
time: 0.007; rss: 169MB	death checking
time: 0.007; rss: 169MB	stability checking
time: 0.000; rss: 169MB	unused lib feature checking
time: 0.061; rss: 169MB	lint checking
time: 0.000; rss: 169MB	resolving dependency formats
  time: 0.000; rss: 169MB	NoLandingPads
  time: 0.005; rss: 169MB	SimplifyCfg
  time: 0.010; rss: 169MB	EraseRegions
  time: 0.002; rss: 169MB	AddCallGuards
  time: 0.041; rss: 173MB	ElaborateDrops
  time: 0.001; rss: 173MB	NoLandingPads
  time: 0.009; rss: 173MB	SimplifyCfg
  time: 0.006; rss: 173MB	InstCombine
  time: 0.002; rss: 173MB	Deaggregator
  time: 0.000; rss: 173MB	CopyPropagation
  time: 0.007; rss: 173MB	SimplifyLocals
  time: 0.002; rss: 173MB	AddCallGuards
  time: 0.000; rss: 173MB	PreTrans
time: 0.085; rss: 173MB	MIR optimisations
  time: 0.015; rss: 174MB	write metadata
  time: 0.413; rss: 188MB	translation item collection
  time: 0.021; rss: 192MB	codegen unit partitioning
  time: 0.018; rss: 314MB	internalize symbols
time: 2.278; rss: 314MB	translation
time: 0.000; rss: 314MB	assert dep graph
time: 0.000; rss: 314MB	serialize dep graph
  time: 0.205; rss: 226MB	llvm function passes [0]
  time: 0.083; rss: 230MB	llvm module passes [0]
  time: 4.187; rss: 231MB	codegen passes [0]
  time: 0.000; rss: 231MB	codegen passes [0]
time: 4.787; rss: 231MB	LLVM passes
time: 0.000; rss: 231MB	serialize work products
time: 0.127; rss: 103MB	linking
done
