commit 69e1f57dfbd32a1a342d696a3e79624da97ebe1b
Merge: d70ab2b 834fb17
Author: bors <bors@rust-lang.org>
Date:   Mon Jan 11 06:40:58 2016 +0000

    Auto merge of #30295 - jseyfried:fix_extern_crate_duplicate, r=nrc
    
    Fix a bug allowing an item and an external crate to collide so long as the external crate is declared after the item. For example,
    ```rust
    mod core { pub fn f() {} } // This would be an error if it followed the `extern crate`
    extern crate core; // This declaration is shadowed by the preceding module
    
    fn main() { core::f(); }
    ```
    This is a [breaking-change], but it looks unlikely to cause breakage in practice, and any breakage can be fixed by removing colliding `extern crate` declarations, which are shadowed and hence unused.
rustc: ./regex.0.1.30
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling regex v0.1.30 (file:///root/benchmarks/regex.0.1.30)
time: 0.058; rss: 42MB	parsing
Lines of code:             8558
Pre-expansion node count:  58217
time: 0.011; rss: 42MB	configuration 1
time: 0.000; rss: 42MB	recursion limit
time: 0.001; rss: 42MB	gated macro checking
time: 0.000; rss: 42MB	crate injection
time: 0.003; rss: 45MB	macro loading
time: 0.000; rss: 45MB	plugin loading
time: 0.000; rss: 45MB	plugin registration
time: 0.065; rss: 49MB	expansion
time: 0.001; rss: 49MB	complete gated feature checking 1
time: 0.013; rss: 49MB	configuration 2
time: 0.000; rss: 49MB	gated configuration checking
time: 0.006; rss: 49MB	maybe building test harness
time: 0.006; rss: 49MB	prelude injection
time: 0.001; rss: 49MB	checking that all macro invocations are gone
time: 0.000; rss: 49MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 49MB	complete gated feature checking 2
Post-expansion node count: 68727
time: 0.006; rss: 49MB	assigning node ids
time: 0.009; rss: 56MB	lowering ast -> hir
time: 0.002; rss: 58MB	indexing hir
time: 0.000; rss: 58MB	attribute checking
time: 0.004; rss: 58MB	early lint checks
time: 0.001; rss: 51MB	external crate/lib resolution
time: 0.001; rss: 51MB	language item collection
time: 0.009; rss: 59MB	resolution
time: 0.001; rss: 59MB	lifetime resolution
time: 0.000; rss: 59MB	looking for entry point
time: 0.000; rss: 59MB	looking for plugin registrar
time: 0.006; rss: 63MB	region resolution
time: 0.001; rss: 63MB	loop checking
time: 0.001; rss: 63MB	static item recursion checking
time: 0.003; rss: 66MB	type collecting
time: 0.000; rss: 66MB	variance inference
time: 0.022; rss: 82MB	coherence checking
time: 0.008; rss: 82MB	wf checking
time: 0.094; rss: 87MB	item-types checking
time: 0.211; rss: 103MB	item-bodies checking
time: 0.000; rss: 103MB	drop-impl checking
time: 0.027; rss: 105MB	const checking
time: 0.004; rss: 105MB	privacy checking
time: 0.000; rss: 105MB	stability index
time: 0.001; rss: 105MB	intrinsic checking
time: 0.001; rss: 105MB	effect checking
time: 0.003; rss: 105MB	match checking
time: 0.015; rss: 108MB	MIR dump
time: 0.003; rss: 108MB	liveness checking
time: 0.021; rss: 108MB	borrow checking
time: 0.008; rss: 108MB	rvalue checking
time: 0.000; rss: 108MB	reachability checking
time: 0.002; rss: 108MB	death checking
time: 0.003; rss: 108MB	stability checking
time: 0.000; rss: 108MB	unused lib feature checking
time: 0.028; rss: 108MB	lint checking
time: 0.000; rss: 108MB	resolving dependency formats
time: 0.002; rss: 108MB	erasing regions from MIR
  time: 0.131; rss: 171MB	write metadata
time: 0.612; rss: 171MB	translation
  time: 0.038; rss: 111MB	llvm function passes [0]
  time: 0.020; rss: 111MB	llvm module passes [0]
  time: 0.609; rss: 137MB	codegen passes [0]
  time: 0.001; rss: 126MB	codegen passes [0]
time: 0.746; rss: 124MB	LLVM passes
time: 0.067; rss: 123MB	linking
done
