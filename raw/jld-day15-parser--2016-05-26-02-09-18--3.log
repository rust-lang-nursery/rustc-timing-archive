commit d5759a3417fa395d439f4283825504dd4f78dc87
Merge: 267cde2 cae91d7
Author: bors <bors@rust-lang.org>
Date:   Wed May 25 20:36:09 2016 -0700

    Auto merge of #33699 - alexcrichton:stabilize-1.10, r=aturon
    
    std: Stabilize APIs for the 1.10 release
    
    This commit applies the FCP decisions made by the libs team for the 1.10 cycle,
    including both new stabilizations and deprecations. Specifically, the list of
    APIs is:
    
    Stabilized:
    
    * `os::windows::fs::OpenOptionsExt::access_mode`
    * `os::windows::fs::OpenOptionsExt::share_mode`
    * `os::windows::fs::OpenOptionsExt::custom_flags`
    * `os::windows::fs::OpenOptionsExt::attributes`
    * `os::windows::fs::OpenOptionsExt::security_qos_flags`
    * `os::unix::fs::OpenOptionsExt::custom_flags`
    * `sync::Weak::new`
    * `Default for sync::Weak`
    * `panic::set_hook`
    * `panic::take_hook`
    * `panic::PanicInfo`
    * `panic::PanicInfo::payload`
    * `panic::PanicInfo::location`
    * `panic::Location`
    * `panic::Location::file`
    * `panic::Location::line`
    * `ffi::CStr::from_bytes_with_nul`
    * `ffi::CStr::from_bytes_with_nul_unchecked`
    * `ffi::FromBytesWithNulError`
    * `fs::Metadata::modified`
    * `fs::Metadata::accessed`
    * `fs::Metadata::created`
    * `sync::atomic::Atomic{Usize,Isize,Bool,Ptr}::compare_exchange`
    * `sync::atomic::Atomic{Usize,Isize,Bool,Ptr}::compare_exchange_weak`
    * `collections::{btree,hash}_map::{Occupied,Vacant,}Entry::key`
    * `os::unix::net::{UnixStream, UnixListener, UnixDatagram, SocketAddr}`
    * `SocketAddr::is_unnamed`
    * `SocketAddr::as_pathname`
    * `UnixStream::connect`
    * `UnixStream::pair`
    * `UnixStream::try_clone`
    * `UnixStream::local_addr`
    * `UnixStream::peer_addr`
    * `UnixStream::set_read_timeout`
    * `UnixStream::set_write_timeout`
    * `UnixStream::read_timeout`
    * `UnixStream::write_Timeout`
    * `UnixStream::set_nonblocking`
    * `UnixStream::take_error`
    * `UnixStream::shutdown`
    * Read/Write/RawFd impls for `UnixStream`
    * `UnixListener::bind`
    * `UnixListener::accept`
    * `UnixListener::try_clone`
    * `UnixListener::local_addr`
    * `UnixListener::set_nonblocking`
    * `UnixListener::take_error`
    * `UnixListener::incoming`
    * RawFd impls for `UnixListener`
    * `UnixDatagram::bind`
    * `UnixDatagram::unbound`
    * `UnixDatagram::pair`
    * `UnixDatagram::connect`
    * `UnixDatagram::try_clone`
    * `UnixDatagram::local_addr`
    * `UnixDatagram::peer_addr`
    * `UnixDatagram::recv_from`
    * `UnixDatagram::recv`
    * `UnixDatagram::send_to`
    * `UnixDatagram::send`
    * `UnixDatagram::set_read_timeout`
    * `UnixDatagram::set_write_timeout`
    * `UnixDatagram::read_timeout`
    * `UnixDatagram::write_timeout`
    * `UnixDatagram::set_nonblocking`
    * `UnixDatagram::take_error`
    * `UnixDatagram::shutdown`
    * RawFd impls for `UnixDatagram`
    * `{BTree,Hash}Map::values_mut`
    * `<[_]>::binary_search_by_key`
    
    Deprecated:
    
    * `StaticCondvar` - this, and all other static synchronization primitives
                        below, are usable today through the lazy-static crate on
                        stable Rust today. Additionally, we'd like the non-static
                        versions to be directly usable in a static context one day,
                        so they're unlikely to be the final forms of the APIs in any
                        case.
    * `CONDVAR_INIT`
    * `StaticMutex`
    * `MUTEX_INIT`
    * `StaticRwLock`
    * `RWLOCK_INIT`
    * `iter::Peekable::is_empty`
    
    Closes #27717
    Closes #27720
    Closes #30014
    Closes #30425
    Closes #30449
    Closes #31190
    Closes #31399
    Closes #31767
    Closes #32111
    Closes #32281
    Closes #32312
    Closes #32551
    Closes #33018
rustc: ./jld-day15-parser
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling day15 v0.1.0 (file:///root/benchmarks/jld-day15-parser)
time: 0.001; rss: 44MB	parsing
Lines of code:             72
Pre-expansion node count:  673
time: 0.000; rss: 44MB	configuration 1
time: 0.000; rss: 44MB	recursion limit
time: 0.000; rss: 44MB	crate injection
time: 0.018; rss: 82MB	macro loading
time: 0.000; rss: 82MB	plugin loading
time: 0.000; rss: 82MB	plugin registration
time: 0.002; rss: 82MB	expansion
time: 0.000; rss: 82MB	configuration 2
time: 0.000; rss: 82MB	gated configuration checking
time: 0.000; rss: 82MB	maybe building test harness
time: 0.000; rss: 82MB	prelude injection
time: 0.000; rss: 82MB	checking that all macro invocations are gone
time: 0.000; rss: 82MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 82MB	complete gated feature checking
Post-expansion node count: 1176
time: 0.000; rss: 82MB	assigning node ids
time: 0.000; rss: 82MB	collecting defs
time: 0.004; rss: 86MB	external crate/lib resolution
time: 0.000; rss: 86MB	early lint checks
time: 0.001; rss: 86MB	name resolution
time: 0.000; rss: 86MB	lowering ast -> hir
time: 0.000; rss: 86MB	indexing hir
time: 0.000; rss: 86MB	attribute checking
time: 0.000; rss: 86MB	language item collection
time: 0.000; rss: 86MB	lifetime resolution
time: 0.000; rss: 86MB	looking for entry point
time: 0.000; rss: 86MB	looking for plugin registrar
time: 0.000; rss: 86MB	region resolution
time: 0.000; rss: 86MB	loop checking
time: 0.000; rss: 86MB	static item recursion checking
time: 0.000; rss: 86MB	load_dep_graph
time: 0.001; rss: 90MB	type collecting
time: 0.000; rss: 90MB	variance inference
time: 0.005; rss: 90MB	coherence checking
time: 0.007; rss: 90MB	wf checking
time: 0.000; rss: 90MB	item-types checking
time: 1.143; rss: 108MB	item-bodies checking
time: 0.000; rss: 108MB	drop-impl checking
time: 0.001; rss: 108MB	const checking
time: 0.000; rss: 108MB	privacy checking
time: 0.000; rss: 108MB	stability index
time: 0.000; rss: 108MB	intrinsic checking
time: 0.000; rss: 108MB	effect checking
time: 0.000; rss: 108MB	match checking
time: 0.000; rss: 108MB	liveness checking
time: 0.000; rss: 108MB	rvalue checking
time: 0.001; rss: 109MB	MIR dump
time: 0.001; rss: 109MB	MIR passes
time: 0.001; rss: 109MB	borrow checking
time: 0.000; rss: 109MB	reachability checking
time: 0.000; rss: 109MB	death checking
time: 0.000; rss: 109MB	stability checking
time: 0.000; rss: 109MB	unused lib feature checking
time: 0.004; rss: 110MB	lint checking
time: 0.002; rss: 110MB	resolving dependency formats
time: 0.000; rss: 110MB	Prepare MIR codegen passes
  time: 0.000; rss: 111MB	write metadata
  time: 24.001; rss: 117MB	translation item collection
  time: 0.000; rss: 117MB	codegen unit partitioning
time: 73.425; rss: 143MB	translation
time: 0.000; rss: 143MB	assert dep graph
time: 0.000; rss: 143MB	serialize dep graph
  time: 0.014; rss: 109MB	llvm function passes [0]
  time: 0.001; rss: 109MB	llvm module passes [0]
  time: 0.275; rss: 115MB	codegen passes [0]
  time: 0.000; rss: 109MB	codegen passes [0]
time: 0.299; rss: 108MB	LLVM passes
  time: 0.118; rss: 108MB	running linker
time: 0.119; rss: 108MB	linking
done
