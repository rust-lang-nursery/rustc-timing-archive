commit 0b46947d35e9fdc35cd06dd889c3c3a892d7ddf8
Merge: da2ce22 1dad4b6
Author: bors <bors@rust-lang.org>
Date:   Wed Nov 9 15:13:58 2016 -0800

    Auto merge of #37603 - arielb1:max-slice-length, r=nikomatsakis
    
    _match: correct max_slice_length logic
    
    The logic used to be wildly wrong, but before the HAIR patch its wrongness was in most cases hidden by another bug.
    
    Fixes #37598.
    
    r? @nikomatsakis
rustc: ./syntex-0.42.2
cargo rustc -p syntex_syntax -- -Ztime-passes -Zinput-stats
   Compiling syntex_syntax v0.42.0
time: 0.093; rss: 70MB	parsing
Lines of code:             33687
Pre-expansion node count:  224033
time: 0.000; rss: 70MB	recursion limit
time: 0.000; rss: 70MB	crate injection
time: 0.000; rss: 70MB	plugin loading
time: 0.000; rss: 70MB	plugin registration
time: 0.235; rss: 143MB	expansion
time: 0.000; rss: 143MB	maybe building test harness
time: 0.006; rss: 143MB	maybe creating a macro crate
Post-expansion node count: 641571
time: 0.000; rss: 143MB	checking for inline asm in case the target doesn't support it
time: 0.013; rss: 143MB	complete gated feature checking
time: 0.022; rss: 143MB	early lint checks
time: 0.007; rss: 143MB	AST validation
time: 0.077; rss: 158MB	name resolution
time: 0.044; rss: 183MB	lowering ast -> hir
time: 0.008; rss: 194MB	indexing hir
time: 0.006; rss: 194MB	attribute checking
time: 0.004; rss: 150MB	language item collection
time: 0.010; rss: 150MB	lifetime resolution
time: 0.000; rss: 150MB	looking for entry point
time: 0.000; rss: 150MB	looking for plugin registrar
time: 0.037; rss: 160MB	region resolution
time: 0.004; rss: 160MB	loop checking
time: 0.004; rss: 160MB	static item recursion checking
time: 0.325; rss: 161MB	compute_incremental_hashes_map
time: 0.000; rss: 161MB	load_dep_graph
time: 0.038; rss: 166MB	type collecting
time: 0.001; rss: 166MB	variance inference
time: 0.032; rss: 173MB	coherence checking
time: 0.090; rss: 176MB	wf checking
time: 0.185; rss: 182MB	item-types checking
time: 3.240; rss: 229MB	item-bodies checking
time: 0.000; rss: 229MB	drop-impl checking
time: 0.213; rss: 234MB	const checking
time: 0.045; rss: 234MB	privacy checking
time: 0.005; rss: 234MB	stability index
time: 0.018; rss: 234MB	intrinsic checking
time: 0.014; rss: 234MB	effect checking
time: 0.047; rss: 234MB	match checking
time: 0.049; rss: 226MB	liveness checking
time: 0.180; rss: 226MB	rvalue checking
time: 0.379; rss: 418MB	MIR dump
  time: 0.056; rss: 422MB	SimplifyCfg
  time: 0.074; rss: 422MB	QualifyAndPromoteConstants
  time: 0.100; rss: 422MB	TypeckMir
  time: 0.004; rss: 422MB	SimplifyBranches
  time: 0.030; rss: 422MB	SimplifyCfg
time: 0.265; rss: 422MB	MIR cleanup and validation
time: 0.491; rss: 423MB	borrow checking
time: 0.019; rss: 423MB	reachability checking
time: 0.039; rss: 423MB	death checking
time: 0.036; rss: 423MB	stability checking
time: 0.000; rss: 423MB	unused lib feature checking
time: 0.201; rss: 423MB	lint checking
time: 0.000; rss: 423MB	resolving dependency formats
  time: 0.003; rss: 423MB	NoLandingPads
  time: 0.026; rss: 423MB	SimplifyCfg
  time: 0.063; rss: 431MB	EraseRegions
  time: 0.011; rss: 432MB	AddCallGuards
  time: 0.272; rss: 447MB	ElaborateDrops
  time: 0.003; rss: 447MB	NoLandingPads
  time: 0.051; rss: 448MB	SimplifyCfg
  time: 0.028; rss: 448MB	InstCombine
  time: 0.012; rss: 448MB	Deaggregator
  time: 0.002; rss: 448MB	CopyPropagation
  time: 0.035; rss: 448MB	SimplifyLocals
  time: 0.010; rss: 448MB	AddCallGuards
  time: 0.003; rss: 448MB	PreTrans
time: 0.520; rss: 448MB	MIR optimisations
  time: 0.059; rss: 457MB	write metadata
  time: 0.400; rss: 470MB	translation item collection
  time: 0.055; rss: 479MB	codegen unit partitioning
  time: 0.049; rss: 726MB	internalize symbols
time: 4.521; rss: 726MB	translation
time: 0.000; rss: 726MB	assert dep graph
time: 0.000; rss: 726MB	serialize dep graph
  time: 0.532; rss: 420MB	llvm function passes [0]
  time: 0.262; rss: 429MB	llvm module passes [0]
  time: 10.494; rss: 420MB	codegen passes [0]
  time: 0.000; rss: 420MB	codegen passes [0]
time: 12.058; rss: 420MB	LLVM passes
time: 0.000; rss: 420MB	serialize work products
time: 0.344; rss: 105MB	linking
done
