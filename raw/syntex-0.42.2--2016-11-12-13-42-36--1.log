commit 026add5f06191dfbd592a4f02bb4a38866553c63
Merge: acce384 1a5456b
Author: bors <bors@rust-lang.org>
Date:   Sat Nov 12 08:41:30 2016 -0800

    Auto merge of #37531 - estebank:fix-ref-mut-mut, r=jonathandturner
    
    Fix invalid "ref mut mut" sugestion
    
    Change output from:
    
    ```nocode
    error: cannot borrow immutable local variable `x` as mutable
      --> <anon>:12:23
       |
    11 |         TestEnum::Item(ref mut x) => {
       |                        --------- use `ref mut mut x` here to make mutable
    12 |             test(&mut x);
       |                       ^ cannot borrow mutably
    ```
    
    to
    
    ```nocode
    error: cannot borrow immutable local variable `x` as mutable
      --> <anon>:12:23
       |
    12 |             test(&mut x);
       |                       ^
       |                       |
       |                       cannot reborrow mutably
       |                       try removing `&mut` here
    ```
    Fixes #37139, #34337, #34126
rustc: ./syntex-0.42.2
cargo rustc -p syntex_syntax  -- -Ztime-passes -Zinput-stats
   Compiling syntex_syntax v0.42.0
time: 0.091; rss: 71MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 71MB	recursion limit
time: 0.000; rss: 71MB	crate injection
time: 0.000; rss: 71MB	plugin loading
time: 0.000; rss: 71MB	plugin registration
time: 0.233; rss: 144MB	expansion
time: 0.000; rss: 144MB	maybe building test harness
time: 0.006; rss: 144MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 144MB	checking for inline asm in case the target doesn't support it
time: 0.013; rss: 144MB	complete gated feature checking
time: 0.023; rss: 144MB	early lint checks
time: 0.007; rss: 144MB	AST validation
time: 0.076; rss: 159MB	name resolution
time: 0.043; rss: 184MB	lowering ast -> hir
time: 0.008; rss: 194MB	indexing hir
time: 0.006; rss: 194MB	attribute checking
time: 0.005; rss: 151MB	language item collection
time: 0.010; rss: 151MB	lifetime resolution
time: 0.000; rss: 151MB	looking for entry point
time: 0.000; rss: 151MB	looking for plugin registrar
time: 0.040; rss: 171MB	region resolution
time: 0.005; rss: 171MB	loop checking
time: 0.004; rss: 171MB	static item recursion checking
time: 0.326; rss: 171MB	compute_incremental_hashes_map
time: 0.000; rss: 171MB	load_dep_graph
time: 0.046; rss: 170MB	type collecting
time: 0.001; rss: 170MB	variance inference
time: 0.018; rss: 174MB	coherence checking
time: 0.093; rss: 176MB	wf checking
time: 0.181; rss: 186MB	item-types checking
time: 3.263; rss: 232MB	item-bodies checking
time: 0.000; rss: 232MB	drop-impl checking
time: 0.212; rss: 253MB	const checking
time: 0.045; rss: 253MB	privacy checking
time: 0.005; rss: 253MB	stability index
time: 0.017; rss: 253MB	intrinsic checking
time: 0.014; rss: 253MB	effect checking
time: 0.045; rss: 253MB	match checking
time: 0.048; rss: 246MB	liveness checking
time: 0.174; rss: 246MB	rvalue checking
time: 0.370; rss: 437MB	MIR dump
  time: 0.057; rss: 439MB	SimplifyCfg
  time: 0.071; rss: 439MB	QualifyAndPromoteConstants
  time: 0.098; rss: 439MB	TypeckMir
  time: 0.004; rss: 439MB	SimplifyBranches
  time: 0.032; rss: 439MB	SimplifyCfg
time: 0.262; rss: 439MB	MIR cleanup and validation
time: 0.473; rss: 440MB	borrow checking
time: 0.025; rss: 440MB	reachability checking
time: 0.039; rss: 440MB	death checking
time: 0.030; rss: 442MB	stability checking
time: 0.000; rss: 442MB	unused lib feature checking
time: 0.197; rss: 442MB	lint checking
time: 0.000; rss: 442MB	resolving dependency formats
  time: 0.003; rss: 442MB	NoLandingPads
  time: 0.027; rss: 442MB	SimplifyCfg
  time: 0.060; rss: 448MB	EraseRegions
  time: 0.011; rss: 448MB	AddCallGuards
  time: 0.264; rss: 464MB	ElaborateDrops
  time: 0.003; rss: 464MB	NoLandingPads
  time: 0.052; rss: 464MB	SimplifyCfg
  time: 0.028; rss: 464MB	InstCombine
  time: 0.012; rss: 464MB	Deaggregator
  time: 0.002; rss: 464MB	CopyPropagation
  time: 0.034; rss: 465MB	SimplifyLocals
  time: 0.010; rss: 465MB	AddCallGuards
  time: 0.003; rss: 465MB	PreTrans
time: 0.509; rss: 465MB	MIR optimisations
  time: 0.060; rss: 476MB	write metadata
  time: 0.379; rss: 485MB	translation item collection
  time: 0.055; rss: 496MB	codegen unit partitioning
  time: 0.048; rss: 741MB	internalize symbols
time: 4.547; rss: 741MB	translation
time: 0.000; rss: 741MB	assert dep graph
time: 0.000; rss: 741MB	serialize dep graph
  time: 0.523; rss: 419MB	llvm function passes [0]
  time: 0.247; rss: 428MB	llvm module passes [0]
  time: 10.269; rss: 420MB	codegen passes [0]
  time: 0.000; rss: 420MB	codegen passes [0]
time: 11.803; rss: 420MB	LLVM passes
time: 0.000; rss: 420MB	serialize work products
time: 0.345; rss: 105MB	linking
done
