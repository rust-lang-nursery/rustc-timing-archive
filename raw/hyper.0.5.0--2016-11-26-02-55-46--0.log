commit d64b7030658c839c60d7c7165e8be19283c3f28c
Merge: 2217bd7 49c6b3c
Author: bors <bors@rust-lang.org>
Date:   Fri Nov 25 20:19:47 2016 -0600

    Auto merge of #37960 - samestep:five, r=frewsxcv
    
    Use literal 5 instead of five in book section 4.1
    
    The other two code snippets in this sentence are valid code, so it makes more sense to use the literal `5` rather than the invalid symbol `five`.
rustc: ./hyper.0.5.0
cargo rustc  -- -Ztime-passes -Zinput-stats
   Compiling gcc v0.3.35
   Compiling lazy_static v0.1.16
   Compiling pkg-config v0.3.8
   Compiling libc v0.1.12
   Compiling typeable v0.1.2
   Compiling unicase v0.1.0
   Compiling bitflags v0.3.3
   Compiling httparse v0.1.6
   Compiling winapi-build v0.1.1
   Compiling matches v0.1.2
   Compiling libc v0.2.16
   Compiling traitobject v0.0.1
   Compiling log v0.3.6
   Compiling rustc-serialize v0.3.19
   Compiling winapi v0.2.8
   Compiling kernel32-sys v0.2.2
   Compiling mime v0.0.11
   Compiling num_cpus v0.2.13
   Compiling rand v0.3.14
   Compiling time v0.1.35
   Compiling openssl-sys v0.6.7
   Compiling openssl v0.6.7
   Compiling uuid v0.1.18
   Compiling url v0.2.38
   Compiling cookie v0.1.21
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.033; rss: 44MB	parsing
Lines of code:             9003
Pre-expansion node count:  44055
time: 0.000; rss: 44MB	recursion limit
time: 0.000; rss: 44MB	crate injection
time: 0.000; rss: 44MB	plugin loading
time: 0.000; rss: 44MB	plugin registration
time: 0.098; rss: 82MB	expansion
time: 0.000; rss: 82MB	maybe building test harness
time: 0.001; rss: 82MB	maybe creating a macro crate
Post-expansion node count: 101769
time: 0.000; rss: 82MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 82MB	complete gated feature checking
time: 0.003; rss: 82MB	early lint checks
time: 0.001; rss: 82MB	AST validation
time: 0.017; rss: 86MB	name resolution
time: 0.014; rss: 89MB	lowering ast -> hir
time: 0.001; rss: 90MB	indexing hir
time: 0.001; rss: 90MB	attribute checking
time: 0.001; rss: 85MB	language item collection
time: 0.002; rss: 85MB	lifetime resolution
time: 0.000; rss: 85MB	looking for entry point
time: 0.000; rss: 85MB	looking for plugin registrar
time: 0.008; rss: 88MB	region resolution
time: 0.001; rss: 88MB	loop checking
time: 0.001; rss: 88MB	static item recursion checking
time: 0.040; rss: 88MB	compute_incremental_hashes_map
time: 0.000; rss: 88MB	load_dep_graph
time: 0.014; rss: 90MB	type collecting
time: 0.000; rss: 90MB	variance inference
time: 0.001; rss: 90MB	impl wf inference
time: 0.014; rss: 92MB	coherence checking
time: 0.041; rss: 94MB	wf checking
time: 0.023; rss: 94MB	item-types checking
time: 0.468; rss: 102MB	item-bodies checking
time: 0.000; rss: 102MB	drop-impl checking
time: 0.052; rss: 104MB	const checking
time: 0.008; rss: 104MB	privacy checking
time: 0.001; rss: 104MB	stability index
time: 0.003; rss: 104MB	intrinsic checking
time: 0.001; rss: 104MB	effect checking
time: 0.007; rss: 104MB	match checking
time: 0.004; rss: 105MB	liveness checking
time: 0.020; rss: 105MB	rvalue checking
time: 0.064; rss: 125MB	MIR dump
  time: 0.007; rss: 126MB	SimplifyCfg
  time: 0.015; rss: 127MB	QualifyAndPromoteConstants
  time: 0.013; rss: 127MB	TypeckMir
  time: 0.001; rss: 127MB	SimplifyBranches
  time: 0.003; rss: 128MB	SimplifyCfg
time: 0.039; rss: 128MB	MIR cleanup and validation
time: 0.055; rss: 128MB	borrow checking
time: 0.003; rss: 128MB	reachability checking
time: 0.005; rss: 128MB	death checking
time: 0.004; rss: 129MB	stability checking
time: 0.000; rss: 129MB	unused lib feature checking
time: 0.037; rss: 129MB	lint checking
time: 0.000; rss: 129MB	resolving dependency formats
  time: 0.000; rss: 129MB	NoLandingPads
  time: 0.003; rss: 129MB	SimplifyCfg
  time: 0.008; rss: 129MB	EraseRegions
  time: 0.001; rss: 129MB	AddCallGuards
  time: 0.025; rss: 130MB	ElaborateDrops
  time: 0.000; rss: 130MB	NoLandingPads
  time: 0.005; rss: 130MB	SimplifyCfg
  time: 0.003; rss: 130MB	InstCombine
  time: 0.003; rss: 130MB	Deaggregator
  time: 0.000; rss: 130MB	CopyPropagation
  time: 0.004; rss: 130MB	SimplifyLocals
  time: 0.001; rss: 130MB	AddCallGuards
  time: 0.000; rss: 130MB	PreTrans
time: 0.054; rss: 130MB	MIR optimisations
  time: 0.015; rss: 132MB	write metadata
  time: 0.128; rss: 138MB	translation item collection
  time: 0.014; rss: 141MB	codegen unit partitioning
  time: 0.012; rss: 196MB	internalize symbols
time: 1.052; rss: 196MB	translation
time: 0.000; rss: 196MB	assert dep graph
time: 0.000; rss: 196MB	serialize dep graph
  time: 0.088; rss: 147MB	llvm function passes [0]
  time: 0.046; rss: 149MB	llvm module passes [0]
  time: 1.643; rss: 150MB	codegen passes [0]
  time: 0.000; rss: 149MB	codegen passes [0]
time: 1.943; rss: 149MB	LLVM passes
time: 0.000; rss: 149MB	serialize work products
time: 0.070; rss: 94MB	linking
done
