commit e25542cb02d946959517ebb68e2f7b1318817237
Merge: 197be89 f59f1f0
Author: bors <bors@rust-lang.org>
Date:   Tue Aug 16 00:12:12 2016 -0700

    Auto merge of #35162 - canndrew:bang_type_coerced, r=nikomatsakis
    
    Implement the `!` type
    
    This implements the never type (`!`) and hides it behind the feature gate `#[feature(never_type)]`. With the feature gate off, things should build as normal (although some error messages may be different). With the gate on, `!` is usable as a type and diverging type variables (ie. types that are unconstrained by anything in the code) will default to `!` instead of `()`.
rustc: ./issue-32278-big-array-of-strings
/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc big-array-of-strings.rs -Ztime-passes -Zinput-stats
time: 0.144; rss: 62MB	parsing
Lines of code:             65577
Pre-expansion node count:  65552
time: 0.006; rss: 62MB	configuration
time: 0.000; rss: 62MB	recursion limit
time: 0.000; rss: 62MB	crate injection
time: 0.000; rss: 62MB	plugin loading
time: 0.000; rss: 62MB	plugin registration
time: 0.024; rss: 98MB	expansion
time: 0.000; rss: 98MB	maybe building test harness
time: 0.004; rss: 98MB	assigning node ids
Post-expansion node count: 65565
time: 0.000; rss: 98MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 98MB	complete gated feature checking
time: 0.001; rss: 98MB	collecting defs
time: 0.003; rss: 98MB	external crate/lib resolution
time: 0.004; rss: 98MB	early lint checks
time: 0.000; rss: 98MB	AST validation
time: 0.002; rss: 98MB	name resolution
time: 0.007; rss: 118MB	lowering ast -> hir
time: 0.002; rss: 122MB	indexing hir
time: 0.001; rss: 122MB	attribute checking
time: 0.001; rss: 113MB	language item collection
time: 0.001; rss: 113MB	lifetime resolution
time: 0.000; rss: 113MB	looking for entry point
time: 0.000; rss: 113MB	looking for plugin registrar
time: 0.008; rss: 118MB	region resolution
time: 0.001; rss: 119MB	loop checking
time: 0.001; rss: 119MB	static item recursion checking
time: 0.000; rss: 119MB	load_dep_graph
time: 0.000; rss: 119MB	type collecting
time: 0.000; rss: 119MB	variance inference
time: 0.005; rss: 121MB	coherence checking
time: 0.001; rss: 121MB	wf checking
time: 0.908; rss: 138MB	item-types checking
time: 0.000; rss: 138MB	item-bodies checking
time: 0.000; rss: 138MB	drop-impl checking
time: 0.022; rss: 141MB	const checking
time: 0.002; rss: 141MB	privacy checking
time: 0.001; rss: 141MB	stability index
time: 0.001; rss: 141MB	intrinsic checking
time: 0.000; rss: 141MB	effect checking
time: 0.000; rss: 141MB	match checking
time: 0.001; rss: 141MB	liveness checking
time: 0.000; rss: 141MB	rvalue checking
time: 0.046; rss: 141MB	MIR dump
time: 0.002; rss: 141MB	MIR passes
time: 0.001; rss: 141MB	borrow checking
time: 0.000; rss: 141MB	reachability checking
time: 0.001; rss: 141MB	death checking
time: 0.001; rss: 141MB	stability checking
time: 0.000; rss: 141MB	unused lib feature checking
time: 0.026; rss: 141MB	lint checking
time: 0.001; rss: 141MB	resolving dependency formats
time: 0.001; rss: 141MB	Prepare MIR codegen passes
  time: 0.000; rss: 142MB	write metadata
  time: 0.001; rss: 142MB	translation item collection
  time: 0.000; rss: 142MB	codegen unit partitioning
  time: 0.001; rss: 155MB	internalize symbols
time: 0.073; rss: 155MB	translation
time: 0.000; rss: 155MB	assert dep graph
time: 0.000; rss: 155MB	serialize dep graph
  time: 0.009; rss: 105MB	llvm function passes [0]
  time: 0.000; rss: 105MB	llvm module passes [0]
  time: 0.179; rss: 104MB	codegen passes [0]
  time: 0.000; rss: 104MB	codegen passes [0]
time: 0.189; rss: 104MB	LLVM passes
time: 0.000; rss: 104MB	serialize work products
  time: 0.187; rss: 92MB	running linker
time: 0.189; rss: 92MB	linking
done
