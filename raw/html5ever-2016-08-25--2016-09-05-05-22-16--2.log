commit 2dbf600d159a5c65b53419f1669834d1f81496a7
Merge: 86995dc 92aa7e4
Author: bors <bors@rust-lang.org>
Date:   Sun Sep 4 23:50:04 2016 -0700

    Auto merge of #36242 - semarie:local-rebuild, r=alexcrichton
    
    Use libraries from local-rust-root directory in configure when using …
    
    …--enable-local-rebuild
    
    When using --enable-local-rebuild configure options, the configure
    script will test rustc version. But when running it, it will not use the
    libraries in the local-rust-root directory.
    
    So use `LD_LIBRARY_PATH` environment variable to correct it.
    
    Under OpenBSD, we use `--enable-local-rebuild` for rebuilding rustc-1.11.0 using rustc-1.11.0. But as it is in use in -current (the developpment branch of OpenBSD), system libraries could easily have ABI/API changes. The (unofficial) bootstrap (rustc-1.11.0 used for building rustc-1.11.0) include several system libraries to permit it to run. The build system use libraries in stage0/lib directory. But the configure script doesn't.
    
    Due to my special use of `--enable-local-rebuild`, I dunno if this PR is suitable for inclusion. But it corrects a difference between build and configure use of the binary.
    
    r? @alexcrichton
rustc: ./html5ever-2016-08-25
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling html5ever v0.5.4 (file:///root/benchmarks/html5ever-2016-08-25)
time: 0.029; rss: 52MB	parsing
Lines of code:             8210
Pre-expansion node count:  52238
time: 0.003; rss: 53MB	configuration
time: 0.000; rss: 53MB	recursion limit
time: 0.000; rss: 53MB	crate injection
time: 0.000; rss: 53MB	plugin loading
time: 0.000; rss: 53MB	plugin registration
time: 1.444; rss: 100MB	expansion
time: 0.000; rss: 100MB	maybe building test harness
time: 0.002; rss: 100MB	maybe creating a macro crate
time: 0.008; rss: 100MB	assigning node ids
Post-expansion node count: 164262
time: 0.000; rss: 100MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 100MB	complete gated feature checking
time: 0.005; rss: 102MB	collecting defs
time: 0.006; rss: 102MB	external crate/lib resolution
time: 0.009; rss: 102MB	early lint checks
time: 0.002; rss: 102MB	AST validation
time: 0.019; rss: 109MB	name resolution
time: 0.016; rss: 123MB	lowering ast -> hir
time: 0.004; rss: 127MB	indexing hir
time: 0.002; rss: 127MB	attribute checking
time: 0.002; rss: 109MB	language item collection
time: 0.003; rss: 109MB	lifetime resolution
time: 0.000; rss: 109MB	looking for entry point
time: 0.000; rss: 109MB	looking for plugin registrar
time: 0.017; rss: 114MB	region resolution
time: 0.002; rss: 114MB	loop checking
time: 0.003; rss: 114MB	static item recursion checking
time: 0.022; rss: 115MB	compute_incremental_hashes_map
time: 0.000; rss: 115MB	load_dep_graph
time: 0.014; rss: 116MB	type collecting
time: 0.000; rss: 116MB	variance inference
time: 0.027; rss: 120MB	coherence checking
time: 0.027; rss: 120MB	wf checking
time: 0.370; rss: 131MB	item-types checking
time: 0.590; rss: 144MB	item-bodies checking
time: 0.000; rss: 144MB	drop-impl checking
time: 0.077; rss: 147MB	const checking
time: 0.009; rss: 147MB	privacy checking
time: 0.002; rss: 147MB	stability index
time: 0.005; rss: 147MB	intrinsic checking
time: 0.003; rss: 147MB	effect checking
time: 0.028; rss: 147MB	match checking
time: 0.013; rss: 140MB	liveness checking
time: 0.032; rss: 140MB	rvalue checking
time: 0.124; rss: 184MB	MIR dump
time: 0.055; rss: 185MB	MIR passes
time: 0.097; rss: 190MB	borrow checking
time: 0.003; rss: 190MB	reachability checking
time: 0.007; rss: 190MB	death checking
time: 0.009; rss: 190MB	stability checking
time: 0.000; rss: 190MB	unused lib feature checking
time: 0.066; rss: 190MB	lint checking
time: 0.000; rss: 190MB	resolving dependency formats
time: 0.107; rss: 192MB	Prepare MIR codegen passes
  time: 0.060; rss: 192MB	write metadata
  time: 0.043; rss: 195MB	translation item collection
  time: 0.005; rss: 195MB	codegen unit partitioning
  time: 0.010; rss: 211MB	internalize symbols
time: 0.406; rss: 184MB	translation
time: 0.000; rss: 184MB	assert dep graph
time: 0.000; rss: 184MB	serialize dep graph
  time: 0.023; rss: 113MB	llvm function passes [0]
  time: 0.014; rss: 113MB	llvm module passes [0]
  time: 0.527; rss: 117MB	codegen passes [0]
  time: 0.001; rss: 117MB	codegen passes [0]
time: 0.607; rss: 117MB	LLVM passes
time: 0.000; rss: 117MB	serialize work products
time: 0.060; rss: 97MB	linking
done
