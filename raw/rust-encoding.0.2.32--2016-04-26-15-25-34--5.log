commit 897199a0fbe01ab6f7e7f8096656603e238e85a2
Merge: 01a0207 36d9ee3
Author: bors <bors@rust-lang.org>
Date:   Tue Apr 26 12:00:35 2016 -0700

    Auto merge of #33191 - alexcrichton:rustdoc-create-dir-all-racy, r=steveklabnik
    
    rustdoc: Handle concurrent mkdir requests
    
    It's likely that `rustdoc` as a tool is run concurrently in the same output
    (e.g. documenting multiple crates as Cargo does), in which case it needs to
    handle concurrent calls to `fs::create_dir`.
rustc: ./rust-encoding.0.2.32
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling encoding v0.2.32 (file:///root/benchmarks/rust-encoding.0.2.32)
time: 0.030; rss: 50MB	parsing
Lines of code:             6441
Pre-expansion node count:  30335
time: 0.006; rss: 51MB	configuration 1
time: 0.000; rss: 51MB	recursion limit
time: 0.000; rss: 51MB	gated macro checking
time: 0.000; rss: 51MB	crate injection
time: 0.003; rss: 54MB	macro loading
time: 0.000; rss: 54MB	plugin loading
time: 0.000; rss: 54MB	plugin registration
time: 0.044; rss: 56MB	expansion
time: 0.001; rss: 56MB	complete gated feature checking 1
time: 0.006; rss: 56MB	configuration 2
time: 0.000; rss: 56MB	gated configuration checking
time: 0.003; rss: 56MB	maybe building test harness
time: 0.003; rss: 56MB	prelude injection
time: 0.000; rss: 56MB	checking that all macro invocations are gone
time: 0.000; rss: 56MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 56MB	complete gated feature checking 2
time: 0.000; rss: 56MB	const fn bodies and arguments
Post-expansion node count: 41611
time: 0.003; rss: 56MB	assigning node ids
time: 0.002; rss: 58MB	collecting defs
time: 0.001; rss: 58MB	external crate/lib resolution
time: 0.005; rss: 60MB	lowering ast -> hir
time: 0.002; rss: 61MB	indexing hir
time: 0.000; rss: 61MB	attribute checking
time: 0.002; rss: 61MB	early lint checks
time: 0.000; rss: 60MB	language item collection
time: 0.008; rss: 69MB	name resolution
time: 0.000; rss: 69MB	lifetime resolution
time: 0.000; rss: 69MB	looking for entry point
time: 0.000; rss: 69MB	looking for plugin registrar
time: 0.003; rss: 70MB	region resolution
time: 0.000; rss: 70MB	loop checking
time: 0.000; rss: 70MB	static item recursion checking
time: 0.000; rss: 70MB	load_dep_graph
time: 0.005; rss: 72MB	type collecting
time: 0.000; rss: 72MB	variance inference
time: 0.022; rss: 89MB	coherence checking
time: 0.017; rss: 90MB	wf checking
time: 0.014; rss: 90MB	item-types checking
time: 0.211; rss: 101MB	item-bodies checking
time: 0.000; rss: 101MB	drop-impl checking
time: 0.011; rss: 101MB	const checking
time: 0.003; rss: 101MB	privacy checking
time: 0.000; rss: 101MB	stability index
time: 0.001; rss: 101MB	intrinsic checking
time: 0.000; rss: 101MB	effect checking
time: 0.006; rss: 101MB	match checking
time: 0.002; rss: 101MB	liveness checking
time: 0.006; rss: 101MB	rvalue checking
time: 0.033; rss: 108MB	MIR dump
time: 0.008; rss: 107MB	MIR passes
time: 0.022; rss: 107MB	borrow checking
time: 0.000; rss: 107MB	reachability checking
time: 0.002; rss: 107MB	death checking
time: 0.002; rss: 107MB	stability checking
time: 0.000; rss: 107MB	unused lib feature checking
time: 0.024; rss: 108MB	lint checking
time: 0.000; rss: 108MB	resolving dependency formats
time: 0.004; rss: 109MB	Prepare MIR codegen passes
  time: 0.029; rss: 114MB	translation item collection
  time: 0.002; rss: 115MB	codegen unit partitioning
  time: 0.059; rss: 147MB	write metadata
time: 0.399; rss: 147MB	translation
time: 0.000; rss: 147MB	assert dep graph
time: 0.000; rss: 147MB	serialize dep graph
  time: 0.026; rss: 110MB	llvm function passes [0]
  time: 0.050; rss: 114MB	llvm module passes [0]
  time: 0.580; rss: 118MB	codegen passes [0]
  time: 0.001; rss: 104MB	codegen passes [0]
time: 0.723; rss: 103MB	LLVM passes
time: 0.056; rss: 101MB	linking
done
