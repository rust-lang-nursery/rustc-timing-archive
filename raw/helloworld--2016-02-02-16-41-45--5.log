commit 2dc132e4d25cf7424deddf6c33c6059d93ff5248
Merge: 59b7c90 8f803c2
Author: bors <bors@rust-lang.org>
Date:   Tue Feb 2 17:11:48 2016 +0000

    Auto merge of #31312 - alexcrichton:no-le-in-powerpc64le, r=alexcrichton
    
    Currently the `mipsel-unknown-linux-gnu` target doesn't actually set the
    `target_arch` value to `mipsel` but it rather uses `mips`. Alternatively the
    `powerpc64le` target does indeed set the `target_arch` as `powerpc64le`,
    causing a bit of inconsistency between theset two.
    
    As these are just the same instance of one instruction set, let's use
    `target_endian` to switch between them and only set the `target_arch` as one
    value. This should cut down on the number of `#[cfg]` annotations necessary and
    all around be a little more ergonomic.
rustc: ./helloworld
/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc hello.rs -Ztime-passes -Zinput-stats
time: 0.000; rss: 30MB	parsing
Lines of code:             3
Pre-expansion node count:  8
time: 0.000; rss: 34MB	configuration 1
time: 0.000; rss: 34MB	recursion limit
time: 0.000; rss: 34MB	gated macro checking
time: 0.000; rss: 34MB	crate injection
time: 0.002; rss: 37MB	macro loading
time: 0.000; rss: 37MB	plugin loading
time: 0.000; rss: 37MB	plugin registration
time: 0.001; rss: 37MB	expansion
time: 0.000; rss: 37MB	complete gated feature checking 1
time: 0.000; rss: 37MB	configuration 2
time: 0.000; rss: 37MB	gated configuration checking
time: 0.000; rss: 37MB	maybe building test harness
time: 0.000; rss: 37MB	prelude injection
time: 0.000; rss: 37MB	checking that all macro invocations are gone
time: 0.000; rss: 37MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 37MB	complete gated feature checking 2
Post-expansion node count: 68
time: 0.000; rss: 37MB	assigning node ids
time: 0.000; rss: 37MB	lowering ast -> hir
time: 0.000; rss: 37MB	indexing hir
time: 0.000; rss: 37MB	attribute checking
time: 0.000; rss: 37MB	early lint checks
time: 0.001; rss: 37MB	external crate/lib resolution
time: 0.000; rss: 41MB	language item collection
time: 0.001; rss: 45MB	resolution
time: 0.000; rss: 45MB	lifetime resolution
time: 0.000; rss: 45MB	looking for entry point
time: 0.000; rss: 45MB	looking for plugin registrar
time: 0.000; rss: 45MB	region resolution
time: 0.000; rss: 45MB	loop checking
time: 0.000; rss: 45MB	static item recursion checking
time: 0.000; rss: 45MB	type collecting
time: 0.000; rss: 45MB	variance inference
time: 0.005; rss: 54MB	coherence checking
time: 0.000; rss: 54MB	wf checking
time: 0.000; rss: 54MB	item-types checking
time: 0.000; rss: 54MB	item-bodies checking
time: 0.000; rss: 54MB	drop-impl checking
time: 0.000; rss: 54MB	const checking
time: 0.000; rss: 54MB	privacy checking
time: 0.000; rss: 54MB	stability index
time: 0.000; rss: 54MB	intrinsic checking
time: 0.000; rss: 54MB	effect checking
time: 0.000; rss: 54MB	match checking
time: 0.000; rss: 54MB	MIR dump
time: 0.000; rss: 54MB	liveness checking
time: 0.000; rss: 54MB	borrow checking
time: 0.000; rss: 54MB	rvalue checking
time: 0.000; rss: 54MB	reachability checking
time: 0.000; rss: 54MB	death checking
time: 0.000; rss: 54MB	stability checking
time: 0.000; rss: 54MB	unused lib feature checking
time: 0.000; rss: 54MB	lint checking
time: 0.001; rss: 54MB	resolving dependency formats
time: 0.000; rss: 54MB	erasing regions from MIR
  time: 0.000; rss: 64MB	write metadata
time: 0.003; rss: 64MB	translation
  time: 0.000; rss: 66MB	llvm function passes [0]
  time: 0.000; rss: 66MB	llvm module passes [0]
  time: 0.001; rss: 68MB	codegen passes [0]
  time: 0.000; rss: 68MB	codegen passes [0]
time: 0.002; rss: 68MB	LLVM passes
  time: 0.090; rss: 74MB	running linker
time: 0.090; rss: 74MB	linking
done
