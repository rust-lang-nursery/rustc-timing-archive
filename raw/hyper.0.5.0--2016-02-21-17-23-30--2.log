commit c92e910c117775563a6a8782db16a15215061bc1
Merge: f93a62b 028106c
Author: bors <bors@rust-lang.org>
Date:   Sun Feb 21 23:08:24 2016 +0000

    Auto merge of #31810 - gandro:netbsd-fix-stat, r=alexcrichton
    
    Some struct members have a slighty different name on NetBSD. This has been fixed in the libc crate, but not in libstd, breaking the NetBSD build. Related C struct definition: http://nxr.netbsd.org/xref/src/sys/sys/stat.h?r=1.68#59
    
    This also removes the broken `st_spare()` from MetadataExt, since it is private field reserved for future use.
    
    @dhuseby In case this conflicts with any of your pending patches, feel free to intervene - I'm happy to withdraw this PR.
    
    r? @alexcrichton
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.029; rss: 45MB	parsing
Lines of code:             9154
Pre-expansion node count:  45594
time: 0.009; rss: 45MB	configuration 1
time: 0.000; rss: 45MB	recursion limit
time: 0.000; rss: 45MB	gated macro checking
time: 0.000; rss: 45MB	crate injection
time: 0.004; rss: 50MB	macro loading
time: 0.000; rss: 50MB	plugin loading
time: 0.000; rss: 50MB	plugin registration
time: 0.190; rss: 60MB	expansion
time: 0.005; rss: 60MB	complete gated feature checking 1
time: 0.034; rss: 60MB	configuration 2
time: 0.000; rss: 60MB	gated configuration checking
time: 0.014; rss: 60MB	maybe building test harness
time: 0.011; rss: 60MB	prelude injection
time: 0.001; rss: 60MB	checking that all macro invocations are gone
time: 0.000; rss: 60MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 60MB	complete gated feature checking 2
time: 0.001; rss: 60MB	const fn bodies and arguments
Post-expansion node count: 109258
time: 0.010; rss: 60MB	assigning node ids
time: 0.010; rss: 64MB	lowering ast -> hir
time: 0.004; rss: 66MB	indexing hir
time: 0.001; rss: 66MB	attribute checking
time: 0.007; rss: 66MB	early lint checks
time: 0.004; rss: 62MB	external crate/lib resolution
time: 0.001; rss: 62MB	language item collection
time: 0.024; rss: 82MB	resolution
time: 0.002; rss: 82MB	lifetime resolution
time: 0.000; rss: 82MB	looking for entry point
time: 0.000; rss: 82MB	looking for plugin registrar
time: 0.005; rss: 84MB	region resolution
time: 0.001; rss: 84MB	loop checking
time: 0.001; rss: 84MB	static item recursion checking
time: 0.012; rss: 88MB	type collecting
time: 0.000; rss: 88MB	variance inference
time: 0.037; rss: 106MB	coherence checking
time: 0.077; rss: 107MB	wf checking
time: 0.024; rss: 107MB	item-types checking
time: 0.476; rss: 129MB	item-bodies checking
time: 0.000; rss: 129MB	drop-impl checking
time: 0.037; rss: 129MB	const checking
time: 0.012; rss: 129MB	privacy checking
time: 0.001; rss: 129MB	stability index
time: 0.004; rss: 129MB	intrinsic checking
time: 0.002; rss: 129MB	effect checking
time: 0.012; rss: 129MB	match checking
time: 0.004; rss: 129MB	liveness checking
time: 0.033; rss: 129MB	rvalue checking
time: 0.060; rss: 134MB	MIR dump
time: 0.000; rss: 134MB	MIR passes
time: 0.066; rss: 134MB	borrow checking
time: 0.003; rss: 134MB	reachability checking
time: 0.007; rss: 134MB	death checking
time: 0.006; rss: 134MB	stability checking
time: 0.000; rss: 134MB	unused lib feature checking
time: 0.047; rss: 134MB	lint checking
time: 0.000; rss: 134MB	resolving dependency formats
time: 0.007; rss: 134MB	erasing regions from MIR
  time: 0.185; rss: 156MB	translation item collection
  time: 0.134; rss: 246MB	write metadata
time: 1.341; rss: 246MB	translation
  time: 0.098; rss: 167MB	llvm function passes [0]
  time: 0.048; rss: 167MB	llvm module passes [0]
  time: 1.647; rss: 172MB	codegen passes [0]
  time: 0.001; rss: 123MB	codegen passes [0]
time: 2.003; rss: 122MB	LLVM passes
time: 0.171; rss: 122MB	linking
done
