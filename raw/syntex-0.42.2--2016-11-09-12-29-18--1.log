commit bca365e688f0424fb99d38d477a9b7863bb070d3
Merge: 02aa428 a449bdb
Author: bors <bors@rust-lang.org>
Date:   Wed Nov 9 08:51:23 2016 -0800

    Auto merge of #36520 - estebank:dataless-enum, r=brson
    
    Reword error when data-less enum variant called as function
    
    Given a file like:
    
    ``` rust
    enum Test {
        Variant,
        Variant2 {a: u32},
    }
    
    fn main(){
        let x = Test::Variant("Hello");
        let y = Test::Variant2("World");
    }
    ```
    
    Both errors now look similar:
    
    ``` bash
    error[E0423]: `Test::Variant2` is the name of a struct or struct variant, but this expression uses it like a function name
      --> file3.rs:10:13
       |
    10 |     let y = Test::Variant2("Hello");
       |             ^^^^^^^^^^^^^^ struct called like a function
       |
       = help: did you mean to write: `Test::Variant2 { /* fields */ }`?
    
    error: `Test::Variant` is the name of a data-less enum, but this expression uses it like a function name
     --> file3.rs:9:13
      |
    9 |     let x = Test::Variant("World");
      |             ^^^^^^^^^^^^^^^^^^^^^^ data-less enum called like a function
      |
      = help: did you mean to write: `Test::Variant`?
    note: defined here
     --> file3.rs:2:5
      |
    2 |     Variant,
      |     ^^^^^^^
    
    error: aborting due to previous error
    ```
    
    Re: #28533
rustc: ./syntex-0.42.2
cargo rustc -p syntex_syntax -- -Ztime-passes -Zinput-stats
   Compiling syntex_syntax v0.42.0
time: 0.092; rss: 71MB	parsing
Lines of code:             33687
Pre-expansion node count:  224033
time: 0.000; rss: 71MB	recursion limit
time: 0.000; rss: 71MB	crate injection
time: 0.000; rss: 71MB	plugin loading
time: 0.000; rss: 71MB	plugin registration
time: 0.236; rss: 143MB	expansion
time: 0.000; rss: 143MB	maybe building test harness
time: 0.006; rss: 143MB	maybe creating a macro crate
Post-expansion node count: 641571
time: 0.000; rss: 143MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 143MB	complete gated feature checking
time: 0.023; rss: 143MB	early lint checks
time: 0.007; rss: 143MB	AST validation
time: 0.084; rss: 158MB	name resolution
time: 0.044; rss: 183MB	lowering ast -> hir
time: 0.008; rss: 194MB	indexing hir
time: 0.006; rss: 194MB	attribute checking
time: 0.004; rss: 149MB	language item collection
time: 0.010; rss: 149MB	lifetime resolution
time: 0.000; rss: 149MB	looking for entry point
time: 0.000; rss: 149MB	looking for plugin registrar
time: 0.042; rss: 160MB	region resolution
time: 0.004; rss: 160MB	loop checking
time: 0.004; rss: 160MB	static item recursion checking
time: 0.327; rss: 161MB	compute_incremental_hashes_map
time: 0.000; rss: 161MB	load_dep_graph
time: 0.040; rss: 167MB	type collecting
time: 0.001; rss: 167MB	variance inference
time: 0.035; rss: 172MB	coherence checking
time: 0.094; rss: 175MB	wf checking
time: 0.194; rss: 180MB	item-types checking
time: 3.578; rss: 230MB	item-bodies checking
time: 0.000; rss: 230MB	drop-impl checking
time: 0.243; rss: 236MB	const checking
time: 0.046; rss: 236MB	privacy checking
time: 0.005; rss: 236MB	stability index
time: 0.019; rss: 236MB	intrinsic checking
time: 0.015; rss: 236MB	effect checking
time: 0.048; rss: 236MB	match checking
time: 0.051; rss: 228MB	liveness checking
time: 0.205; rss: 228MB	rvalue checking
time: 0.406; rss: 419MB	MIR dump
  time: 0.057; rss: 422MB	SimplifyCfg
  time: 0.075; rss: 422MB	QualifyAndPromoteConstants
  time: 0.105; rss: 422MB	TypeckMir
  time: 0.004; rss: 422MB	SimplifyBranches
  time: 0.031; rss: 422MB	SimplifyCfg
time: 0.273; rss: 422MB	MIR cleanup and validation
time: 0.546; rss: 423MB	borrow checking
time: 0.017; rss: 423MB	reachability checking
time: 0.039; rss: 423MB	death checking
time: 0.039; rss: 423MB	stability checking
time: 0.000; rss: 423MB	unused lib feature checking
time: 0.221; rss: 423MB	lint checking
time: 0.000; rss: 423MB	resolving dependency formats
  time: 0.003; rss: 423MB	NoLandingPads
  time: 0.027; rss: 423MB	SimplifyCfg
  time: 0.067; rss: 431MB	EraseRegions
  time: 0.011; rss: 431MB	AddCallGuards
  time: 0.284; rss: 452MB	ElaborateDrops
  time: 0.003; rss: 452MB	NoLandingPads
  time: 0.054; rss: 450MB	SimplifyCfg
  time: 0.031; rss: 449MB	InstCombine
  time: 0.013; rss: 449MB	Deaggregator
  time: 0.002; rss: 449MB	CopyPropagation
  time: 0.036; rss: 449MB	SimplifyLocals
  time: 0.010; rss: 449MB	AddCallGuards
  time: 0.003; rss: 449MB	PreTrans
time: 0.544; rss: 449MB	MIR optimisations
  time: 0.060; rss: 457MB	write metadata
  time: 0.431; rss: 469MB	translation item collection
  time: 0.057; rss: 478MB	codegen unit partitioning
  time: 0.048; rss: 726MB	internalize symbols
time: 4.871; rss: 726MB	translation
time: 0.000; rss: 726MB	assert dep graph
time: 0.000; rss: 726MB	serialize dep graph
  time: 0.532; rss: 419MB	llvm function passes [0]
  time: 0.250; rss: 428MB	llvm module passes [0]
  time: 10.456; rss: 421MB	codegen passes [0]
  time: 0.000; rss: 421MB	codegen passes [0]
time: 11.996; rss: 421MB	LLVM passes
time: 0.000; rss: 421MB	serialize work products
time: 0.341; rss: 105MB	linking
done
