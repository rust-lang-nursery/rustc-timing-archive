commit 209308439a1099b285520459f57e380f18793c07
Merge: 7846610 d6ec686
Author: bors <bors@rust-lang.org>
Date:   Wed Dec 7 16:32:48 2016 +0000

    Auto merge of #38105 - ollie27:rustdoc_deterministic_js, r=GuillaumeGomez
    
    rustdoc: Sort lines in search index and implementors js
    
    This means the files are generated deterministically even with rustdoc running in parallel.
    
    Fixes the first part of #30220.
rustc: ./regex-0.1.80@020-incr-from-scratch@020-incr-from-scratch
find . -name "*.rs" | xargs touch
RUSTFLAGS="""" cargo rustc  -- \
  -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.033; rss: 46MB	parsing
Lines of code:             10689
Pre-expansion node count:  55396
time: 0.000; rss: 46MB	recursion limit
time: 0.000; rss: 46MB	crate injection
time: 0.000; rss: 46MB	plugin loading
time: 0.000; rss: 46MB	plugin registration
time: 0.056; rss: 78MB	expansion
time: 0.000; rss: 78MB	maybe building test harness
time: 0.001; rss: 78MB	maybe creating a macro crate
Post-expansion node count: 86869
time: 0.000; rss: 78MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 78MB	complete gated feature checking
time: 0.003; rss: 78MB	early lint checks
time: 0.001; rss: 78MB	AST validation
time: 0.011; rss: 80MB	name resolution
time: 0.014; rss: 86MB	lowering ast -> hir
time: 0.003; rss: 87MB	indexing hir
time: 0.001; rss: 87MB	attribute checking
time: 0.000; rss: 81MB	language item collection
time: 0.002; rss: 81MB	lifetime resolution
time: 0.000; rss: 81MB	looking for entry point
time: 0.000; rss: 81MB	looking for plugin registrar
time: 0.010; rss: 84MB	region resolution
time: 0.001; rss: 84MB	loop checking
time: 0.000; rss: 84MB	static item recursion checking
time: 0.034; rss: 84MB	compute_incremental_hashes_map
time: 0.000; rss: 84MB	load_dep_graph
time: 0.001; rss: 84MB	stability index
time: 0.002; rss: 84MB	stability checking
time: 0.010; rss: 86MB	type collecting
time: 0.000; rss: 86MB	variance inference
time: 0.000; rss: 87MB	impl wf inference
time: 0.012; rss: 88MB	coherence checking
time: 0.020; rss: 89MB	wf checking
time: 0.124; rss: 92MB	item-types checking
time: 0.329; rss: 100MB	item-bodies checking
time: 0.000; rss: 100MB	drop-impl checking
time: 0.256; rss: 130MB	const checking
time: 0.010; rss: 130MB	privacy checking
time: 0.002; rss: 130MB	intrinsic checking
time: 0.001; rss: 130MB	effect checking
time: 0.007; rss: 130MB	match checking
time: 0.005; rss: 131MB	liveness checking
time: 0.020; rss: 131MB	rvalue checking
time: 0.059; rss: 151MB	MIR dump
  time: 0.006; rss: 152MB	SimplifyCfg
  time: 0.009; rss: 152MB	QualifyAndPromoteConstants
  time: 0.012; rss: 152MB	TypeckMir
  time: 0.000; rss: 152MB	SimplifyBranches
  time: 0.003; rss: 152MB	SimplifyCfg
time: 0.031; rss: 152MB	MIR cleanup and validation
time: 0.046; rss: 152MB	borrow checking
time: 0.001; rss: 152MB	reachability checking
time: 0.004; rss: 152MB	death checking
time: 0.000; rss: 152MB	unused lib feature checking
time: 0.028; rss: 152MB	lint checking
time: 0.000; rss: 152MB	resolving dependency formats
  time: 0.000; rss: 152MB	NoLandingPads
  time: 0.003; rss: 152MB	SimplifyCfg
  time: 0.008; rss: 153MB	EraseRegions
  time: 0.001; rss: 153MB	AddCallGuards
  time: 0.017; rss: 155MB	ElaborateDrops
  time: 0.000; rss: 155MB	NoLandingPads
  time: 0.004; rss: 155MB	SimplifyCfg
  time: 0.003; rss: 155MB	InstCombine
  time: 0.002; rss: 155MB	Deaggregator
  time: 0.000; rss: 155MB	CopyPropagation
  time: 0.004; rss: 155MB	SimplifyLocals
  time: 0.001; rss: 155MB	AddCallGuards
  time: 0.000; rss: 155MB	PreTrans
time: 0.043; rss: 155MB	MIR optimisations
  time: 0.008; rss: 157MB	write metadata
  time: 0.084; rss: 161MB	translation item collection
  time: 0.013; rss: 164MB	codegen unit partitioning
  time: 0.012; rss: 221MB	internalize symbols
time: 0.967; rss: 221MB	translation
time: 0.000; rss: 221MB	assert dep graph
time: 0.000; rss: 221MB	serialize dep graph
incremental: re-using 0 out of 1 modules
  time: 0.088; rss: 141MB	llvm function passes [0]
  time: 0.441; rss: 178MB	llvm module passes [0]
  time: 2.526; rss: 178MB	codegen passes [0]
  time: 0.000; rss: 178MB	codegen passes [0]
time: 3.279; rss: 178MB	LLVM passes
time: 0.000; rss: 178MB	serialize work products
time: 0.120; rss: 92MB	linking
done
