commit 9cf6fba955736fff590a67293733755172d51cb9
Merge: c2aaad4 8984242
Author: bors <bors@rust-lang.org>
Date:   Tue Apr 19 19:17:08 2016 -0700

    Auto merge of #31253 - ranma42:improve-unicode-iter-offset, r=brson
    
    Improve computation of offset in `EscapeUnicode`
    
    Unify the computation of `offset` and use `leading_zeros` instead of manually scanning the bits.
    This PR removes some duplicated code and makes it a little simpler .
    The computation of `offset` is also faster, but it is unlikely to have an impact on actual code.
    
    (split from #31049)
rustc: ./regex.0.1.30
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling regex v0.1.30 (file:///root/benchmarks/regex.0.1.30)
time: 0.060; rss: 53MB	parsing
Lines of code:             8558
Pre-expansion node count:  58217
time: 0.011; rss: 53MB	configuration 1
time: 0.000; rss: 53MB	recursion limit
time: 0.001; rss: 53MB	gated macro checking
time: 0.000; rss: 53MB	crate injection
time: 0.003; rss: 55MB	macro loading
time: 0.000; rss: 55MB	plugin loading
time: 0.000; rss: 55MB	plugin registration
time: 0.057; rss: 59MB	expansion
time: 0.001; rss: 59MB	complete gated feature checking 1
time: 0.012; rss: 59MB	configuration 2
time: 0.000; rss: 59MB	gated configuration checking
time: 0.006; rss: 59MB	maybe building test harness
time: 0.006; rss: 59MB	prelude injection
time: 0.000; rss: 59MB	checking that all macro invocations are gone
time: 0.000; rss: 59MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 59MB	complete gated feature checking 2
time: 0.001; rss: 59MB	const fn bodies and arguments
Post-expansion node count: 68485
time: 0.006; rss: 59MB	assigning node ids
time: 0.010; rss: 70MB	lowering ast -> hir
time: 0.002; rss: 72MB	indexing hir
time: 0.001; rss: 72MB	attribute checking
time: 0.007; rss: 72MB	early lint checks
time: 0.001; rss: 65MB	external crate/lib resolution
time: 0.001; rss: 65MB	language item collection
time: 0.009; rss: 75MB	resolution
time: 0.001; rss: 75MB	lifetime resolution
time: 0.000; rss: 75MB	looking for entry point
time: 0.000; rss: 75MB	looking for plugin registrar
time: 0.006; rss: 79MB	region resolution
time: 0.001; rss: 79MB	loop checking
time: 0.001; rss: 79MB	static item recursion checking
time: 0.000; rss: 79MB	load_dep_graph
time: 0.007; rss: 89MB	type collecting
time: 0.000; rss: 89MB	variance inference
time: 0.024; rss: 100MB	coherence checking
time: 0.010; rss: 100MB	wf checking
time: 0.250; rss: 105MB	item-types checking
time: 0.187; rss: 120MB	item-bodies checking
time: 0.000; rss: 120MB	drop-impl checking
time: 0.024; rss: 122MB	const checking
time: 0.004; rss: 122MB	privacy checking
time: 0.001; rss: 122MB	stability index
time: 0.001; rss: 122MB	intrinsic checking
time: 0.001; rss: 122MB	effect checking
time: 0.003; rss: 122MB	match checking
time: 0.002; rss: 122MB	liveness checking
time: 0.007; rss: 122MB	rvalue checking
time: 0.015; rss: 123MB	MIR dump
time: 0.007; rss: 123MB	MIR passes
time: 0.019; rss: 123MB	borrow checking
time: 0.000; rss: 123MB	reachability checking
time: 0.003; rss: 123MB	death checking
time: 0.002; rss: 123MB	stability checking
time: 0.000; rss: 123MB	unused lib feature checking
time: 0.028; rss: 123MB	lint checking
time: 0.000; rss: 123MB	resolving dependency formats
time: 0.003; rss: 123MB	Prepare MIR codegen passes
  time: 0.055; rss: 139MB	translation item collection
  time: 0.001; rss: 139MB	codegen unit partitioning
  time: 0.129; rss: 187MB	write metadata
time: 0.613; rss: 187MB	translation
time: 0.000; rss: 187MB	assert dep graph
time: 0.000; rss: 187MB	serialize dep graph
  time: 0.035; rss: 123MB	llvm function passes [0]
  time: 0.017; rss: 124MB	llvm module passes [0]
  time: 0.606; rss: 129MB	codegen passes [0]
  time: 0.001; rss: 110MB	codegen passes [0]
time: 0.731; rss: 109MB	LLVM passes
time: 0.066; rss: 107MB	linking
done
