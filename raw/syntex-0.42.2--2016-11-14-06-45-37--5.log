commit 8289a8916f9cf7d290a98121a75cee840faa9d0f
Merge: 7bef60a cf9ff2b
Author: bors <bors@rust-lang.org>
Date:   Mon Nov 14 02:46:12 2016 -0800

    Auto merge of #37278 - matklad:lone-lifetime, r=jseyfried
    
    Fix syntax error in the compiler
    
    Currently `rustc` accepts the following code: `fn f<'a>() where 'a {}`. This should be a syntax error, shouldn't it?
    
    Not sure if my changes actually compile, waiting for the LLVM to build.
rustc: ./syntex-0.42.2
cargo rustc -p syntex_syntax  -- -Ztime-passes -Zinput-stats
   Compiling syntex_syntax v0.42.0
time: 0.091; rss: 70MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 70MB	recursion limit
time: 0.000; rss: 70MB	crate injection
time: 0.000; rss: 70MB	plugin loading
time: 0.000; rss: 70MB	plugin registration
time: 0.231; rss: 143MB	expansion
time: 0.000; rss: 143MB	maybe building test harness
time: 0.006; rss: 143MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 143MB	checking for inline asm in case the target doesn't support it
time: 0.013; rss: 143MB	complete gated feature checking
time: 0.023; rss: 143MB	early lint checks
time: 0.007; rss: 143MB	AST validation
time: 0.076; rss: 158MB	name resolution
time: 0.044; rss: 183MB	lowering ast -> hir
time: 0.008; rss: 194MB	indexing hir
time: 0.006; rss: 194MB	attribute checking
time: 0.005; rss: 150MB	language item collection
time: 0.010; rss: 150MB	lifetime resolution
time: 0.000; rss: 150MB	looking for entry point
time: 0.000; rss: 150MB	looking for plugin registrar
time: 0.040; rss: 171MB	region resolution
time: 0.005; rss: 171MB	loop checking
time: 0.005; rss: 171MB	static item recursion checking
time: 0.326; rss: 171MB	compute_incremental_hashes_map
time: 0.000; rss: 171MB	load_dep_graph
time: 0.047; rss: 176MB	type collecting
time: 0.001; rss: 176MB	variance inference
time: 0.018; rss: 178MB	coherence checking
time: 0.090; rss: 179MB	wf checking
time: 0.182; rss: 182MB	item-types checking
time: 3.306; rss: 233MB	item-bodies checking
time: 0.000; rss: 233MB	drop-impl checking
time: 0.219; rss: 254MB	const checking
time: 0.045; rss: 254MB	privacy checking
time: 0.005; rss: 254MB	stability index
time: 0.017; rss: 254MB	intrinsic checking
time: 0.014; rss: 254MB	effect checking
time: 0.045; rss: 254MB	match checking
time: 0.047; rss: 258MB	liveness checking
time: 0.178; rss: 238MB	rvalue checking
time: 0.374; rss: 436MB	MIR dump
  time: 0.057; rss: 437MB	SimplifyCfg
  time: 0.073; rss: 437MB	QualifyAndPromoteConstants
  time: 0.103; rss: 437MB	TypeckMir
  time: 0.004; rss: 437MB	SimplifyBranches
  time: 0.031; rss: 437MB	SimplifyCfg
time: 0.268; rss: 437MB	MIR cleanup and validation
time: 0.480; rss: 438MB	borrow checking
time: 0.020; rss: 438MB	reachability checking
time: 0.038; rss: 438MB	death checking
time: 0.030; rss: 440MB	stability checking
time: 0.000; rss: 440MB	unused lib feature checking
time: 0.194; rss: 440MB	lint checking
time: 0.000; rss: 440MB	resolving dependency formats
  time: 0.003; rss: 440MB	NoLandingPads
  time: 0.026; rss: 440MB	SimplifyCfg
  time: 0.060; rss: 447MB	EraseRegions
  time: 0.011; rss: 447MB	AddCallGuards
  time: 0.266; rss: 463MB	ElaborateDrops
  time: 0.003; rss: 463MB	NoLandingPads
  time: 0.052; rss: 463MB	SimplifyCfg
  time: 0.028; rss: 463MB	InstCombine
  time: 0.013; rss: 463MB	Deaggregator
  time: 0.002; rss: 463MB	CopyPropagation
  time: 0.034; rss: 464MB	SimplifyLocals
  time: 0.010; rss: 464MB	AddCallGuards
  time: 0.003; rss: 464MB	PreTrans
time: 0.511; rss: 464MB	MIR optimisations
  time: 0.061; rss: 474MB	write metadata
  time: 0.390; rss: 490MB	translation item collection
  time: 0.064; rss: 497MB	codegen unit partitioning
  time: 0.047; rss: 736MB	internalize symbols
time: 4.429; rss: 736MB	translation
time: 0.000; rss: 736MB	assert dep graph
time: 0.000; rss: 736MB	serialize dep graph
  time: 0.527; rss: 416MB	llvm function passes [0]
  time: 0.250; rss: 425MB	llvm module passes [0]
  time: 10.320; rss: 426MB	codegen passes [0]
  time: 0.000; rss: 426MB	codegen passes [0]
time: 11.845; rss: 426MB	LLVM passes
time: 0.000; rss: 426MB	serialize work products
time: 0.343; rss: 105MB	linking
done
