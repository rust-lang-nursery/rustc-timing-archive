commit 0646e8ae6ee2d6697b828a6512357c135f834633
Merge: 915b003 f4e6f3c
Author: bors <bors@rust-lang.org>
Date:   Thu Jun 2 18:10:37 2016 -0700

    Auto merge of #33878 - GuillaumeGomez:improve_helps, r=jonathandturner
    
    Improve help messages for E0425
    
    Fixes #33876.
    
    r? @Manishearth
    
    cc @steveklabnik
    cc @jonathandturner
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling winapi-build v0.1.1
   Compiling winapi v0.2.7
   Compiling traitobject v0.0.1
   Compiling libc v0.1.12
   Compiling lazy_static v0.1.16
   Compiling gcc v0.3.28
   Compiling unicase v0.1.0
   Compiling pkg-config v0.3.8
   Compiling log v0.3.6
   Compiling matches v0.1.2
   Compiling libc v0.2.11
   Compiling typeable v0.1.2
   Compiling bitflags v0.3.3
   Compiling kernel32-sys v0.2.2
   Compiling rustc-serialize v0.3.19
   Compiling mime v0.0.11
   Compiling httparse v0.1.6
   Compiling time v0.1.35
   Compiling num_cpus v0.2.12
   Compiling rand v0.3.14
   Compiling openssl-sys v0.6.7
   Compiling openssl v0.6.7
   Compiling uuid v0.1.18
   Compiling url v0.2.38
   Compiling cookie v0.1.21
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.036; rss: 52MB	parsing
Lines of code:             9154
Pre-expansion node count:  44646
time: 0.007; rss: 56MB	configuration 1
time: 0.000; rss: 56MB	recursion limit
time: 0.000; rss: 56MB	crate injection
time: 0.019; rss: 91MB	macro loading
time: 0.000; rss: 91MB	plugin loading
time: 0.000; rss: 91MB	plugin registration
time: 0.239; rss: 101MB	expansion
time: 0.000; rss: 101MB	gated configuration checking
time: 0.014; rss: 101MB	maybe building test harness
time: 0.011; rss: 101MB	prelude injection
time: 0.001; rss: 101MB	checking that all macro invocations are gone
time: 0.000; rss: 101MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 101MB	complete gated feature checking
Post-expansion node count: 101566
time: 0.010; rss: 101MB	assigning node ids
time: 0.003; rss: 101MB	collecting defs
time: 0.011; rss: 114MB	external crate/lib resolution
time: 0.007; rss: 114MB	early lint checks
time: 0.001; rss: 114MB	AST validation
time: 0.022; rss: 117MB	name resolution
time: 0.012; rss: 124MB	lowering ast -> hir
time: 0.001; rss: 126MB	indexing hir
time: 0.001; rss: 126MB	attribute checking
time: 0.001; rss: 117MB	language item collection
time: 0.002; rss: 117MB	lifetime resolution
time: 0.000; rss: 117MB	looking for entry point
time: 0.000; rss: 117MB	looking for plugin registrar
time: 0.006; rss: 122MB	region resolution
time: 0.001; rss: 122MB	loop checking
time: 0.001; rss: 122MB	static item recursion checking
time: 0.000; rss: 122MB	load_dep_graph
time: 0.044; rss: 124MB	type collecting
time: 0.000; rss: 124MB	variance inference
time: 0.046; rss: 131MB	coherence checking
time: 0.104; rss: 132MB	wf checking
time: 0.037; rss: 132MB	item-types checking
time: 0.544; rss: 142MB	item-bodies checking
time: 0.000; rss: 142MB	drop-impl checking
time: 0.044; rss: 142MB	const checking
time: 0.006; rss: 143MB	privacy checking
time: 0.001; rss: 143MB	stability index
time: 0.006; rss: 143MB	intrinsic checking
time: 0.002; rss: 143MB	effect checking
time: 0.015; rss: 143MB	match checking
time: 0.005; rss: 143MB	liveness checking
time: 0.033; rss: 145MB	rvalue checking
time: 0.068; rss: 153MB	MIR dump
time: 0.043; rss: 153MB	MIR passes
time: 0.074; rss: 153MB	borrow checking
time: 0.003; rss: 153MB	reachability checking
time: 0.005; rss: 153MB	death checking
time: 0.005; rss: 153MB	stability checking
time: 0.000; rss: 153MB	unused lib feature checking
time: 0.052; rss: 153MB	lint checking
time: 0.000; rss: 153MB	resolving dependency formats
time: 0.011; rss: 156MB	Prepare MIR codegen passes
  time: 0.131; rss: 162MB	write metadata
  time: 0.302; rss: 168MB	translation item collection
  time: 0.006; rss: 170MB	codegen unit partitioning
time: 1.814; rss: 289MB	translation
time: 0.001; rss: 289MB	assert dep graph
time: 0.000; rss: 289MB	serialize dep graph
  time: 0.097; rss: 181MB	llvm function passes [0]
  time: 0.048; rss: 183MB	llvm module passes [0]
  time: 1.621; rss: 183MB	codegen passes [0]
  time: 0.001; rss: 134MB	codegen passes [0]
time: 1.965; rss: 133MB	LLVM passes
time: 0.177; rss: 131MB	linking
done
