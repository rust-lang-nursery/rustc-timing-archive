commit 34d7f7e607aec07b6db2ccd5cab42f996220e148
Merge: 103e5c9 b9a3590
Author: bors <bors@rust-lang.org>
Date:   Sat Jul 16 21:09:15 2016 -0700

    Auto merge of #34606 - mathstuf:llvm-with-ninja, r=alexcrichton
    
    llvm, rt: build using the Ninja generator if available
    
    The Ninja generator generally builds much faster than make. It may also
    be used on Windows to have a vast speed improvement over the Visual
    Studio generators.
    
    Currently hidden behind an `--enable-ninja` flag because it does not
    obey the top-level `-j` or `-l` flags given to `make`.
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling winapi v0.2.8
   Compiling pkg-config v0.3.8
   Compiling winapi-build v0.1.1
   Compiling traitobject v0.0.1
   Compiling libc v0.2.14
   Compiling log v0.3.6
   Compiling httparse v0.1.6
   Compiling gcc v0.3.31
   Compiling matches v0.1.2
   Compiling typeable v0.1.2
   Compiling lazy_static v0.1.16
   Compiling rustc-serialize v0.3.19
   Compiling libc v0.1.12
   Compiling kernel32-sys v0.2.2
   Compiling mime v0.0.11
   Compiling bitflags v0.3.3
   Compiling unicase v0.1.0
   Compiling num_cpus v0.2.13
   Compiling time v0.1.35
   Compiling rand v0.3.14
   Compiling openssl-sys v0.6.7
   Compiling openssl v0.6.7
   Compiling uuid v0.1.18
   Compiling url v0.2.38
   Compiling cookie v0.1.21
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.031; rss: 92MB	parsing
Lines of code:             9154
Pre-expansion node count:  44838
time: 0.005; rss: 92MB	configuration
time: 0.000; rss: 92MB	recursion limit
time: 0.000; rss: 92MB	crate injection
time: 0.000; rss: 92MB	plugin loading
time: 0.000; rss: 92MB	plugin registration
time: 0.115; rss: 133MB	expansion
time: 0.000; rss: 133MB	maybe building test harness
time: 0.008; rss: 133MB	assigning node ids
Post-expansion node count: 101581
time: 0.000; rss: 133MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 133MB	complete gated feature checking
time: 0.003; rss: 133MB	collecting defs
time: 0.011; rss: 144MB	external crate/lib resolution
time: 0.006; rss: 144MB	early lint checks
time: 0.001; rss: 144MB	AST validation
time: 0.019; rss: 148MB	name resolution
time: 0.009; rss: 156MB	lowering ast -> hir
time: 0.001; rss: 158MB	indexing hir
time: 0.001; rss: 158MB	attribute checking
time: 0.001; rss: 153MB	language item collection
time: 0.001; rss: 153MB	lifetime resolution
time: 0.000; rss: 153MB	looking for entry point
time: 0.000; rss: 153MB	looking for plugin registrar
time: 0.005; rss: 156MB	region resolution
time: 0.001; rss: 156MB	loop checking
time: 0.001; rss: 156MB	static item recursion checking
time: 0.000; rss: 156MB	load_dep_graph
time: 0.031; rss: 159MB	type collecting
time: 0.000; rss: 159MB	variance inference
time: 0.044; rss: 167MB	coherence checking
time: 0.097; rss: 168MB	wf checking
time: 0.036; rss: 168MB	item-types checking
time: 0.532; rss: 179MB	item-bodies checking
time: 0.000; rss: 179MB	drop-impl checking
time: 0.044; rss: 181MB	const checking
time: 0.006; rss: 181MB	privacy checking
time: 0.001; rss: 181MB	stability index
time: 0.006; rss: 181MB	intrinsic checking
time: 0.002; rss: 181MB	effect checking
time: 0.014; rss: 181MB	match checking
time: 0.005; rss: 181MB	liveness checking
time: 0.031; rss: 181MB	rvalue checking
time: 0.062; rss: 191MB	MIR dump
time: 0.044; rss: 191MB	MIR passes
time: 0.071; rss: 193MB	borrow checking
time: 0.003; rss: 193MB	reachability checking
time: 0.005; rss: 193MB	death checking
time: 0.005; rss: 193MB	stability checking
time: 0.000; rss: 193MB	unused lib feature checking
time: 0.051; rss: 193MB	lint checking
time: 0.000; rss: 193MB	resolving dependency formats
time: 0.091; rss: 195MB	Prepare MIR codegen passes
  time: 0.131; rss: 199MB	write metadata
  time: 0.188; rss: 203MB	translation item collection
  time: 0.021; rss: 207MB	codegen unit partitioning
time: 3.627; rss: 326MB	translation
time: 0.001; rss: 326MB	assert dep graph
time: 0.000; rss: 326MB	serialize dep graph
  time: 1.111; rss: 214MB	llvm function passes [0]
  time: 0.430; rss: 214MB	llvm module passes [0]
  time: 16.045; rss: 215MB	codegen passes [0]
  time: 0.002; rss: 215MB	codegen passes [0]
time: 18.672; rss: 215MB	LLVM passes
time: 0.151; rss: 165MB	linking
done
