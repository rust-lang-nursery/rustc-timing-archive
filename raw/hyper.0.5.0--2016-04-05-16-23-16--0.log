commit 57e5d43c770201d837298175a2d55818867bdb33
Merge: 953c3b5 e8ab71f
Author: bors <bors@rust-lang.org>
Date:   Tue Apr 5 10:55:38 2016 -0700

    Auto merge of #32743 - Manishearth:rollup, r=Manishearth
    
    Rollup of 11 pull requests
    
    - Successful merges: #32403, #32596, #32675, #32678, #32685, #32686, #32692, #32710, #32712, #32714, #32715
    - Failed merges: #32488
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling libc v0.2.9
   Compiling matches v0.1.2
   Compiling pkg-config v0.3.8
   Compiling gcc v0.3.26
   Compiling lazy_static v0.1.15
   Compiling unicase v0.1.0
   Compiling httparse v0.1.6
   Compiling libc v0.1.12
   Compiling winapi-build v0.1.1
   Compiling log v0.3.6
   Compiling typeable v0.1.2
   Compiling traitobject v0.0.1
   Compiling winapi v0.2.6
   Compiling kernel32-sys v0.2.1
   Compiling bitflags v0.3.3
   Compiling mime v0.0.11
   Compiling rustc-serialize v0.3.19
   Compiling num_cpus v0.2.11
   Compiling rand v0.3.14
   Compiling time v0.1.35
   Compiling openssl-sys v0.6.7
   Compiling openssl v0.6.7
   Compiling uuid v0.1.18
   Compiling url v0.2.38
   Compiling cookie v0.1.21
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.041; rss: 39MB	parsing
Lines of code:             9154
Pre-expansion node count:  45594
time: 0.010; rss: 40MB	configuration 1
time: 0.000; rss: 40MB	recursion limit
time: 0.000; rss: 40MB	gated macro checking
time: 0.000; rss: 40MB	crate injection
time: 0.004; rss: 45MB	macro loading
time: 0.000; rss: 45MB	plugin loading
time: 0.000; rss: 45MB	plugin registration
time: 0.201; rss: 54MB	expansion
time: 0.005; rss: 54MB	complete gated feature checking 1
time: 0.033; rss: 54MB	configuration 2
time: 0.000; rss: 54MB	gated configuration checking
time: 0.013; rss: 54MB	maybe building test harness
time: 0.010; rss: 54MB	prelude injection
time: 0.001; rss: 54MB	checking that all macro invocations are gone
time: 0.000; rss: 54MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 54MB	complete gated feature checking 2
time: 0.001; rss: 55MB	const fn bodies and arguments
Post-expansion node count: 107125
time: 0.010; rss: 55MB	assigning node ids
time: 0.022; rss: 61MB	lowering ast -> hir
time: 0.006; rss: 62MB	indexing hir
time: 0.001; rss: 62MB	attribute checking
time: 0.007; rss: 62MB	early lint checks
time: 0.004; rss: 57MB	external crate/lib resolution
time: 0.001; rss: 57MB	language item collection
time: 0.030; rss: 75MB	resolution
time: 0.002; rss: 75MB	lifetime resolution
time: 0.000; rss: 75MB	looking for entry point
time: 0.000; rss: 75MB	looking for plugin registrar
time: 0.009; rss: 78MB	region resolution
time: 0.001; rss: 78MB	loop checking
time: 0.001; rss: 78MB	static item recursion checking
time: 0.019; rss: 89MB	type collecting
time: 0.000; rss: 89MB	variance inference
time: 0.500; rss: 106MB	coherence checking
time: 0.075; rss: 106MB	wf checking
time: 0.029; rss: 108MB	item-types checking
time: 0.501; rss: 122MB	item-bodies checking
time: 0.000; rss: 122MB	drop-impl checking
time: 0.040; rss: 124MB	const checking
time: 0.009; rss: 124MB	privacy checking
time: 0.001; rss: 124MB	stability index
time: 0.004; rss: 124MB	intrinsic checking
time: 0.002; rss: 124MB	effect checking
time: 0.012; rss: 124MB	match checking
time: 0.005; rss: 124MB	liveness checking
time: 0.033; rss: 124MB	rvalue checking
time: 0.059; rss: 132MB	MIR dump
time: 0.023; rss: 133MB	MIR passes
time: 0.066; rss: 133MB	borrow checking
time: 0.003; rss: 133MB	reachability checking
time: 0.006; rss: 133MB	death checking
time: 0.006; rss: 133MB	stability checking
time: 0.000; rss: 133MB	unused lib feature checking
time: 0.047; rss: 133MB	lint checking
time: 0.000; rss: 133MB	resolving dependency formats
time: 0.010; rss: 135MB	Prepare MIR codegen passes
  time: 0.196; rss: 152MB	translation item collection
  time: 0.144; rss: 274MB	write metadata
time: 1.759; rss: 274MB	translation
  time: 0.097; rss: 159MB	llvm function passes [0]
  time: 0.049; rss: 162MB	llvm module passes [0]
  time: 1.640; rss: 167MB	codegen passes [0]
  time: 0.001; rss: 116MB	codegen passes [0]
time: 1.994; rss: 116MB	LLVM passes
time: 0.175; rss: 113MB	linking
done
