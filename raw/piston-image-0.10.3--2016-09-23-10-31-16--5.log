commit 86a686c4f71d208ecf8f7ee5a035b17a545d8b62
Merge: f2c53ea bfa3433
Author: bors <bors@rust-lang.org>
Date:   Fri Sep 23 06:17:26 2016 -0700

    Auto merge of #36335 - mcarton:compiletest, r=GuillaumeGomez
    
    Fix ICE test in compiletest fail-tests
    
    While working on Clippy which uses *compiletest*, I noticed that as long as all expected error are found, *compile-fail* tests will be marked *ok* even if there is an ICE. One function seems to have not been updated with JSON errors because ICEs are now reported like this:
    ```json
    {"message":"../src/librustc/ty/context.rs:161: Attempted to intern `_` which contains inference types/regions in the global type context","code":null,"level":"error: internal compiler error","spans":[],"children":[],"rendered":null}
    ```
    I don't think I can add a test for that.
    
    I guess:
    r? @nikomatsakis
rustc: ./piston-image-0.10.3
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling inflate v0.1.1
   Compiling num-traits v0.1.35
   Compiling color_quant v1.0.0
   Compiling bitflags v0.7.0
   Compiling libc v0.2.16
   Compiling scoped_threadpool v0.1.7
   Compiling rustc-serialize v0.3.19
   Compiling lzw v0.10.0
   Compiling glob v0.2.11
   Compiling gcc v0.3.35
   Compiling gif v0.9.0
   Compiling num_cpus v0.2.13
   Compiling rand v0.3.14
   Compiling byteorder v0.5.3
   Compiling num-integer v0.1.32
   Compiling miniz-sys v0.1.7
   Compiling num-iter v0.1.32
   Compiling num v0.1.35
   Compiling enum_primitive v0.1.0
   Compiling deque v0.3.1
   Compiling rayon v0.4.2
   Compiling flate2 v0.2.14
   Compiling jpeg-decoder v0.1.6
   Compiling png v0.5.2
   Compiling num-bigint v0.1.35
   Compiling num-rational v0.1.35
   Compiling image v0.10.3 (file:///root/benchmarks/piston-image-0.10.3)
time: 0.046; rss: 57MB	parsing
Lines of code:             12000
Pre-expansion node count:  90272
time: 0.000; rss: 57MB	recursion limit
time: 0.000; rss: 57MB	crate injection
time: 0.000; rss: 57MB	plugin loading
time: 0.000; rss: 57MB	plugin registration
time: 0.068; rss: 87MB	expansion
time: 0.000; rss: 87MB	maybe building test harness
time: 0.002; rss: 87MB	maybe creating a macro crate
time: 0.007; rss: 87MB	assigning node ids
Post-expansion node count: 149551
time: 0.000; rss: 87MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 87MB	complete gated feature checking
time: 0.004; rss: 87MB	collecting defs
time: 0.011; rss: 96MB	external crate/lib resolution
time: 0.006; rss: 96MB	early lint checks
time: 0.002; rss: 96MB	AST validation
time: 0.021; rss: 100MB	name resolution
time: 0.013; rss: 111MB	lowering ast -> hir
time: 0.003; rss: 115MB	indexing hir
time: 0.002; rss: 115MB	attribute checking
time: 0.002; rss: 105MB	language item collection
time: 0.003; rss: 105MB	lifetime resolution
time: 0.000; rss: 105MB	looking for entry point
time: 0.000; rss: 105MB	looking for plugin registrar
time: 0.011; rss: 111MB	region resolution
time: 0.002; rss: 111MB	loop checking
time: 0.001; rss: 111MB	static item recursion checking
time: 0.058; rss: 111MB	compute_incremental_hashes_map
time: 0.000; rss: 111MB	load_dep_graph
time: 0.024; rss: 112MB	type collecting
time: 0.000; rss: 112MB	variance inference
time: 0.031; rss: 116MB	coherence checking
time: 0.099; rss: 117MB	wf checking
time: 0.218; rss: 125MB	item-types checking
time: 0.939; rss: 138MB	item-bodies checking
time: 0.000; rss: 138MB	drop-impl checking
time: 0.071; rss: 138MB	const checking
time: 0.011; rss: 138MB	privacy checking
time: 0.001; rss: 138MB	stability index
time: 0.010; rss: 138MB	intrinsic checking
time: 0.003; rss: 138MB	effect checking
time: 0.025; rss: 138MB	match checking
time: 0.011; rss: 138MB	liveness checking
time: 0.067; rss: 138MB	rvalue checking
time: 0.113; rss: 180MB	MIR dump
  time: 0.012; rss: 180MB	SimplifyCfg
  time: 0.025; rss: 180MB	QualifyAndPromoteConstants
  time: 0.028; rss: 180MB	TypeckMir
  time: 0.001; rss: 180MB	SimplifyBranches
  time: 0.007; rss: 180MB	SimplifyCfg
time: 0.072; rss: 180MB	MIR passes
time: 0.143; rss: 180MB	borrow checking
time: 0.004; rss: 180MB	reachability checking
time: 0.008; rss: 180MB	death checking
time: 0.010; rss: 180MB	stability checking
time: 0.000; rss: 180MB	unused lib feature checking
time: 0.074; rss: 180MB	lint checking
time: 0.000; rss: 180MB	resolving dependency formats
  time: 0.001; rss: 180MB	NoLandingPads
  time: 0.005; rss: 180MB	SimplifyCfg
  time: 0.012; rss: 182MB	EraseRegions
  time: 0.002; rss: 182MB	AddCallGuards
  time: 0.133; rss: 186MB	ElaborateDrops
  time: 0.001; rss: 186MB	NoLandingPads
  time: 0.009; rss: 186MB	SimplifyCfg
  time: 0.002; rss: 186MB	Deaggregator
  time: 0.001; rss: 186MB	AddCallGuards
  time: 0.000; rss: 186MB	PreTrans
time: 0.166; rss: 186MB	Prepare MIR codegen passes
  time: 0.081; rss: 188MB	write metadata
  time: 0.533; rss: 198MB	translation item collection
  time: 0.030; rss: 203MB	codegen unit partitioning
  time: 0.053; rss: 325MB	internalize symbols
time: 3.451; rss: 298MB	translation
time: 0.000; rss: 298MB	assert dep graph
time: 0.000; rss: 298MB	serialize dep graph
  time: 0.201; rss: 228MB	llvm function passes [0]
  time: 0.082; rss: 232MB	llvm module passes [0]
  time: 4.002; rss: 235MB	codegen passes [0]
  time: 0.001; rss: 236MB	codegen passes [0]
time: 4.584; rss: 235MB	LLVM passes
time: 0.000; rss: 235MB	serialize work products
time: 0.254; rss: 105MB	linking
done
