commit 62690b3c3fa6e157daa7f7c5a3af005f37eb4199
Merge: 7588653 ede39ae
Author: bors <bors@rust-lang.org>
Date:   Thu Jul 21 16:19:54 2016 -0700

    Auto merge of #34544 - 3Hren:issue/xx/reinterpret-format-precision-for-strings, r=alexcrichton
    
    feat: reinterpret `precision` field for strings
    
    This commit changes the behavior of formatting string arguments with both width and precision fields set.
    
    Documentation says that the `width` field is the "minimum width" that the format should take up. If the value's string does not fill up this many characters, then the padding specified by fill/alignment will be used to take up the required space.
    
    This is true for all formatted types except string, which is truncated down to `precision` number of chars and then all of `fill`, `align` and `width` fields are completely ignored.
    
    For example: `format!("{:/^10.8}", "1234567890);` emits "12345678". In the contrast Python version works as the expected:
    ```python
    >>> '{:/^10.8}'.format('1234567890')
    '/12345678/'
    ```
    
    This commit gives back the `Python` behavior by changing the `precision` field meaning to the truncation and nothing more. The result string *will* be prepended/appended up to the `width` field with the proper `fill` char.
    
    __However, this is the breaking change, I admit.__ Feel free to close it, but otherwise it should be mentioned in the `std::fmt` documentation somewhere near of `fill/align/width` fields description.
rustc: ./piston-image-0.3.11
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling gcc v0.3.32
   Compiling libc v0.2.14
   Compiling lzw v0.8.0
   Compiling rustc-serialize v0.3.19
   Compiling bitflags v0.7.0
   Compiling color_quant v1.0.0
   Compiling num-traits v0.1.33
   Compiling glob v0.2.11
   Compiling byteorder v0.3.13
   Compiling rand v0.3.14
   Compiling gif v0.5.1
   Compiling num-integer v0.1.32
   Compiling miniz-sys v0.1.7
   Compiling flate2 v0.2.14
   Compiling num-iter v0.1.32
   Compiling num-complex v0.1.33
   Compiling num-bigint v0.1.33
   Compiling num-rational v0.1.32
   Compiling num v0.1.34
   Compiling png v0.3.1
   Compiling enum_primitive v0.0.1
makefile:2: recipe for target 'all' failed
done
