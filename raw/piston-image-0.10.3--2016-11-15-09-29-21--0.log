commit 30857ae8f67676e32322cdbb6c606c319eacdd73
Merge: c8867f8 88b4646
Author: bors <bors@rust-lang.org>
Date:   Tue Nov 15 04:42:28 2016 -0800

    Auto merge of #37714 - alexcrichton:builtins-hidden, r=nikomatsakis
    
    rustc: Flag all builtins functions as hidden
    
    When compiling compiler-rt you typically compile with `-fvisibility=hidden`
    which to ensure that all symbols are hidden in shared objects and don't show up
    in symbol tables. This is important for these intrinsics being linked in every
    crate to ensure that we're not unnecessarily bloating the public ABI of Rust
    crates.
    
    This should help allow the compiler-builtins project with Rust-defined builtins
    start landing in-tree as well.
rustc: ./piston-image-0.10.3
cargo rustc  -- -Ztime-passes -Zinput-stats
   Compiling scoped_threadpool v0.1.7
   Compiling bitflags v0.7.0
   Compiling num-traits v0.1.35
   Compiling byteorder v0.5.3
   Compiling libc v0.2.16
   Compiling glob v0.2.11
   Compiling rustc-serialize v0.3.19
   Compiling lzw v0.10.0
   Compiling gcc v0.3.35
   Compiling color_quant v1.0.0
   Compiling inflate v0.1.1
   Compiling rand v0.3.14
   Compiling gif v0.9.0
   Compiling num-integer v0.1.32
   Compiling num_cpus v0.2.13
   Compiling num-iter v0.1.32
   Compiling miniz-sys v0.1.7
   Compiling num v0.1.35
   Compiling enum_primitive v0.1.0
   Compiling flate2 v0.2.14
   Compiling deque v0.3.1
   Compiling rayon v0.4.2
   Compiling jpeg-decoder v0.1.6
   Compiling num-bigint v0.1.35
   Compiling png v0.5.2
   Compiling num-rational v0.1.35
   Compiling image v0.10.3 (file:///root/benchmarks/piston-image-0.10.3)
time: 0.038; rss: 54MB	parsing
Lines of code:             12000
Pre-expansion node count:  90152
time: 0.000; rss: 54MB	recursion limit
time: 0.000; rss: 54MB	crate injection
time: 0.000; rss: 54MB	plugin loading
time: 0.000; rss: 54MB	plugin registration
time: 0.065; rss: 93MB	expansion
time: 0.000; rss: 93MB	maybe building test harness
time: 0.001; rss: 93MB	maybe creating a macro crate
Post-expansion node count: 148881
time: 0.000; rss: 93MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 93MB	complete gated feature checking
time: 0.005; rss: 93MB	early lint checks
time: 0.001; rss: 93MB	AST validation
time: 0.019; rss: 97MB	name resolution
time: 0.012; rss: 106MB	lowering ast -> hir
time: 0.002; rss: 110MB	indexing hir
time: 0.002; rss: 110MB	attribute checking
time: 0.001; rss: 100MB	language item collection
time: 0.002; rss: 100MB	lifetime resolution
time: 0.000; rss: 100MB	looking for entry point
time: 0.000; rss: 100MB	looking for plugin registrar
time: 0.009; rss: 105MB	region resolution
time: 0.001; rss: 105MB	loop checking
time: 0.001; rss: 105MB	static item recursion checking
time: 0.050; rss: 105MB	compute_incremental_hashes_map
time: 0.000; rss: 105MB	load_dep_graph
time: 0.016; rss: 108MB	type collecting
time: 0.000; rss: 108MB	variance inference
time: 0.014; rss: 109MB	coherence checking
time: 0.067; rss: 110MB	wf checking
time: 0.136; rss: 111MB	item-types checking
time: 0.686; rss: 122MB	item-bodies checking
time: 0.000; rss: 122MB	drop-impl checking
time: 0.049; rss: 128MB	const checking
time: 0.008; rss: 128MB	privacy checking
time: 0.001; rss: 128MB	stability index
time: 0.006; rss: 128MB	intrinsic checking
time: 0.002; rss: 128MB	effect checking
time: 0.013; rss: 128MB	match checking
time: 0.009; rss: 128MB	liveness checking
time: 0.039; rss: 128MB	rvalue checking
time: 0.089; rss: 169MB	MIR dump
  time: 0.011; rss: 169MB	SimplifyCfg
  time: 0.019; rss: 169MB	QualifyAndPromoteConstants
  time: 0.021; rss: 169MB	TypeckMir
  time: 0.001; rss: 169MB	SimplifyBranches
  time: 0.005; rss: 169MB	SimplifyCfg
time: 0.056; rss: 169MB	MIR cleanup and validation
time: 0.105; rss: 169MB	borrow checking
time: 0.003; rss: 169MB	reachability checking
time: 0.007; rss: 169MB	death checking
time: 0.007; rss: 169MB	stability checking
time: 0.000; rss: 169MB	unused lib feature checking
time: 0.063; rss: 169MB	lint checking
time: 0.000; rss: 169MB	resolving dependency formats
  time: 0.001; rss: 169MB	NoLandingPads
  time: 0.005; rss: 169MB	SimplifyCfg
  time: 0.011; rss: 171MB	EraseRegions
  time: 0.002; rss: 171MB	AddCallGuards
  time: 0.041; rss: 173MB	ElaborateDrops
  time: 0.001; rss: 173MB	NoLandingPads
  time: 0.009; rss: 173MB	SimplifyCfg
  time: 0.006; rss: 173MB	InstCombine
  time: 0.002; rss: 173MB	Deaggregator
  time: 0.000; rss: 173MB	CopyPropagation
  time: 0.007; rss: 173MB	SimplifyLocals
  time: 0.002; rss: 173MB	AddCallGuards
  time: 0.000; rss: 173MB	PreTrans
time: 0.086; rss: 173MB	MIR optimisations
  time: 0.016; rss: 175MB	write metadata
  time: 0.420; rss: 188MB	translation item collection
  time: 0.023; rss: 192MB	codegen unit partitioning
  time: 0.022; rss: 313MB	internalize symbols
time: 2.341; rss: 313MB	translation
time: 0.000; rss: 313MB	assert dep graph
time: 0.000; rss: 313MB	serialize dep graph
  time: 0.203; rss: 225MB	llvm function passes [0]
  time: 0.080; rss: 228MB	llvm module passes [0]
  time: 4.183; rss: 228MB	codegen passes [0]
  time: 0.000; rss: 228MB	codegen passes [0]
time: 4.777; rss: 228MB	LLVM passes
time: 0.000; rss: 228MB	serialize work products
time: 0.129; rss: 98MB	linking
done
