commit 0894b06283ac513bd4b6351aa9065fa515e2a71d
Merge: a09f386 a3fdde7
Author: bors <bors@rust-lang.org>
Date:   Sun Apr 3 03:12:41 2016 -0700

    Auto merge of #32168 - alexcrichton:fix-filecheck, r=aturon
    
    mk: Add configure option for disabling codegen tests
    
    Our `codegen` test suite requires the LLVM `FileCheck` utility but unfortunately
    this isn't always available in all custom LLVM roots (e.g. those specified via
    `--llvm-root`). This commit adds a `./configure` option called
    `--disable-codegen-tests` which will manually disable running these tests. In
    the case that this option is passed we can forgo the need for the `FileCheck`
    executable. Note that we still require `FileCheck` by default as we will attempt
    to run these tests.
    
    Closes #28667
rustc: ./inflate-0.1.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling inflate v0.1.0 (file:///root/benchmarks/inflate-0.1.0)
time: 0.004; rss: 40MB	parsing
Lines of code:             956
Pre-expansion node count:  4761
time: 0.001; rss: 40MB	configuration 1
time: 0.000; rss: 40MB	recursion limit
time: 0.000; rss: 40MB	gated macro checking
time: 0.000; rss: 40MB	crate injection
time: 0.003; rss: 43MB	macro loading
time: 0.000; rss: 43MB	plugin loading
time: 0.000; rss: 43MB	plugin registration
time: 0.081; rss: 50MB	expansion
time: 0.001; rss: 50MB	complete gated feature checking 1
time: 0.009; rss: 50MB	configuration 2
time: 0.000; rss: 50MB	gated configuration checking
time: 0.004; rss: 50MB	maybe building test harness
time: 0.004; rss: 50MB	prelude injection
time: 0.000; rss: 50MB	checking that all macro invocations are gone
time: 0.000; rss: 50MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 50MB	complete gated feature checking 2
time: 0.000; rss: 50MB	const fn bodies and arguments
Post-expansion node count: 54798
time: 0.004; rss: 50MB	assigning node ids
time: 0.009; rss: 56MB	lowering ast -> hir
time: 0.002; rss: 56MB	indexing hir
time: 0.001; rss: 56MB	attribute checking
time: 0.004; rss: 56MB	early lint checks
time: 0.001; rss: 54MB	external crate/lib resolution
time: 0.001; rss: 54MB	language item collection
time: 0.010; rss: 64MB	resolution
time: 0.001; rss: 64MB	lifetime resolution
time: 0.000; rss: 64MB	looking for entry point
time: 0.000; rss: 64MB	looking for plugin registrar
time: 0.003; rss: 64MB	region resolution
time: 0.000; rss: 64MB	loop checking
time: 0.000; rss: 64MB	static item recursion checking
time: 0.001; rss: 66MB	type collecting
time: 0.000; rss: 66MB	variance inference
time: 0.015; rss: 80MB	coherence checking
time: 0.002; rss: 80MB	wf checking
time: 0.002; rss: 80MB	item-types checking
time: 2.903; rss: 103MB	item-bodies checking
time: 0.000; rss: 103MB	drop-impl checking
time: 0.013; rss: 104MB	const checking
time: 0.001; rss: 104MB	privacy checking
time: 0.000; rss: 104MB	stability index
time: 0.000; rss: 104MB	intrinsic checking
time: 0.001; rss: 104MB	effect checking
time: 0.003; rss: 104MB	match checking
time: 0.066; rss: 104MB	liveness checking
time: 0.009; rss: 104MB	rvalue checking
time: 0.031; rss: 118MB	MIR dump
time: 0.015; rss: 117MB	MIR passes
time: 0.226; rss: 116MB	borrow checking
time: 0.000; rss: 116MB	reachability checking
time: 0.003; rss: 116MB	death checking
time: 0.002; rss: 116MB	stability checking
time: 0.000; rss: 116MB	unused lib feature checking
time: 0.022; rss: 118MB	lint checking
time: 0.000; rss: 118MB	resolving dependency formats
  time: 0.011; rss: 129MB	translation item collection
  time: 0.003; rss: 145MB	write metadata
time: 0.369; rss: 138MB	translation
  time: 0.025; rss: 102MB	llvm function passes [0]
  time: 0.005; rss: 102MB	llvm module passes [0]
  time: 0.501; rss: 107MB	codegen passes [0]
  time: 0.000; rss: 96MB	codegen passes [0]
time: 0.572; rss: 94MB	LLVM passes
time: 0.034; rss: 96MB	linking
done
