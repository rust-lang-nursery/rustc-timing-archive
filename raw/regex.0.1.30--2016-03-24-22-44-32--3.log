commit d7a71687ef1a9fa5665944608d5bad58d98a9684
Merge: dcfb8d7 c5d74be
Author: bors <bors@rust-lang.org>
Date:   Thu Mar 24 14:22:26 2016 -0700

    Auto merge of #32346 - nikomatsakis:no-erased-regions, r=eddyb
    
    Remove `ErasedRegions` from substs
    
    This commit removes the `ErasedRegions` enum from `Substs`. Instead, in trans, we just generate a vector of `ReStatic` of suitable length. The goal is both general cleanup and to help pave the way for a glorious future where erasure is used in type check.
    
    r? @eddyb
    
    One concern: might be nice to do some profiling. Not sure the best way to do that. Perhaps I'll investigate running nrc's test suite locally.
rustc: ./regex.0.1.30
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling regex v0.1.30 (file:///root/benchmarks/regex.0.1.30)
time: 0.059; rss: 49MB	parsing
Lines of code:             8558
Pre-expansion node count:  58217
time: 0.011; rss: 49MB	configuration 1
time: 0.000; rss: 49MB	recursion limit
time: 0.001; rss: 49MB	gated macro checking
time: 0.000; rss: 49MB	crate injection
time: 0.003; rss: 53MB	macro loading
time: 0.000; rss: 53MB	plugin loading
time: 0.000; rss: 53MB	plugin registration
time: 0.057; rss: 55MB	expansion
time: 0.001; rss: 55MB	complete gated feature checking 1
time: 0.013; rss: 55MB	configuration 2
time: 0.000; rss: 55MB	gated configuration checking
time: 0.006; rss: 55MB	maybe building test harness
time: 0.006; rss: 55MB	prelude injection
time: 0.000; rss: 55MB	checking that all macro invocations are gone
time: 0.000; rss: 55MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 55MB	complete gated feature checking 2
time: 0.001; rss: 55MB	const fn bodies and arguments
Post-expansion node count: 68485
time: 0.006; rss: 55MB	assigning node ids
time: 0.009; rss: 66MB	lowering ast -> hir
time: 0.002; rss: 68MB	indexing hir
time: 0.001; rss: 68MB	attribute checking
time: 0.007; rss: 68MB	early lint checks
time: 0.001; rss: 60MB	external crate/lib resolution
time: 0.001; rss: 60MB	language item collection
time: 0.010; rss: 71MB	resolution
time: 0.001; rss: 71MB	lifetime resolution
time: 0.000; rss: 71MB	looking for entry point
time: 0.000; rss: 71MB	looking for plugin registrar
time: 0.006; rss: 75MB	region resolution
time: 0.001; rss: 75MB	loop checking
time: 0.001; rss: 75MB	static item recursion checking
time: 0.004; rss: 77MB	type collecting
time: 0.000; rss: 77MB	variance inference
time: 0.069; rss: 95MB	coherence checking
time: 0.010; rss: 95MB	wf checking
time: 0.273; rss: 100MB	item-types checking
time: 0.201; rss: 113MB	item-bodies checking
time: 0.000; rss: 113MB	drop-impl checking
time: 0.024; rss: 113MB	const checking
time: 0.004; rss: 114MB	privacy checking
time: 0.001; rss: 114MB	stability index
time: 0.001; rss: 114MB	intrinsic checking
time: 0.001; rss: 114MB	effect checking
time: 0.003; rss: 114MB	match checking
time: 0.002; rss: 114MB	liveness checking
time: 0.006; rss: 114MB	rvalue checking
time: 0.014; rss: 115MB	MIR dump
time: 0.008; rss: 115MB	MIR passes
time: 0.019; rss: 115MB	borrow checking
time: 0.000; rss: 115MB	reachability checking
time: 0.003; rss: 115MB	death checking
time: 0.002; rss: 115MB	stability checking
time: 0.000; rss: 115MB	unused lib feature checking
time: 0.029; rss: 115MB	lint checking
time: 0.000; rss: 115MB	resolving dependency formats
  time: 0.056; rss: 127MB	translation item collection
  time: 0.130; rss: 183MB	write metadata
time: 0.582; rss: 183MB	translation
  time: 0.035; rss: 117MB	llvm function passes [0]
  time: 0.018; rss: 119MB	llvm module passes [0]
  time: 0.610; rss: 122MB	codegen passes [0]
  time: 0.001; rss: 102MB	codegen passes [0]
time: 0.737; rss: 101MB	LLVM passes
time: 0.065; rss: 99MB	linking
done
