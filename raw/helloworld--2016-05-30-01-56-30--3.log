commit bf9c60c9a6d27762594c1c5c067194f4c9109f67
Merge: 6e00b55 ae999e9
Author: bors <bors@rust-lang.org>
Date:   Sun May 29 21:28:50 2016 -0700

    Auto merge of #33929 - petrochenkov:pathir, r=eddyb
    
    Separate bindings from other patterns in HIR
    
    Now when name resolution is done on AST, we can avoid dumping everything that looks like an identifier into `PatKind::Ident` in HIR.
    `hir::PatKind::Ident` is removed, fresh bindings are now called `hir::PatKind::Binding`, everything else goes to `hir::PatKind::Path`.
    
    I intend to do something with `PatKind::Path`/`PatKind::QPath` as well using resolution results, but it requires some audit and maybe some deeper refactoring of relevant resolution/type checking code to do it properly.
    I'm submitting this part of the patch earlier to notify interested parties that I'm working on this.
    
    cc @jseyfried
    r? @eddyb
rustc: ./helloworld
/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc hello.rs -Ztime-passes -Zinput-stats
time: 0.000; rss: 44MB	parsing
Lines of code:             3
Pre-expansion node count:  8
time: 0.000; rss: 44MB	configuration 1
time: 0.000; rss: 44MB	recursion limit
time: 0.000; rss: 44MB	crate injection
time: 0.017; rss: 82MB	macro loading
time: 0.000; rss: 82MB	plugin loading
time: 0.000; rss: 82MB	plugin registration
time: 0.001; rss: 82MB	expansion
time: 0.000; rss: 82MB	gated configuration checking
time: 0.000; rss: 82MB	maybe building test harness
time: 0.000; rss: 82MB	prelude injection
time: 0.000; rss: 82MB	checking that all macro invocations are gone
time: 0.000; rss: 82MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 82MB	complete gated feature checking
Post-expansion node count: 68
time: 0.000; rss: 82MB	assigning node ids
time: 0.000; rss: 82MB	collecting defs
time: 0.004; rss: 82MB	external crate/lib resolution
time: 0.000; rss: 82MB	early lint checks
time: 0.000; rss: 86MB	name resolution
time: 0.000; rss: 86MB	lowering ast -> hir
time: 0.000; rss: 86MB	indexing hir
time: 0.000; rss: 86MB	attribute checking
time: 0.000; rss: 86MB	language item collection
time: 0.000; rss: 86MB	lifetime resolution
time: 0.000; rss: 86MB	looking for entry point
time: 0.000; rss: 86MB	looking for plugin registrar
time: 0.000; rss: 86MB	region resolution
time: 0.000; rss: 86MB	loop checking
time: 0.000; rss: 86MB	static item recursion checking
time: 0.000; rss: 86MB	load_dep_graph
time: 0.000; rss: 86MB	type collecting
time: 0.000; rss: 86MB	variance inference
time: 0.005; rss: 86MB	coherence checking
time: 0.000; rss: 86MB	wf checking
time: 0.000; rss: 86MB	item-types checking
time: 0.000; rss: 86MB	item-bodies checking
time: 0.000; rss: 86MB	drop-impl checking
time: 0.000; rss: 86MB	const checking
time: 0.000; rss: 86MB	privacy checking
time: 0.000; rss: 86MB	stability index
time: 0.000; rss: 86MB	intrinsic checking
time: 0.000; rss: 86MB	effect checking
time: 0.000; rss: 90MB	match checking
time: 0.000; rss: 90MB	liveness checking
time: 0.000; rss: 90MB	rvalue checking
time: 0.000; rss: 90MB	MIR dump
time: 0.001; rss: 90MB	MIR passes
time: 0.000; rss: 90MB	borrow checking
time: 0.000; rss: 90MB	reachability checking
time: 0.000; rss: 90MB	death checking
time: 0.000; rss: 90MB	stability checking
time: 0.000; rss: 90MB	unused lib feature checking
time: 0.000; rss: 90MB	lint checking
time: 0.001; rss: 90MB	resolving dependency formats
time: 0.000; rss: 90MB	Prepare MIR codegen passes
  time: 0.000; rss: 90MB	write metadata
  time: 0.000; rss: 90MB	translation item collection
  time: 0.000; rss: 90MB	codegen unit partitioning
time: 0.009; rss: 90MB	translation
time: 0.000; rss: 90MB	assert dep graph
time: 0.000; rss: 90MB	serialize dep graph
  time: 0.000; rss: 90MB	llvm function passes [0]
  time: 0.000; rss: 90MB	llvm module passes [0]
  time: 0.001; rss: 95MB	codegen passes [0]
  time: 0.000; rss: 95MB	codegen passes [0]
time: 0.002; rss: 95MB	LLVM passes
  time: 0.146; rss: 95MB	running linker
time: 0.147; rss: 95MB	linking
done
