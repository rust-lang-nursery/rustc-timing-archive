commit d56677a1878e9542f05e6468e0883574963c234d
Merge: d300e4f edd5f33
Author: bors <bors@rust-lang.org>
Date:   Sat Feb 27 20:26:59 2016 +0000

    Auto merge of #31931 - Luke-Nukem:master, r=steveklabnik
    
     Refinement of paragraph referenced by [this issue](https://github.com/rust-lang/rust/issues/31927).
    
    The paragraph in question had been adjusted already, but I've made some further clarifications which should help with readability and not leave the reader any `dangling pointers`.
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
 Downloading regex v0.1.55
   Compiling lazy_static v0.1.15
   Compiling winapi-build v0.1.1
   Compiling gcc v0.3.25
   Compiling bitflags v0.3.3
   Compiling winapi v0.2.5
   Compiling traitobject v0.0.1
   Compiling matches v0.1.2
   Compiling typeable v0.1.2
   Compiling httparse v0.1.6
   Compiling libc v0.1.12
   Compiling libc v0.2.7
   Compiling rustc-serialize v0.3.18
   Compiling unicase v0.1.0
   Compiling pkg-config v0.3.7
   Compiling kernel32-sys v0.2.1
   Compiling rand v0.3.14
   Compiling num_cpus v0.2.11
   Compiling log v0.3.5
   Compiling time v0.1.34
   Compiling mime v0.0.11
   Compiling openssl-sys v0.6.7
   Compiling openssl v0.6.7
   Compiling uuid v0.1.18
   Compiling url v0.2.38
   Compiling cookie v0.1.21
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.029; rss: 44MB	parsing
Lines of code:             9154
Pre-expansion node count:  45594
time: 0.009; rss: 44MB	configuration 1
time: 0.000; rss: 44MB	recursion limit
time: 0.000; rss: 44MB	gated macro checking
time: 0.000; rss: 44MB	crate injection
time: 0.004; rss: 50MB	macro loading
time: 0.000; rss: 50MB	plugin loading
time: 0.000; rss: 50MB	plugin registration
time: 0.190; rss: 60MB	expansion
time: 0.005; rss: 60MB	complete gated feature checking 1
time: 0.035; rss: 60MB	configuration 2
time: 0.000; rss: 60MB	gated configuration checking
time: 0.014; rss: 60MB	maybe building test harness
time: 0.011; rss: 60MB	prelude injection
time: 0.001; rss: 60MB	checking that all macro invocations are gone
time: 0.000; rss: 60MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 60MB	complete gated feature checking 2
time: 0.001; rss: 60MB	const fn bodies and arguments
Post-expansion node count: 109258
time: 0.010; rss: 60MB	assigning node ids
time: 0.011; rss: 64MB	lowering ast -> hir
time: 0.004; rss: 66MB	indexing hir
time: 0.002; rss: 66MB	attribute checking
time: 0.006; rss: 66MB	early lint checks
time: 0.004; rss: 62MB	external crate/lib resolution
time: 0.001; rss: 62MB	language item collection
time: 0.025; rss: 82MB	resolution
time: 0.002; rss: 82MB	lifetime resolution
time: 0.000; rss: 82MB	looking for entry point
time: 0.000; rss: 82MB	looking for plugin registrar
time: 0.005; rss: 84MB	region resolution
time: 0.001; rss: 84MB	loop checking
time: 0.001; rss: 84MB	static item recursion checking
time: 0.012; rss: 89MB	type collecting
time: 0.000; rss: 89MB	variance inference
time: 0.038; rss: 106MB	coherence checking
time: 0.077; rss: 107MB	wf checking
time: 0.024; rss: 107MB	item-types checking
time: 0.479; rss: 129MB	item-bodies checking
time: 0.000; rss: 129MB	drop-impl checking
time: 0.037; rss: 131MB	const checking
time: 0.010; rss: 132MB	privacy checking
time: 0.001; rss: 132MB	stability index
time: 0.004; rss: 132MB	intrinsic checking
time: 0.002; rss: 132MB	effect checking
time: 0.013; rss: 132MB	match checking
time: 0.005; rss: 132MB	liveness checking
time: 0.033; rss: 132MB	rvalue checking
time: 0.060; rss: 134MB	MIR dump
time: 0.000; rss: 134MB	MIR passes
time: 0.064; rss: 134MB	borrow checking
time: 0.003; rss: 134MB	reachability checking
time: 0.006; rss: 134MB	death checking
time: 0.006; rss: 134MB	stability checking
time: 0.000; rss: 134MB	unused lib feature checking
time: 0.047; rss: 134MB	lint checking
time: 0.000; rss: 134MB	resolving dependency formats
time: 0.006; rss: 136MB	erasing regions from MIR
  time: 0.185; rss: 154MB	translation item collection
  time: 0.136; rss: 246MB	write metadata
time: 1.329; rss: 246MB	translation
  time: 0.097; rss: 167MB	llvm function passes [0]
  time: 0.048; rss: 168MB	llvm module passes [0]
  time: 1.659; rss: 172MB	codegen passes [0]
  time: 0.001; rss: 124MB	codegen passes [0]
time: 2.014; rss: 123MB	LLVM passes
time: 0.173; rss: 122MB	linking
done
