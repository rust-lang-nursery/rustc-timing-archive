commit dd6e8d45e183861d44ed91a99f0a50403b2776a3
Merge: 57ef015 0ca7d3d
Author: bors <bors@rust-lang.org>
Date:   Mon May 23 20:02:23 2016 -0700

    Auto merge of #33787 - cuviper:local-rebuild, r=alexcrichton
    
    Add --enable-local-rebuild to bootstrap from the current release
    
    In Linux distributions, it is often necessary to rebuild packages for cases like applying new patches or linking against new system libraries.  In this scenario, the rustc in the distro build environment may already match the current release that we're trying to rebuild.  Thus we don't want to use the prior release's bootstrap key, nor `--cfg stage0` for the prior unstable features.
    
    The new `configure --enable-local-rebuild` option specifies that we are rebuilding from the current release.  The current bootstrap key is used for the local rustc, and current stage1 features are also assumed.  Both the makefiles and rustbuild support this configuration.
    
    Fixes #29556
    r? @alexcrichton
rustc: ./issue-32062-equality-relations-complexity
/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc issue-32062.rs -Ztime-passes -Zinput-stats
time: 0.000; rss: 44MB	parsing
Lines of code:             60
Pre-expansion node count:  586
time: 0.000; rss: 44MB	configuration 1
time: 0.000; rss: 44MB	recursion limit
time: 0.000; rss: 44MB	crate injection
time: 0.019; rss: 83MB	macro loading
time: 0.000; rss: 83MB	plugin loading
time: 0.000; rss: 83MB	plugin registration
time: 0.001; rss: 83MB	expansion
time: 0.000; rss: 83MB	configuration 2
time: 0.000; rss: 83MB	gated configuration checking
time: 0.000; rss: 83MB	maybe building test harness
time: 0.000; rss: 83MB	prelude injection
time: 0.000; rss: 83MB	checking that all macro invocations are gone
time: 0.000; rss: 83MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 83MB	complete gated feature checking
Post-expansion node count: 599
time: 0.000; rss: 83MB	assigning node ids
time: 0.000; rss: 83MB	collecting defs
time: 0.003; rss: 83MB	external crate/lib resolution
time: 0.000; rss: 83MB	early lint checks
time: 0.000; rss: 83MB	name resolution
time: 0.000; rss: 87MB	lowering ast -> hir
time: 0.000; rss: 87MB	indexing hir
time: 0.000; rss: 87MB	attribute checking
time: 0.000; rss: 87MB	language item collection
time: 0.000; rss: 87MB	lifetime resolution
time: 0.000; rss: 87MB	looking for entry point
time: 0.000; rss: 87MB	looking for plugin registrar
time: 0.000; rss: 87MB	region resolution
time: 0.000; rss: 87MB	loop checking
time: 0.000; rss: 87MB	static item recursion checking
time: 0.000; rss: 87MB	load_dep_graph
time: 0.001; rss: 87MB	type collecting
time: 0.000; rss: 87MB	variance inference
time: 0.005; rss: 87MB	coherence checking
time: 0.008; rss: 87MB	wf checking
time: 0.001; rss: 87MB	item-types checking
time: 7.403; rss: 95MB	item-bodies checking
time: 0.000; rss: 95MB	drop-impl checking
time: 0.001; rss: 95MB	const checking
time: 0.000; rss: 95MB	privacy checking
time: 0.000; rss: 95MB	stability index
time: 0.000; rss: 95MB	intrinsic checking
time: 0.000; rss: 95MB	effect checking
time: 0.000; rss: 93MB	match checking
time: 0.000; rss: 93MB	liveness checking
time: 0.001; rss: 93MB	rvalue checking
time: 0.001; rss: 93MB	MIR dump
time: 0.000; rss: 93MB	MIR passes
time: 0.002; rss: 93MB	borrow checking
time: 0.000; rss: 93MB	reachability checking
time: 0.000; rss: 93MB	death checking
time: 0.000; rss: 93MB	stability checking
time: 0.000; rss: 93MB	unused lib feature checking
time: 0.000; rss: 93MB	lint checking
time: 0.001; rss: 93MB	resolving dependency formats
time: 0.000; rss: 93MB	Prepare MIR codegen passes
  time: 1.749; rss: 98MB	translation item collection
  time: 0.000; rss: 98MB	codegen unit partitioning
  time: 0.000; rss: 99MB	write metadata
time: 11.887; rss: 99MB	translation
time: 0.000; rss: 99MB	assert dep graph
time: 0.000; rss: 99MB	serialize dep graph
  time: 0.000; rss: 94MB	llvm function passes [0]
  time: 0.000; rss: 94MB	llvm module passes [0]
  time: 0.005; rss: 99MB	codegen passes [0]
  time: 0.000; rss: 99MB	codegen passes [0]
time: 0.007; rss: 99MB	LLVM passes
  time: 0.103; rss: 99MB	running linker
time: 0.104; rss: 99MB	linking
done
