commit 978bc070a66f7f4f82dc0f2c4a4e4e35478851b6
Merge: 173676e 9532602
Author: bors <bors@rust-lang.org>
Date:   Sun Mar 20 10:30:38 2016 -0700

    Auto merge of #32375 - phil-opp:patch-1, r=japaric
    
    docs: The `data-layout` field is no longer required in custom targets
    
    The `data-layout` field is no longer required. It was made optional in 958d5638254958ea42652de7444b63f2e67e7fe3.
    
    The `os` field is always required.
    
    Related to #31367
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling typeable v0.1.2
   Compiling bitflags v0.3.3
   Compiling winapi v0.2.6
   Compiling lazy_static v0.1.15
   Compiling httparse v0.1.6
   Compiling unicase v0.1.0
   Compiling matches v0.1.2
   Compiling libc v0.2.8
   Compiling libc v0.1.12
   Compiling pkg-config v0.3.8
   Compiling traitobject v0.0.1
   Compiling rustc-serialize v0.3.18
   Compiling gcc v0.3.25
   Compiling winapi-build v0.1.1
   Compiling kernel32-sys v0.2.1
   Compiling num_cpus v0.2.11
   Compiling rand v0.3.14
   Compiling time v0.1.34
   Compiling log v0.3.5
   Compiling openssl-sys v0.6.7
   Compiling mime v0.0.11
   Compiling openssl v0.6.7
   Compiling uuid v0.1.18
   Compiling url v0.2.38
   Compiling cookie v0.1.21
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.040; rss: 37MB	parsing
Lines of code:             9154
Pre-expansion node count:  45594
time: 0.010; rss: 38MB	configuration 1
time: 0.000; rss: 38MB	recursion limit
time: 0.000; rss: 38MB	gated macro checking
time: 0.000; rss: 38MB	crate injection
time: 0.005; rss: 44MB	macro loading
time: 0.000; rss: 44MB	plugin loading
time: 0.000; rss: 44MB	plugin registration
time: 0.201; rss: 53MB	expansion
time: 0.005; rss: 53MB	complete gated feature checking 1
time: 0.033; rss: 53MB	configuration 2
time: 0.000; rss: 53MB	gated configuration checking
time: 0.013; rss: 53MB	maybe building test harness
time: 0.010; rss: 53MB	prelude injection
time: 0.001; rss: 53MB	checking that all macro invocations are gone
time: 0.000; rss: 53MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 53MB	complete gated feature checking 2
time: 0.001; rss: 53MB	const fn bodies and arguments
Post-expansion node count: 106876
time: 0.010; rss: 53MB	assigning node ids
time: 0.022; rss: 59MB	lowering ast -> hir
time: 0.006; rss: 61MB	indexing hir
time: 0.001; rss: 61MB	attribute checking
time: 0.006; rss: 61MB	early lint checks
time: 0.004; rss: 56MB	external crate/lib resolution
time: 0.001; rss: 56MB	language item collection
time: 0.030; rss: 73MB	resolution
time: 0.002; rss: 73MB	lifetime resolution
time: 0.000; rss: 73MB	looking for entry point
time: 0.000; rss: 73MB	looking for plugin registrar
time: 0.008; rss: 77MB	region resolution
time: 0.001; rss: 77MB	loop checking
time: 0.001; rss: 77MB	static item recursion checking
time: 0.013; rss: 80MB	type collecting
time: 0.000; rss: 80MB	variance inference
time: 0.494; rss: 101MB	coherence checking
time: 0.079; rss: 102MB	wf checking
time: 0.033; rss: 104MB	item-types checking
time: 0.529; rss: 119MB	item-bodies checking
time: 0.000; rss: 119MB	drop-impl checking
time: 0.043; rss: 120MB	const checking
time: 0.011; rss: 120MB	privacy checking
time: 0.001; rss: 120MB	stability index
time: 0.004; rss: 120MB	intrinsic checking
time: 0.002; rss: 120MB	effect checking
time: 0.012; rss: 120MB	match checking
time: 0.005; rss: 120MB	liveness checking
time: 0.034; rss: 120MB	rvalue checking
time: 0.055; rss: 127MB	MIR dump
time: 0.028; rss: 128MB	MIR passes
time: 0.066; rss: 128MB	borrow checking
time: 0.004; rss: 128MB	reachability checking
time: 0.006; rss: 128MB	death checking
time: 0.006; rss: 128MB	stability checking
time: 0.000; rss: 128MB	unused lib feature checking
time: 0.048; rss: 128MB	lint checking
time: 0.000; rss: 128MB	resolving dependency formats
  time: 0.222; rss: 147MB	translation item collection
  time: 0.140; rss: 266MB	write metadata
time: 1.707; rss: 266MB	translation
  time: 0.098; rss: 156MB	llvm function passes [0]
  time: 0.047; rss: 158MB	llvm module passes [0]
  time: 1.632; rss: 162MB	codegen passes [0]
  time: 0.001; rss: 112MB	codegen passes [0]
time: 1.978; rss: 111MB	LLVM passes
time: 0.170; rss: 109MB	linking
done
