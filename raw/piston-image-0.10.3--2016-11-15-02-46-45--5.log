commit 0ed951993fb5721a303ca5fa743543dd9f3f6b10
Merge: bd6a54d 7cd8a49
Author: bors <bors@rust-lang.org>
Date:   Mon Nov 14 18:12:26 2016 -0800

    Auto merge of #37775 - alexcrichton:try-fix-dox, r=brson
    
    rustbuild: Tweak default rule inclusion
    
    If a rule is flagged with `default(true)` then the pseudo-rule `default:foo`
    will include that. If a rule is also flagged with `.host(true)`, however, then
    the rule shouldn't be included for targets that aren't in the host array. This
    adds a filter to ensure we don't pull in host rules for targets by accident.
rustc: ./piston-image-0.10.3
cargo rustc  -- -Ztime-passes -Zinput-stats
   Compiling image v0.10.3 (file:///root/benchmarks/piston-image-0.10.3)
time: 0.056; rss: 49MB	parsing
Lines of code:             12000
Pre-expansion node count:  90152
time: 0.000; rss: 49MB	recursion limit
time: 0.000; rss: 49MB	crate injection
time: 0.000; rss: 49MB	plugin loading
time: 0.000; rss: 49MB	plugin registration
time: 0.081; rss: 89MB	expansion
time: 0.000; rss: 89MB	maybe building test harness
time: 0.001; rss: 89MB	maybe creating a macro crate
Post-expansion node count: 148881
time: 0.000; rss: 89MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 89MB	complete gated feature checking
time: 0.006; rss: 89MB	early lint checks
time: 0.001; rss: 89MB	AST validation
time: 0.026; rss: 92MB	name resolution
time: 0.026; rss: 101MB	lowering ast -> hir
time: 0.007; rss: 103MB	indexing hir
time: 0.002; rss: 103MB	attribute checking
time: 0.001; rss: 92MB	language item collection
time: 0.003; rss: 92MB	lifetime resolution
time: 0.000; rss: 92MB	looking for entry point
time: 0.000; rss: 92MB	looking for plugin registrar
time: 0.018; rss: 97MB	region resolution
time: 0.001; rss: 97MB	loop checking
time: 0.001; rss: 97MB	static item recursion checking
time: 0.051; rss: 97MB	compute_incremental_hashes_map
time: 0.000; rss: 97MB	load_dep_graph
time: 0.017; rss: 100MB	type collecting
time: 0.000; rss: 100MB	variance inference
time: 0.015; rss: 102MB	coherence checking
time: 0.065; rss: 103MB	wf checking
time: 0.139; rss: 106MB	item-types checking
time: 0.709; rss: 116MB	item-bodies checking
time: 0.000; rss: 116MB	drop-impl checking
time: 0.059; rss: 120MB	const checking
time: 0.009; rss: 120MB	privacy checking
time: 0.001; rss: 120MB	stability index
time: 0.006; rss: 120MB	intrinsic checking
time: 0.003; rss: 120MB	effect checking
time: 0.014; rss: 120MB	match checking
time: 0.010; rss: 121MB	liveness checking
time: 0.041; rss: 121MB	rvalue checking
time: 0.152; rss: 159MB	MIR dump
  time: 0.012; rss: 160MB	SimplifyCfg
  time: 0.021; rss: 160MB	QualifyAndPromoteConstants
  time: 0.022; rss: 160MB	TypeckMir
  time: 0.001; rss: 160MB	SimplifyBranches
  time: 0.005; rss: 160MB	SimplifyCfg
time: 0.061; rss: 160MB	MIR cleanup and validation
time: 0.111; rss: 161MB	borrow checking
time: 0.004; rss: 161MB	reachability checking
time: 0.008; rss: 161MB	death checking
time: 0.007; rss: 162MB	stability checking
time: 0.000; rss: 162MB	unused lib feature checking
time: 0.064; rss: 162MB	lint checking
time: 0.000; rss: 162MB	resolving dependency formats
  time: 0.001; rss: 162MB	NoLandingPads
  time: 0.005; rss: 162MB	SimplifyCfg
  time: 0.011; rss: 162MB	EraseRegions
  time: 0.002; rss: 162MB	AddCallGuards
  time: 0.050; rss: 166MB	ElaborateDrops
  time: 0.001; rss: 166MB	NoLandingPads
  time: 0.009; rss: 166MB	SimplifyCfg
  time: 0.006; rss: 166MB	InstCombine
  time: 0.002; rss: 166MB	Deaggregator
  time: 0.001; rss: 166MB	CopyPropagation
  time: 0.008; rss: 166MB	SimplifyLocals
  time: 0.002; rss: 166MB	AddCallGuards
  time: 0.000; rss: 166MB	PreTrans
time: 0.098; rss: 166MB	MIR optimisations
  time: 0.020; rss: 169MB	write metadata
  time: 0.452; rss: 180MB	translation item collection
  time: 0.024; rss: 184MB	codegen unit partitioning
  time: 0.022; rss: 303MB	internalize symbols
time: 2.653; rss: 303MB	translation
time: 0.000; rss: 303MB	assert dep graph
time: 0.000; rss: 303MB	serialize dep graph
  time: 0.214; rss: 220MB	llvm function passes [0]
  time: 0.087; rss: 223MB	llvm module passes [0]
  time: 4.250; rss: 223MB	codegen passes [0]
  time: 0.000; rss: 223MB	codegen passes [0]
time: 4.936; rss: 223MB	LLVM passes
time: 0.000; rss: 223MB	serialize work products
time: 0.140; rss: 94MB	linking
done
