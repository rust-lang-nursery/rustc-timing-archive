commit 11f880588791930cb130071c2cb972fc3c3354ed
Merge: 42001ed 5d4ae4b
Author: bors <bors@rust-lang.org>
Date:   Thu Aug 11 10:09:10 2016 -0700

    Auto merge of #34193 - petrochenkov:privalias, r=nikomatsakis
    
    privacy: Substitute type aliases in private-in-public checker
    
    Closes https://github.com/rust-lang/rust/issues/30503
    Closes https://github.com/rust-lang/rust/issues/34293
    
    Everyone in the issue discussion seemed to be in favor, @huonw also spoke about this [here](https://www.reddit.com/r/rust/comments/3xldr9/surfaces_and_signatures_component_privacy_versus/cy615wq), but the issue haven't got any movement.
    I think it's reasonable to do this before turning `private_in_public` warnings into errors.
    
    r? @nikomatsakis
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling bitflags v0.3.3
   Compiling lazy_static v0.1.16
   Compiling httparse v0.1.6
   Compiling rustc-serialize v0.3.19
   Compiling libc v0.2.15
   Compiling typeable v0.1.2
   Compiling winapi v0.2.8
   Compiling traitobject v0.0.1
   Compiling libc v0.1.12
   Compiling matches v0.1.2
   Compiling unicase v0.1.0
   Compiling log v0.3.6
   Compiling gcc v0.3.32
   Compiling pkg-config v0.3.8
   Compiling winapi-build v0.1.1
   Compiling mime v0.0.11
   Compiling kernel32-sys v0.2.2
   Compiling num_cpus v0.2.13
   Compiling rand v0.3.14
   Compiling time v0.1.35
   Compiling openssl-sys v0.6.7
   Compiling openssl v0.6.7
   Compiling uuid v0.1.18
   Compiling url v0.2.38
   Compiling cookie v0.1.21
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.026; rss: 58MB	parsing
Lines of code:             9154
Pre-expansion node count:  44838
time: 0.003; rss: 58MB	configuration
time: 0.000; rss: 58MB	recursion limit
time: 0.000; rss: 58MB	crate injection
time: 0.000; rss: 58MB	plugin loading
time: 0.000; rss: 58MB	plugin registration
time: 0.092; rss: 99MB	expansion
time: 0.000; rss: 99MB	maybe building test harness
time: 0.005; rss: 99MB	assigning node ids
Post-expansion node count: 101581
time: 0.000; rss: 99MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 99MB	complete gated feature checking
time: 0.003; rss: 99MB	collecting defs
time: 0.010; rss: 110MB	external crate/lib resolution
time: 0.003; rss: 110MB	early lint checks
time: 0.001; rss: 110MB	AST validation
time: 0.018; rss: 117MB	name resolution
time: 0.008; rss: 123MB	lowering ast -> hir
time: 0.001; rss: 125MB	indexing hir
time: 0.001; rss: 125MB	attribute checking
time: 0.001; rss: 118MB	language item collection
time: 0.002; rss: 118MB	lifetime resolution
time: 0.000; rss: 118MB	looking for entry point
time: 0.000; rss: 118MB	looking for plugin registrar
time: 0.006; rss: 122MB	region resolution
time: 0.001; rss: 122MB	loop checking
time: 0.001; rss: 122MB	static item recursion checking
time: 0.000; rss: 122MB	load_dep_graph
time: 0.023; rss: 123MB	type collecting
time: 0.000; rss: 123MB	variance inference
time: 0.046; rss: 132MB	coherence checking
time: 0.078; rss: 134MB	wf checking
time: 0.032; rss: 134MB	item-types checking
time: 0.474; rss: 145MB	item-bodies checking
time: 0.000; rss: 145MB	drop-impl checking
time: 0.043; rss: 147MB	const checking
time: 0.008; rss: 147MB	privacy checking
time: 0.001; rss: 147MB	stability index
time: 0.005; rss: 147MB	intrinsic checking
time: 0.002; rss: 147MB	effect checking
time: 0.013; rss: 147MB	match checking
time: 0.005; rss: 147MB	liveness checking
time: 0.030; rss: 147MB	rvalue checking
time: 0.051; rss: 158MB	MIR dump
time: 0.038; rss: 158MB	MIR passes
time: 0.069; rss: 158MB	borrow checking
time: 0.003; rss: 158MB	reachability checking
time: 0.005; rss: 158MB	death checking
time: 0.005; rss: 158MB	stability checking
time: 0.000; rss: 158MB	unused lib feature checking
time: 0.049; rss: 158MB	lint checking
time: 0.000; rss: 158MB	resolving dependency formats
time: 0.092; rss: 160MB	Prepare MIR codegen passes
  time: 0.125; rss: 165MB	write metadata
  time: 0.169; rss: 171MB	translation item collection
  time: 0.020; rss: 173MB	codegen unit partitioning
  time: 0.035; rss: 302MB	internalize symbols
time: 1.721; rss: 302MB	translation
time: 0.000; rss: 302MB	assert dep graph
time: 0.000; rss: 302MB	serialize dep graph
  time: 0.100; rss: 190MB	llvm function passes [0]
  time: 0.047; rss: 188MB	llvm module passes [0]
  time: 1.809; rss: 192MB	codegen passes [0]
  time: 0.001; rss: 192MB	codegen passes [0]
time: 2.117; rss: 192MB	LLVM passes
time: 0.000; rss: 192MB	serialize work products
time: 0.156; rss: 125MB	linking
done
