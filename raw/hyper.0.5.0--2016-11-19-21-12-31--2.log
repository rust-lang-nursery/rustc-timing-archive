commit 0bd2ce62b27e2b9a7dfe92fc23d9098854008089
Merge: bfa709a 30daedf
Author: bors <bors@rust-lang.org>
Date:   Sat Nov 19 16:39:25 2016 -0600

    Auto merge of #37831 - rkruppe:llvm-attr-fwdcompat, r=eddyb
    
    [LLVM 4.0] Use llvm::Attribute APIs instead of "raw value" APIs
    
    The latter will be removed in LLVM 4.0 (see https://github.com/llvm-mirror/llvm/commit/4a6fc8bacf11d8066da72cf8481467167877ed16).
    
    The librustc_llvm API remains mostly unchanged, except that llvm::Attribute is no longer a bitflag but represents only a *single* attribute.
    The ability to store many attributes in a small number of bits and modify them without interacting with LLVM is only used in rustc_trans::abi and closely related modules, and only attributes for function arguments are considered there.
    Thus rustc_trans::abi now has its own bit-packed representation of argument attributes, which are translated to rustc_llvm::Attribute when applying the attributes.
    
    cc #37609
rustc: ./hyper.0.5.0
cargo rustc  -- -Ztime-passes -Zinput-stats
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.034; rss: 43MB	parsing
Lines of code:             9003
Pre-expansion node count:  44055
time: 0.000; rss: 43MB	recursion limit
time: 0.000; rss: 43MB	crate injection
time: 0.000; rss: 43MB	plugin loading
time: 0.000; rss: 43MB	plugin registration
time: 0.095; rss: 82MB	expansion
time: 0.000; rss: 82MB	maybe building test harness
time: 0.001; rss: 82MB	maybe creating a macro crate
Post-expansion node count: 101769
time: 0.000; rss: 82MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 82MB	complete gated feature checking
time: 0.003; rss: 82MB	early lint checks
time: 0.001; rss: 82MB	AST validation
time: 0.020; rss: 86MB	name resolution
time: 0.014; rss: 89MB	lowering ast -> hir
time: 0.005; rss: 91MB	indexing hir
time: 0.001; rss: 91MB	attribute checking
time: 0.001; rss: 86MB	language item collection
time: 0.002; rss: 86MB	lifetime resolution
time: 0.000; rss: 86MB	looking for entry point
time: 0.000; rss: 86MB	looking for plugin registrar
time: 0.010; rss: 89MB	region resolution
time: 0.001; rss: 89MB	loop checking
time: 0.001; rss: 89MB	static item recursion checking
time: 0.040; rss: 89MB	compute_incremental_hashes_map
time: 0.000; rss: 89MB	load_dep_graph
time: 0.014; rss: 91MB	type collecting
time: 0.000; rss: 91MB	variance inference
time: 0.001; rss: 91MB	impl wf inference
time: 0.015; rss: 93MB	coherence checking
time: 0.039; rss: 94MB	wf checking
time: 0.024; rss: 95MB	item-types checking
time: 0.474; rss: 103MB	item-bodies checking
time: 0.000; rss: 103MB	drop-impl checking
time: 0.051; rss: 104MB	const checking
time: 0.008; rss: 104MB	privacy checking
time: 0.001; rss: 104MB	stability index
time: 0.003; rss: 104MB	intrinsic checking
time: 0.001; rss: 104MB	effect checking
time: 0.008; rss: 104MB	match checking
time: 0.004; rss: 105MB	liveness checking
time: 0.020; rss: 105MB	rvalue checking
time: 0.062; rss: 125MB	MIR dump
  time: 0.007; rss: 126MB	SimplifyCfg
  time: 0.013; rss: 127MB	QualifyAndPromoteConstants
  time: 0.013; rss: 127MB	TypeckMir
  time: 0.001; rss: 127MB	SimplifyBranches
  time: 0.003; rss: 127MB	SimplifyCfg
time: 0.037; rss: 127MB	MIR cleanup and validation
time: 0.057; rss: 128MB	borrow checking
time: 0.003; rss: 128MB	reachability checking
time: 0.005; rss: 128MB	death checking
time: 0.004; rss: 128MB	stability checking
time: 0.000; rss: 128MB	unused lib feature checking
time: 0.038; rss: 128MB	lint checking
time: 0.000; rss: 128MB	resolving dependency formats
  time: 0.000; rss: 128MB	NoLandingPads
  time: 0.003; rss: 128MB	SimplifyCfg
  time: 0.007; rss: 128MB	EraseRegions
  time: 0.001; rss: 128MB	AddCallGuards
  time: 0.025; rss: 130MB	ElaborateDrops
  time: 0.000; rss: 130MB	NoLandingPads
  time: 0.005; rss: 130MB	SimplifyCfg
  time: 0.003; rss: 130MB	InstCombine
  time: 0.003; rss: 130MB	Deaggregator
  time: 0.000; rss: 130MB	CopyPropagation
  time: 0.004; rss: 130MB	SimplifyLocals
  time: 0.001; rss: 130MB	AddCallGuards
  time: 0.000; rss: 130MB	PreTrans
time: 0.054; rss: 130MB	MIR optimisations
  time: 0.013; rss: 132MB	write metadata
  time: 0.132; rss: 138MB	translation item collection
  time: 0.015; rss: 141MB	codegen unit partitioning
  time: 0.014; rss: 195MB	internalize symbols
time: 1.072; rss: 195MB	translation
time: 0.000; rss: 195MB	assert dep graph
time: 0.000; rss: 195MB	serialize dep graph
  time: 0.087; rss: 143MB	llvm function passes [0]
  time: 0.042; rss: 145MB	llvm module passes [0]
  time: 1.641; rss: 147MB	codegen passes [0]
  time: 0.000; rss: 147MB	codegen passes [0]
time: 1.929; rss: 147MB	LLVM passes
time: 0.000; rss: 147MB	serialize work products
time: 0.092; rss: 90MB	linking
done
