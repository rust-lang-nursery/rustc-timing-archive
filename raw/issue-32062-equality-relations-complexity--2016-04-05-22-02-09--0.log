commit 772c600d4d6f39daa6d07d1a60ee0df3d3426978
Merge: 241a9d0 432eb8a
Author: bors <bors@rust-lang.org>
Date:   Tue Apr 5 18:58:24 2016 -0700

    Auto merge of #32688 - jseyfried:ast_groundwork_for_1422, r=pnkfelix
    
    [breaking-batch] Add support for `pub(restricted)` syntax in the AST
    
    This PR allows the AST to represent the `pub(restricted)` syntax from RFC 1422 (cc #32409).
    
    More specifically, it makes `ast::Visibility` non-`Copy` and adds two new variants, `Visibility::Crate` for `pub(crate)` and `Visitibility::Restricted { path: P<Path>, id: NodeId }` for `pub(path)`.
    
    plugin-[breaking-change] cc #31645
    r? @pnkfelix
rustc: ./issue-32062-equality-relations-complexity
/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc issue-32062.rs -Ztime-passes -Zinput-stats
time: 0.001; rss: 34MB	parsing
Lines of code:             60
Pre-expansion node count:  586
time: 0.000; rss: 38MB	configuration 1
time: 0.000; rss: 38MB	recursion limit
time: 0.000; rss: 38MB	gated macro checking
time: 0.000; rss: 38MB	crate injection
time: 0.003; rss: 41MB	macro loading
time: 0.000; rss: 41MB	plugin loading
time: 0.000; rss: 41MB	plugin registration
time: 0.001; rss: 41MB	expansion
time: 0.000; rss: 41MB	complete gated feature checking 1
time: 0.000; rss: 41MB	configuration 2
time: 0.000; rss: 41MB	gated configuration checking
time: 0.000; rss: 41MB	maybe building test harness
time: 0.000; rss: 41MB	prelude injection
time: 0.000; rss: 41MB	checking that all macro invocations are gone
time: 0.000; rss: 41MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 41MB	complete gated feature checking 2
time: 0.000; rss: 41MB	const fn bodies and arguments
Post-expansion node count: 599
time: 0.000; rss: 41MB	assigning node ids
time: 0.000; rss: 41MB	lowering ast -> hir
time: 0.000; rss: 41MB	indexing hir
time: 0.000; rss: 41MB	attribute checking
time: 0.000; rss: 41MB	early lint checks
time: 0.001; rss: 41MB	external crate/lib resolution
time: 0.000; rss: 41MB	language item collection
time: 0.001; rss: 45MB	resolution
time: 0.000; rss: 45MB	lifetime resolution
time: 0.000; rss: 45MB	looking for entry point
time: 0.000; rss: 45MB	looking for plugin registrar
time: 0.000; rss: 45MB	region resolution
time: 0.000; rss: 45MB	loop checking
time: 0.000; rss: 45MB	static item recursion checking
time: 0.001; rss: 49MB	type collecting
time: 0.000; rss: 49MB	variance inference
time: 0.005; rss: 58MB	coherence checking
time: 0.007; rss: 62MB	wf checking
time: 0.000; rss: 62MB	item-types checking
time: 1.778; rss: 106MB	item-bodies checking
time: 0.000; rss: 106MB	drop-impl checking
time: 0.001; rss: 106MB	const checking
time: 0.000; rss: 106MB	privacy checking
time: 0.000; rss: 106MB	stability index
time: 0.000; rss: 106MB	intrinsic checking
time: 0.000; rss: 106MB	effect checking
time: 0.000; rss: 106MB	match checking
time: 0.000; rss: 106MB	liveness checking
time: 0.002; rss: 106MB	rvalue checking
time: 0.001; rss: 106MB	MIR dump
time: 0.000; rss: 106MB	MIR passes
time: 0.001; rss: 106MB	borrow checking
time: 0.000; rss: 106MB	reachability checking
time: 0.000; rss: 106MB	death checking
time: 0.000; rss: 106MB	stability checking
time: 0.000; rss: 106MB	unused lib feature checking
time: 0.000; rss: 106MB	lint checking
time: 0.001; rss: 106MB	resolving dependency formats
time: 0.000; rss: 106MB	Prepare MIR codegen passes
  time: 0.094; rss: 119MB	translation item collection
  time: 0.000; rss: 128MB	write metadata
time: 0.469; rss: 128MB	translation
  time: 0.000; rss: 82MB	llvm function passes [0]
  time: 0.000; rss: 82MB	llvm module passes [0]
  time: 0.005; rss: 87MB	codegen passes [0]
  time: 0.000; rss: 87MB	codegen passes [0]
time: 0.007; rss: 87MB	LLVM passes
  time: 0.101; rss: 87MB	running linker
time: 0.101; rss: 87MB	linking
done
