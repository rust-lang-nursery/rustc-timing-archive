commit 483fc715c6ea7cdd15d41d79df9def97401cd699
Merge: 4db8b5b 155735a
Author: bors <bors@rust-lang.org>
Date:   Tue Mar 15 03:21:40 2016 -0700

    Auto merge of #32239 - alexcrichton:fix-cross-to-freebsd, r=brson
    
    rustbuild: Fix cross compiling to FreeBSD
    
    This commit fixes our support for cross compiling a compiler to run on FreeBSD.
    Over the weekend I managed to get a cross compiler from Linux to FreeBSD [1]
    which I hope to soon use to start producing FreeBSD nightly compilers. With the
    `make dist` support added in #32237 we should be able to produce standard
    rustc/rust-std packages for FreeBSD through a new slave with this cross compiler.
    
    Currently, however, we don't "Just Work" when cross compiling FreeBSD and a
    number of changes were required (part of this PR). They include:
    
    * A few build fixes were needed in LLVM. Our own branch has been rebased on the
      actual 3.8 release and I applied one extra commit [2] which contains two fixes:
    
      1. The LLVM CMake build system passes the `-Wl,-z,defs` flag on many
         platforms, but *not* when `CMAKE_SYSTEM_NAME` is "FreeBSD". Unfortunately
         this doesn't take into account when we're cross compiling, and as predicted
         the build will fail if `-Wl,-z,defs` is passed (see [3] for more info). To
         fix this we test `TARGET_TRIPLE` instead of the `CMAKE_SYSTEM_NAME` which
         is what we're compiling for which fixes the problem.
      2. The `PATH_MAX` constant is apparently defined in a different location than
         many other Unix systems, so a file which required this just needed some
         help to keep compiling.
    
    * Support for compiling compiler-rt with CMake has been added to rustbuild. It
      looks like it just emulates Linux in what it compiles as it didn't seem to
      naturally produce anything else... At least the architecture is right, so
      seems good for now at least!
    
    [1]: https://github.com/alexcrichton/port-of-rust/blob/master/prebuilt/freebsd/Dockerfile
    [2]: https://github.com/rust-lang/llvm/commit/be89e4b5
    [3]: https://bugs.webkit.org/show_bug.cgi?id=138420
rustc: ./helloworld
/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc hello.rs -Ztime-passes -Zinput-stats
time: 0.000; rss: 32MB	parsing
Lines of code:             3
Pre-expansion node count:  8
time: 0.000; rss: 37MB	configuration 1
time: 0.000; rss: 37MB	recursion limit
time: 0.000; rss: 37MB	gated macro checking
time: 0.000; rss: 37MB	crate injection
time: 0.003; rss: 39MB	macro loading
time: 0.000; rss: 39MB	plugin loading
time: 0.000; rss: 39MB	plugin registration
time: 0.001; rss: 39MB	expansion
time: 0.000; rss: 39MB	complete gated feature checking 1
time: 0.000; rss: 39MB	configuration 2
time: 0.000; rss: 39MB	gated configuration checking
time: 0.000; rss: 39MB	maybe building test harness
time: 0.000; rss: 39MB	prelude injection
time: 0.000; rss: 39MB	checking that all macro invocations are gone
time: 0.000; rss: 39MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 39MB	complete gated feature checking 2
time: 0.000; rss: 39MB	const fn bodies and arguments
Post-expansion node count: 68
time: 0.000; rss: 39MB	assigning node ids
time: 0.000; rss: 39MB	lowering ast -> hir
time: 0.000; rss: 39MB	indexing hir
time: 0.000; rss: 39MB	attribute checking
time: 0.000; rss: 39MB	early lint checks
time: 0.001; rss: 39MB	external crate/lib resolution
time: 0.000; rss: 39MB	language item collection
time: 0.001; rss: 43MB	resolution
time: 0.000; rss: 43MB	lifetime resolution
time: 0.000; rss: 43MB	looking for entry point
time: 0.000; rss: 43MB	looking for plugin registrar
time: 0.000; rss: 43MB	region resolution
time: 0.000; rss: 43MB	loop checking
time: 0.000; rss: 43MB	static item recursion checking
time: 0.000; rss: 48MB	type collecting
time: 0.000; rss: 48MB	variance inference
time: 0.005; rss: 52MB	coherence checking
time: 0.000; rss: 56MB	wf checking
time: 0.000; rss: 56MB	item-types checking
time: 0.000; rss: 56MB	item-bodies checking
time: 0.000; rss: 56MB	drop-impl checking
time: 0.000; rss: 56MB	const checking
time: 0.000; rss: 56MB	privacy checking
time: 0.000; rss: 56MB	stability index
time: 0.000; rss: 56MB	intrinsic checking
time: 0.000; rss: 56MB	effect checking
time: 0.000; rss: 56MB	match checking
time: 0.000; rss: 56MB	liveness checking
time: 0.000; rss: 56MB	rvalue checking
time: 0.000; rss: 56MB	MIR dump
time: 0.000; rss: 56MB	MIR passes
time: 0.000; rss: 56MB	borrow checking
time: 0.000; rss: 56MB	reachability checking
time: 0.000; rss: 56MB	death checking
time: 0.000; rss: 56MB	stability checking
time: 0.000; rss: 56MB	unused lib feature checking
time: 0.000; rss: 56MB	lint checking
time: 0.001; rss: 56MB	resolving dependency formats
  time: 0.000; rss: 68MB	translation item collection
  time: 0.000; rss: 68MB	write metadata
time: 0.003; rss: 68MB	translation
  time: 0.000; rss: 68MB	llvm function passes [0]
  time: 0.000; rss: 68MB	llvm module passes [0]
  time: 0.001; rss: 72MB	codegen passes [0]
  time: 0.000; rss: 72MB	codegen passes [0]
time: 0.002; rss: 72MB	LLVM passes
  time: 0.094; rss: 72MB	running linker
time: 0.095; rss: 72MB	linking
done
