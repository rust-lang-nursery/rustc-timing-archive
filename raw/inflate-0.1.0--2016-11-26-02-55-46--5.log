commit d64b7030658c839c60d7c7165e8be19283c3f28c
Merge: 2217bd7 49c6b3c
Author: bors <bors@rust-lang.org>
Date:   Fri Nov 25 20:19:47 2016 -0600

    Auto merge of #37960 - samestep:five, r=frewsxcv
    
    Use literal 5 instead of five in book section 4.1
    
    The other two code snippets in this sentence are valid code, so it makes more sense to use the literal `5` rather than the invalid symbol `five`.
rustc: ./inflate-0.1.0
cargo rustc  -- -Ztime-passes -Zinput-stats
   Compiling inflate v0.1.0 (file:///root/benchmarks/inflate-0.1.0)
time: 0.007; rss: 38MB	parsing
Lines of code:             956
Pre-expansion node count:  4736
time: 0.000; rss: 38MB	recursion limit
time: 0.000; rss: 38MB	crate injection
time: 0.000; rss: 38MB	plugin loading
time: 0.000; rss: 38MB	plugin registration
time: 0.074; rss: 67MB	expansion
time: 0.000; rss: 67MB	maybe building test harness
time: 0.000; rss: 67MB	maybe creating a macro crate
Post-expansion node count: 55748
time: 0.000; rss: 67MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 67MB	complete gated feature checking
time: 0.002; rss: 67MB	early lint checks
time: 0.000; rss: 67MB	AST validation
time: 0.010; rss: 69MB	name resolution
time: 0.008; rss: 72MB	lowering ast -> hir
time: 0.001; rss: 72MB	indexing hir
time: 0.000; rss: 72MB	attribute checking
time: 0.000; rss: 69MB	language item collection
time: 0.001; rss: 69MB	lifetime resolution
time: 0.000; rss: 69MB	looking for entry point
time: 0.000; rss: 69MB	looking for plugin registrar
time: 0.003; rss: 71MB	region resolution
time: 0.000; rss: 71MB	loop checking
time: 0.000; rss: 71MB	static item recursion checking
time: 0.019; rss: 71MB	compute_incremental_hashes_map
time: 0.000; rss: 71MB	load_dep_graph
time: 0.002; rss: 72MB	type collecting
time: 0.000; rss: 72MB	variance inference
time: 0.000; rss: 72MB	impl wf inference
time: 0.009; rss: 73MB	coherence checking
time: 0.001; rss: 74MB	wf checking
time: 0.001; rss: 74MB	item-types checking
time: 1.661; rss: 80MB	item-bodies checking
time: 0.000; rss: 80MB	drop-impl checking
time: 0.015; rss: 81MB	const checking
time: 0.001; rss: 81MB	privacy checking
time: 0.000; rss: 81MB	stability index
time: 0.000; rss: 81MB	intrinsic checking
time: 0.001; rss: 81MB	effect checking
time: 0.002; rss: 81MB	match checking
time: 0.316; rss: 81MB	liveness checking
time: 0.011; rss: 81MB	rvalue checking
time: 0.036; rss: 99MB	MIR dump
  time: 0.007; rss: 100MB	SimplifyCfg
  time: 0.005; rss: 100MB	QualifyAndPromoteConstants
  time: 0.007; rss: 100MB	TypeckMir
  time: 0.000; rss: 100MB	SimplifyBranches
  time: 0.002; rss: 100MB	SimplifyCfg
time: 0.021; rss: 100MB	MIR cleanup and validation
time: 0.202; rss: 103MB	borrow checking
time: 0.000; rss: 103MB	reachability checking
time: 0.003; rss: 103MB	death checking
time: 0.001; rss: 103MB	stability checking
time: 0.000; rss: 103MB	unused lib feature checking
time: 0.016; rss: 105MB	lint checking
time: 0.000; rss: 105MB	resolving dependency formats
  time: 0.000; rss: 105MB	NoLandingPads
  time: 0.002; rss: 103MB	SimplifyCfg
  time: 0.002; rss: 103MB	EraseRegions
  time: 0.001; rss: 103MB	AddCallGuards
  time: 0.236; rss: 106MB	ElaborateDrops
  time: 0.000; rss: 106MB	NoLandingPads
  time: 0.006; rss: 105MB	SimplifyCfg
  time: 0.003; rss: 105MB	InstCombine
  time: 0.000; rss: 105MB	Deaggregator
  time: 0.000; rss: 105MB	CopyPropagation
  time: 0.003; rss: 105MB	SimplifyLocals
  time: 0.001; rss: 105MB	AddCallGuards
  time: 0.000; rss: 105MB	PreTrans
time: 0.254; rss: 105MB	MIR optimisations
  time: 0.001; rss: 105MB	write metadata
  time: 0.008; rss: 105MB	translation item collection
  time: 0.001; rss: 106MB	codegen unit partitioning
  time: 0.001; rss: 119MB	internalize symbols
time: 0.141; rss: 119MB	translation
time: 0.000; rss: 119MB	assert dep graph
time: 0.000; rss: 119MB	serialize dep graph
  time: 0.028; rss: 88MB	llvm function passes [0]
  time: 0.007; rss: 89MB	llvm module passes [0]
  time: 0.659; rss: 93MB	codegen passes [0]
  time: 0.000; rss: 93MB	codegen passes [0]
time: 0.729; rss: 93MB	LLVM passes
time: 0.000; rss: 93MB	serialize work products
time: 0.019; rss: 81MB	linking
done
