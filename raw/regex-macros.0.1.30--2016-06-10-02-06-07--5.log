commit c09d546ee512c166c2e28306ed67dcf0e3fec751
Merge: 2798772 8841f26
Author: bors <bors@rust-lang.org>
Date:   Thu Jun 9 21:29:26 2016 -0700

    Auto merge of #34046 - Vtec234:fix-atomic-doc, r=steveklabnik
    
    Fix wrong statement in compare_exchange doc
    
    The documentation for `core::sync::atomic::AtomicSomething::compare_exchange` contains a wrong, or imprecise, statement about the return value. It goes:
    
    The return value is a result indicating whether the new value was written and containing
    the previous value. On success this value is guaranteed to be equal to `new`.
    
    In the second sentence, `this value` is gramatically understood as referring to `return value` from the first sentence. Due to how CAS works, the returned value is always what was in the atomic variable _before_ the operation occurred, not what was written into it during the operation. Hence, the fixed doc should say:
    
    The return value is a result indicating whether the new value was written and containing
    the previous value. On success this value is guaranteed to be equal to `current`.
    
    This version is confirmed by the runnable examples in variants of `AtomicSomething`, e.g.
    
        assert_eq!(some_bool.compare_exchange(true, false, Ordering::Acquire, Ordering::Relaxed),
        Ok(true));
    
    where the returned value is `Ok(current)`. This PR fixes all occurrences of this bug I could find.
    
    An alternative solution would be to modify the second sentence so that it refers to the value _written_ into the Atomic rather than what was there before, in which case it would be correct. Example alternative formulation:
    
    On success the value written into the `bool`/`usize`/`whatever` is guaranteed to be equal to `new`.
    
    r? @steveklabnik
rustc: ./regex-macros.0.1.30
cd regex_macros && cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling regex_macros v0.1.17 (file:///root/benchmarks/regex-macros.0.1.30/regex_macros)
time: 0.002; rss: 46MB	parsing
Lines of code:             639
Pre-expansion node count:  2072
time: 0.000; rss: 46MB	configuration 1
time: 0.000; rss: 46MB	recursion limit
time: 0.000; rss: 46MB	crate injection
time: 0.000; rss: 46MB	plugin loading
time: 0.000; rss: 46MB	plugin registration
time: 0.068; rss: 88MB	expansion
time: 0.000; rss: 88MB	gated configuration checking
time: 0.006; rss: 88MB	maybe building test harness
time: 0.000; rss: 88MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 88MB	complete gated feature checking
Post-expansion node count: 69643
time: 0.004; rss: 88MB	assigning node ids
time: 0.000; rss: 88MB	collecting defs
time: 0.100; rss: 169MB	external crate/lib resolution
time: 0.003; rss: 169MB	early lint checks
time: 0.001; rss: 169MB	AST validation
time: 0.010; rss: 174MB	name resolution
time: 0.007; rss: 178MB	lowering ast -> hir
time: 0.001; rss: 178MB	indexing hir
time: 0.000; rss: 178MB	attribute checking
time: 0.000; rss: 174MB	language item collection
time: 0.001; rss: 174MB	lifetime resolution
time: 0.000; rss: 174MB	looking for entry point
time: 0.000; rss: 174MB	looking for plugin registrar
time: 0.002; rss: 177MB	region resolution
time: 0.000; rss: 177MB	loop checking
time: 0.000; rss: 177MB	static item recursion checking
time: 0.000; rss: 177MB	load_dep_graph
time: 0.014; rss: 180MB	type collecting
time: 0.000; rss: 180MB	variance inference
time: 0.010; rss: 181MB	coherence checking
time: 0.008; rss: 181MB	wf checking
time: 0.001; rss: 181MB	item-types checking
time: 0.883; rss: 199MB	item-bodies checking
makefile:2: recipe for target 'all' failed
done
