commit 209308439a1099b285520459f57e380f18793c07
Merge: 7846610 d6ec686
Author: bors <bors@rust-lang.org>
Date:   Wed Dec 7 16:32:48 2016 +0000

    Auto merge of #38105 - ollie27:rustdoc_deterministic_js, r=GuillaumeGomez
    
    rustdoc: Sort lines in search index and implementors js
    
    This means the files are generated deterministically even with rustdoc running in parallel.
    
    Fixes the first part of #30220.
rustc: ./syntex-0.42.2@010-incr@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.126; rss: 73MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 73MB	recursion limit
time: 0.000; rss: 73MB	crate injection
time: 0.000; rss: 73MB	plugin loading
time: 0.000; rss: 73MB	plugin registration
time: 0.332; rss: 147MB	expansion
time: 0.000; rss: 147MB	maybe building test harness
time: 0.006; rss: 147MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 147MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 147MB	complete gated feature checking
time: 0.024; rss: 147MB	early lint checks
time: 0.007; rss: 147MB	AST validation
time: 0.104; rss: 162MB	name resolution
time: 0.117; rss: 196MB	lowering ast -> hir
time: 0.011; rss: 188MB	indexing hir
time: 0.006; rss: 188MB	attribute checking
time: 0.002; rss: 150MB	language item collection
time: 0.016; rss: 151MB	lifetime resolution
time: 0.000; rss: 151MB	looking for entry point
time: 0.000; rss: 151MB	looking for plugin registrar
time: 0.091; rss: 172MB	region resolution
time: 0.008; rss: 172MB	loop checking
time: 0.002; rss: 172MB	static item recursion checking
time: 0.383; rss: 173MB	compute_incremental_hashes_map
time: 0.000; rss: 173MB	load_dep_graph
time: 0.009; rss: 173MB	stability index
time: 0.023; rss: 177MB	stability checking
time: 0.071; rss: 183MB	type collecting
time: 0.005; rss: 183MB	variance inference
time: 0.014; rss: 187MB	impl wf inference
time: 0.038; rss: 191MB	coherence checking
time: 0.087; rss: 193MB	wf checking
time: 0.217; rss: 202MB	item-types checking
time: 3.765; rss: 255MB	item-bodies checking
time: 0.000; rss: 255MB	drop-impl checking
time: 0.320; rss: 265MB	const checking
time: 0.060; rss: 266MB	privacy checking
time: 0.040; rss: 272MB	intrinsic checking
time: 0.015; rss: 272MB	effect checking
time: 0.050; rss: 272MB	match checking
time: 0.050; rss: 280MB	liveness checking
time: 0.181; rss: 280MB	rvalue checking
time: 0.574; rss: 453MB	MIR dump
  time: 0.059; rss: 459MB	SimplifyCfg
  time: 0.077; rss: 459MB	QualifyAndPromoteConstants
  time: 0.177; rss: 476MB	TypeckMir
  time: 0.005; rss: 476MB	SimplifyBranches
  time: 0.032; rss: 476MB	SimplifyCfg
time: 0.350; rss: 476MB	MIR cleanup and validation
time: 0.489; rss: 479MB	borrow checking
time: 0.024; rss: 479MB	reachability checking
time: 0.039; rss: 479MB	death checking
time: 0.000; rss: 479MB	unused lib feature checking
time: 0.179; rss: 479MB	lint checking
time: 0.000; rss: 479MB	resolving dependency formats
  time: 0.004; rss: 479MB	NoLandingPads
  time: 0.027; rss: 479MB	SimplifyCfg
  time: 0.080; rss: 487MB	EraseRegions
  time: 0.012; rss: 487MB	AddCallGuards
  time: 0.310; rss: 509MB	ElaborateDrops
  time: 0.004; rss: 509MB	NoLandingPads
  time: 0.054; rss: 510MB	SimplifyCfg
  time: 0.030; rss: 509MB	InstCombine
  time: 0.013; rss: 509MB	Deaggregator
  time: 0.003; rss: 509MB	CopyPropagation
  time: 0.037; rss: 509MB	SimplifyLocals
  time: 0.010; rss: 509MB	AddCallGuards
  time: 0.003; rss: 509MB	PreTrans
time: 0.588; rss: 509MB	MIR optimisations
  time: 0.082; rss: 518MB	write metadata
  time: 0.417; rss: 530MB	translation item collection
  time: 0.075; rss: 535MB	codegen unit partitioning
  time: 0.053; rss: 1438MB	internalize symbols
time: 13.764; rss: 1438MB	translation
time: 0.000; rss: 1438MB	assert dep graph
time: 2.052; rss: 1468MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.004; rss: 1178MB	llvm function passes [0]
time: 0.000; rss: 1178MB	llvm module passes [0]
time: 0.005; rss: 1178MB	llvm function passes [1]
time: 0.000; rss: 1178MB	llvm module passes [1]
time: 0.005; rss: 1178MB	llvm function passes [3]
time: 0.000; rss: 1178MB	llvm module passes [3]
time: 0.006; rss: 1182MB	llvm function passes [2]
time: 0.000; rss: 1182MB	llvm module passes [2]
time: 0.002; rss: 1182MB	codegen passes [0]
time: 0.005; rss: 1185MB	codegen passes [1]
time: 0.004; rss: 1185MB	llvm function passes [6]
time: 0.002; rss: 1187MB	llvm module passes [6]
time: 0.023; rss: 1190MB	llvm function passes [4]
time: 0.021; rss: 1191MB	llvm function passes [5]
time: 0.019; rss: 1191MB	codegen passes [3]
time: 0.023; rss: 1192MB	llvm function passes [0]
time: 0.013; rss: 1192MB	llvm module passes [4]
time: 0.019; rss: 1193MB	llvm module passes [5]
time: 0.006; rss: 1193MB	llvm function passes [9]
time: 0.000; rss: 1193MB	llvm module passes [9]
time: 0.039; rss: 1195MB	llvm function passes [1]
time: 0.047; rss: 1195MB	codegen passes [2]
time: 0.005; rss: 1195MB	llvm function passes [2]
time: 0.001; rss: 1195MB	llvm module passes [2]
time: 0.025; rss: 1198MB	llvm module passes [1]
time: 0.001; rss: 1199MB	llvm function passes [17]
time: 0.000; rss: 1199MB	llvm module passes [17]
time: 0.034; rss: 1199MB	llvm function passes [12]
time: 0.057; rss: 1200MB	llvm module passes [0]
time: 0.000; rss: 1200MB	llvm function passes [14]
time: 0.000; rss: 1200MB	llvm module passes [14]
time: 0.001; rss: 1200MB	codegen passes [14]
time: 0.001; rss: 1200MB	llvm function passes [14]
time: 0.000; rss: 1200MB	llvm module passes [14]
time: 0.000; rss: 1204MB	llvm function passes [18]
time: 0.000; rss: 1204MB	llvm module passes [18]
time: 0.099; rss: 1206MB	llvm function passes [11]
time: 0.075; rss: 1206MB	llvm function passes [15]
time: 0.000; rss: 1207MB	llvm function passes [21]
time: 0.000; rss: 1207MB	llvm module passes [21]
time: 0.001; rss: 1207MB	codegen passes [21]
time: 0.097; rss: 1208MB	llvm module passes [12]
time: 0.049; rss: 1211MB	codegen passes [18]
time: 0.133; rss: 1211MB	codegen passes [9]
time: 0.141; rss: 1212MB	llvm function passes [10]
time: 0.053; rss: 1214MB	llvm module passes [11]
time: 0.097; rss: 1214MB	codegen passes [17]
time: 0.045; rss: 1214MB	llvm function passes [21]
time: 0.003; rss: 1214MB	llvm function passes [17]
time: 0.036; rss: 1216MB	llvm function passes [28]
time: 0.022; rss: 1217MB	llvm module passes [17]
time: 0.021; rss: 1218MB	llvm module passes [28]
time: 0.062; rss: 1222MB	llvm module passes [21]
time: 0.091; rss: 1224MB	llvm function passes [18]
time: 0.169; rss: 1228MB	llvm module passes [15]
time: 0.078; rss: 1233MB	llvm function passes [33]
time: 0.112; rss: 1233MB	llvm function passes [32]
time: 0.173; rss: 1235MB	llvm function passes [26]
time: 0.169; rss: 1239MB	llvm module passes [10]
time: 0.229; rss: 1239MB	codegen passes [2]
time: 0.000; rss: 1237MB	codegen passes [2]
time: 0.017; rss: 1238MB	llvm function passes [38]
time: 0.002; rss: 1239MB	llvm module passes [38]
time: 0.035; rss: 1237MB	llvm function passes [40]
time: 0.000; rss: 1237MB	llvm module passes [40]
time: 0.299; rss: 1239MB	codegen passes [14]
time: 0.268; rss: 1239MB	llvm function passes [22]
time: 0.027; rss: 1238MB	codegen passes [40]
time: 0.134; rss: 1238MB	llvm function passes [37]
time: 0.273; rss: 1238MB	llvm function passes [19]
time: 0.188; rss: 1241MB	llvm function passes [27]
time: 0.004; rss: 1241MB	llvm module passes [27]
time: 0.110; rss: 1241MB	llvm module passes [32]
time: 0.139; rss: 1244MB	codegen passes [17]
time: 0.316; rss: 1245MB	llvm function passes [20]
time: 0.158; rss: 1246MB	llvm module passes [33]
time: 0.482; rss: 1246MB	llvm function passes [8]
time: 0.491; rss: 1249MB	llvm function passes [7]
time: 0.228; rss: 1251MB	llvm module passes [18]
time: 0.222; rss: 1254MB	llvm function passes [35]
time: 0.436; rss: 1254MB	llvm function passes [16]
time: 0.091; rss: 1253MB	llvm module passes [37]
time: 0.261; rss: 1254MB	llvm function passes [31]
time: 0.180; rss: 1254MB	llvm function passes [39]
time: 0.006; rss: 1255MB	llvm module passes [39]
time: 0.026; rss: 1256MB	llvm module passes [35]
time: 0.520; rss: 1254MB	llvm function passes [3]
time: 0.528; rss: 1254MB	codegen passes [6]
time: 0.401; rss: 1256MB	llvm function passes [29]
time: 0.366; rss: 1263MB	llvm function passes [34]
time: 0.171; rss: 1272MB	codegen passes [38]
time: 0.301; rss: 1274MB	llvm module passes [26]
time: 0.476; rss: 1274MB	llvm function passes [23]
time: 0.203; rss: 1278MB	llvm module passes [20]
time: 0.279; rss: 1279MB	llvm module passes [22]
time: 0.258; rss: 1279MB	llvm module passes [19]
time: 0.530; rss: 1280MB	llvm function passes [9]
time: 0.554; rss: 1283MB	llvm function passes [25]
time: 0.179; rss: 1285MB	llvm module passes [29]
time: 0.523; rss: 1288MB	llvm function passes [30]
time: 0.563; rss: 1287MB	llvm function passes [24]
time: 0.261; rss: 1289MB	llvm module passes [31]
time: 0.501; rss: 1291MB	llvm function passes [36]
time: 0.277; rss: 1296MB	llvm module passes [3]
time: 0.789; rss: 1294MB	llvm function passes [13]
time: 0.368; rss: 1298MB	llvm module passes [7]
time: 0.208; rss: 1312MB	llvm module passes [24]
time: 0.453; rss: 1312MB	llvm module passes [16]
time: 0.490; rss: 1325MB	llvm module passes [34]
time: 0.370; rss: 1324MB	llvm module passes [25]
time: 0.949; rss: 1326MB	codegen passes [5]
time: 0.420; rss: 1334MB	llvm module passes [36]
time: 0.539; rss: 1343MB	llvm module passes [9]
time: 0.629; rss: 1345MB	llvm module passes [23]
time: 0.797; rss: 1345MB	llvm module passes [8]
time: 0.554; rss: 1346MB	llvm module passes [30]
time: 0.684; rss: 1345MB	codegen passes [27]
time: 0.576; rss: 1350MB	llvm module passes [13]
time: 0.784; rss: 1344MB	codegen passes [39]
time: 1.187; rss: 1373MB	codegen passes [1]
time: 1.206; rss: 1362MB	codegen passes [4]
time: 1.589; rss: 1402MB	codegen passes [28]
time: 1.525; rss: 1411MB	codegen passes [11]
time: 1.534; rss: 1411MB	codegen passes [32]
time: 1.890; rss: 1398MB	codegen passes [12]
time: 1.633; rss: 1414MB	codegen passes [33]
time: 2.072; rss: 1408MB	codegen passes [0]
time: 1.984; rss: 1402MB	codegen passes [21]
time: 2.126; rss: 1388MB	codegen passes [15]
time: 2.022; rss: 1408MB	codegen passes [37]
time: 2.123; rss: 1405MB	codegen passes [35]
time: 2.472; rss: 1421MB	codegen passes [20]
time: 2.227; rss: 1395MB	codegen passes [18]
time: 2.270; rss: 1434MB	codegen passes [22]
time: 2.732; rss: 1456MB	codegen passes [26]
time: 2.930; rss: 1502MB	codegen passes [29]
time: 3.172; rss: 1540MB	codegen passes [19]
time: 3.554; rss: 1520MB	codegen passes [10]
time: 3.267; rss: 1497MB	codegen passes [31]
time: 3.539; rss: 1566MB	codegen passes [16]
time: 3.583; rss: 1575MB	codegen passes [25]
time: 4.166; rss: 1615MB	codegen passes [7]
time: 4.262; rss: 1587MB	codegen passes [36]
time: 4.002; rss: 1540MB	codegen passes [23]
time: 4.169; rss: 1504MB	codegen passes [24]
time: 4.762; rss: 1511MB	codegen passes [34]
time: 4.332; rss: 1474MB	codegen passes [9]
time: 5.118; rss: 1460MB	codegen passes [30]
time: 4.831; rss: 1402MB	codegen passes [3]
time: 4.658; rss: 1373MB	codegen passes [8]
time: 5.134; rss: 1289MB	codegen passes [13]
time: 8.412; rss: 1287MB	LLVM passes
time: 0.000; rss: 1287MB	serialize work products
time: 1.051; rss: 258MB	linking
done
