commit 7e996943784dcbabed433b6906510298ad80903b
Merge: 8694b4f cb1bec9
Author: bors <bors@rust-lang.org>
Date:   Fri Apr 8 06:44:22 2016 -0700

    Auto merge of #32738 - Aatch:mir-operand-fn-ret, r=arielb1
    
    Handle operand temps for function calls
    
    Previously, all non-void function returns required an on-stack location for the value to be stored to. This code improves translation of function calls so this is no longer necessary.
rustc: ./rust-encoding.0.2.32
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling encoding_index_tests v0.1.4 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-simpchinese v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-singlebyte v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-japanese v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-tradchinese v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-korean v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding v0.2.32 (file:///root/benchmarks/rust-encoding.0.2.32)
time: 0.035; rss: 44MB	parsing
Lines of code:             6441
Pre-expansion node count:  30335
time: 0.006; rss: 45MB	configuration 1
time: 0.000; rss: 45MB	recursion limit
time: 0.000; rss: 45MB	gated macro checking
time: 0.000; rss: 45MB	crate injection
time: 0.003; rss: 47MB	macro loading
time: 0.000; rss: 47MB	plugin loading
time: 0.000; rss: 47MB	plugin registration
time: 0.044; rss: 51MB	expansion
time: 0.001; rss: 51MB	complete gated feature checking 1
time: 0.006; rss: 51MB	configuration 2
time: 0.000; rss: 51MB	gated configuration checking
time: 0.003; rss: 51MB	maybe building test harness
time: 0.003; rss: 51MB	prelude injection
time: 0.000; rss: 51MB	checking that all macro invocations are gone
time: 0.000; rss: 51MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 51MB	complete gated feature checking 2
time: 0.000; rss: 51MB	const fn bodies and arguments
Post-expansion node count: 41611
time: 0.003; rss: 51MB	assigning node ids
time: 0.008; rss: 52MB	lowering ast -> hir
time: 0.003; rss: 53MB	indexing hir
time: 0.000; rss: 53MB	attribute checking
time: 0.002; rss: 53MB	early lint checks
time: 0.001; rss: 54MB	external crate/lib resolution
time: 0.000; rss: 54MB	language item collection
time: 0.009; rss: 63MB	resolution
time: 0.001; rss: 63MB	lifetime resolution
time: 0.000; rss: 63MB	looking for entry point
time: 0.000; rss: 63MB	looking for plugin registrar
time: 0.005; rss: 64MB	region resolution
time: 0.000; rss: 64MB	loop checking
time: 0.000; rss: 64MB	static item recursion checking
time: 0.000; rss: 64MB	load_dep_graph
time: 0.005; rss: 66MB	type collecting
time: 0.000; rss: 66MB	variance inference
time: 0.021; rss: 82MB	coherence checking
time: 0.017; rss: 83MB	wf checking
time: 0.012; rss: 83MB	item-types checking
time: 0.214; rss: 93MB	item-bodies checking
time: 0.000; rss: 93MB	drop-impl checking
time: 0.011; rss: 93MB	const checking
time: 0.003; rss: 93MB	privacy checking
time: 0.000; rss: 93MB	stability index
time: 0.001; rss: 93MB	intrinsic checking
time: 0.000; rss: 93MB	effect checking
time: 0.006; rss: 93MB	match checking
time: 0.002; rss: 93MB	liveness checking
time: 0.006; rss: 93MB	rvalue checking
time: 0.029; rss: 100MB	MIR dump
time: 0.008; rss: 100MB	MIR passes
time: 0.022; rss: 100MB	borrow checking
time: 0.000; rss: 100MB	reachability checking
time: 0.002; rss: 100MB	death checking
time: 0.002; rss: 100MB	stability checking
time: 0.000; rss: 100MB	unused lib feature checking
time: 0.022; rss: 101MB	lint checking
time: 0.000; rss: 101MB	resolving dependency formats
time: 0.004; rss: 102MB	Prepare MIR codegen passes
  time: 0.028; rss: 113MB	translation item collection
  time: 0.058; rss: 145MB	write metadata
time: 0.399; rss: 145MB	translation
time: 0.000; rss: 145MB	assert dep graph
time: 0.000; rss: 145MB	serialize dep graph
  time: 0.027; rss: 110MB	llvm function passes [0]
  time: 0.050; rss: 114MB	llvm module passes [0]
  time: 0.581; rss: 120MB	codegen passes [0]
  time: 0.001; rss: 103MB	codegen passes [0]
time: 0.726; rss: 102MB	LLVM passes
time: 0.054; rss: 101MB	linking
done
