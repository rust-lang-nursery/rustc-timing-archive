commit adb4279e549f51d287140658c1c64b51d7715bfa
Merge: 6a495f7 d38db82
Author: bors <bors@rust-lang.org>
Date:   Fri Dec 9 07:08:29 2016 +0000

    Auto merge of #38256 - alexcrichton:distcheck, r=brson
    
    rustbuild: Implement distcheck
    
    This commit implements the `distcheck` target for rustbuild which is only ever
    run on our nightly bots. This essentially just creates a tarball, un-tars it,
    and then runs a full build, validating that the release tarballs do indeed have
    everything they need to build Rust.
rustc: ./syntex-0.42.2@000-base@000-base
cargo rustc -p syntex_syntax  -- -Ztime-passes -Zinput-stats
time: 0.092; rss: 71MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 71MB	recursion limit
time: 0.000; rss: 71MB	crate injection
time: 0.000; rss: 71MB	plugin loading
time: 0.000; rss: 71MB	plugin registration
time: 0.245; rss: 146MB	expansion
time: 0.000; rss: 146MB	maybe building test harness
time: 0.006; rss: 146MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 146MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 146MB	complete gated feature checking
time: 0.023; rss: 146MB	early lint checks
time: 0.007; rss: 146MB	AST validation
time: 0.075; rss: 161MB	name resolution
time: 0.058; rss: 194MB	lowering ast -> hir
time: 0.010; rss: 187MB	indexing hir
time: 0.006; rss: 187MB	attribute checking
time: 0.002; rss: 149MB	language item collection
time: 0.011; rss: 149MB	lifetime resolution
time: 0.000; rss: 149MB	looking for entry point
time: 0.000; rss: 149MB	looking for plugin registrar
time: 0.047; rss: 169MB	region resolution
time: 0.007; rss: 169MB	loop checking
time: 0.002; rss: 169MB	static item recursion checking
time: 0.381; rss: 171MB	compute_incremental_hashes_map
time: 0.000; rss: 171MB	load_dep_graph
time: 0.008; rss: 171MB	stability index
time: 0.016; rss: 171MB	stability checking
time: 0.047; rss: 175MB	type collecting
time: 0.001; rss: 175MB	variance inference
time: 0.002; rss: 176MB	impl wf inference
time: 0.017; rss: 177MB	coherence checking
time: 0.083; rss: 179MB	wf checking
time: 0.182; rss: 184MB	item-types checking
time: 3.591; rss: 227MB	item-bodies checking
time: 0.000; rss: 227MB	drop-impl checking
time: 0.306; rss: 238MB	const checking
time: 0.054; rss: 239MB	privacy checking
time: 0.016; rss: 239MB	intrinsic checking
time: 0.014; rss: 239MB	effect checking
time: 0.046; rss: 239MB	match checking
time: 0.056; rss: 245MB	liveness checking
time: 0.173; rss: 245MB	rvalue checking
time: 0.577; rss: 418MB	MIR dump
  time: 0.059; rss: 425MB	SimplifyCfg
  time: 0.075; rss: 425MB	QualifyAndPromoteConstants
  time: 0.106; rss: 425MB	TypeckMir
  time: 0.004; rss: 425MB	SimplifyBranches
  time: 0.031; rss: 425MB	SimplifyCfg
time: 0.275; rss: 425MB	MIR cleanup and validation
time: 0.474; rss: 428MB	borrow checking
time: 0.024; rss: 428MB	reachability checking
time: 0.037; rss: 428MB	death checking
time: 0.000; rss: 428MB	unused lib feature checking
time: 0.180; rss: 428MB	lint checking
time: 0.000; rss: 428MB	resolving dependency formats
  time: 0.003; rss: 428MB	NoLandingPads
  time: 0.027; rss: 428MB	SimplifyCfg
  time: 0.080; rss: 435MB	EraseRegions
  time: 0.011; rss: 435MB	AddCallGuards
  time: 0.310; rss: 458MB	ElaborateDrops
  time: 0.003; rss: 458MB	NoLandingPads
  time: 0.053; rss: 458MB	SimplifyCfg
  time: 0.029; rss: 458MB	InstCombine
  time: 0.012; rss: 458MB	Deaggregator
  time: 0.002; rss: 458MB	CopyPropagation
  time: 0.035; rss: 458MB	SimplifyLocals
  time: 0.010; rss: 458MB	AddCallGuards
  time: 0.002; rss: 458MB	PreTrans
time: 0.578; rss: 458MB	MIR optimisations
  time: 0.081; rss: 466MB	write metadata
  time: 0.405; rss: 477MB	translation item collection
  time: 0.066; rss: 483MB	codegen unit partitioning
  time: 0.054; rss: 741MB	internalize symbols
time: 5.148; rss: 741MB	translation
time: 0.000; rss: 741MB	assert dep graph
time: 0.000; rss: 741MB	serialize dep graph
  time: 0.537; rss: 427MB	llvm function passes [0]
  time: 0.301; rss: 434MB	llvm module passes [0]
  time: 10.479; rss: 424MB	codegen passes [0]
  time: 0.000; rss: 424MB	codegen passes [0]
time: 12.173; rss: 424MB	LLVM passes
time: 0.000; rss: 424MB	serialize work products
time: 0.345; rss: 116MB	linking
done
