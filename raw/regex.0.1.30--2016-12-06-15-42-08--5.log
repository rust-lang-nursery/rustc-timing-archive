commit b5d0f90929ddaae89609e9bb229a9b8a27e27615
Merge: 1842efb cc6edb2
Author: bors <bors@rust-lang.org>
Date:   Tue Dec 6 17:38:26 2016 +0000

    Auto merge of #38036 - Mark-Simulacrum:polish-2, r=nagisa,eddyb
    
    Simplify calling find_implied_output_region.
    
    @nnethercote added the optimization that find_implied_output_region
    takes a closure as an optimization in #37014, but passing an iterator is
    simpler, and more ergonomic for callers.
rustc: ./regex.0.1.30
cargo rustc  -- -Ztime-passes -Zinput-stats
time: 0.042; rss: 54MB	parsing
Lines of code:             8558
Pre-expansion node count:  58049
time: 0.000; rss: 55MB	recursion limit
time: 0.000; rss: 55MB	crate injection
time: 0.000; rss: 55MB	plugin loading
time: 0.000; rss: 55MB	plugin registration
time: 0.032; rss: 80MB	expansion
time: 0.000; rss: 80MB	maybe building test harness
time: 0.001; rss: 80MB	maybe creating a macro crate
Post-expansion node count: 68093
time: 0.000; rss: 80MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 80MB	complete gated feature checking
time: 0.004; rss: 80MB	early lint checks
time: 0.001; rss: 80MB	AST validation
time: 0.005; rss: 80MB	name resolution
time: 0.006; rss: 86MB	lowering ast -> hir
time: 0.001; rss: 88MB	indexing hir
time: 0.001; rss: 88MB	attribute checking
time: 0.000; rss: 80MB	language item collection
time: 0.001; rss: 80MB	lifetime resolution
time: 0.000; rss: 80MB	looking for entry point
time: 0.000; rss: 80MB	looking for plugin registrar
time: 0.004; rss: 83MB	region resolution
time: 0.000; rss: 83MB	loop checking
time: 0.000; rss: 83MB	static item recursion checking
time: 0.028; rss: 84MB	compute_incremental_hashes_map
time: 0.000; rss: 84MB	load_dep_graph
time: 0.000; rss: 84MB	stability index
time: 0.001; rss: 84MB	stability checking
time: 0.006; rss: 86MB	type collecting
time: 0.000; rss: 86MB	variance inference
time: 0.000; rss: 86MB	impl wf inference
time: 0.009; rss: 89MB	coherence checking
time: 0.006; rss: 89MB	wf checking
time: 0.149; rss: 99MB	item-types checking
time: 0.106; rss: 101MB	item-bodies checking
time: 0.000; rss: 101MB	drop-impl checking
time: 0.020; rss: 103MB	const checking
time: 0.002; rss: 103MB	privacy checking
time: 0.001; rss: 103MB	intrinsic checking
time: 0.000; rss: 103MB	effect checking
time: 0.002; rss: 103MB	match checking
time: 0.001; rss: 103MB	liveness checking
time: 0.006; rss: 102MB	rvalue checking
time: 0.035; rss: 114MB	MIR dump
  time: 0.002; rss: 114MB	SimplifyCfg
  time: 0.005; rss: 114MB	QualifyAndPromoteConstants
  time: 0.008; rss: 114MB	TypeckMir
  time: 0.000; rss: 114MB	SimplifyBranches
  time: 0.001; rss: 114MB	SimplifyCfg
time: 0.016; rss: 114MB	MIR cleanup and validation
time: 0.018; rss: 114MB	borrow checking
time: 0.000; rss: 114MB	reachability checking
time: 0.002; rss: 114MB	death checking
time: 0.000; rss: 114MB	unused lib feature checking
time: 0.019; rss: 114MB	lint checking
time: 0.000; rss: 114MB	resolving dependency formats
  time: 0.000; rss: 114MB	NoLandingPads
  time: 0.001; rss: 114MB	SimplifyCfg
  time: 0.004; rss: 114MB	EraseRegions
  time: 0.000; rss: 114MB	AddCallGuards
  time: 0.007; rss: 114MB	ElaborateDrops
  time: 0.000; rss: 114MB	NoLandingPads
  time: 0.002; rss: 114MB	SimplifyCfg
  time: 0.002; rss: 114MB	InstCombine
  time: 0.000; rss: 114MB	Deaggregator
  time: 0.000; rss: 114MB	CopyPropagation
  time: 0.002; rss: 114MB	SimplifyLocals
  time: 0.000; rss: 114MB	AddCallGuards
  time: 0.000; rss: 114MB	PreTrans
time: 0.019; rss: 114MB	MIR optimisations
  time: 0.018; rss: 117MB	write metadata
  time: 0.045; rss: 132MB	translation item collection
  time: 0.005; rss: 132MB	codegen unit partitioning
  time: 0.005; rss: 160MB	internalize symbols
time: 0.449; rss: 160MB	translation
time: 0.000; rss: 160MB	assert dep graph
time: 0.000; rss: 160MB	serialize dep graph
  time: 0.038; rss: 111MB	llvm function passes [0]
  time: 0.021; rss: 113MB	llvm module passes [0]
  time: 0.707; rss: 118MB	codegen passes [0]
  time: 0.000; rss: 117MB	codegen passes [0]
time: 0.826; rss: 117MB	LLVM passes
time: 0.000; rss: 117MB	serialize work products
time: 0.035; rss: 89MB	linking
done
