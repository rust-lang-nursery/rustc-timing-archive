commit e3bcddb44bc810ddf5b0443e45e42a835d17d868
Merge: 18c1781 fae883c
Author: bors <bors@rust-lang.org>
Date:   Wed Feb 3 22:40:32 2016 +0000

    Auto merge of #31078 - nbaksalyar:illumos, r=alexcrichton
    
    This pull request adds support for [Illumos](http://illumos.org/)-based operating systems: SmartOS, OpenIndiana, and others. For now it's x86-64 only, as I'm not sure if 32-bit installations are widespread. This PR is based on #28589 by @potatosalad, and also closes #21000, #25845, and #25846.
    
    Required changes in libc are already merged: https://github.com/rust-lang-nursery/libc/pull/138
    
    Here's a snapshot required to build a stage0 compiler:
    https://s3-eu-west-1.amazonaws.com/nbaksalyar/rustc-sunos-snapshot.tar.gz
    It passes all checks from `make check`.
    
    There are some changes I'm not quite sure about, e.g. macro usage in `src/libstd/num/f64.rs` and `DirEntry` structure in `src/libstd/sys/unix/fs.rs`, so any comments on how to rewrite it better would be greatly appreciated.
    
    Also, LLVM configure script might need to be patched to build it successfully, or a pre-built libLLVM should be used. Some details can be found here: https://llvm.org/bugs/show_bug.cgi?id=25409
    
    Thanks!
    
    r? @brson
rustc: ./inflate-0.1.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling inflate v0.1.0 (file:///root/benchmarks/inflate-0.1.0)
time: 0.004; rss: 37MB	parsing
Lines of code:             956
Pre-expansion node count:  4761
time: 0.001; rss: 37MB	configuration 1
time: 0.000; rss: 37MB	recursion limit
time: 0.000; rss: 37MB	gated macro checking
time: 0.000; rss: 37MB	crate injection
time: 0.003; rss: 40MB	macro loading
time: 0.000; rss: 40MB	plugin loading
time: 0.000; rss: 40MB	plugin registration
time: 0.081; rss: 47MB	expansion
time: 0.001; rss: 47MB	complete gated feature checking 1
time: 0.009; rss: 47MB	configuration 2
time: 0.000; rss: 47MB	gated configuration checking
time: 0.004; rss: 47MB	maybe building test harness
time: 0.004; rss: 47MB	prelude injection
time: 0.000; rss: 47MB	checking that all macro invocations are gone
time: 0.000; rss: 47MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 47MB	complete gated feature checking 2
Post-expansion node count: 54798
time: 0.004; rss: 47MB	assigning node ids
time: 0.008; rss: 52MB	lowering ast -> hir
time: 0.002; rss: 54MB	indexing hir
time: 0.000; rss: 54MB	attribute checking
time: 0.003; rss: 54MB	early lint checks
time: 0.001; rss: 50MB	external crate/lib resolution
time: 0.001; rss: 50MB	language item collection
time: 0.009; rss: 59MB	resolution
time: 0.001; rss: 59MB	lifetime resolution
time: 0.000; rss: 59MB	looking for entry point
time: 0.000; rss: 59MB	looking for plugin registrar
time: 0.003; rss: 59MB	region resolution
time: 0.000; rss: 59MB	loop checking
time: 0.000; rss: 59MB	static item recursion checking
time: 0.001; rss: 59MB	type collecting
time: 0.000; rss: 59MB	variance inference
time: 0.009; rss: 74MB	coherence checking
time: 0.002; rss: 74MB	wf checking
time: 0.002; rss: 74MB	item-types checking
time: 27.333; rss: 101MB	item-bodies checking
time: 0.000; rss: 101MB	drop-impl checking
time: 0.014; rss: 100MB	const checking
time: 0.002; rss: 100MB	privacy checking
time: 0.000; rss: 100MB	stability index
time: 0.000; rss: 100MB	intrinsic checking
time: 0.001; rss: 100MB	effect checking
time: 0.003; rss: 100MB	match checking
time: 0.025; rss: 106MB	MIR dump
time: 0.063; rss: 104MB	liveness checking
time: 0.212; rss: 106MB	borrow checking
time: 0.010; rss: 106MB	rvalue checking
time: 0.000; rss: 106MB	reachability checking
time: 0.002; rss: 106MB	death checking
time: 0.002; rss: 106MB	stability checking
time: 0.000; rss: 106MB	unused lib feature checking
time: 0.018; rss: 107MB	lint checking
time: 0.000; rss: 107MB	resolving dependency formats
time: 0.002; rss: 107MB	erasing regions from MIR
  time: 0.003; rss: 134MB	write metadata
time: 0.382; rss: 129MB	translation
  time: 0.025; rss: 96MB	llvm function passes [0]
  time: 0.005; rss: 96MB	llvm module passes [0]
  time: 0.473; rss: 143MB	codegen passes [0]
  time: 0.000; rss: 128MB	codegen passes [0]
time: 0.545; rss: 128MB	LLVM passes
time: 0.035; rss: 129MB	linking
done
