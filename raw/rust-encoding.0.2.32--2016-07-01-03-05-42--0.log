commit 375fa6ef371a0ae248968d363226101ef741127e
Merge: 85c31af 1e48a72
Author: bors <bors@rust-lang.org>
Date:   Thu Jun 30 20:07:57 2016 -0700

    Auto merge of #34577 - alexcrichton:clean-more-yet-again, r=brson
    
    rustbuild: Clean out tmp directory on `make clean`
    
    Right now we generate error index information into this directory, but it's
    never cleaned out. This means that if a build *bounces* because of something in
    this directory it'll continue to cause all future builds to fail because the
    relevant files are never removed.
rustc: ./rust-encoding.0.2.32
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling encoding_index_tests v0.1.4 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-simpchinese v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-singlebyte v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-tradchinese v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-japanese v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-korean v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding v0.2.32 (file:///root/benchmarks/rust-encoding.0.2.32)
time: 0.046; rss: 49MB	parsing
Lines of code:             6441
Pre-expansion node count:  30069
time: 0.003; rss: 49MB	configuration
time: 0.000; rss: 49MB	recursion limit
time: 0.000; rss: 49MB	crate injection
time: 0.000; rss: 49MB	plugin loading
time: 0.000; rss: 49MB	plugin registration
time: 0.073; rss: 84MB	expansion
time: 0.000; rss: 84MB	maybe building test harness
time: 0.000; rss: 84MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 84MB	complete gated feature checking
Post-expansion node count: 40757
time: 0.003; rss: 84MB	assigning node ids
time: 0.001; rss: 85MB	collecting defs
time: 0.001; rss: 85MB	external crate/lib resolution
time: 0.002; rss: 85MB	early lint checks
time: 0.000; rss: 85MB	AST validation
time: 0.008; rss: 87MB	name resolution
time: 0.004; rss: 88MB	lowering ast -> hir
time: 0.000; rss: 89MB	indexing hir
time: 0.000; rss: 89MB	attribute checking
time: 0.000; rss: 87MB	language item collection
time: 0.001; rss: 87MB	lifetime resolution
time: 0.000; rss: 87MB	looking for entry point
time: 0.000; rss: 87MB	looking for plugin registrar
time: 0.004; rss: 89MB	region resolution
time: 0.000; rss: 89MB	loop checking
time: 0.000; rss: 89MB	static item recursion checking
time: 0.000; rss: 89MB	load_dep_graph
time: 0.013; rss: 92MB	type collecting
time: 0.000; rss: 92MB	variance inference
time: 0.024; rss: 95MB	coherence checking
time: 0.024; rss: 95MB	wf checking
time: 0.015; rss: 96MB	item-types checking
time: 0.238; rss: 103MB	item-bodies checking
time: 0.000; rss: 103MB	drop-impl checking
time: 0.013; rss: 103MB	const checking
time: 0.002; rss: 103MB	privacy checking
time: 0.000; rss: 103MB	stability index
time: 0.002; rss: 103MB	intrinsic checking
time: 0.000; rss: 103MB	effect checking
time: 0.008; rss: 103MB	match checking
time: 0.002; rss: 103MB	liveness checking
time: 0.008; rss: 103MB	rvalue checking
time: 0.034; rss: 111MB	MIR dump
time: 0.016; rss: 110MB	MIR passes
time: 0.025; rss: 110MB	borrow checking
time: 0.000; rss: 110MB	reachability checking
time: 0.002; rss: 110MB	death checking
time: 0.002; rss: 110MB	stability checking
time: 0.000; rss: 110MB	unused lib feature checking
time: 0.024; rss: 111MB	lint checking
time: 0.000; rss: 111MB	resolving dependency formats
time: 0.027; rss: 112MB	Prepare MIR codegen passes
  time: 0.060; rss: 114MB	write metadata
  time: 0.033; rss: 118MB	translation item collection
  time: 0.001; rss: 118MB	codegen unit partitioning
time: 0.434; rss: 148MB	translation
time: 0.000; rss: 148MB	assert dep graph
time: 0.000; rss: 148MB	serialize dep graph
  time: 0.026; rss: 113MB	llvm function passes [0]
  time: 0.051; rss: 117MB	llvm module passes [0]
  time: 0.586; rss: 121MB	codegen passes [0]
  time: 0.001; rss: 106MB	codegen passes [0]
time: 0.733; rss: 106MB	LLVM passes
time: 0.054; rss: 104MB	linking
done
