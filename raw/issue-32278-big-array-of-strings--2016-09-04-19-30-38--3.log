commit 91f057de35066d0a34102bd0673b56684509b93d
Merge: 9cc430d e05e74a
Author: bors <bors@rust-lang.org>
Date:   Sun Sep 4 14:03:01 2016 -0700

    Auto merge of #36203 - petrochenkov:uvsdot, r=nrc
    
    Replace `_, _` with `..` in patterns
    
    This is how https://github.com/rust-lang/rust/issues/33627 looks in action.
    
    Looks especially nice in leftmost/rightmost positions `(first, ..)`/`(.., last)`.
    I haven't touched libsyntax intentionally because the feature is still unstable.
rustc: ./issue-32278-big-array-of-strings
/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc big-array-of-strings.rs -Ztime-passes -Zinput-stats
time: 0.141; rss: 64MB	parsing
Lines of code:             65577
Pre-expansion node count:  65552
time: 0.005; rss: 64MB	configuration
time: 0.000; rss: 64MB	recursion limit
time: 0.000; rss: 64MB	crate injection
time: 0.000; rss: 64MB	plugin loading
time: 0.000; rss: 64MB	plugin registration
time: 0.024; rss: 89MB	expansion
time: 0.000; rss: 89MB	maybe building test harness
time: 0.001; rss: 89MB	maybe creating a macro crate
time: 0.003; rss: 89MB	assigning node ids
Post-expansion node count: 65565
time: 0.000; rss: 89MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 89MB	complete gated feature checking
time: 0.000; rss: 89MB	collecting defs
time: 0.003; rss: 89MB	external crate/lib resolution
time: 0.004; rss: 89MB	early lint checks
time: 0.000; rss: 89MB	AST validation
time: 0.002; rss: 89MB	name resolution
time: 0.007; rss: 105MB	lowering ast -> hir
time: 0.002; rss: 109MB	indexing hir
time: 0.001; rss: 109MB	attribute checking
time: 0.001; rss: 99MB	language item collection
time: 0.001; rss: 99MB	lifetime resolution
time: 0.000; rss: 99MB	looking for entry point
time: 0.000; rss: 99MB	looking for plugin registrar
time: 0.009; rss: 105MB	region resolution
time: 0.001; rss: 105MB	loop checking
time: 0.002; rss: 105MB	static item recursion checking
time: 0.007; rss: 105MB	compute_incremental_hashes_map
time: 0.000; rss: 105MB	load_dep_graph
time: 0.000; rss: 105MB	type collecting
time: 0.000; rss: 105MB	variance inference
time: 0.005; rss: 107MB	coherence checking
time: 0.001; rss: 107MB	wf checking
time: 0.712; rss: 118MB	item-types checking
time: 0.000; rss: 118MB	item-bodies checking
time: 0.000; rss: 118MB	drop-impl checking
time: 0.021; rss: 116MB	const checking
time: 0.002; rss: 116MB	privacy checking
time: 0.001; rss: 116MB	stability index
time: 0.001; rss: 116MB	intrinsic checking
time: 0.000; rss: 116MB	effect checking
time: 0.000; rss: 116MB	match checking
time: 0.001; rss: 116MB	liveness checking
time: 0.000; rss: 116MB	rvalue checking
time: 0.044; rss: 127MB	MIR dump
time: 0.002; rss: 127MB	MIR passes
time: 0.001; rss: 127MB	borrow checking
time: 0.000; rss: 127MB	reachability checking
time: 0.001; rss: 127MB	death checking
time: 0.001; rss: 127MB	stability checking
time: 0.000; rss: 127MB	unused lib feature checking
time: 0.027; rss: 127MB	lint checking
time: 0.001; rss: 127MB	resolving dependency formats
time: 0.001; rss: 127MB	Prepare MIR codegen passes
  time: 0.000; rss: 127MB	write metadata
  time: 0.001; rss: 127MB	translation item collection
  time: 0.000; rss: 127MB	codegen unit partitioning
  time: 0.001; rss: 136MB	internalize symbols
time: 0.064; rss: 134MB	translation
time: 0.000; rss: 134MB	assert dep graph
time: 0.000; rss: 134MB	serialize dep graph
  time: 0.008; rss: 91MB	llvm function passes [0]
  time: 0.000; rss: 91MB	llvm module passes [0]
  time: 0.175; rss: 90MB	codegen passes [0]
  time: 0.000; rss: 90MB	codegen passes [0]
time: 0.185; rss: 89MB	LLVM passes
time: 0.000; rss: 89MB	serialize work products
  time: 0.198; rss: 80MB	running linker
time: 0.199; rss: 80MB	linking
done
