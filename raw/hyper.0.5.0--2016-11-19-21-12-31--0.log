commit 0bd2ce62b27e2b9a7dfe92fc23d9098854008089
Merge: bfa709a 30daedf
Author: bors <bors@rust-lang.org>
Date:   Sat Nov 19 16:39:25 2016 -0600

    Auto merge of #37831 - rkruppe:llvm-attr-fwdcompat, r=eddyb
    
    [LLVM 4.0] Use llvm::Attribute APIs instead of "raw value" APIs
    
    The latter will be removed in LLVM 4.0 (see https://github.com/llvm-mirror/llvm/commit/4a6fc8bacf11d8066da72cf8481467167877ed16).
    
    The librustc_llvm API remains mostly unchanged, except that llvm::Attribute is no longer a bitflag but represents only a *single* attribute.
    The ability to store many attributes in a small number of bits and modify them without interacting with LLVM is only used in rustc_trans::abi and closely related modules, and only attributes for function arguments are considered there.
    Thus rustc_trans::abi now has its own bit-packed representation of argument attributes, which are translated to rustc_llvm::Attribute when applying the attributes.
    
    cc #37609
rustc: ./hyper.0.5.0
cargo rustc  -- -Ztime-passes -Zinput-stats
   Compiling libc v0.2.16
   Compiling httparse v0.1.6
   Compiling unicase v0.1.0
   Compiling winapi-build v0.1.1
   Compiling pkg-config v0.3.8
   Compiling gcc v0.3.35
   Compiling typeable v0.1.2
   Compiling bitflags v0.3.3
   Compiling rustc-serialize v0.3.19
   Compiling matches v0.1.2
   Compiling winapi v0.2.8
   Compiling lazy_static v0.1.16
   Compiling kernel32-sys v0.2.2
   Compiling traitobject v0.0.1
   Compiling log v0.3.6
   Compiling libc v0.1.12
   Compiling rand v0.3.14
   Compiling num_cpus v0.2.13
   Compiling mime v0.0.11
   Compiling time v0.1.35
   Compiling openssl-sys v0.6.7
   Compiling openssl v0.6.7
   Compiling uuid v0.1.18
   Compiling url v0.2.38
   Compiling cookie v0.1.21
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.030; rss: 46MB	parsing
Lines of code:             9003
Pre-expansion node count:  44055
time: 0.000; rss: 46MB	recursion limit
time: 0.000; rss: 46MB	crate injection
time: 0.000; rss: 46MB	plugin loading
time: 0.000; rss: 46MB	plugin registration
time: 0.092; rss: 84MB	expansion
time: 0.000; rss: 84MB	maybe building test harness
time: 0.001; rss: 84MB	maybe creating a macro crate
Post-expansion node count: 101769
time: 0.000; rss: 84MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 84MB	complete gated feature checking
time: 0.003; rss: 84MB	early lint checks
time: 0.001; rss: 84MB	AST validation
time: 0.020; rss: 88MB	name resolution
time: 0.014; rss: 92MB	lowering ast -> hir
time: 0.005; rss: 93MB	indexing hir
time: 0.001; rss: 93MB	attribute checking
time: 0.001; rss: 88MB	language item collection
time: 0.002; rss: 88MB	lifetime resolution
time: 0.000; rss: 88MB	looking for entry point
time: 0.000; rss: 88MB	looking for plugin registrar
time: 0.010; rss: 91MB	region resolution
time: 0.001; rss: 91MB	loop checking
time: 0.001; rss: 91MB	static item recursion checking
time: 0.040; rss: 91MB	compute_incremental_hashes_map
time: 0.000; rss: 91MB	load_dep_graph
time: 0.014; rss: 93MB	type collecting
time: 0.000; rss: 93MB	variance inference
time: 0.001; rss: 93MB	impl wf inference
time: 0.015; rss: 95MB	coherence checking
time: 0.039; rss: 97MB	wf checking
time: 0.024; rss: 97MB	item-types checking
time: 0.474; rss: 105MB	item-bodies checking
time: 0.000; rss: 105MB	drop-impl checking
time: 0.051; rss: 106MB	const checking
time: 0.008; rss: 106MB	privacy checking
time: 0.001; rss: 106MB	stability index
time: 0.003; rss: 106MB	intrinsic checking
time: 0.001; rss: 106MB	effect checking
time: 0.007; rss: 106MB	match checking
time: 0.004; rss: 107MB	liveness checking
time: 0.020; rss: 107MB	rvalue checking
time: 0.063; rss: 127MB	MIR dump
  time: 0.007; rss: 128MB	SimplifyCfg
  time: 0.013; rss: 129MB	QualifyAndPromoteConstants
  time: 0.013; rss: 129MB	TypeckMir
  time: 0.001; rss: 129MB	SimplifyBranches
  time: 0.003; rss: 129MB	SimplifyCfg
time: 0.037; rss: 129MB	MIR cleanup and validation
time: 0.055; rss: 130MB	borrow checking
time: 0.003; rss: 130MB	reachability checking
time: 0.005; rss: 130MB	death checking
time: 0.004; rss: 130MB	stability checking
time: 0.000; rss: 130MB	unused lib feature checking
time: 0.038; rss: 130MB	lint checking
time: 0.000; rss: 130MB	resolving dependency formats
  time: 0.000; rss: 130MB	NoLandingPads
  time: 0.003; rss: 130MB	SimplifyCfg
  time: 0.008; rss: 131MB	EraseRegions
  time: 0.001; rss: 131MB	AddCallGuards
  time: 0.025; rss: 132MB	ElaborateDrops
  time: 0.000; rss: 132MB	NoLandingPads
  time: 0.005; rss: 133MB	SimplifyCfg
  time: 0.003; rss: 133MB	InstCombine
  time: 0.003; rss: 133MB	Deaggregator
  time: 0.000; rss: 133MB	CopyPropagation
  time: 0.004; rss: 133MB	SimplifyLocals
  time: 0.001; rss: 133MB	AddCallGuards
  time: 0.000; rss: 133MB	PreTrans
time: 0.054; rss: 133MB	MIR optimisations
  time: 0.014; rss: 135MB	write metadata
  time: 0.133; rss: 140MB	translation item collection
  time: 0.015; rss: 144MB	codegen unit partitioning
  time: 0.014; rss: 197MB	internalize symbols
time: 1.076; rss: 197MB	translation
time: 0.000; rss: 197MB	assert dep graph
time: 0.000; rss: 197MB	serialize dep graph
  time: 0.085; rss: 145MB	llvm function passes [0]
  time: 0.041; rss: 148MB	llvm module passes [0]
  time: 1.627; rss: 149MB	codegen passes [0]
  time: 0.000; rss: 149MB	codegen passes [0]
time: 1.914; rss: 149MB	LLVM passes
time: 0.000; rss: 149MB	serialize work products
time: 0.071; rss: 92MB	linking
done
