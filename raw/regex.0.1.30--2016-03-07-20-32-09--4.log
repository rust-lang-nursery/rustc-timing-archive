commit 4352a8554f3765b98d27c1a0b1a170414f82b199
Merge: 388ccda 660bbf4
Author: bors <bors@rust-lang.org>
Date:   Tue Mar 8 01:04:36 2016 +0000

    Auto merge of #31986 - ashleysommer:emscripten_fixes, r=alexcrichton
    
    Fix building libstd on emscripten targets.
    
    The main cause of the problem is that libstd/os/mod.rs treats emscripten targets as an alias of linux targets, whereas liblibc treats emscripten targets as musl-compliant, so it gets a slightly different struct stat64 defined.
    This commit adds conditional compilation checks to use the correct timestamp format on fs metadata functions in the case of compiling to emscripten targets.
    
    This commit also depends needs https://github.com/ashleysommer/rust/commit/f1575cff2d631e977038fdba3fa3422ba5f8f2fe applied in order to successfully build libstd with emscripten target.
rustc: ./regex.0.1.30
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling regex v0.1.30 (file:///root/benchmarks/regex.0.1.30)
time: 0.060; rss: 49MB	parsing
Lines of code:             8558
Pre-expansion node count:  58217
time: 0.011; rss: 49MB	configuration 1
time: 0.000; rss: 49MB	recursion limit
time: 0.001; rss: 49MB	gated macro checking
time: 0.000; rss: 49MB	crate injection
time: 0.003; rss: 53MB	macro loading
time: 0.000; rss: 53MB	plugin loading
time: 0.000; rss: 53MB	plugin registration
time: 0.059; rss: 56MB	expansion
time: 0.002; rss: 56MB	complete gated feature checking 1
time: 0.013; rss: 56MB	configuration 2
time: 0.000; rss: 56MB	gated configuration checking
time: 0.007; rss: 55MB	maybe building test harness
time: 0.006; rss: 55MB	prelude injection
time: 0.001; rss: 55MB	checking that all macro invocations are gone
time: 0.000; rss: 55MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 55MB	complete gated feature checking 2
time: 0.001; rss: 55MB	const fn bodies and arguments
Post-expansion node count: 68657
time: 0.006; rss: 55MB	assigning node ids
time: 0.009; rss: 62MB	lowering ast -> hir
time: 0.002; rss: 64MB	indexing hir
time: 0.001; rss: 64MB	attribute checking
time: 0.007; rss: 64MB	early lint checks
time: 0.001; rss: 58MB	external crate/lib resolution
time: 0.001; rss: 58MB	language item collection
time: 0.010; rss: 68MB	resolution
time: 0.001; rss: 68MB	lifetime resolution
time: 0.000; rss: 68MB	looking for entry point
time: 0.000; rss: 68MB	looking for plugin registrar
time: 0.006; rss: 72MB	region resolution
time: 0.001; rss: 72MB	loop checking
time: 0.001; rss: 72MB	static item recursion checking
time: 0.004; rss: 74MB	type collecting
time: 0.000; rss: 74MB	variance inference
time: 0.023; rss: 92MB	coherence checking
time: 0.010; rss: 92MB	wf checking
time: 0.078; rss: 96MB	item-types checking
time: 0.182; rss: 110MB	item-bodies checking
time: 0.000; rss: 110MB	drop-impl checking
time: 0.024; rss: 110MB	const checking
time: 0.004; rss: 110MB	privacy checking
time: 0.001; rss: 110MB	stability index
time: 0.001; rss: 110MB	intrinsic checking
time: 0.001; rss: 110MB	effect checking
time: 0.003; rss: 110MB	match checking
time: 0.002; rss: 110MB	liveness checking
time: 0.007; rss: 110MB	rvalue checking
time: 0.019; rss: 111MB	MIR dump
time: 0.000; rss: 111MB	MIR passes
time: 0.020; rss: 111MB	borrow checking
time: 0.000; rss: 111MB	reachability checking
time: 0.003; rss: 111MB	death checking
time: 0.003; rss: 111MB	stability checking
time: 0.000; rss: 111MB	unused lib feature checking
time: 0.029; rss: 111MB	lint checking
time: 0.000; rss: 111MB	resolving dependency formats
time: 0.002; rss: 111MB	erasing regions from MIR
  time: 0.056; rss: 123MB	translation item collection
  time: 0.131; rss: 177MB	write metadata
time: 0.566; rss: 177MB	translation
  time: 0.035; rss: 117MB	llvm function passes [0]
  time: 0.018; rss: 118MB	llvm module passes [0]
  time: 0.598; rss: 122MB	codegen passes [0]
  time: 0.001; rss: 102MB	codegen passes [0]
time: 0.726; rss: 101MB	LLVM passes
time: 0.064; rss: 99MB	linking
done
