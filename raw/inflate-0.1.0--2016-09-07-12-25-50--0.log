commit f707582a43ba1f85c540733cf04ba19247a02e79
Merge: 2819eca 288e7ca
Author: bors <bors@rust-lang.org>
Date:   Wed Sep 7 05:59:50 2016 -0700

    Auto merge of #36289 - euclio:self-suggestion, r=jseyfried
    
    resolve: Suggest `use self` when import resolves
    
    Improves errors messages by replacing "Maybe a missing `extern crate`" messages
    with "Did you mean `self::...`" when the `self` import would succeed.
    
    Fixes #34191.
    
    Thank you for the help @jseyfried!
rustc: ./inflate-0.1.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling inflate v0.1.0 (file:///root/benchmarks/inflate-0.1.0)
time: 0.004; rss: 44MB	parsing
Lines of code:             956
Pre-expansion node count:  4740
time: 0.000; rss: 44MB	configuration
time: 0.000; rss: 44MB	recursion limit
time: 0.000; rss: 44MB	crate injection
time: 0.000; rss: 44MB	plugin loading
time: 0.000; rss: 44MB	plugin registration
time: 0.073; rss: 71MB	expansion
time: 0.000; rss: 71MB	maybe building test harness
time: 0.000; rss: 71MB	maybe creating a macro crate
time: 0.002; rss: 71MB	assigning node ids
Post-expansion node count: 55771
time: 0.000; rss: 71MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 71MB	complete gated feature checking
time: 0.005; rss: 71MB	collecting defs
time: 0.001; rss: 71MB	external crate/lib resolution
time: 0.002; rss: 71MB	early lint checks
time: 0.000; rss: 71MB	AST validation
time: 0.007; rss: 74MB	name resolution
time: 0.006; rss: 78MB	lowering ast -> hir
time: 0.001; rss: 80MB	indexing hir
time: 0.001; rss: 80MB	attribute checking
time: 0.001; rss: 77MB	language item collection
time: 0.001; rss: 77MB	lifetime resolution
time: 0.000; rss: 77MB	looking for entry point
time: 0.000; rss: 77MB	looking for plugin registrar
time: 0.003; rss: 78MB	region resolution
time: 0.000; rss: 78MB	loop checking
time: 0.000; rss: 78MB	static item recursion checking
time: 0.022; rss: 78MB	compute_incremental_hashes_map
time: 0.000; rss: 78MB	load_dep_graph
time: 0.001; rss: 79MB	type collecting
time: 0.000; rss: 79MB	variance inference
time: 0.008; rss: 80MB	coherence checking
time: 0.002; rss: 80MB	wf checking
time: 0.002; rss: 80MB	item-types checking
time: 2.392; rss: 95MB	item-bodies checking
time: 0.000; rss: 95MB	drop-impl checking
time: 0.016; rss: 93MB	const checking
time: 0.001; rss: 93MB	privacy checking
time: 0.000; rss: 93MB	stability index
time: 0.001; rss: 93MB	intrinsic checking
time: 0.001; rss: 93MB	effect checking
time: 0.004; rss: 93MB	match checking
time: 0.067; rss: 93MB	liveness checking
time: 0.011; rss: 93MB	rvalue checking
time: 0.036; rss: 116MB	MIR dump
  time: 0.007; rss: 114MB	SimplifyCfg
  time: 0.005; rss: 114MB	QualifyAndPromoteConstants
  time: 0.007; rss: 114MB	TypeckMir
  time: 0.000; rss: 114MB	SimplifyBranches
  time: 0.004; rss: 114MB	SimplifyCfg
time: 0.023; rss: 114MB	MIR passes
time: 0.229; rss: 116MB	borrow checking
time: 0.000; rss: 116MB	reachability checking
time: 0.003; rss: 116MB	death checking
time: 0.003; rss: 116MB	stability checking
time: 0.000; rss: 116MB	unused lib feature checking
time: 0.020; rss: 117MB	lint checking
time: 0.000; rss: 117MB	resolving dependency formats
  time: 0.000; rss: 117MB	NoLandingPads
  time: 0.002; rss: 117MB	SimplifyCfg
  time: 0.003; rss: 117MB	EraseRegions
  time: 0.001; rss: 117MB	AddCallGuards
  time: 0.168; rss: 119MB	ElaborateDrops
  time: 0.000; rss: 119MB	NoLandingPads
  time: 0.006; rss: 115MB	SimplifyCfg
  time: 0.000; rss: 115MB	Deaggregator
  time: 0.001; rss: 115MB	AddCallGuards
  time: 0.000; rss: 115MB	PreTrans
time: 0.180; rss: 115MB	Prepare MIR codegen passes
  time: 0.003; rss: 116MB	write metadata
  time: 0.009; rss: 117MB	translation item collection
  time: 0.001; rss: 118MB	codegen unit partitioning
  time: 0.002; rss: 131MB	internalize symbols
time: 0.187; rss: 118MB	translation
time: 0.000; rss: 118MB	assert dep graph
time: 0.000; rss: 118MB	serialize dep graph
  time: 0.028; rss: 91MB	llvm function passes [0]
  time: 0.005; rss: 92MB	llvm module passes [0]
  time: 0.630; rss: 98MB	codegen passes [0]
  time: 0.000; rss: 98MB	codegen passes [0]
time: 0.697; rss: 96MB	LLVM passes
time: 0.000; rss: 96MB	serialize work products
time: 0.061; rss: 85MB	linking
done
