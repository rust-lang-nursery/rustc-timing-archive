commit 753ea76336be2def223335c63d7b20188651a8c6
Merge: 3543a0f 6a4bb35
Author: bors <bors@rust-lang.org>
Date:   Tue Oct 18 01:49:13 2016 -0700

    Auto merge of #37083 - nnethercote:uleb128, r=eddyb
    
    Inline read_{un,}signed_leb128 and opaque::Decoder functions.
    
    `read_unsigned_leb128` is hot within rustc because it's heavily used
    during the reading of crate metadata. This commit tweaks its signature
    (and that of `read_signed_leb128`, for consistency) so it can increment
    the buffer index directly instead of maintaining its own copy, the
    change in which is then used by the caller to advance the index.
    
    This reduces the instruction count (as measured by Cachegrind) for some
    benchmarks a bit, e.g. hyper-0.5.0 by 0.7%.
rustc: ./html5ever-2016-08-25
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling phf_shared v0.7.16
   Compiling encoding_index_tests v0.1.4
   Compiling log v0.3.6
   Compiling void v1.0.2
   Compiling mac v0.0.2
   Compiling serde v0.8.9
   Compiling rustc-serialize v0.3.19
   Compiling lazy_static v0.2.1
   Compiling encoding-index-korean v1.20141219.5
   Compiling unreachable v0.1.1
   Compiling encoding-index-japanese v1.20141219.5
   Compiling encoding-index-singlebyte v1.20141219.5
   Compiling encoding-index-tradchinese v1.20141219.5
   Compiling libc v0.2.16
   Compiling phf v0.7.16
   Compiling debug_unreachable v0.1.1
   Compiling futf v0.1.2
   Compiling encoding-index-simpchinese v1.20141219.5
   Compiling matches v0.1.2
   Compiling utf-8 v0.6.0
   Compiling rand v0.3.14
   Compiling encoding v0.2.33
   Compiling phf_generator v0.7.16
   Compiling phf_codegen v0.7.16
   Compiling string_cache v0.2.29
   Compiling tendril v0.2.3
   Compiling html5ever v0.5.4 (file:///root/benchmarks/html5ever-2016-08-25)
time: 0.027; rss: 51MB	parsing
Lines of code:             8210
Pre-expansion node count:  52238
time: 0.000; rss: 51MB	recursion limit
time: 0.000; rss: 51MB	crate injection
time: 0.000; rss: 51MB	plugin loading
time: 0.000; rss: 51MB	plugin registration
time: 1.285; rss: 106MB	expansion
time: 0.000; rss: 106MB	maybe building test harness
time: 0.002; rss: 106MB	maybe creating a macro crate
Post-expansion node count: 163524
time: 0.000; rss: 106MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 106MB	complete gated feature checking
time: 0.009; rss: 106MB	early lint checks
time: 0.002; rss: 106MB	AST validation
time: 0.018; rss: 109MB	name resolution
time: 0.015; rss: 125MB	lowering ast -> hir
time: 0.004; rss: 129MB	indexing hir
time: 0.002; rss: 129MB	attribute checking
time: 0.002; rss: 107MB	language item collection
time: 0.003; rss: 107MB	lifetime resolution
time: 0.000; rss: 107MB	looking for entry point
time: 0.000; rss: 107MB	looking for plugin registrar
time: 0.015; rss: 112MB	region resolution
time: 0.002; rss: 112MB	loop checking
time: 0.002; rss: 112MB	static item recursion checking
time: 0.023; rss: 113MB	compute_incremental_hashes_map
time: 0.000; rss: 113MB	load_dep_graph
time: 0.009; rss: 114MB	type collecting
time: 0.000; rss: 114MB	variance inference
time: 0.022; rss: 117MB	coherence checking
time: 0.025; rss: 118MB	wf checking
time: 0.361; rss: 125MB	item-types checking
time: 0.512; rss: 138MB	item-bodies checking
time: 0.000; rss: 138MB	drop-impl checking
time: 0.068; rss: 140MB	const checking
time: 0.008; rss: 140MB	privacy checking
time: 0.001; rss: 140MB	stability index
time: 0.004; rss: 140MB	intrinsic checking
time: 0.003; rss: 140MB	effect checking
time: 0.024; rss: 140MB	match checking
time: 0.013; rss: 135MB	liveness checking
time: 0.026; rss: 135MB	rvalue checking
time: 0.118; rss: 183MB	MIR dump
  time: 0.009; rss: 183MB	SimplifyCfg
  time: 0.014; rss: 183MB	QualifyAndPromoteConstants
  time: 0.025; rss: 183MB	TypeckMir
  time: 0.000; rss: 183MB	SimplifyBranches
  time: 0.004; rss: 183MB	SimplifyCfg
time: 0.052; rss: 183MB	MIR passes
time: 0.089; rss: 184MB	borrow checking
time: 0.003; rss: 184MB	reachability checking
time: 0.007; rss: 184MB	death checking
time: 0.008; rss: 184MB	stability checking
time: 0.000; rss: 184MB	unused lib feature checking
time: 0.064; rss: 184MB	lint checking
time: 0.000; rss: 184MB	resolving dependency formats
  time: 0.000; rss: 184MB	NoLandingPads
  time: 0.004; rss: 184MB	SimplifyCfg
  time: 0.010; rss: 184MB	EraseRegions
  time: 0.001; rss: 184MB	AddCallGuards
  time: 0.075; rss: 191MB	ElaborateDrops
  time: 0.000; rss: 191MB	NoLandingPads
  time: 0.007; rss: 186MB	SimplifyCfg
  time: 0.008; rss: 186MB	InstCombine
  time: 0.001; rss: 186MB	Deaggregator
  time: 0.000; rss: 186MB	CopyPropagation
  time: 0.001; rss: 186MB	AddCallGuards
  time: 0.000; rss: 186MB	PreTrans
time: 0.108; rss: 186MB	Prepare MIR codegen passes
  time: 0.053; rss: 188MB	write metadata
  time: 0.047; rss: 190MB	translation item collection
  time: 0.005; rss: 191MB	codegen unit partitioning
  time: 0.005; rss: 203MB	internalize symbols
time: 0.351; rss: 173MB	translation
time: 0.000; rss: 173MB	assert dep graph
time: 0.000; rss: 173MB	serialize dep graph
  time: 0.020; rss: 105MB	llvm function passes [0]
  time: 0.012; rss: 106MB	llvm module passes [0]
  time: 0.455; rss: 108MB	codegen passes [0]
  time: 0.001; rss: 108MB	codegen passes [0]
time: 0.525; rss: 108MB	LLVM passes
time: 0.000; rss: 108MB	serialize work products
time: 0.058; rss: 91MB	linking
done
