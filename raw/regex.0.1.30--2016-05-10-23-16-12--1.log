commit 6dbb0e86aec11050480beb76eade6fb805010ba7
Merge: 04308ce fef8276
Author: bors <bors@rust-lang.org>
Date:   Tue May 10 14:36:46 2016 -0700

    Auto merge of #33319 - birkenfeld:issue31424, r=jseyfried
    
    borrowck: do not suggest to change "&mut self" to "&mut mut self"
    
    Matching the snippet string might not be the cleanest, but matching
    the AST node instead seems to end in a lot of nested `if let`s, so I
    don't know what's better.
    
    Of course it's entirely possible that there is another API altogether
    that I just don't know of?
    
    Fixes #31424.
rustc: ./regex.0.1.30
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling regex v0.1.30 (file:///root/benchmarks/regex.0.1.30)
time: 0.064; rss: 63MB	parsing
Lines of code:             8558
Pre-expansion node count:  58217
time: 0.011; rss: 63MB	configuration 1
time: 0.000; rss: 63MB	recursion limit
time: 0.000; rss: 63MB	crate injection
time: 0.004; rss: 67MB	macro loading
time: 0.000; rss: 67MB	plugin loading
time: 0.000; rss: 67MB	plugin registration
time: 0.058; rss: 69MB	expansion
time: 0.013; rss: 69MB	configuration 2
time: 0.000; rss: 69MB	gated configuration checking
time: 0.006; rss: 69MB	maybe building test harness
time: 0.005; rss: 69MB	prelude injection
time: 0.000; rss: 69MB	checking that all macro invocations are gone
time: 0.000; rss: 69MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 69MB	complete gated feature checking
Post-expansion node count: 68497
time: 0.006; rss: 69MB	assigning node ids
time: 0.001; rss: 69MB	collecting defs
time: 0.001; rss: 69MB	external crate/lib resolution
time: 0.006; rss: 69MB	early lint checks
time: 0.009; rss: 78MB	name resolution
time: 0.009; rss: 89MB	lowering ast -> hir
time: 0.001; rss: 92MB	indexing hir
time: 0.001; rss: 92MB	attribute checking
time: 0.001; rss: 83MB	language item collection
time: 0.001; rss: 83MB	lifetime resolution
time: 0.000; rss: 83MB	looking for entry point
time: 0.000; rss: 83MB	looking for plugin registrar
time: 0.006; rss: 87MB	region resolution
time: 0.001; rss: 87MB	loop checking
time: 0.001; rss: 87MB	static item recursion checking
time: 0.000; rss: 87MB	load_dep_graph
time: 0.008; rss: 98MB	type collecting
time: 0.000; rss: 98MB	variance inference
time: 0.025; rss: 109MB	coherence checking
time: 0.010; rss: 109MB	wf checking
time: 0.278; rss: 113MB	item-types checking
time: 0.194; rss: 125MB	item-bodies checking
time: 0.000; rss: 125MB	drop-impl checking
time: 0.024; rss: 129MB	const checking
time: 0.004; rss: 129MB	privacy checking
time: 0.001; rss: 129MB	stability index
time: 0.001; rss: 129MB	intrinsic checking
time: 0.001; rss: 129MB	effect checking
time: 0.003; rss: 129MB	match checking
time: 0.002; rss: 129MB	liveness checking
time: 0.006; rss: 129MB	rvalue checking
time: 0.049; rss: 138MB	MIR dump
time: 0.016; rss: 138MB	MIR passes
time: 0.019; rss: 138MB	borrow checking
time: 0.000; rss: 138MB	reachability checking
time: 0.003; rss: 138MB	death checking
time: 0.002; rss: 138MB	stability checking
time: 0.000; rss: 138MB	unused lib feature checking
time: 0.028; rss: 138MB	lint checking
time: 0.000; rss: 138MB	resolving dependency formats
time: 0.005; rss: 140MB	Prepare MIR codegen passes
  time: 0.055; rss: 144MB	translation item collection
  time: 0.002; rss: 144MB	codegen unit partitioning
  time: 0.179; rss: 200MB	write metadata
time: 0.677; rss: 197MB	translation
time: 0.000; rss: 197MB	assert dep graph
time: 0.000; rss: 197MB	serialize dep graph
  time: 0.035; rss: 127MB	llvm function passes [0]
  time: 0.017; rss: 128MB	llvm module passes [0]
  time: 0.611; rss: 132MB	codegen passes [0]
  time: 0.001; rss: 113MB	codegen passes [0]
time: 0.738; rss: 110MB	LLVM passes
time: 0.067; rss: 110MB	linking
done
