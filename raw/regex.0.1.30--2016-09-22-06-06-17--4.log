commit 6ad10844db51b950306d49070932562246e06616
Merge: 1cf592f e4b1842
Author: bors <bors@rust-lang.org>
Date:   Wed Sep 21 22:40:51 2016 -0700

    Auto merge of #36585 - jonathandturner:misc_error_touchups, r=nrc
    
    Add the ability to merge spans to codemap
    
    This PR adds the ability to merge Spans.  To do so, it builds on the Codemap's ability to verify the locations of spans, namely that following can be verified:
    
    * the expn_id of both spans much match
    * the lhs span needs to end on the same line the rhs span begins
    * the lhs span must start at or before the rhs span
    
    If all of these are met, a new span is returned that is min(lo), max(hi) of the two spans.
    
    This PR also removes an older Span merge, as this new functionality subsumes it.
    
    r? @nrc
rustc: ./regex.0.1.30
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling regex v0.1.30 (file:///root/benchmarks/regex.0.1.30)
time: 0.052; rss: 56MB	parsing
Lines of code:             8558
Pre-expansion node count:  58080
time: 0.000; rss: 56MB	recursion limit
time: 0.000; rss: 56MB	crate injection
time: 0.000; rss: 56MB	plugin loading
time: 0.000; rss: 56MB	plugin registration
time: 0.032; rss: 80MB	expansion
time: 0.000; rss: 80MB	maybe building test harness
time: 0.001; rss: 80MB	maybe creating a macro crate
time: 0.003; rss: 80MB	assigning node ids
Post-expansion node count: 68154
time: 0.000; rss: 80MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 80MB	complete gated feature checking
time: 0.001; rss: 80MB	collecting defs
time: 0.001; rss: 80MB	external crate/lib resolution
time: 0.004; rss: 80MB	early lint checks
time: 0.000; rss: 80MB	AST validation
time: 0.005; rss: 82MB	name resolution
time: 0.008; rss: 92MB	lowering ast -> hir
time: 0.002; rss: 94MB	indexing hir
time: 0.001; rss: 94MB	attribute checking
time: 0.001; rss: 84MB	language item collection
time: 0.001; rss: 84MB	lifetime resolution
time: 0.000; rss: 84MB	looking for entry point
time: 0.000; rss: 84MB	looking for plugin registrar
time: 0.007; rss: 89MB	region resolution
time: 0.001; rss: 89MB	loop checking
time: 0.001; rss: 89MB	static item recursion checking
time: 0.021; rss: 90MB	compute_incremental_hashes_map
time: 0.000; rss: 90MB	load_dep_graph
time: 0.008; rss: 90MB	type collecting
time: 0.000; rss: 90MB	variance inference
time: 0.019; rss: 93MB	coherence checking
time: 0.009; rss: 94MB	wf checking
time: 0.250; rss: 105MB	item-types checking
time: 0.145; rss: 111MB	item-bodies checking
time: 0.000; rss: 111MB	drop-impl checking
time: 0.027; rss: 111MB	const checking
time: 0.003; rss: 111MB	privacy checking
time: 0.001; rss: 111MB	stability index
time: 0.002; rss: 111MB	intrinsic checking
time: 0.001; rss: 111MB	effect checking
time: 0.004; rss: 112MB	match checking
time: 0.002; rss: 112MB	liveness checking
time: 0.008; rss: 112MB	rvalue checking
time: 0.042; rss: 125MB	MIR dump
  time: 0.003; rss: 125MB	SimplifyCfg
  time: 0.005; rss: 125MB	QualifyAndPromoteConstants
  time: 0.011; rss: 125MB	TypeckMir
  time: 0.000; rss: 125MB	SimplifyBranches
  time: 0.002; rss: 125MB	SimplifyCfg
time: 0.020; rss: 125MB	MIR passes
time: 0.021; rss: 125MB	borrow checking
time: 0.000; rss: 125MB	reachability checking
time: 0.002; rss: 125MB	death checking
time: 0.002; rss: 125MB	stability checking
time: 0.000; rss: 125MB	unused lib feature checking
time: 0.025; rss: 125MB	lint checking
time: 0.000; rss: 125MB	resolving dependency formats
  time: 0.000; rss: 125MB	NoLandingPads
  time: 0.001; rss: 125MB	SimplifyCfg
  time: 0.004; rss: 125MB	EraseRegions
  time: 0.000; rss: 125MB	AddCallGuards
  time: 0.009; rss: 125MB	ElaborateDrops
  time: 0.000; rss: 125MB	NoLandingPads
  time: 0.002; rss: 125MB	SimplifyCfg
  time: 0.000; rss: 125MB	Deaggregator
  time: 0.000; rss: 125MB	AddCallGuards
  time: 0.000; rss: 125MB	PreTrans
time: 0.019; rss: 125MB	Prepare MIR codegen passes
  time: 0.161; rss: 136MB	write metadata
  time: 0.041; rss: 137MB	translation item collection
  time: 0.007; rss: 139MB	codegen unit partitioning
  time: 0.014; rss: 165MB	internalize symbols
time: 0.639; rss: 159MB	translation
time: 0.000; rss: 159MB	assert dep graph
time: 0.000; rss: 159MB	serialize dep graph
  time: 0.036; rss: 113MB	llvm function passes [0]
  time: 0.019; rss: 114MB	llvm module passes [0]
  time: 0.682; rss: 118MB	codegen passes [0]
  time: 0.001; rss: 118MB	codegen passes [0]
time: 0.798; rss: 118MB	LLVM passes
time: 0.000; rss: 118MB	serialize work products
time: 0.066; rss: 90MB	linking
done
