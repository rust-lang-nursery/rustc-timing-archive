commit 06b8d1d3611dc9ebd37dd464b39d5d1565bbcd96
Merge: d346dbc acad8cc
Author: bors <bors@rust-lang.org>
Date:   Mon Dec 5 17:37:40 2016 +0000

    Auto merge of #38111 - japaric:jemalloc, r=alexcrichton
    
    don't rebuild alloc_jemalloc if jemalloc's .git directory has changed
    
    the .git directory is modified by `bootstrap` when it updates this git
    submodule; this triggered rebuilds every time `bootstrap` was called.
    
    likely fixes #38094
    
    r? @alexcrichton
rustc: ./issue-32278-big-array-of-strings
cargo rustc  -- -Ztime-passes -Zinput-stats
time: 0.099; rss: 61MB	parsing
Lines of code:             65577
Pre-expansion node count:  65552
time: 0.000; rss: 61MB	recursion limit
time: 0.000; rss: 61MB	crate injection
time: 0.000; rss: 61MB	plugin loading
time: 0.000; rss: 61MB	plugin registration
time: 0.024; rss: 85MB	expansion
time: 0.000; rss: 85MB	maybe building test harness
time: 0.001; rss: 85MB	maybe creating a macro crate
Post-expansion node count: 65565
time: 0.000; rss: 85MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 85MB	complete gated feature checking
time: 0.004; rss: 85MB	early lint checks
time: 0.000; rss: 85MB	AST validation
time: 0.002; rss: 85MB	name resolution
time: 0.004; rss: 93MB	lowering ast -> hir
time: 0.001; rss: 98MB	indexing hir
time: 0.001; rss: 98MB	attribute checking
time: 0.000; rss: 87MB	language item collection
time: 0.000; rss: 87MB	lifetime resolution
time: 0.000; rss: 87MB	looking for entry point
time: 0.000; rss: 87MB	looking for plugin registrar
time: 0.005; rss: 92MB	region resolution
time: 0.000; rss: 92MB	loop checking
time: 0.000; rss: 92MB	static item recursion checking
time: 0.036; rss: 92MB	compute_incremental_hashes_map
time: 0.000; rss: 92MB	load_dep_graph
time: 0.000; rss: 92MB	stability index
time: 0.000; rss: 92MB	stability checking
time: 0.000; rss: 92MB	type collecting
time: 0.000; rss: 92MB	variance inference
time: 0.000; rss: 92MB	impl wf inference
time: 0.003; rss: 94MB	coherence checking
time: 0.000; rss: 94MB	wf checking
time: 0.516; rss: 107MB	item-types checking
time: 0.000; rss: 107MB	item-bodies checking
time: 0.000; rss: 107MB	drop-impl checking
time: 0.020; rss: 106MB	const checking
time: 0.001; rss: 106MB	privacy checking
time: 0.000; rss: 106MB	intrinsic checking
time: 0.000; rss: 106MB	effect checking
time: 0.000; rss: 106MB	match checking
time: 0.000; rss: 106MB	liveness checking
time: 0.000; rss: 106MB	rvalue checking
time: 0.034; rss: 114MB	MIR dump
  time: 0.000; rss: 114MB	SimplifyCfg
  time: 0.001; rss: 114MB	QualifyAndPromoteConstants
  time: 0.001; rss: 114MB	TypeckMir
  time: 0.000; rss: 114MB	SimplifyBranches
  time: 0.000; rss: 114MB	SimplifyCfg
time: 0.001; rss: 114MB	MIR cleanup and validation
time: 0.001; rss: 114MB	borrow checking
time: 0.000; rss: 114MB	reachability checking
time: 0.000; rss: 114MB	death checking
time: 0.000; rss: 114MB	unused lib feature checking
time: 0.021; rss: 114MB	lint checking
time: 0.001; rss: 114MB	resolving dependency formats
  time: 0.000; rss: 114MB	NoLandingPads
  time: 0.000; rss: 114MB	SimplifyCfg
  time: 0.001; rss: 114MB	EraseRegions
  time: 0.000; rss: 114MB	AddCallGuards
  time: 0.000; rss: 114MB	ElaborateDrops
  time: 0.000; rss: 114MB	NoLandingPads
  time: 0.000; rss: 114MB	SimplifyCfg
  time: 0.000; rss: 114MB	InstCombine
  time: 0.000; rss: 114MB	Deaggregator
  time: 0.000; rss: 114MB	CopyPropagation
  time: 0.000; rss: 114MB	SimplifyLocals
  time: 0.000; rss: 114MB	AddCallGuards
  time: 0.000; rss: 114MB	PreTrans
time: 0.001; rss: 114MB	MIR optimisations
  time: 0.000; rss: 115MB	write metadata
  time: 0.000; rss: 115MB	translation item collection
  time: 0.000; rss: 115MB	codegen unit partitioning
  time: 0.001; rss: 126MB	internalize symbols
time: 0.055; rss: 126MB	translation
time: 0.000; rss: 126MB	assert dep graph
time: 0.000; rss: 126MB	serialize dep graph
  time: 0.008; rss: 91MB	llvm function passes [0]
  time: 0.000; rss: 91MB	llvm module passes [0]
  time: 0.189; rss: 91MB	codegen passes [0]
  time: 0.000; rss: 91MB	codegen passes [0]
time: 0.198; rss: 91MB	LLVM passes
time: 0.000; rss: 91MB	serialize work products
  time: 0.152; rss: 82MB	running linker
time: 0.154; rss: 82MB	linking
done
