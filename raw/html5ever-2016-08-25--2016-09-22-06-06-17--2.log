commit 6ad10844db51b950306d49070932562246e06616
Merge: 1cf592f e4b1842
Author: bors <bors@rust-lang.org>
Date:   Wed Sep 21 22:40:51 2016 -0700

    Auto merge of #36585 - jonathandturner:misc_error_touchups, r=nrc
    
    Add the ability to merge spans to codemap
    
    This PR adds the ability to merge Spans.  To do so, it builds on the Codemap's ability to verify the locations of spans, namely that following can be verified:
    
    * the expn_id of both spans much match
    * the lhs span needs to end on the same line the rhs span begins
    * the lhs span must start at or before the rhs span
    
    If all of these are met, a new span is returned that is min(lo), max(hi) of the two spans.
    
    This PR also removes an older Span merge, as this new functionality subsumes it.
    
    r? @nrc
rustc: ./html5ever-2016-08-25
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling phf_shared v0.7.16
   Compiling encoding_index_tests v0.1.4
   Compiling mac v0.0.2
   Compiling lazy_static v0.2.1
   Compiling libc v0.2.16
   Compiling rustc-serialize v0.3.19
   Compiling serde v0.8.9
   Compiling log v0.3.6
   Compiling encoding-index-japanese v1.20141219.5
   Compiling encoding-index-korean v1.20141219.5
   Compiling encoding-index-tradchinese v1.20141219.5
   Compiling encoding-index-singlebyte v1.20141219.5
   Compiling phf v0.7.16
   Compiling encoding-index-simpchinese v1.20141219.5
   Compiling matches v0.1.2
   Compiling void v1.0.2
   Compiling utf-8 v0.6.0
   Compiling unreachable v0.1.1
   Compiling debug_unreachable v0.1.1
   Compiling futf v0.1.2
   Compiling rand v0.3.14
   Compiling encoding v0.2.33
   Compiling tendril v0.2.3
   Compiling phf_generator v0.7.16
   Compiling string_cache v0.2.29
   Compiling phf_codegen v0.7.16
   Compiling html5ever v0.5.4 (file:///root/benchmarks/html5ever-2016-08-25)
time: 0.028; rss: 52MB	parsing
Lines of code:             8210
Pre-expansion node count:  52238
time: 0.000; rss: 52MB	recursion limit
time: 0.000; rss: 52MB	crate injection
time: 0.000; rss: 52MB	plugin loading
time: 0.000; rss: 52MB	plugin registration
time: 1.207; rss: 99MB	expansion
time: 0.000; rss: 99MB	maybe building test harness
time: 0.002; rss: 99MB	maybe creating a macro crate
time: 0.008; rss: 99MB	assigning node ids
Post-expansion node count: 164262
time: 0.000; rss: 99MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 99MB	complete gated feature checking
time: 0.005; rss: 101MB	collecting defs
time: 0.006; rss: 103MB	external crate/lib resolution
time: 0.009; rss: 103MB	early lint checks
time: 0.002; rss: 103MB	AST validation
time: 0.019; rss: 107MB	name resolution
time: 0.017; rss: 124MB	lowering ast -> hir
time: 0.004; rss: 128MB	indexing hir
time: 0.002; rss: 128MB	attribute checking
time: 0.002; rss: 110MB	language item collection
time: 0.003; rss: 110MB	lifetime resolution
time: 0.000; rss: 110MB	looking for entry point
time: 0.000; rss: 110MB	looking for plugin registrar
time: 0.016; rss: 116MB	region resolution
time: 0.002; rss: 116MB	loop checking
time: 0.003; rss: 116MB	static item recursion checking
time: 0.024; rss: 117MB	compute_incremental_hashes_map
time: 0.000; rss: 117MB	load_dep_graph
time: 0.015; rss: 116MB	type collecting
time: 0.000; rss: 116MB	variance inference
time: 0.027; rss: 120MB	coherence checking
time: 0.027; rss: 121MB	wf checking
time: 0.366; rss: 130MB	item-types checking
time: 0.591; rss: 142MB	item-bodies checking
time: 0.000; rss: 142MB	drop-impl checking
time: 0.077; rss: 145MB	const checking
time: 0.008; rss: 145MB	privacy checking
time: 0.002; rss: 145MB	stability index
time: 0.004; rss: 145MB	intrinsic checking
time: 0.003; rss: 145MB	effect checking
time: 0.028; rss: 145MB	match checking
time: 0.014; rss: 139MB	liveness checking
time: 0.032; rss: 139MB	rvalue checking
time: 0.123; rss: 183MB	MIR dump
  time: 0.009; rss: 183MB	SimplifyCfg
  time: 0.015; rss: 183MB	QualifyAndPromoteConstants
  time: 0.027; rss: 183MB	TypeckMir
  time: 0.000; rss: 183MB	SimplifyBranches
  time: 0.005; rss: 183MB	SimplifyCfg
time: 0.056; rss: 183MB	MIR passes
time: 0.096; rss: 188MB	borrow checking
time: 0.003; rss: 188MB	reachability checking
time: 0.007; rss: 188MB	death checking
time: 0.008; rss: 188MB	stability checking
time: 0.000; rss: 188MB	unused lib feature checking
time: 0.068; rss: 188MB	lint checking
time: 0.000; rss: 188MB	resolving dependency formats
  time: 0.000; rss: 188MB	NoLandingPads
  time: 0.004; rss: 188MB	SimplifyCfg
  time: 0.010; rss: 188MB	EraseRegions
  time: 0.001; rss: 188MB	AddCallGuards
  time: 0.083; rss: 193MB	ElaborateDrops
  time: 0.000; rss: 193MB	NoLandingPads
  time: 0.007; rss: 190MB	SimplifyCfg
  time: 0.001; rss: 190MB	Deaggregator
  time: 0.001; rss: 190MB	AddCallGuards
  time: 0.000; rss: 190MB	PreTrans
time: 0.108; rss: 190MB	Prepare MIR codegen passes
  time: 0.060; rss: 192MB	write metadata
  time: 0.044; rss: 194MB	translation item collection
  time: 0.006; rss: 194MB	codegen unit partitioning
  time: 0.012; rss: 210MB	internalize symbols
time: 0.441; rss: 183MB	translation
time: 0.000; rss: 183MB	assert dep graph
time: 0.000; rss: 183MB	serialize dep graph
  time: 0.023; rss: 114MB	llvm function passes [0]
  time: 0.013; rss: 115MB	llvm module passes [0]
  time: 0.538; rss: 117MB	codegen passes [0]
  time: 0.001; rss: 117MB	codegen passes [0]
time: 0.619; rss: 117MB	LLVM passes
time: 0.000; rss: 117MB	serialize work products
time: 0.060; rss: 96MB	linking
done
