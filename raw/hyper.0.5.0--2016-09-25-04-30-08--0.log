commit d6dc33907ab7d86d492eec8e79d0890bdbc8a2a8
Merge: a0843d7 50dad3f
Author: bors <bors@rust-lang.org>
Date:   Sat Sep 24 22:20:25 2016 -0700

    Auto merge of #36709 - Mark-Simulacrum:fix-wsl-tidy, r=Aatch
    
    Skip binary tidy check when on Windows Linux Subsystem
    
    While it's possible that other linux systems will include "Microsoft" in
    their /proc/version, this is deemed unlikely, and since this is a tidy
    check, will likely be caught by buildbot/travis either way.
    
    Fixes #36706.
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling log v0.3.6
   Compiling winapi v0.2.8
   Compiling unicase v0.1.0
   Compiling rustc-serialize v0.3.19
   Compiling typeable v0.1.2
   Compiling pkg-config v0.3.8
   Compiling httparse v0.1.6
   Compiling traitobject v0.0.1
   Compiling gcc v0.3.35
   Compiling libc v0.1.12
   Compiling winapi-build v0.1.1
   Compiling mime v0.0.11
   Compiling lazy_static v0.1.16
   Compiling matches v0.1.2
   Compiling libc v0.2.16
   Compiling bitflags v0.3.3
   Compiling kernel32-sys v0.2.2
   Compiling num_cpus v0.2.13
   Compiling rand v0.3.14
   Compiling time v0.1.35
   Compiling openssl-sys v0.6.7
   Compiling openssl v0.6.7
   Compiling uuid v0.1.18
   Compiling url v0.2.38
   Compiling cookie v0.1.21
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.028; rss: 51MB	parsing
Lines of code:             9154
Pre-expansion node count:  44873
time: 0.000; rss: 51MB	recursion limit
time: 0.000; rss: 51MB	crate injection
time: 0.000; rss: 51MB	plugin loading
time: 0.000; rss: 51MB	plugin registration
time: 0.095; rss: 80MB	expansion
time: 0.000; rss: 80MB	maybe building test harness
time: 0.001; rss: 80MB	maybe creating a macro crate
time: 0.005; rss: 80MB	assigning node ids
Post-expansion node count: 101537
time: 0.000; rss: 80MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 80MB	complete gated feature checking
time: 0.003; rss: 82MB	collecting defs
time: 0.010; rss: 88MB	external crate/lib resolution
time: 0.004; rss: 88MB	early lint checks
time: 0.001; rss: 88MB	AST validation
time: 0.016; rss: 95MB	name resolution
time: 0.008; rss: 100MB	lowering ast -> hir
time: 0.002; rss: 102MB	indexing hir
time: 0.001; rss: 102MB	attribute checking
time: 0.001; rss: 96MB	language item collection
time: 0.002; rss: 96MB	lifetime resolution
time: 0.000; rss: 96MB	looking for entry point
time: 0.000; rss: 96MB	looking for plugin registrar
time: 0.006; rss: 100MB	region resolution
time: 0.001; rss: 100MB	loop checking
time: 0.001; rss: 100MB	static item recursion checking
time: 0.041; rss: 101MB	compute_incremental_hashes_map
time: 0.000; rss: 101MB	load_dep_graph
time: 0.023; rss: 103MB	type collecting
time: 0.000; rss: 103MB	variance inference
time: 0.036; rss: 105MB	coherence checking
time: 0.056; rss: 108MB	wf checking
time: 0.029; rss: 108MB	item-types checking
time: 0.364; rss: 120MB	item-bodies checking
time: 0.000; rss: 120MB	drop-impl checking
time: 0.039; rss: 122MB	const checking
time: 0.006; rss: 122MB	privacy checking
time: 0.001; rss: 122MB	stability index
time: 0.005; rss: 122MB	intrinsic checking
time: 0.002; rss: 122MB	effect checking
time: 0.013; rss: 122MB	match checking
time: 0.005; rss: 122MB	liveness checking
time: 0.027; rss: 122MB	rvalue checking
time: 0.053; rss: 139MB	MIR dump
  time: 0.007; rss: 139MB	SimplifyCfg
  time: 0.013; rss: 139MB	QualifyAndPromoteConstants
  time: 0.016; rss: 139MB	TypeckMir
  time: 0.001; rss: 139MB	SimplifyBranches
  time: 0.004; rss: 139MB	SimplifyCfg
time: 0.040; rss: 139MB	MIR passes
time: 0.061; rss: 139MB	borrow checking
time: 0.003; rss: 139MB	reachability checking
time: 0.005; rss: 139MB	death checking
time: 0.005; rss: 139MB	stability checking
time: 0.000; rss: 139MB	unused lib feature checking
time: 0.041; rss: 139MB	lint checking
time: 0.000; rss: 139MB	resolving dependency formats
  time: 0.001; rss: 139MB	NoLandingPads
  time: 0.003; rss: 139MB	SimplifyCfg
  time: 0.008; rss: 139MB	EraseRegions
  time: 0.001; rss: 139MB	AddCallGuards
  time: 0.055; rss: 142MB	ElaborateDrops
  time: 0.001; rss: 142MB	NoLandingPads
  time: 0.005; rss: 142MB	SimplifyCfg
  time: 0.003; rss: 142MB	Deaggregator
  time: 0.001; rss: 142MB	AddCallGuards
  time: 0.000; rss: 142MB	PreTrans
time: 0.079; rss: 142MB	Prepare MIR codegen passes
  time: 0.054; rss: 146MB	write metadata
  time: 0.113; rss: 150MB	translation item collection
  time: 0.019; rss: 153MB	codegen unit partitioning
  time: 0.032; rss: 217MB	internalize symbols
time: 1.391; rss: 209MB	translation
time: 0.000; rss: 209MB	assert dep graph
time: 0.000; rss: 209MB	serialize dep graph
  time: 0.102; rss: 159MB	llvm function passes [0]
  time: 0.049; rss: 162MB	llvm module passes [0]
  time: 1.845; rss: 166MB	codegen passes [0]
  time: 0.001; rss: 166MB	codegen passes [0]
time: 2.156; rss: 166MB	LLVM passes
time: 0.000; rss: 166MB	serialize work products
time: 0.156; rss: 99MB	linking
done
