commit 6dc035ed911672c6a1f7afc9eed15fb08e574e5b
Merge: 98a3502 0b2746c
Author: bors <bors@rust-lang.org>
Date:   Sat Oct 15 19:49:12 2016 -0700

    Auto merge of #37098 - ollie27:rustdoc_playground, r=GuillaumeGomez
    
    rustdoc: Improve playground run buttons
    
    The main change is to stop using javascript to generate the URLs and use
    rustdoc instead.
    
    This also adds run buttons to the error index examples.
    
    You can test the changes at https://ollie27.github.io/rust_doc_test/.
    
    Fixes #36621
    Fixes #36910
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.031; rss: 49MB	parsing
Lines of code:             9003
Pre-expansion node count:  44129
time: 0.000; rss: 49MB	recursion limit
time: 0.000; rss: 49MB	crate injection
time: 0.000; rss: 49MB	plugin loading
time: 0.000; rss: 49MB	plugin registration
time: 0.114; rss: 85MB	expansion
time: 0.000; rss: 85MB	maybe building test harness
time: 0.001; rss: 85MB	maybe creating a macro crate
Post-expansion node count: 101371
time: 0.000; rss: 85MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 85MB	complete gated feature checking
time: 0.003; rss: 85MB	early lint checks
time: 0.001; rss: 85MB	AST validation
time: 0.021; rss: 89MB	name resolution
time: 0.019; rss: 95MB	lowering ast -> hir
time: 0.001; rss: 96MB	indexing hir
time: 0.001; rss: 96MB	attribute checking
time: 0.001; rss: 90MB	language item collection
time: 0.002; rss: 90MB	lifetime resolution
time: 0.000; rss: 90MB	looking for entry point
time: 0.000; rss: 90MB	looking for plugin registrar
time: 0.009; rss: 92MB	region resolution
time: 0.001; rss: 92MB	loop checking
time: 0.001; rss: 92MB	static item recursion checking
time: 0.038; rss: 93MB	compute_incremental_hashes_map
time: 0.000; rss: 93MB	load_dep_graph
time: 0.017; rss: 95MB	type collecting
time: 0.000; rss: 95MB	variance inference
time: 0.035; rss: 98MB	coherence checking
time: 0.052; rss: 100MB	wf checking
time: 0.021; rss: 100MB	item-types checking
time: 0.372; rss: 110MB	item-bodies checking
time: 0.000; rss: 110MB	drop-impl checking
time: 0.032; rss: 110MB	const checking
time: 0.008; rss: 110MB	privacy checking
time: 0.001; rss: 110MB	stability index
time: 0.004; rss: 110MB	intrinsic checking
time: 0.002; rss: 110MB	effect checking
time: 0.009; rss: 110MB	match checking
time: 0.005; rss: 111MB	liveness checking
time: 0.023; rss: 111MB	rvalue checking
time: 0.077; rss: 128MB	MIR dump
  time: 0.007; rss: 129MB	SimplifyCfg
  time: 0.012; rss: 129MB	QualifyAndPromoteConstants
  time: 0.014; rss: 129MB	TypeckMir
  time: 0.001; rss: 129MB	SimplifyBranches
  time: 0.004; rss: 129MB	SimplifyCfg
time: 0.037; rss: 129MB	MIR passes
time: 0.058; rss: 129MB	borrow checking
time: 0.003; rss: 129MB	reachability checking
time: 0.006; rss: 130MB	death checking
time: 0.009; rss: 130MB	stability checking
time: 0.000; rss: 130MB	unused lib feature checking
time: 0.045; rss: 132MB	lint checking
time: 0.000; rss: 132MB	resolving dependency formats
  time: 0.001; rss: 132MB	NoLandingPads
  time: 0.003; rss: 132MB	SimplifyCfg
  time: 0.009; rss: 132MB	EraseRegions
  time: 0.001; rss: 132MB	AddCallGuards
  time: 0.026; rss: 134MB	ElaborateDrops
  time: 0.001; rss: 134MB	NoLandingPads
  time: 0.005; rss: 134MB	SimplifyCfg
  time: 0.003; rss: 134MB	InstCombine
  time: 0.003; rss: 134MB	Deaggregator
  time: 0.001; rss: 134MB	CopyPropagation
  time: 0.001; rss: 134MB	AddCallGuards
  time: 0.000; rss: 134MB	PreTrans
time: 0.054; rss: 134MB	Prepare MIR codegen passes
  time: 0.047; rss: 137MB	write metadata
  time: 0.148; rss: 143MB	translation item collection
  time: 0.017; rss: 146MB	codegen unit partitioning
  time: 0.015; rss: 200MB	internalize symbols
time: 1.230; rss: 189MB	translation
time: 0.000; rss: 189MB	assert dep graph
time: 0.000; rss: 189MB	serialize dep graph
  time: 0.088; rss: 144MB	llvm function passes [0]
  time: 0.040; rss: 146MB	llvm module passes [0]
  time: 1.603; rss: 151MB	codegen passes [0]
  time: 0.001; rss: 151MB	codegen passes [0]
time: 1.896; rss: 150MB	LLVM passes
time: 0.000; rss: 150MB	serialize work products
time: 0.138; rss: 94MB	linking
done
