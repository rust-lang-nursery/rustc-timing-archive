commit a277f9deb0bcccc096334447b0e57765110707c7
Merge: fd983d0 d394e75
Author: bors <bors@rust-lang.org>
Date:   Sat Nov 12 15:29:13 2016 -0800

    Auto merge of #37675 - arielb1:trans-closure, r=eddyb
    
    Translate closures through the collector
    
    Now that old trans is gone, there is no need for the hack of translating closures when they are instantiated. We can translate them like regular items.
    
    r? @eddyb
rustc: ./piston-image-0.10.3
cargo rustc  -- -Ztime-passes -Zinput-stats
   Compiling image v0.10.3 (file:///root/benchmarks/piston-image-0.10.3)
time: 0.038; rss: 54MB	parsing
Lines of code:             12000
Pre-expansion node count:  90152
time: 0.000; rss: 54MB	recursion limit
time: 0.000; rss: 54MB	crate injection
time: 0.000; rss: 54MB	plugin loading
time: 0.000; rss: 54MB	plugin registration
time: 0.068; rss: 93MB	expansion
time: 0.000; rss: 93MB	maybe building test harness
time: 0.002; rss: 93MB	maybe creating a macro crate
Post-expansion node count: 148881
time: 0.000; rss: 93MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 93MB	complete gated feature checking
time: 0.006; rss: 93MB	early lint checks
time: 0.001; rss: 93MB	AST validation
time: 0.020; rss: 97MB	name resolution
time: 0.013; rss: 105MB	lowering ast -> hir
time: 0.003; rss: 110MB	indexing hir
time: 0.002; rss: 110MB	attribute checking
time: 0.001; rss: 100MB	language item collection
time: 0.003; rss: 100MB	lifetime resolution
time: 0.000; rss: 100MB	looking for entry point
time: 0.000; rss: 100MB	looking for plugin registrar
time: 0.010; rss: 106MB	region resolution
time: 0.002; rss: 106MB	loop checking
time: 0.001; rss: 106MB	static item recursion checking
time: 0.051; rss: 105MB	compute_incremental_hashes_map
time: 0.000; rss: 105MB	load_dep_graph
time: 0.017; rss: 108MB	type collecting
time: 0.000; rss: 108MB	variance inference
time: 0.014; rss: 110MB	coherence checking
time: 0.065; rss: 110MB	wf checking
time: 0.136; rss: 113MB	item-types checking
time: 0.684; rss: 126MB	item-bodies checking
time: 0.000; rss: 126MB	drop-impl checking
time: 0.048; rss: 129MB	const checking
time: 0.008; rss: 129MB	privacy checking
time: 0.001; rss: 129MB	stability index
time: 0.006; rss: 129MB	intrinsic checking
time: 0.003; rss: 129MB	effect checking
time: 0.013; rss: 129MB	match checking
time: 0.009; rss: 129MB	liveness checking
time: 0.039; rss: 129MB	rvalue checking
time: 0.089; rss: 171MB	MIR dump
  time: 0.011; rss: 171MB	SimplifyCfg
  time: 0.020; rss: 171MB	QualifyAndPromoteConstants
  time: 0.021; rss: 171MB	TypeckMir
  time: 0.001; rss: 171MB	SimplifyBranches
  time: 0.005; rss: 171MB	SimplifyCfg
time: 0.058; rss: 171MB	MIR cleanup and validation
time: 0.106; rss: 171MB	borrow checking
time: 0.003; rss: 171MB	reachability checking
time: 0.007; rss: 171MB	death checking
time: 0.007; rss: 171MB	stability checking
time: 0.000; rss: 171MB	unused lib feature checking
time: 0.061; rss: 171MB	lint checking
time: 0.000; rss: 171MB	resolving dependency formats
  time: 0.001; rss: 171MB	NoLandingPads
  time: 0.005; rss: 171MB	SimplifyCfg
  time: 0.010; rss: 171MB	EraseRegions
  time: 0.002; rss: 171MB	AddCallGuards
  time: 0.041; rss: 175MB	ElaborateDrops
  time: 0.001; rss: 175MB	NoLandingPads
  time: 0.009; rss: 175MB	SimplifyCfg
  time: 0.006; rss: 175MB	InstCombine
  time: 0.002; rss: 175MB	Deaggregator
  time: 0.000; rss: 175MB	CopyPropagation
  time: 0.007; rss: 175MB	SimplifyLocals
  time: 0.002; rss: 175MB	AddCallGuards
  time: 0.000; rss: 175MB	PreTrans
time: 0.086; rss: 175MB	MIR optimisations
  time: 0.016; rss: 177MB	write metadata
  time: 0.328; rss: 190MB	translation item collection
  time: 0.024; rss: 195MB	codegen unit partitioning
  time: 0.021; rss: 315MB	internalize symbols
time: 2.293; rss: 315MB	translation
time: 0.000; rss: 315MB	assert dep graph
time: 0.000; rss: 315MB	serialize dep graph
  time: 0.204; rss: 225MB	llvm function passes [0]
  time: 0.080; rss: 228MB	llvm module passes [0]
  time: 4.117; rss: 227MB	codegen passes [0]
  time: 0.000; rss: 227MB	codegen passes [0]
time: 4.699; rss: 227MB	LLVM passes
time: 0.000; rss: 227MB	serialize work products
time: 0.128; rss: 98MB	linking
done
