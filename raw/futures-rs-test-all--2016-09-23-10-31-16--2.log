commit 86a686c4f71d208ecf8f7ee5a035b17a545d8b62
Merge: f2c53ea bfa3433
Author: bors <bors@rust-lang.org>
Date:   Fri Sep 23 06:17:26 2016 -0700

    Auto merge of #36335 - mcarton:compiletest, r=GuillaumeGomez
    
    Fix ICE test in compiletest fail-tests
    
    While working on Clippy which uses *compiletest*, I noticed that as long as all expected error are found, *compile-fail* tests will be marked *ok* even if there is an ICE. One function seems to have not been updated with JSON errors because ICEs are now reported like this:
    ```json
    {"message":"../src/librustc/ty/context.rs:161: Attempted to intern `_` which contains inference types/regions in the global type context","code":null,"level":"error: internal compiler error","spans":[],"children":[],"rendered":null}
    ```
    I don't think I can add a test for that.
    
    I guess:
    r? @nikomatsakis
rustc: ./futures-rs-test-all
cargo rustc --test all --verbose -- -Ztime-passes -Zinput-stats
       Fresh log v0.3.6
   Compiling futures v0.1.0 (file:///root/benchmarks/futures-rs-test-all)
     Running `/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc tests/all.rs --crate-name all --crate-type bin -g -Ztime-passes -Zinput-stats --test -C metadata=449e6fc7d003a0bc -C extra-filename=-449e6fc7d003a0bc --out-dir /root/benchmarks/futures-rs-test-all/target/debug --emit=dep-info,link -L dependency=/root/benchmarks/futures-rs-test-all/target/debug -L dependency=/root/benchmarks/futures-rs-test-all/target/debug/deps --extern log=/root/benchmarks/futures-rs-test-all/target/debug/deps/liblog-30a8a27ec161f1be.rlib --extern futures=/root/benchmarks/futures-rs-test-all/target/debug/libfutures.rlib`
time: 0.003; rss: 44MB	parsing
Lines of code:             412
Pre-expansion node count:  5522
time: 0.000; rss: 44MB	recursion limit
time: 0.000; rss: 44MB	crate injection
time: 0.000; rss: 44MB	plugin loading
time: 0.000; rss: 44MB	plugin registration
time: 0.024; rss: 63MB	expansion
time: 0.000; rss: 63MB	maybe building test harness
time: 0.000; rss: 68MB	maybe creating a macro crate
time: 0.000; rss: 68MB	assigning node ids
Post-expansion node count: 10613
time: 0.000; rss: 68MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 68MB	complete gated feature checking
time: 0.000; rss: 68MB	collecting defs
time: 0.005; rss: 69MB	external crate/lib resolution
time: 0.000; rss: 69MB	early lint checks
time: 0.000; rss: 69MB	AST validation
time: 0.002; rss: 69MB	name resolution
time: 0.001; rss: 73MB	lowering ast -> hir
time: 0.000; rss: 73MB	indexing hir
time: 0.000; rss: 73MB	attribute checking
time: 0.000; rss: 73MB	language item collection
time: 0.000; rss: 73MB	lifetime resolution
time: 0.000; rss: 73MB	looking for entry point
time: 0.000; rss: 73MB	looking for plugin registrar
time: 0.001; rss: 73MB	region resolution
time: 0.000; rss: 73MB	loop checking
time: 0.000; rss: 73MB	static item recursion checking
time: 0.003; rss: 73MB	compute_incremental_hashes_map
time: 0.000; rss: 73MB	load_dep_graph
time: 0.005; rss: 73MB	type collecting
time: 0.000; rss: 73MB	variance inference
time: 0.004; rss: 73MB	coherence checking
time: 0.014; rss: 75MB	wf checking
time: 0.003; rss: 75MB	item-types checking
time: 0.155; rss: 84MB	item-bodies checking
time: 0.000; rss: 84MB	drop-impl checking
time: 0.005; rss: 83MB	const checking
time: 0.000; rss: 83MB	privacy checking
time: 0.000; rss: 83MB	stability index
time: 0.000; rss: 83MB	intrinsic checking
time: 0.000; rss: 83MB	effect checking
time: 0.001; rss: 83MB	match checking
time: 0.001; rss: 84MB	liveness checking
time: 0.004; rss: 84MB	rvalue checking
time: 0.008; rss: 85MB	MIR dump
  time: 0.001; rss: 85MB	SimplifyCfg
  time: 0.002; rss: 85MB	QualifyAndPromoteConstants
  time: 0.002; rss: 85MB	TypeckMir
  time: 0.000; rss: 85MB	SimplifyBranches
  time: 0.000; rss: 85MB	SimplifyCfg
time: 0.006; rss: 85MB	MIR passes
time: 0.008; rss: 85MB	borrow checking
time: 0.000; rss: 85MB	reachability checking
time: 0.000; rss: 85MB	death checking
time: 0.000; rss: 85MB	stability checking
time: 0.000; rss: 85MB	unused lib feature checking
time: 0.003; rss: 85MB	lint checking
time: 0.002; rss: 85MB	resolving dependency formats
  time: 0.000; rss: 85MB	NoLandingPads
  time: 0.000; rss: 85MB	SimplifyCfg
  time: 0.001; rss: 85MB	EraseRegions
  time: 0.000; rss: 85MB	AddCallGuards
  time: 0.014; rss: 87MB	ElaborateDrops
  time: 0.000; rss: 87MB	NoLandingPads
  time: 0.001; rss: 87MB	SimplifyCfg
  time: 0.000; rss: 87MB	Deaggregator
  time: 0.000; rss: 87MB	AddCallGuards
  time: 0.000; rss: 87MB	PreTrans
time: 0.017; rss: 87MB	Prepare MIR codegen passes
  time: 0.000; rss: 87MB	write metadata
  time: 0.193; rss: 98MB	translation item collection
  time: 0.023; rss: 98MB	codegen unit partitioning
  time: 0.045; rss: 150MB	internalize symbols
time: 1.497; rss: 150MB	translation
time: 0.000; rss: 150MB	assert dep graph
time: 0.000; rss: 150MB	serialize dep graph
  time: 0.082; rss: 134MB	llvm function passes [0]
  time: 0.027; rss: 136MB	llvm module passes [0]
  time: 1.754; rss: 135MB	codegen passes [0]
  time: 0.000; rss: 135MB	codegen passes [0]
time: 1.864; rss: 135MB	LLVM passes
time: 0.000; rss: 135MB	serialize work products
  time: 0.200; rss: 87MB	running linker
time: 0.202; rss: 87MB	linking
done
