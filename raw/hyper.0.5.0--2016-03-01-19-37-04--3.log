commit 339a409bfdb6c1e9b280388b5d8d9e898217840f
Merge: 84d8fec d1a1239
Author: bors <bors@rust-lang.org>
Date:   Tue Mar 1 23:30:49 2016 +0000

    Auto merge of #31430 - nagisa:mir-dyndrop, r=nikomatsakis
    
    Zeroing on-drop seems to work fine. Still thinking about the best way to approach zeroing on-move.
    
    (based on top of the other drop PR; only the last 2 commits are relevant)
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.030; rss: 45MB	parsing
Lines of code:             9154
Pre-expansion node count:  45594
time: 0.010; rss: 45MB	configuration 1
time: 0.000; rss: 45MB	recursion limit
time: 0.000; rss: 45MB	gated macro checking
time: 0.000; rss: 45MB	crate injection
time: 0.004; rss: 50MB	macro loading
time: 0.000; rss: 50MB	plugin loading
time: 0.000; rss: 50MB	plugin registration
time: 0.192; rss: 60MB	expansion
time: 0.005; rss: 60MB	complete gated feature checking 1
time: 0.035; rss: 60MB	configuration 2
time: 0.000; rss: 60MB	gated configuration checking
time: 0.014; rss: 60MB	maybe building test harness
time: 0.011; rss: 60MB	prelude injection
time: 0.001; rss: 60MB	checking that all macro invocations are gone
time: 0.000; rss: 60MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 60MB	complete gated feature checking 2
time: 0.001; rss: 60MB	const fn bodies and arguments
Post-expansion node count: 109258
time: 0.010; rss: 60MB	assigning node ids
time: 0.010; rss: 64MB	lowering ast -> hir
time: 0.004; rss: 66MB	indexing hir
time: 0.001; rss: 66MB	attribute checking
time: 0.007; rss: 66MB	early lint checks
time: 0.004; rss: 61MB	external crate/lib resolution
time: 0.001; rss: 61MB	language item collection
time: 0.024; rss: 82MB	resolution
time: 0.002; rss: 82MB	lifetime resolution
time: 0.000; rss: 82MB	looking for entry point
time: 0.000; rss: 82MB	looking for plugin registrar
time: 0.005; rss: 84MB	region resolution
time: 0.001; rss: 84MB	loop checking
time: 0.001; rss: 84MB	static item recursion checking
time: 0.012; rss: 88MB	type collecting
time: 0.000; rss: 88MB	variance inference
time: 0.038; rss: 106MB	coherence checking
time: 0.077; rss: 106MB	wf checking
time: 0.024; rss: 106MB	item-types checking
time: 0.472; rss: 129MB	item-bodies checking
time: 0.000; rss: 129MB	drop-impl checking
time: 0.037; rss: 129MB	const checking
time: 0.010; rss: 129MB	privacy checking
time: 0.001; rss: 129MB	stability index
time: 0.004; rss: 129MB	intrinsic checking
time: 0.002; rss: 129MB	effect checking
time: 0.012; rss: 129MB	match checking
time: 0.005; rss: 129MB	liveness checking
time: 0.033; rss: 129MB	rvalue checking
time: 0.060; rss: 135MB	MIR dump
time: 0.000; rss: 135MB	MIR passes
time: 0.065; rss: 135MB	borrow checking
time: 0.003; rss: 135MB	reachability checking
time: 0.006; rss: 135MB	death checking
time: 0.006; rss: 135MB	stability checking
time: 0.000; rss: 135MB	unused lib feature checking
time: 0.046; rss: 135MB	lint checking
time: 0.000; rss: 135MB	resolving dependency formats
time: 0.006; rss: 137MB	erasing regions from MIR
  time: 0.188; rss: 155MB	translation item collection
  time: 0.135; rss: 246MB	write metadata
time: 1.329; rss: 246MB	translation
  time: 0.098; rss: 168MB	llvm function passes [0]
  time: 0.048; rss: 169MB	llvm module passes [0]
  time: 1.646; rss: 173MB	codegen passes [0]
  time: 0.001; rss: 124MB	codegen passes [0]
time: 2.000; rss: 123MB	LLVM passes
time: 0.174; rss: 123MB	linking
done
