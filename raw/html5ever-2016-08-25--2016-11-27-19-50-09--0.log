commit 03bdaade2a0c39118a5be927c667776a5de0d681
Merge: 9ca50bd 178e29d
Author: bors <bors@rust-lang.org>
Date:   Sun Nov 27 17:06:58 2016 -0600

    Auto merge of #38022 - arthurprs:micro-opt-hm, r=bluss
    
    Use displacement instead of initial bucket in HashMap code
    
    Use displacement instead of initial bucket in HashMap code. It makes the code a bit cleaner and also saves a few instructions (handy since it'll be using some to do some sort of adaptive behavior soon).
rustc: ./html5ever-2016-08-25
cargo rustc  -- -Ztime-passes -Zinput-stats
   Compiling phf_shared v0.7.16
   Compiling encoding_index_tests v0.1.4
   Compiling lazy_static v0.2.1
   Compiling matches v0.1.2
   Compiling mac v0.0.2
   Compiling log v0.3.6
   Compiling serde v0.8.9
   Compiling rustc-serialize v0.3.19
   Compiling encoding-index-singlebyte v1.20141219.5
   Compiling utf-8 v0.6.0
   Compiling encoding-index-japanese v1.20141219.5
   Compiling encoding-index-simpchinese v1.20141219.5
   Compiling encoding-index-tradchinese v1.20141219.5
   Compiling encoding-index-korean v1.20141219.5
   Compiling phf v0.7.16
   Compiling void v1.0.2
   Compiling unreachable v0.1.1
   Compiling libc v0.2.16
   Compiling debug_unreachable v0.1.1
   Compiling futf v0.1.2
   Compiling encoding v0.2.33
   Compiling rand v0.3.14
   Compiling phf_generator v0.7.16
   Compiling phf_codegen v0.7.16
   Compiling string_cache v0.2.29
   Compiling tendril v0.2.3
   Compiling html5ever v0.5.4 (file:///root/benchmarks/html5ever-2016-08-25)
time: 0.024; rss: 50MB	parsing
Lines of code:             8210
Pre-expansion node count:  52140
time: 0.000; rss: 50MB	recursion limit
time: 0.000; rss: 50MB	crate injection
time: 0.000; rss: 50MB	plugin loading
time: 0.000; rss: 50MB	plugin registration
time: 0.635; rss: 102MB	expansion
time: 0.000; rss: 102MB	maybe building test harness
time: 0.002; rss: 102MB	maybe creating a macro crate
Post-expansion node count: 163412
time: 0.000; rss: 102MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 102MB	complete gated feature checking
time: 0.008; rss: 102MB	early lint checks
time: 0.002; rss: 102MB	AST validation
time: 0.015; rss: 104MB	name resolution
time: 0.011; rss: 111MB	lowering ast -> hir
time: 0.002; rss: 116MB	indexing hir
time: 0.002; rss: 116MB	attribute checking
time: 0.001; rss: 96MB	language item collection
time: 0.002; rss: 96MB	lifetime resolution
time: 0.000; rss: 96MB	looking for entry point
time: 0.000; rss: 96MB	looking for plugin registrar
time: 0.012; rss: 104MB	region resolution
time: 0.001; rss: 104MB	loop checking
time: 0.001; rss: 104MB	static item recursion checking
time: 0.020; rss: 105MB	compute_incremental_hashes_map
time: 0.000; rss: 105MB	load_dep_graph
time: 0.009; rss: 106MB	type collecting
time: 0.000; rss: 106MB	variance inference
time: 0.000; rss: 106MB	impl wf inference
time: 0.011; rss: 107MB	coherence checking
time: 0.020; rss: 108MB	wf checking
time: 0.262; rss: 115MB	item-types checking
time: 0.456; rss: 127MB	item-bodies checking
time: 0.000; rss: 127MB	drop-impl checking
time: 0.059; rss: 135MB	const checking
time: 0.005; rss: 135MB	privacy checking
time: 0.001; rss: 135MB	stability index
time: 0.002; rss: 135MB	intrinsic checking
time: 0.002; rss: 135MB	effect checking
time: 0.014; rss: 135MB	match checking
time: 0.011; rss: 131MB	liveness checking
time: 0.021; rss: 131MB	rvalue checking
time: 0.099; rss: 174MB	MIR dump
  time: 0.008; rss: 174MB	SimplifyCfg
  time: 0.013; rss: 176MB	QualifyAndPromoteConstants
  time: 0.022; rss: 176MB	TypeckMir
  time: 0.000; rss: 176MB	SimplifyBranches
  time: 0.004; rss: 176MB	SimplifyCfg
time: 0.047; rss: 176MB	MIR cleanup and validation
time: 0.078; rss: 181MB	borrow checking
time: 0.002; rss: 181MB	reachability checking
time: 0.005; rss: 181MB	death checking
time: 0.006; rss: 181MB	stability checking
time: 0.000; rss: 181MB	unused lib feature checking
time: 0.052; rss: 181MB	lint checking
time: 0.000; rss: 181MB	resolving dependency formats
  time: 0.000; rss: 181MB	NoLandingPads
  time: 0.004; rss: 181MB	SimplifyCfg
  time: 0.009; rss: 181MB	EraseRegions
  time: 0.001; rss: 181MB	AddCallGuards
  time: 0.073; rss: 186MB	ElaborateDrops
  time: 0.000; rss: 186MB	NoLandingPads
  time: 0.007; rss: 183MB	SimplifyCfg
  time: 0.007; rss: 181MB	InstCombine
  time: 0.001; rss: 181MB	Deaggregator
  time: 0.000; rss: 181MB	CopyPropagation
  time: 0.007; rss: 178MB	SimplifyLocals
  time: 0.001; rss: 178MB	AddCallGuards
  time: 0.000; rss: 178MB	PreTrans
time: 0.110; rss: 178MB	MIR optimisations
  time: 0.011; rss: 180MB	write metadata
  time: 0.040; rss: 181MB	translation item collection
  time: 0.004; rss: 181MB	codegen unit partitioning
  time: 0.005; rss: 195MB	internalize symbols
time: 0.270; rss: 195MB	translation
time: 0.000; rss: 195MB	assert dep graph
time: 0.000; rss: 195MB	serialize dep graph
  time: 0.020; rss: 110MB	llvm function passes [0]
  time: 0.014; rss: 111MB	llvm module passes [0]
  time: 0.482; rss: 113MB	codegen passes [0]
  time: 0.000; rss: 113MB	codegen passes [0]
time: 0.557; rss: 113MB	LLVM passes
time: 0.000; rss: 113MB	serialize work products
time: 0.025; rss: 95MB	linking
done
