commit 954873055a998a06841ac19b39b1fe18a6641731
Merge: 1d64acd a84b550
Author: bors <bors@rust-lang.org>
Date:   Fri Sep 30 07:35:04 2016 -0700

    Auto merge of #36823 - durka:discriminant_value, r=nagisa
    
    add wrapper for discriminant_value, take 2
    
    [This is #34785 reopened, since @bors apparently gave up on that thread.]
    
    add wrapper for discriminant_value intrinsic
    
    Implementation of [RFC 1696](https://github.com/rust-lang/rfcs/blob/master/text/1696-discriminant.md).
    
    Wraps the `discriminant_value` intrinsic under the name `std::mem::discriminant`. In order to avoid prematurely leaking information about the implementation of enums, the return value is an opaque type, generic over the enum type, which implements Copy, Clone, PartialEq, Eq, Hash, and Debug (notably not PartialOrd). There is currently no way to get the value out excepting printing the debug representation.
    
    The wrapper is safe and can be stabilized soon as per discussion in #24263.
    
    cc @aturon
    r? @nagisa
rustc: ./syntex-0.42.2-incr-clean
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax -- -Ztime-passes -Zinput-stats -Z incremental-info
   Compiling syntex_syntax v0.42.0
time: 0.107; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  224033
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.272; rss: 146MB	expansion
time: 0.000; rss: 146MB	maybe building test harness
time: 0.006; rss: 146MB	maybe creating a macro crate
Post-expansion node count: 641571
time: 0.000; rss: 146MB	checking for inline asm in case the target doesn't support it
time: 0.014; rss: 146MB	complete gated feature checking
time: 0.024; rss: 146MB	early lint checks
time: 0.008; rss: 146MB	AST validation
time: 0.085; rss: 160MB	name resolution
time: 0.051; rss: 202MB	lowering ast -> hir
time: 0.009; rss: 211MB	indexing hir
time: 0.007; rss: 211MB	attribute checking
time: 0.006; rss: 161MB	language item collection
time: 0.012; rss: 161MB	lifetime resolution
time: 0.000; rss: 161MB	looking for entry point
time: 0.000; rss: 161MB	looking for plugin registrar
time: 0.045; rss: 173MB	region resolution
time: 0.006; rss: 173MB	loop checking
time: 0.006; rss: 173MB	static item recursion checking
time: 0.295; rss: 175MB	compute_incremental_hashes_map
time: 0.000; rss: 175MB	load_dep_graph
time: 0.082; rss: 174MB	type collecting
time: 0.001; rss: 174MB	variance inference
time: 0.038; rss: 177MB	coherence checking
time: 0.100; rss: 179MB	wf checking
time: 0.195; rss: 185MB	item-types checking
time: 3.963; rss: 240MB	item-bodies checking
time: 0.000; rss: 240MB	drop-impl checking
time: 0.320; rss: 243MB	const checking
time: 0.057; rss: 243MB	privacy checking
time: 0.008; rss: 243MB	stability index
time: 0.023; rss: 243MB	intrinsic checking
time: 0.019; rss: 243MB	effect checking
time: 0.060; rss: 243MB	match checking
time: 0.056; rss: 238MB	liveness checking
time: 0.288; rss: 238MB	rvalue checking
time: 0.422; rss: 426MB	MIR dump
  time: 0.058; rss: 429MB	SimplifyCfg
  time: 0.084; rss: 429MB	QualifyAndPromoteConstants
  time: 0.111; rss: 429MB	TypeckMir
  time: 0.005; rss: 429MB	SimplifyBranches
  time: 0.037; rss: 429MB	SimplifyCfg
time: 0.294; rss: 429MB	MIR passes
time: 0.700; rss: 430MB	borrow checking
time: 0.018; rss: 430MB	reachability checking
time: 0.046; rss: 430MB	death checking
time: 0.043; rss: 430MB	stability checking
time: 0.000; rss: 430MB	unused lib feature checking
time: 0.223; rss: 430MB	lint checking
time: 0.000; rss: 430MB	resolving dependency formats
  time: 0.003; rss: 430MB	NoLandingPads
  time: 0.027; rss: 430MB	SimplifyCfg
  time: 0.073; rss: 443MB	EraseRegions
  time: 0.011; rss: 443MB	AddCallGuards
  time: 1.102; rss: 459MB	ElaborateDrops
  time: 0.003; rss: 459MB	NoLandingPads
  time: 0.052; rss: 459MB	SimplifyCfg
  time: 0.030; rss: 459MB	InstCombine
  time: 0.012; rss: 459MB	Deaggregator
  time: 0.003; rss: 459MB	CopyPropagation
  time: 0.009; rss: 459MB	AddCallGuards
  time: 0.003; rss: 459MB	PreTrans
time: 1.329; rss: 459MB	Prepare MIR codegen passes
  time: 0.266; rss: 466MB	write metadata
  time: 0.484; rss: 478MB	translation item collection
  time: 0.067; rss: 481MB	codegen unit partitioning
  time: 0.058; rss: 728MB	internalize symbols
time: 5.228; rss: 606MB	translation
time: 0.000; rss: 606MB	assert dep graph
time: 0.000; rss: 606MB	serialize dep graph
incremental: re-using 0 out of 1 modules
  time: 0.502; rss: 416MB	llvm function passes [0]
  time: 0.256; rss: 421MB	llvm module passes [0]
  time: 10.146; rss: 415MB	codegen passes [0]
  time: 0.001; rss: 417MB	codegen passes [0]
time: 11.650; rss: 417MB	LLVM passes
time: 0.000; rss: 417MB	serialize work products
time: 0.661; rss: 107MB	linking
done
