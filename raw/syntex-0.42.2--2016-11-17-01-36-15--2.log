commit 6cd5be81cc3a6f972eb00541224037a95a08cc7b
Merge: f22fdb0 0e1828a
Author: bors <bors@rust-lang.org>
Date:   Wed Nov 16 21:02:55 2016 -0800

    Auto merge of #37607 - dns2utf8:doc_grammar, r=alexcrichton
    
    Fix grammar verification
    
     * Use make check-lexer to verify the grammar.
     * Extend grammar/README
     * Add make clean-grammar rule
     * Add target check-build-lexer-verifier to make tidy, so it will build the verifier with every build and catch future errors
    
    This is the continuation of #34994
    
    r? @steveklabnik @jonathandturner @alexcrichton
rustc: ./syntex-0.42.2
cargo rustc -p syntex_syntax  -- -Ztime-passes -Zinput-stats
   Compiling syntex_syntax v0.42.0
time: 0.092; rss: 71MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 71MB	recursion limit
time: 0.000; rss: 71MB	crate injection
time: 0.000; rss: 71MB	plugin loading
time: 0.000; rss: 71MB	plugin registration
time: 0.232; rss: 144MB	expansion
time: 0.000; rss: 144MB	maybe building test harness
time: 0.006; rss: 144MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 144MB	checking for inline asm in case the target doesn't support it
time: 0.013; rss: 144MB	complete gated feature checking
time: 0.023; rss: 144MB	early lint checks
time: 0.007; rss: 144MB	AST validation
time: 0.076; rss: 158MB	name resolution
time: 0.045; rss: 186MB	lowering ast -> hir
time: 0.008; rss: 194MB	indexing hir
time: 0.006; rss: 194MB	attribute checking
time: 0.004; rss: 150MB	language item collection
time: 0.010; rss: 150MB	lifetime resolution
time: 0.000; rss: 150MB	looking for entry point
time: 0.000; rss: 150MB	looking for plugin registrar
time: 0.040; rss: 171MB	region resolution
time: 0.005; rss: 171MB	loop checking
time: 0.005; rss: 171MB	static item recursion checking
time: 0.325; rss: 171MB	compute_incremental_hashes_map
time: 0.000; rss: 171MB	load_dep_graph
time: 0.047; rss: 176MB	type collecting
time: 0.001; rss: 176MB	variance inference
time: 0.018; rss: 178MB	coherence checking
time: 0.094; rss: 179MB	wf checking
time: 0.178; rss: 183MB	item-types checking
time: 3.348; rss: 232MB	item-bodies checking
time: 0.000; rss: 232MB	drop-impl checking
time: 0.266; rss: 252MB	const checking
time: 0.046; rss: 252MB	privacy checking
time: 0.005; rss: 252MB	stability index
time: 0.017; rss: 252MB	intrinsic checking
time: 0.014; rss: 252MB	effect checking
time: 0.045; rss: 252MB	match checking
time: 0.049; rss: 240MB	liveness checking
time: 0.182; rss: 240MB	rvalue checking
time: 0.604; rss: 419MB	MIR dump
  time: 0.059; rss: 425MB	SimplifyCfg
  time: 0.076; rss: 425MB	QualifyAndPromoteConstants
  time: 0.100; rss: 425MB	TypeckMir
  time: 0.005; rss: 425MB	SimplifyBranches
  time: 0.031; rss: 425MB	SimplifyCfg
time: 0.270; rss: 425MB	MIR cleanup and validation
time: 0.487; rss: 428MB	borrow checking
time: 0.025; rss: 428MB	reachability checking
time: 0.039; rss: 429MB	death checking
time: 0.034; rss: 431MB	stability checking
time: 0.000; rss: 431MB	unused lib feature checking
time: 0.204; rss: 431MB	lint checking
time: 0.000; rss: 431MB	resolving dependency formats
  time: 0.004; rss: 431MB	NoLandingPads
  time: 0.027; rss: 431MB	SimplifyCfg
  time: 0.073; rss: 437MB	EraseRegions
  time: 0.011; rss: 437MB	AddCallGuards
  time: 0.303; rss: 458MB	ElaborateDrops
  time: 0.003; rss: 458MB	NoLandingPads
  time: 0.053; rss: 458MB	SimplifyCfg
  time: 0.030; rss: 458MB	InstCombine
  time: 0.013; rss: 458MB	Deaggregator
  time: 0.003; rss: 458MB	CopyPropagation
  time: 0.036; rss: 458MB	SimplifyLocals
  time: 0.010; rss: 458MB	AddCallGuards
  time: 0.003; rss: 458MB	PreTrans
time: 0.569; rss: 458MB	MIR optimisations
  time: 0.078; rss: 465MB	write metadata
  time: 0.427; rss: 478MB	translation item collection
  time: 0.070; rss: 483MB	codegen unit partitioning
  time: 0.048; rss: 728MB	internalize symbols
time: 4.964; rss: 728MB	translation
time: 0.000; rss: 728MB	assert dep graph
time: 0.000; rss: 728MB	serialize dep graph
  time: 0.532; rss: 415MB	llvm function passes [0]
  time: 0.255; rss: 424MB	llvm module passes [0]
  time: 10.509; rss: 423MB	codegen passes [0]
  time: 0.000; rss: 415MB	codegen passes [0]
time: 12.101; rss: 415MB	LLVM passes
time: 0.000; rss: 415MB	serialize work products
time: 0.345; rss: 103MB	linking
done
