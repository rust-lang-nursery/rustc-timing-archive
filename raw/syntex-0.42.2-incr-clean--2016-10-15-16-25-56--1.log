commit 5bfe10740168eb8213101c827302b4c45b1b5b74
Merge: 8e05e7e 348c3fb
Author: bors <bors@rust-lang.org>
Date:   Sat Oct 15 09:32:06 2016 -0700

    Auto merge of #37132 - petrochenkov:intern, r=alexcrichton
    
    Get rid of double indirection in string interner
rustc: ./syntex-0.42.2-incr-clean
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax -- -Ztime-passes -Zinput-stats -Z incremental-info
   Compiling syntex_syntax v0.42.0
time: 0.108; rss: 76MB	parsing
Lines of code:             33687
Pre-expansion node count:  224033
time: 0.000; rss: 76MB	recursion limit
time: 0.000; rss: 76MB	crate injection
time: 0.000; rss: 76MB	plugin loading
time: 0.000; rss: 76MB	plugin registration
time: 0.274; rss: 148MB	expansion
time: 0.000; rss: 148MB	maybe building test harness
time: 0.006; rss: 148MB	maybe creating a macro crate
Post-expansion node count: 641571
time: 0.000; rss: 148MB	checking for inline asm in case the target doesn't support it
time: 0.013; rss: 148MB	complete gated feature checking
time: 0.023; rss: 148MB	early lint checks
time: 0.007; rss: 148MB	AST validation
time: 0.084; rss: 163MB	name resolution
time: 0.049; rss: 202MB	lowering ast -> hir
time: 0.010; rss: 213MB	indexing hir
time: 0.006; rss: 213MB	attribute checking
time: 0.006; rss: 164MB	language item collection
time: 0.011; rss: 164MB	lifetime resolution
time: 0.000; rss: 164MB	looking for entry point
time: 0.000; rss: 164MB	looking for plugin registrar
time: 0.043; rss: 175MB	region resolution
time: 0.006; rss: 175MB	loop checking
time: 0.006; rss: 175MB	static item recursion checking
time: 0.263; rss: 175MB	compute_incremental_hashes_map
time: 0.000; rss: 175MB	load_dep_graph
time: 0.043; rss: 181MB	type collecting
time: 0.001; rss: 181MB	variance inference
time: 0.038; rss: 185MB	coherence checking
time: 0.102; rss: 187MB	wf checking
time: 0.198; rss: 194MB	item-types checking
time: 4.003; rss: 244MB	item-bodies checking
time: 0.000; rss: 244MB	drop-impl checking
time: 0.308; rss: 248MB	const checking
time: 0.054; rss: 248MB	privacy checking
time: 0.007; rss: 248MB	stability index
time: 0.022; rss: 248MB	intrinsic checking
time: 0.018; rss: 248MB	effect checking
time: 0.057; rss: 248MB	match checking
time: 0.053; rss: 237MB	liveness checking
time: 0.279; rss: 237MB	rvalue checking
time: 0.423; rss: 427MB	MIR dump
  time: 0.057; rss: 431MB	SimplifyCfg
  time: 0.082; rss: 431MB	QualifyAndPromoteConstants
  time: 0.109; rss: 431MB	TypeckMir
  time: 0.004; rss: 431MB	SimplifyBranches
  time: 0.031; rss: 431MB	SimplifyCfg
time: 0.284; rss: 431MB	MIR passes
time: 0.668; rss: 431MB	borrow checking
time: 0.022; rss: 431MB	reachability checking
time: 0.045; rss: 431MB	death checking
time: 0.042; rss: 431MB	stability checking
time: 0.000; rss: 431MB	unused lib feature checking
time: 0.215; rss: 431MB	lint checking
time: 0.000; rss: 431MB	resolving dependency formats
  time: 0.003; rss: 431MB	NoLandingPads
  time: 0.027; rss: 431MB	SimplifyCfg
  time: 0.071; rss: 443MB	EraseRegions
  time: 0.011; rss: 444MB	AddCallGuards
  time: 1.064; rss: 463MB	ElaborateDrops
  time: 0.003; rss: 463MB	NoLandingPads
  time: 0.053; rss: 462MB	SimplifyCfg
  time: 0.031; rss: 461MB	InstCombine
  time: 0.011; rss: 461MB	Deaggregator
  time: 0.003; rss: 461MB	CopyPropagation
  time: 0.009; rss: 461MB	AddCallGuards
  time: 0.003; rss: 461MB	PreTrans
time: 1.288; rss: 461MB	Prepare MIR codegen passes
  time: 0.262; rss: 469MB	write metadata
  time: 0.446; rss: 479MB	translation item collection
  time: 0.063; rss: 484MB	codegen unit partitioning
  time: 0.053; rss: 730MB	internalize symbols
time: 5.018; rss: 610MB	translation
time: 0.000; rss: 610MB	assert dep graph
time: 0.000; rss: 610MB	serialize dep graph
incremental: re-using 0 out of 1 modules
  time: 0.513; rss: 411MB	llvm function passes [0]
  time: 0.252; rss: 420MB	llvm module passes [0]
  time: 9.997; rss: 419MB	codegen passes [0]
  time: 0.001; rss: 415MB	codegen passes [0]
time: 11.497; rss: 415MB	LLVM passes
time: 0.000; rss: 415MB	serialize work products
time: 0.675; rss: 107MB	linking
done
