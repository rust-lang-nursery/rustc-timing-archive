commit 3f50b6342db87f4a8fb76e70f6ada07331e062a2
Merge: 58dc448 b9a8c1a
Author: bors <bors@rust-lang.org>
Date:   Mon Sep 5 08:13:32 2016 -0700

    Auto merge of #36200 - mattico:fix-llvm-linkage, r=arielb1
    
    Fix incorrect LLVM Linkage enum
    
    Followup of #33994 to actually work.
    
    The `Linkage` enum in librustc_llvm got out of sync with the version in LLVM and it caused two variants of the `#[linkage=""]` attribute to break.
    
    This adds the functions `LLVMRustGetLinkage` and `LLVMRustSetLinkage` which convert between the Rust Linkage enum and the LLVM one, which should stop this from breaking every time LLVM changes it.
    
    Possible remaining concerns:
    
    1. There could be a codegen test to make sure that the attributes are applied correctly (I don't know how to do this).
    2. ~~The test does not exercise the `appending` linkage. I can't figure out how to make a global static raw pointer to an array. This might not even be possible? If not we should probably remove appending linkage as its unusable in rust.~~ Appending linkage is not 'emittable' anyway.
    3. The test only runs on Linux.
    
    Fixes #33992
    
    r? @alexcrichton
rustc: ./piston-image-0.10.3
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling scoped_threadpool v0.1.7
   Compiling bitflags v0.7.0
   Compiling num-traits v0.1.35
   Compiling gcc v0.3.35
   Compiling glob v0.2.11
   Compiling color_quant v1.0.0
   Compiling libc v0.2.15
   Compiling lzw v0.10.0
   Compiling inflate v0.1.1
   Compiling byteorder v0.5.3
   Compiling gif v0.9.0
   Compiling num_cpus v0.2.13
   Compiling rand v0.3.14
   Compiling rustc-serialize v0.3.19
   Compiling miniz-sys v0.1.7
   Compiling num-integer v0.1.32
   Compiling flate2 v0.2.14
   Compiling num-iter v0.1.32
   Compiling num v0.1.35
   Compiling enum_primitive v0.1.0
   Compiling deque v0.3.1
   Compiling rayon v0.4.0
   Compiling png v0.5.2
   Compiling jpeg-decoder v0.1.6
   Compiling num-bigint v0.1.35
   Compiling num-rational v0.1.35
   Compiling image v0.10.3 (file:///root/benchmarks/piston-image-0.10.3)
time: 0.046; rss: 57MB	parsing
Lines of code:             12000
Pre-expansion node count:  90272
time: 0.006; rss: 58MB	configuration
time: 0.000; rss: 58MB	recursion limit
time: 0.000; rss: 58MB	crate injection
time: 0.000; rss: 58MB	plugin loading
time: 0.000; rss: 58MB	plugin registration
time: 0.063; rss: 86MB	expansion
time: 0.000; rss: 86MB	maybe building test harness
time: 0.002; rss: 86MB	maybe creating a macro crate
time: 0.007; rss: 86MB	assigning node ids
Post-expansion node count: 149551
time: 0.000; rss: 86MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 86MB	complete gated feature checking
time: 0.004; rss: 88MB	collecting defs
time: 0.011; rss: 92MB	external crate/lib resolution
time: 0.006; rss: 92MB	early lint checks
time: 0.002; rss: 92MB	AST validation
time: 0.022; rss: 100MB	name resolution
time: 0.013; rss: 111MB	lowering ast -> hir
time: 0.003; rss: 115MB	indexing hir
time: 0.002; rss: 115MB	attribute checking
time: 0.002; rss: 104MB	language item collection
time: 0.003; rss: 104MB	lifetime resolution
time: 0.000; rss: 104MB	looking for entry point
time: 0.000; rss: 104MB	looking for plugin registrar
time: 0.011; rss: 110MB	region resolution
time: 0.002; rss: 110MB	loop checking
time: 0.001; rss: 110MB	static item recursion checking
time: 0.020; rss: 110MB	compute_incremental_hashes_map
time: 0.000; rss: 110MB	load_dep_graph
time: 0.025; rss: 109MB	type collecting
time: 0.000; rss: 109MB	variance inference
time: 0.032; rss: 114MB	coherence checking
time: 0.098; rss: 116MB	wf checking
time: 0.218; rss: 124MB	item-types checking
time: 0.943; rss: 137MB	item-bodies checking
time: 0.000; rss: 137MB	drop-impl checking
time: 0.071; rss: 137MB	const checking
time: 0.011; rss: 137MB	privacy checking
time: 0.001; rss: 137MB	stability index
time: 0.010; rss: 137MB	intrinsic checking
time: 0.003; rss: 137MB	effect checking
time: 0.025; rss: 137MB	match checking
time: 0.011; rss: 138MB	liveness checking
time: 0.067; rss: 138MB	rvalue checking
time: 0.113; rss: 180MB	MIR dump
time: 0.073; rss: 180MB	MIR passes
time: 0.144; rss: 180MB	borrow checking
time: 0.004; rss: 180MB	reachability checking
time: 0.008; rss: 180MB	death checking
time: 0.010; rss: 180MB	stability checking
time: 0.000; rss: 180MB	unused lib feature checking
time: 0.076; rss: 180MB	lint checking
time: 0.000; rss: 180MB	resolving dependency formats
time: 0.164; rss: 186MB	Prepare MIR codegen passes
  time: 0.082; rss: 188MB	write metadata
  time: 0.533; rss: 198MB	translation item collection
  time: 0.028; rss: 203MB	codegen unit partitioning
  time: 0.050; rss: 325MB	internalize symbols
time: 3.445; rss: 298MB	translation
time: 0.000; rss: 298MB	assert dep graph
time: 0.000; rss: 298MB	serialize dep graph
  time: 0.203; rss: 222MB	llvm function passes [0]
  time: 0.086; rss: 227MB	llvm module passes [0]
  time: 4.027; rss: 232MB	codegen passes [0]
  time: 0.001; rss: 232MB	codegen passes [0]
time: 4.626; rss: 232MB	LLVM passes
time: 0.000; rss: 232MB	serialize work products
time: 0.254; rss: 104MB	linking
done
