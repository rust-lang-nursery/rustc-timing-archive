commit 16281888c0f319706cd07e3c569e0aeb5a66d3b6
Merge: 375fa6e 9e2bd92
Author: bors <bors@rust-lang.org>
Date:   Thu Jun 30 23:30:51 2016 -0700

    Auto merge of #34563 - alexcrichton:robust-mk, r=brson
    
    mk: Don't consider LLVM done until it's done
    
    Currently if an LLVM build is interrupted *after* it creates the llvm-config
    binary but before it's done it puts us in an inconsistent state where we think
    LLVM is compiled but it's not actually. This tweaks our logic to only consider
    LLVM done building once it's actually done building.
    
    This should hopefully alleviate problems on the bots where if we interrupt at
    the wrong time it doesn't corrupt the build directory.
rustc: ./inflate-0.1.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling inflate v0.1.0 (file:///root/benchmarks/inflate-0.1.0)
time: 0.006; rss: 83MB	parsing
Lines of code:             956
Pre-expansion node count:  4738
time: 0.001; rss: 83MB	configuration
time: 0.000; rss: 87MB	recursion limit
time: 0.000; rss: 87MB	crate injection
time: 0.000; rss: 87MB	plugin loading
time: 0.000; rss: 87MB	plugin registration
time: 0.129; rss: 123MB	expansion
time: 0.000; rss: 123MB	maybe building test harness
time: 0.000; rss: 123MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 123MB	complete gated feature checking
Post-expansion node count: 55769
time: 0.004; rss: 124MB	assigning node ids
time: 0.005; rss: 124MB	collecting defs
time: 0.001; rss: 124MB	external crate/lib resolution
time: 0.003; rss: 124MB	early lint checks
time: 0.000; rss: 124MB	AST validation
time: 0.007; rss: 126MB	name resolution
time: 0.005; rss: 128MB	lowering ast -> hir
time: 0.001; rss: 130MB	indexing hir
time: 0.000; rss: 130MB	attribute checking
time: 0.001; rss: 128MB	language item collection
time: 0.001; rss: 128MB	lifetime resolution
time: 0.000; rss: 128MB	looking for entry point
time: 0.000; rss: 128MB	looking for plugin registrar
time: 0.004; rss: 130MB	region resolution
time: 0.000; rss: 130MB	loop checking
time: 0.000; rss: 130MB	static item recursion checking
time: 0.000; rss: 130MB	load_dep_graph
time: 0.002; rss: 132MB	type collecting
time: 0.000; rss: 132MB	variance inference
time: 0.010; rss: 133MB	coherence checking
time: 0.002; rss: 133MB	wf checking
time: 0.002; rss: 133MB	item-types checking
time: 3.411; rss: 148MB	item-bodies checking
time: 0.000; rss: 148MB	drop-impl checking
time: 0.015; rss: 148MB	const checking
time: 0.001; rss: 148MB	privacy checking
time: 0.000; rss: 148MB	stability index
time: 0.001; rss: 148MB	intrinsic checking
time: 0.001; rss: 148MB	effect checking
time: 0.005; rss: 148MB	match checking
time: 0.064; rss: 146MB	liveness checking
time: 0.011; rss: 146MB	rvalue checking
time: 0.038; rss: 160MB	MIR dump
time: 0.023; rss: 158MB	MIR passes
time: 0.235; rss: 158MB	borrow checking
time: 0.000; rss: 158MB	reachability checking
time: 0.003; rss: 158MB	death checking
time: 0.002; rss: 158MB	stability checking
time: 0.000; rss: 158MB	unused lib feature checking
time: 0.022; rss: 159MB	lint checking
time: 0.000; rss: 159MB	resolving dependency formats
time: 0.123; rss: 157MB	Prepare MIR codegen passes
  time: 0.003; rss: 157MB	write metadata
  time: 0.010; rss: 161MB	translation item collection
  time: 0.000; rss: 161MB	codegen unit partitioning
time: 0.819; rss: 176MB	translation
time: 0.000; rss: 176MB	assert dep graph
time: 0.000; rss: 176MB	serialize dep graph
  time: 0.299; rss: 143MB	llvm function passes [0]
  time: 0.075; rss: 144MB	llvm module passes [0]
  time: 4.609; rss: 151MB	codegen passes [0]
  time: 0.001; rss: 137MB	codegen passes [0]
time: 5.308; rss: 137MB	LLVM passes
time: 0.036; rss: 137MB	linking
done
