commit 9cb01365eed598811aef847a8ee414dab576f3c8
Merge: acb50e3 d9e6430
Author: bors <bors@rust-lang.org>
Date:   Wed Oct 12 11:28:53 2016 -0700

    Auto merge of #36762 - achanda:sockaddr_type, r=alexcrichton
    
    Add two functions to check type of SockAddr
    
    These can be used to determine the type of the underlying IP
    address
    
    r? @alexcrichton
rustc: ./syntex-0.42.2
cargo rustc -p syntex_syntax -- -Ztime-passes -Zinput-stats
   Compiling libc v0.2.15
   Compiling unicode-xid v0.0.3
   Compiling bitflags v0.5.0
   Compiling winapi-build v0.1.1
   Compiling log v0.3.6
   Compiling rustc-serialize v0.3.19
   Compiling winapi v0.2.8
   Compiling kernel32-sys v0.2.2
   Compiling term v0.4.4
   Compiling syntex_pos v0.42.0
   Compiling syntex_errors v0.42.0
   Compiling syntex_syntax v0.42.0
time: 0.109; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  224033
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.276; rss: 144MB	expansion
time: 0.000; rss: 144MB	maybe building test harness
time: 0.006; rss: 144MB	maybe creating a macro crate
Post-expansion node count: 641571
time: 0.000; rss: 144MB	checking for inline asm in case the target doesn't support it
time: 0.013; rss: 144MB	complete gated feature checking
time: 0.024; rss: 144MB	early lint checks
time: 0.007; rss: 144MB	AST validation
time: 0.084; rss: 159MB	name resolution
time: 0.049; rss: 203MB	lowering ast -> hir
time: 0.009; rss: 211MB	indexing hir
time: 0.006; rss: 211MB	attribute checking
time: 0.005; rss: 161MB	language item collection
time: 0.012; rss: 161MB	lifetime resolution
time: 0.000; rss: 161MB	looking for entry point
time: 0.000; rss: 161MB	looking for plugin registrar
time: 0.044; rss: 171MB	region resolution
time: 0.006; rss: 171MB	loop checking
time: 0.006; rss: 171MB	static item recursion checking
time: 0.263; rss: 174MB	compute_incremental_hashes_map
time: 0.000; rss: 174MB	load_dep_graph
time: 0.071; rss: 179MB	type collecting
time: 0.002; rss: 179MB	variance inference
time: 0.054; rss: 182MB	coherence checking
time: 0.113; rss: 184MB	wf checking
time: 0.195; rss: 193MB	item-types checking
time: 3.978; rss: 240MB	item-bodies checking
time: 0.000; rss: 240MB	drop-impl checking
time: 0.311; rss: 241MB	const checking
time: 0.054; rss: 241MB	privacy checking
time: 0.007; rss: 241MB	stability index
time: 0.022; rss: 241MB	intrinsic checking
time: 0.018; rss: 241MB	effect checking
time: 0.056; rss: 241MB	match checking
time: 0.054; rss: 237MB	liveness checking
time: 0.281; rss: 237MB	rvalue checking
time: 0.419; rss: 426MB	MIR dump
  time: 0.057; rss: 429MB	SimplifyCfg
  time: 0.082; rss: 430MB	QualifyAndPromoteConstants
  time: 0.111; rss: 430MB	TypeckMir
  time: 0.004; rss: 430MB	SimplifyBranches
  time: 0.031; rss: 430MB	SimplifyCfg
time: 0.285; rss: 430MB	MIR passes
time: 0.685; rss: 430MB	borrow checking
time: 0.022; rss: 430MB	reachability checking
time: 0.045; rss: 430MB	death checking
time: 0.041; rss: 430MB	stability checking
time: 0.000; rss: 430MB	unused lib feature checking
time: 0.219; rss: 430MB	lint checking
time: 0.000; rss: 430MB	resolving dependency formats
  time: 0.003; rss: 430MB	NoLandingPads
  time: 0.027; rss: 430MB	SimplifyCfg
  time: 0.071; rss: 442MB	EraseRegions
  time: 0.011; rss: 442MB	AddCallGuards
  time: 1.049; rss: 459MB	ElaborateDrops
  time: 0.003; rss: 459MB	NoLandingPads
  time: 0.054; rss: 457MB	SimplifyCfg
  time: 0.030; rss: 457MB	InstCombine
  time: 0.012; rss: 457MB	Deaggregator
  time: 0.003; rss: 457MB	CopyPropagation
  time: 0.009; rss: 457MB	AddCallGuards
  time: 0.003; rss: 457MB	PreTrans
time: 1.276; rss: 457MB	Prepare MIR codegen passes
  time: 0.263; rss: 465MB	write metadata
  time: 0.478; rss: 474MB	translation item collection
  time: 0.070; rss: 480MB	codegen unit partitioning
  time: 0.061; rss: 726MB	internalize symbols
time: 5.192; rss: 604MB	translation
time: 0.000; rss: 604MB	assert dep graph
time: 0.000; rss: 604MB	serialize dep graph
  time: 0.517; rss: 410MB	llvm function passes [0]
  time: 0.244; rss: 417MB	llvm module passes [0]
  time: 10.028; rss: 419MB	codegen passes [0]
  time: 0.001; rss: 421MB	codegen passes [0]
time: 11.525; rss: 421MB	LLVM passes
time: 0.000; rss: 421MB	serialize work products
time: 0.653; rss: 107MB	linking
done
