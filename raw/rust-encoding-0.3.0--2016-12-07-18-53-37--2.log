commit 7b06438d8349c1a6bbeb29c2a1bd874553a8625c
Merge: 535b6d3 0f7a18b
Author: bors <bors@rust-lang.org>
Date:   Wed Dec 7 23:06:10 2016 +0000

    Auto merge of #38191 - oli-obk:clippy_is_sad, r=eddyb
    
    annotate stricter lifetimes on LateLintPass methods to allow them to forward to a Visitor
    
    this unblocks clippy (rustup blocked after #37918)
    
    clippy has lots of lints that internally call an `intravisit::Visitor`, but the current lifetimes on `LateLintPass` methods conflicted with the required lifetimes (there was no connection between the HIR elements and the `TyCtxt`)
    
    r? @Manishearth
rustc: ./rust-encoding-0.3.0
cargo rustc  -- -Ztime-passes -Zinput-stats
time: 0.017; rss: 45MB	parsing
Lines of code:             5757
Pre-expansion node count:  26523
time: 0.000; rss: 45MB	recursion limit
time: 0.000; rss: 45MB	crate injection
time: 0.000; rss: 45MB	plugin loading
time: 0.000; rss: 45MB	plugin registration
time: 0.031; rss: 76MB	expansion
time: 0.000; rss: 76MB	maybe building test harness
time: 0.000; rss: 76MB	maybe creating a macro crate
Post-expansion node count: 37888
time: 0.000; rss: 76MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 76MB	complete gated feature checking
time: 0.001; rss: 76MB	early lint checks
time: 0.000; rss: 76MB	AST validation
time: 0.004; rss: 78MB	name resolution
time: 0.004; rss: 78MB	lowering ast -> hir
time: 0.001; rss: 80MB	indexing hir
time: 0.000; rss: 80MB	attribute checking
time: 0.000; rss: 79MB	language item collection
time: 0.000; rss: 79MB	lifetime resolution
time: 0.000; rss: 79MB	looking for entry point
time: 0.000; rss: 79MB	looking for plugin registrar
time: 0.002; rss: 79MB	region resolution
time: 0.000; rss: 79MB	loop checking
time: 0.000; rss: 79MB	static item recursion checking
time: 0.017; rss: 79MB	compute_incremental_hashes_map
time: 0.000; rss: 79MB	load_dep_graph
time: 0.000; rss: 79MB	stability index
time: 0.001; rss: 79MB	stability checking
time: 0.007; rss: 80MB	type collecting
time: 0.000; rss: 80MB	variance inference
time: 0.000; rss: 80MB	impl wf inference
time: 0.007; rss: 81MB	coherence checking
time: 0.009; rss: 81MB	wf checking
time: 0.010; rss: 84MB	item-types checking
time: 0.109; rss: 87MB	item-bodies checking
time: 0.000; rss: 87MB	drop-impl checking
time: 0.007; rss: 87MB	const checking
time: 0.002; rss: 87MB	privacy checking
time: 0.001; rss: 87MB	intrinsic checking
time: 0.000; rss: 87MB	effect checking
time: 0.004; rss: 87MB	match checking
time: 0.001; rss: 87MB	liveness checking
time: 0.004; rss: 87MB	rvalue checking
time: 0.017; rss: 96MB	MIR dump
  time: 0.002; rss: 97MB	SimplifyCfg
  time: 0.003; rss: 97MB	QualifyAndPromoteConstants
  time: 0.004; rss: 97MB	TypeckMir
  time: 0.000; rss: 97MB	SimplifyBranches
  time: 0.001; rss: 97MB	SimplifyCfg
time: 0.011; rss: 97MB	MIR cleanup and validation
time: 0.017; rss: 97MB	borrow checking
time: 0.000; rss: 97MB	reachability checking
time: 0.001; rss: 97MB	death checking
time: 0.000; rss: 97MB	unused lib feature checking
time: 0.012; rss: 97MB	lint checking
time: 0.000; rss: 97MB	resolving dependency formats
  time: 0.000; rss: 97MB	NoLandingPads
  time: 0.001; rss: 97MB	SimplifyCfg
  time: 0.002; rss: 97MB	EraseRegions
  time: 0.000; rss: 97MB	AddCallGuards
  time: 0.023; rss: 97MB	ElaborateDrops
  time: 0.000; rss: 97MB	NoLandingPads
  time: 0.002; rss: 97MB	SimplifyCfg
  time: 0.001; rss: 97MB	InstCombine
  time: 0.001; rss: 97MB	Deaggregator
  time: 0.000; rss: 97MB	CopyPropagation
  time: 0.001; rss: 97MB	SimplifyLocals
  time: 0.000; rss: 97MB	AddCallGuards
  time: 0.000; rss: 97MB	PreTrans
time: 0.032; rss: 97MB	MIR optimisations
  time: 0.004; rss: 97MB	write metadata
  time: 0.132; rss: 185MB	translation item collection
  time: 0.002; rss: 185MB	codegen unit partitioning
  time: 0.002; rss: 211MB	internalize symbols
time: 0.427; rss: 211MB	translation
time: 0.000; rss: 211MB	assert dep graph
time: 0.000; rss: 211MB	serialize dep graph
  time: 0.025; rss: 115MB	llvm function passes [0]
  time: 0.058; rss: 121MB	llvm module passes [0]
  time: 0.630; rss: 128MB	codegen passes [0]
  time: 0.000; rss: 128MB	codegen passes [0]
time: 0.769; rss: 128MB	LLVM passes
time: 0.000; rss: 128MB	serialize work products
time: 0.039; rss: 97MB	linking
done
