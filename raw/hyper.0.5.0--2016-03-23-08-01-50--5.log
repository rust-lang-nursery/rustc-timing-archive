commit d6af19b89c477708ed0f5341ab7a26f1764f1ffa
Merge: 8ba2ea5 3a790ac
Author: bors <bors@rust-lang.org>
Date:   Wed Mar 23 01:03:04 2016 -0700

    Auto merge of #32348 - brson:cargotest, r=alexcrichton
    
    Introduce 'cargotest' and the check-cargotest buildstep
    
    This is a new suite of tests that verifies that the compiler builds specific revisions of select crates from crates.io.
    
    It does not run by default. It is intended that bors runs these tests against all PRs, and gates on them. In this way we will make it harder still to break important swaths of the ecosystem, even on nightly.
    
    This is a very basic implementation intended for feedback. The biggest thing it probably should do but doesn't is use a lockfile for every project it builds.
    
    r? @alexcrichton cc @rust-lang/lang @rust-lang/libs
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.041; rss: 38MB	parsing
Lines of code:             9154
Pre-expansion node count:  45594
time: 0.010; rss: 39MB	configuration 1
time: 0.000; rss: 39MB	recursion limit
time: 0.000; rss: 39MB	gated macro checking
time: 0.000; rss: 39MB	crate injection
time: 0.005; rss: 44MB	macro loading
time: 0.000; rss: 44MB	plugin loading
time: 0.000; rss: 44MB	plugin registration
time: 0.205; rss: 53MB	expansion
time: 0.005; rss: 53MB	complete gated feature checking 1
time: 0.035; rss: 53MB	configuration 2
time: 0.000; rss: 53MB	gated configuration checking
time: 0.014; rss: 53MB	maybe building test harness
time: 0.011; rss: 53MB	prelude injection
time: 0.001; rss: 53MB	checking that all macro invocations are gone
time: 0.000; rss: 53MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 53MB	complete gated feature checking 2
time: 0.001; rss: 53MB	const fn bodies and arguments
Post-expansion node count: 106876
time: 0.010; rss: 53MB	assigning node ids
time: 0.024; rss: 60MB	lowering ast -> hir
time: 0.008; rss: 61MB	indexing hir
time: 0.002; rss: 61MB	attribute checking
time: 0.007; rss: 61MB	early lint checks
time: 0.004; rss: 57MB	external crate/lib resolution
time: 0.001; rss: 57MB	language item collection
time: 0.031; rss: 73MB	resolution
time: 0.002; rss: 73MB	lifetime resolution
time: 0.000; rss: 73MB	looking for entry point
time: 0.000; rss: 73MB	looking for plugin registrar
time: 0.010; rss: 77MB	region resolution
time: 0.001; rss: 77MB	loop checking
time: 0.001; rss: 77MB	static item recursion checking
time: 0.013; rss: 81MB	type collecting
time: 0.000; rss: 81MB	variance inference
time: 0.547; rss: 102MB	coherence checking
time: 0.078; rss: 103MB	wf checking
time: 0.033; rss: 104MB	item-types checking
time: 0.541; rss: 118MB	item-bodies checking
time: 0.000; rss: 118MB	drop-impl checking
time: 0.042; rss: 121MB	const checking
time: 0.010; rss: 121MB	privacy checking
time: 0.001; rss: 121MB	stability index
time: 0.004; rss: 121MB	intrinsic checking
time: 0.002; rss: 121MB	effect checking
time: 0.012; rss: 121MB	match checking
time: 0.005; rss: 121MB	liveness checking
time: 0.034; rss: 121MB	rvalue checking
time: 0.054; rss: 127MB	MIR dump
time: 0.031; rss: 129MB	MIR passes
time: 0.068; rss: 129MB	borrow checking
time: 0.003; rss: 129MB	reachability checking
time: 0.006; rss: 129MB	death checking
time: 0.006; rss: 129MB	stability checking
time: 0.000; rss: 129MB	unused lib feature checking
time: 0.048; rss: 129MB	lint checking
time: 0.000; rss: 129MB	resolving dependency formats
  time: 0.218; rss: 147MB	translation item collection
  time: 0.138; rss: 268MB	write metadata
time: 1.671; rss: 268MB	translation
  time: 0.101; rss: 156MB	llvm function passes [0]
  time: 0.048; rss: 159MB	llvm module passes [0]
  time: 1.652; rss: 162MB	codegen passes [0]
  time: 0.001; rss: 112MB	codegen passes [0]
time: 2.000; rss: 111MB	LLVM passes
time: 0.170; rss: 109MB	linking
done
