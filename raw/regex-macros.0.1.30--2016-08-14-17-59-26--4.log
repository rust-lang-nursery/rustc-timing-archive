commit 1d5b758bab979b1db723bcc97ecd8398127bd8bc
Merge: 92ae4ce 1bb1444
Author: bors <bors@rust-lang.org>
Date:   Sun Aug 14 12:28:48 2016 -0700

    Auto merge of #35409 - eddyb:mir-storage-stmts, r=nikomatsakis
    
    [MIR] Add Storage{Live,Dead} statements to emit llvm.lifetime.{start,end}.
    
    Storage live ranges are tracked for all MIR variables and temporaries with a drop scope.
    `StorageLive` is lowered to `llvm.lifetime.start` and `StorageDead` to `llvm.lifetime.end`.
    
    There are some improvements possible here, such as:
    * pack multiple storage liveness statements by using the index of first local + `u64` bitset
    * enforce that locals are not directly accessed outside their storage live range
    * shrink storage live ranges for never-borrowed locals to initialization -> last use
    * emit storage liveness statements for *all* temporaries
     * however, the remaining ones are *always* SSA immediates, so they'd be noop in MIR trans
     * could have a flag on the temporary that its storage is irrelevant (a la C's old `register`)
       * would also deny borrows if necessary
        * this seems like an overcompliation and with packing & optimizations it may be pointless
    
    Even in the current state, it helps stage2 `rustc` compile `boiler` without overflowing (see #35408).
    
    A later addition fixes #26764 and closes #27372 by emitting `.section` directives for dylib metadata to avoid them being allocated into memory or read as `.note`. For this PR, those bugs were tripping valgrind.
rustc: ./regex-macros.0.1.30
cd regex_macros && cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling regex_macros v0.1.17 (file:///root/benchmarks/regex-macros.0.1.30/regex_macros)
time: 0.002; rss: 44MB	parsing
Lines of code:             639
Pre-expansion node count:  2088
time: 0.000; rss: 44MB	configuration
time: 0.000; rss: 44MB	recursion limit
time: 0.000; rss: 44MB	crate injection
time: 0.000; rss: 44MB	plugin loading
time: 0.000; rss: 44MB	plugin registration
time: 0.031; rss: 86MB	expansion
time: 0.000; rss: 86MB	maybe building test harness
time: 0.003; rss: 86MB	assigning node ids
Post-expansion node count: 69587
time: 0.000; rss: 86MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 86MB	complete gated feature checking
time: 0.000; rss: 86MB	collecting defs
time: 0.086; rss: 176MB	external crate/lib resolution
time: 0.002; rss: 176MB	early lint checks
time: 0.000; rss: 176MB	AST validation
time: 0.021; rss: 182MB	name resolution
time: 0.004; rss: 184MB	lowering ast -> hir
time: 0.001; rss: 185MB	indexing hir
time: 0.000; rss: 185MB	attribute checking
time: 0.001; rss: 178MB	language item collection
time: 0.000; rss: 178MB	lifetime resolution
time: 0.000; rss: 178MB	looking for entry point
time: 0.000; rss: 178MB	looking for plugin registrar
time: 0.003; rss: 180MB	region resolution
time: 0.000; rss: 180MB	loop checking
time: 0.000; rss: 180MB	static item recursion checking
time: 0.000; rss: 180MB	load_dep_graph
time: 0.012; rss: 182MB	type collecting
time: 0.000; rss: 182MB	variance inference
time: 0.010; rss: 183MB	coherence checking
time: 0.008; rss: 184MB	wf checking
time: 0.001; rss: 184MB	item-types checking
time: 0.772; rss: 204MB	item-bodies checking
makefile:2: recipe for target 'all' failed
done
