commit 47e6da2a01c284f383ad9658e33735f78e262ade
Merge: 13ff307 5f606f0
Author: bors <bors@rust-lang.org>
Date:   Sun Aug 14 18:36:33 2016 -0700

    Auto merge of #35427 - cardoe:arm-musl-targets, r=alexcrichton
    
    add GNU make files for arm-unknown-linux-musleabi
    
    For Yocto (Embedded Linux meta distro) Rust is provided via the [meta-rust layer](https://github.com/meta-rust/meta-rust). In this project there have been patches to add `arm-unknown-linux-musleabi`. Rust recently acquired that support via #35060 but only for rustbuild. meta-rust is currently only able to build Rust support with the existing GNU Makefiles. This adds `arm-unknown-linux-musleabi` support to Rust for the GNU Makefiles until meta-rust is able to sort out why using rustbuild does not work for it.
    
    /cc @srwalter @derekstraka @jmesmon @japaric
rustc: ./jld-day15-parser
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling day15 v0.1.0 (file:///root/benchmarks/jld-day15-parser)
time: 0.001; rss: 42MB	parsing
Lines of code:             72
Pre-expansion node count:  654
time: 0.000; rss: 42MB	configuration
time: 0.000; rss: 42MB	recursion limit
time: 0.000; rss: 42MB	crate injection
time: 0.000; rss: 42MB	plugin loading
time: 0.000; rss: 42MB	plugin registration
time: 0.032; rss: 79MB	expansion
time: 0.000; rss: 79MB	maybe building test harness
time: 0.000; rss: 79MB	assigning node ids
Post-expansion node count: 1155
time: 0.000; rss: 79MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 79MB	complete gated feature checking
time: 0.000; rss: 79MB	collecting defs
time: 0.003; rss: 84MB	external crate/lib resolution
time: 0.000; rss: 84MB	early lint checks
time: 0.000; rss: 84MB	AST validation
time: 0.001; rss: 84MB	name resolution
time: 0.000; rss: 84MB	lowering ast -> hir
time: 0.000; rss: 84MB	indexing hir
time: 0.000; rss: 84MB	attribute checking
time: 0.000; rss: 84MB	language item collection
time: 0.000; rss: 84MB	lifetime resolution
time: 0.000; rss: 84MB	looking for entry point
time: 0.000; rss: 84MB	looking for plugin registrar
time: 0.000; rss: 84MB	region resolution
time: 0.000; rss: 84MB	loop checking
time: 0.000; rss: 84MB	static item recursion checking
time: 0.000; rss: 84MB	load_dep_graph
time: 0.001; rss: 84MB	type collecting
time: 0.000; rss: 84MB	variance inference
time: 0.005; rss: 84MB	coherence checking
time: 0.006; rss: 84MB	wf checking
time: 0.000; rss: 84MB	item-types checking
time: 0.045; rss: 96MB	item-bodies checking
time: 0.000; rss: 96MB	drop-impl checking
time: 0.001; rss: 96MB	const checking
time: 0.000; rss: 96MB	privacy checking
time: 0.000; rss: 96MB	stability index
time: 0.000; rss: 96MB	intrinsic checking
time: 0.000; rss: 96MB	effect checking
time: 0.000; rss: 96MB	match checking
time: 0.000; rss: 96MB	liveness checking
time: 0.001; rss: 96MB	rvalue checking
time: 0.001; rss: 96MB	MIR dump
time: 0.001; rss: 96MB	MIR passes
time: 0.001; rss: 96MB	borrow checking
time: 0.000; rss: 96MB	reachability checking
time: 0.000; rss: 96MB	death checking
time: 0.000; rss: 96MB	stability checking
time: 0.000; rss: 96MB	unused lib feature checking
time: 0.004; rss: 96MB	lint checking
time: 0.002; rss: 96MB	resolving dependency formats
time: 0.005; rss: 96MB	Prepare MIR codegen passes
  time: 0.000; rss: 96MB	write metadata
  time: 0.582; rss: 105MB	translation item collection
  time: 0.003; rss: 105MB	codegen unit partitioning
  time: 0.006; rss: 131MB	internalize symbols
time: 4.230; rss: 131MB	translation
time: 0.000; rss: 131MB	assert dep graph
time: 0.000; rss: 131MB	serialize dep graph
  time: 0.017; rss: 107MB	llvm function passes [0]
  time: 0.001; rss: 107MB	llvm module passes [0]
  time: 0.344; rss: 113MB	codegen passes [0]
  time: 0.000; rss: 112MB	codegen passes [0]
time: 0.363; rss: 112MB	LLVM passes
time: 0.000; rss: 112MB	serialize work products
  time: 0.118; rss: 103MB	running linker
time: 0.119; rss: 103MB	linking
done
