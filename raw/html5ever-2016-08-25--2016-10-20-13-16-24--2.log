commit 7bccb829d0fe9a733bd6efcf6f7313186ae237ab
Merge: eb38d42 81d9795
Author: bors <bors@rust-lang.org>
Date:   Thu Oct 20 05:16:49 2016 -0700

    Auto merge of #37273 - cuviper:major-minor-rebuild, r=alexcrichton
    
    Detect local-rebuild by just the MAJOR.MINOR version
    
    A new point-release shouldn't change any language semantics, so a local
    stage0 that matches MAJOR.MINOR version should still be considered a
    local-rebuild as far as `--cfg stageN` features go.
    
    e.g. `1.14.0` should be considered a local-rebuild for any `1.14.X`.
    
    (Bootstrap keys used to be an issue too, until #37265.)
rustc: ./html5ever-2016-08-25
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling html5ever v0.5.4 (file:///root/benchmarks/html5ever-2016-08-25)
time: 0.027; rss: 52MB	parsing
Lines of code:             8210
Pre-expansion node count:  52238
time: 0.000; rss: 52MB	recursion limit
time: 0.000; rss: 52MB	crate injection
time: 0.000; rss: 52MB	plugin loading
time: 0.000; rss: 52MB	plugin registration
time: 0.739; rss: 106MB	expansion
time: 0.000; rss: 106MB	maybe building test harness
time: 0.002; rss: 106MB	maybe creating a macro crate
Post-expansion node count: 163524
time: 0.000; rss: 106MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 106MB	complete gated feature checking
time: 0.009; rss: 106MB	early lint checks
time: 0.002; rss: 106MB	AST validation
time: 0.018; rss: 110MB	name resolution
time: 0.015; rss: 125MB	lowering ast -> hir
time: 0.004; rss: 130MB	indexing hir
time: 0.002; rss: 130MB	attribute checking
time: 0.002; rss: 107MB	language item collection
time: 0.003; rss: 107MB	lifetime resolution
time: 0.000; rss: 107MB	looking for entry point
time: 0.000; rss: 107MB	looking for plugin registrar
time: 0.015; rss: 113MB	region resolution
time: 0.002; rss: 113MB	loop checking
time: 0.002; rss: 113MB	static item recursion checking
time: 0.027; rss: 114MB	compute_incremental_hashes_map
time: 0.000; rss: 114MB	load_dep_graph
time: 0.009; rss: 116MB	type collecting
time: 0.000; rss: 116MB	variance inference
time: 0.022; rss: 118MB	coherence checking
time: 0.023; rss: 118MB	wf checking
time: 0.343; rss: 128MB	item-types checking
time: 0.491; rss: 140MB	item-bodies checking
time: 0.000; rss: 140MB	drop-impl checking
time: 0.070; rss: 143MB	const checking
time: 0.009; rss: 143MB	privacy checking
time: 0.002; rss: 143MB	stability index
time: 0.003; rss: 143MB	intrinsic checking
time: 0.003; rss: 143MB	effect checking
time: 0.024; rss: 143MB	match checking
time: 0.013; rss: 136MB	liveness checking
time: 0.026; rss: 136MB	rvalue checking
time: 0.117; rss: 186MB	MIR dump
  time: 0.009; rss: 183MB	SimplifyCfg
  time: 0.014; rss: 183MB	QualifyAndPromoteConstants
  time: 0.024; rss: 183MB	TypeckMir
  time: 0.000; rss: 183MB	SimplifyBranches
  time: 0.004; rss: 183MB	SimplifyCfg
time: 0.051; rss: 183MB	MIR passes
time: 0.089; rss: 185MB	borrow checking
time: 0.003; rss: 185MB	reachability checking
time: 0.007; rss: 185MB	death checking
time: 0.009; rss: 186MB	stability checking
time: 0.000; rss: 186MB	unused lib feature checking
time: 0.062; rss: 186MB	lint checking
time: 0.000; rss: 186MB	resolving dependency formats
  time: 0.000; rss: 186MB	NoLandingPads
  time: 0.004; rss: 186MB	SimplifyCfg
  time: 0.009; rss: 186MB	EraseRegions
  time: 0.001; rss: 186MB	AddCallGuards
  time: 0.074; rss: 190MB	ElaborateDrops
  time: 0.000; rss: 190MB	NoLandingPads
  time: 0.007; rss: 188MB	SimplifyCfg
  time: 0.008; rss: 186MB	InstCombine
  time: 0.001; rss: 186MB	Deaggregator
  time: 0.000; rss: 186MB	CopyPropagation
  time: 0.001; rss: 186MB	AddCallGuards
  time: 0.000; rss: 186MB	PreTrans
time: 0.129; rss: 186MB	Prepare MIR codegen passes
  time: 0.013; rss: 188MB	write metadata
  time: 0.046; rss: 190MB	translation item collection
  time: 0.005; rss: 190MB	codegen unit partitioning
  time: 0.005; rss: 204MB	internalize symbols
time: 0.305; rss: 174MB	translation
time: 0.000; rss: 174MB	assert dep graph
time: 0.000; rss: 174MB	serialize dep graph
  time: 0.019; rss: 105MB	llvm function passes [0]
  time: 0.012; rss: 106MB	llvm module passes [0]
  time: 0.458; rss: 109MB	codegen passes [0]
  time: 0.000; rss: 109MB	codegen passes [0]
time: 0.528; rss: 109MB	LLVM passes
time: 0.000; rss: 109MB	serialize work products
time: 0.058; rss: 91MB	linking
done
