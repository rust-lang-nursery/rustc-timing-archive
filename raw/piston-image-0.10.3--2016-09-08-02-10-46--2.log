commit a5dbf8a0f8843c5466c3866cc2a288c0ef7051d2
Merge: 4a26286 a77b55d
Author: bors <bors@rust-lang.org>
Date:   Wed Sep 7 22:30:48 2016 -0700

    Auto merge of #36310 - jstnlef:remove-extraneous-not-equal-impl, r=sfackler
    
    Removing the extraneous not_equal implementation for slices
    
    Happened to stumble upon this one awhile back. Seemed a bit silly to have both the equals and not equals implementation when they're so similar.
rustc: ./piston-image-0.10.3
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling image v0.10.3 (file:///root/benchmarks/piston-image-0.10.3)
time: 0.046; rss: 58MB	parsing
Lines of code:             12000
Pre-expansion node count:  90272
time: 0.000; rss: 58MB	recursion limit
time: 0.000; rss: 58MB	crate injection
time: 0.000; rss: 58MB	plugin loading
time: 0.000; rss: 58MB	plugin registration
time: 0.069; rss: 87MB	expansion
time: 0.000; rss: 87MB	maybe building test harness
time: 0.002; rss: 87MB	maybe creating a macro crate
time: 0.008; rss: 87MB	assigning node ids
Post-expansion node count: 149551
time: 0.000; rss: 87MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 87MB	complete gated feature checking
time: 0.004; rss: 87MB	collecting defs
time: 0.011; rss: 92MB	external crate/lib resolution
time: 0.006; rss: 92MB	early lint checks
time: 0.002; rss: 96MB	AST validation
time: 0.023; rss: 100MB	name resolution
time: 0.015; rss: 111MB	lowering ast -> hir
time: 0.003; rss: 115MB	indexing hir
time: 0.002; rss: 115MB	attribute checking
time: 0.002; rss: 105MB	language item collection
time: 0.004; rss: 105MB	lifetime resolution
time: 0.000; rss: 105MB	looking for entry point
time: 0.000; rss: 105MB	looking for plugin registrar
time: 0.012; rss: 111MB	region resolution
time: 0.002; rss: 111MB	loop checking
time: 0.002; rss: 111MB	static item recursion checking
time: 0.059; rss: 111MB	compute_incremental_hashes_map
time: 0.000; rss: 111MB	load_dep_graph
time: 0.025; rss: 112MB	type collecting
time: 0.000; rss: 112MB	variance inference
time: 0.033; rss: 116MB	coherence checking
time: 0.100; rss: 117MB	wf checking
time: 0.225; rss: 124MB	item-types checking
time: 0.958; rss: 136MB	item-bodies checking
time: 0.000; rss: 136MB	drop-impl checking
time: 0.073; rss: 136MB	const checking
time: 0.013; rss: 136MB	privacy checking
time: 0.001; rss: 136MB	stability index
time: 0.010; rss: 136MB	intrinsic checking
time: 0.004; rss: 136MB	effect checking
time: 0.025; rss: 136MB	match checking
time: 0.012; rss: 136MB	liveness checking
time: 0.069; rss: 136MB	rvalue checking
time: 0.116; rss: 179MB	MIR dump
  time: 0.012; rss: 179MB	SimplifyCfg
  time: 0.027; rss: 179MB	QualifyAndPromoteConstants
  time: 0.030; rss: 179MB	TypeckMir
  time: 0.001; rss: 179MB	SimplifyBranches
  time: 0.007; rss: 179MB	SimplifyCfg
time: 0.077; rss: 179MB	MIR passes
time: 0.146; rss: 179MB	borrow checking
time: 0.004; rss: 179MB	reachability checking
time: 0.009; rss: 179MB	death checking
time: 0.010; rss: 179MB	stability checking
time: 0.000; rss: 179MB	unused lib feature checking
time: 0.081; rss: 179MB	lint checking
time: 0.000; rss: 179MB	resolving dependency formats
  time: 0.001; rss: 179MB	NoLandingPads
  time: 0.005; rss: 179MB	SimplifyCfg
  time: 0.014; rss: 182MB	EraseRegions
  time: 0.002; rss: 182MB	AddCallGuards
  time: 0.134; rss: 186MB	ElaborateDrops
  time: 0.001; rss: 186MB	NoLandingPads
  time: 0.009; rss: 186MB	SimplifyCfg
  time: 0.002; rss: 186MB	Deaggregator
  time: 0.001; rss: 186MB	AddCallGuards
  time: 0.000; rss: 186MB	PreTrans
time: 0.169; rss: 186MB	Prepare MIR codegen passes
  time: 0.082; rss: 188MB	write metadata
  time: 0.543; rss: 198MB	translation item collection
  time: 0.028; rss: 202MB	codegen unit partitioning
  time: 0.051; rss: 325MB	internalize symbols
time: 3.439; rss: 298MB	translation
time: 0.000; rss: 298MB	assert dep graph
time: 0.000; rss: 298MB	serialize dep graph
  time: 0.204; rss: 224MB	llvm function passes [0]
  time: 0.083; rss: 228MB	llvm module passes [0]
  time: 4.029; rss: 232MB	codegen passes [0]
  time: 0.001; rss: 233MB	codegen passes [0]
time: 4.619; rss: 233MB	LLVM passes
time: 0.000; rss: 233MB	serialize work products
time: 0.254; rss: 104MB	linking
done
