commit 06074ac004701bff42c625247c4764b2ae6fca6c
Merge: 3e05371 e926f28
Author: bors <bors@rust-lang.org>
Date:   Sat Mar 12 21:55:14 2016 -0800

    Auto merge of #32141 - jseyfried:fix_resolution_in_lexical_scopes, r=nikomatsakis
    
    Fix name resolution in lexical scopes
    
    Currently, `resolve_item_in_lexical_scope` does not check the "ribs" (type parameters and local variables). This can allow items that should be shadowed by type parameters to be named.
    
    For example,
    ```rust
    struct T { i: i32 }
    fn f<T>() {
        let t = T { i: 0 }; // This use of `T` resolves to the struct, not the type parameter
    }
    
    mod Foo {
        pub fn f() {}
    }
    fn g<Foo>() {
        Foo::f(); // This use of `Foo` resolves to the module, not the type parameter
    }
    ```
    
    This PR changes `resolve_item_in_lexical_scope` so that it fails when the item is shadowed by a rib (fixes #32120).
    This is a [breaking-change], but it looks unlikely to cause breakage in practice.
    
    r? @nikomatsakis
rustc: ./regex.0.1.30
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling regex v0.1.30 (file:///root/benchmarks/regex.0.1.30)
time: 0.060; rss: 49MB	parsing
Lines of code:             8558
Pre-expansion node count:  58217
time: 0.011; rss: 49MB	configuration 1
time: 0.000; rss: 49MB	recursion limit
time: 0.001; rss: 49MB	gated macro checking
time: 0.000; rss: 49MB	crate injection
time: 0.003; rss: 54MB	macro loading
time: 0.000; rss: 54MB	plugin loading
time: 0.000; rss: 54MB	plugin registration
time: 0.057; rss: 56MB	expansion
time: 0.001; rss: 56MB	complete gated feature checking 1
time: 0.013; rss: 55MB	configuration 2
time: 0.000; rss: 55MB	gated configuration checking
time: 0.006; rss: 55MB	maybe building test harness
time: 0.006; rss: 55MB	prelude injection
time: 0.001; rss: 55MB	checking that all macro invocations are gone
time: 0.000; rss: 55MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 55MB	complete gated feature checking 2
time: 0.001; rss: 55MB	const fn bodies and arguments
Post-expansion node count: 68657
time: 0.006; rss: 55MB	assigning node ids
time: 0.008; rss: 62MB	lowering ast -> hir
time: 0.002; rss: 64MB	indexing hir
time: 0.001; rss: 64MB	attribute checking
time: 0.007; rss: 64MB	early lint checks
time: 0.001; rss: 58MB	external crate/lib resolution
time: 0.001; rss: 58MB	language item collection
time: 0.009; rss: 68MB	resolution
time: 0.001; rss: 68MB	lifetime resolution
time: 0.000; rss: 68MB	looking for entry point
time: 0.000; rss: 68MB	looking for plugin registrar
time: 0.005; rss: 71MB	region resolution
time: 0.001; rss: 71MB	loop checking
time: 0.001; rss: 71MB	static item recursion checking
time: 0.003; rss: 74MB	type collecting
time: 0.000; rss: 74MB	variance inference
time: 0.023; rss: 91MB	coherence checking
time: 0.010; rss: 92MB	wf checking
time: 0.077; rss: 97MB	item-types checking
time: 0.185; rss: 111MB	item-bodies checking
time: 0.000; rss: 111MB	drop-impl checking
time: 0.022; rss: 111MB	const checking
time: 0.004; rss: 111MB	privacy checking
time: 0.000; rss: 111MB	stability index
time: 0.001; rss: 111MB	intrinsic checking
time: 0.001; rss: 111MB	effect checking
time: 0.003; rss: 111MB	match checking
time: 0.002; rss: 111MB	liveness checking
time: 0.006; rss: 111MB	rvalue checking
time: 0.019; rss: 113MB	MIR dump
time: 0.000; rss: 113MB	MIR passes
time: 0.018; rss: 113MB	borrow checking
time: 0.000; rss: 113MB	reachability checking
time: 0.002; rss: 113MB	death checking
time: 0.002; rss: 113MB	stability checking
time: 0.000; rss: 113MB	unused lib feature checking
time: 0.026; rss: 113MB	lint checking
time: 0.000; rss: 113MB	resolving dependency formats
time: 0.002; rss: 113MB	erasing regions from MIR
  time: 0.056; rss: 122MB	translation item collection
  time: 0.131; rss: 175MB	write metadata
time: 0.584; rss: 175MB	translation
  time: 0.035; rss: 116MB	llvm function passes [0]
  time: 0.018; rss: 118MB	llvm module passes [0]
  time: 0.600; rss: 121MB	codegen passes [0]
  time: 0.001; rss: 103MB	codegen passes [0]
time: 0.725; rss: 101MB	LLVM passes
time: 0.064; rss: 100MB	linking
done
