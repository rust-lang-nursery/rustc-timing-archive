commit f25f0e8de91436fbf2630150d17569525e09bab6
Merge: bbc0238 287eb2a
Author: bors <bors@rust-lang.org>
Date:   Tue Mar 1 14:46:04 2016 +0000

    Auto merge of #31939 - killercup:patch-17, r=brson
    
    Use unordered nested list for stabilised APIs to improve readability. This makes the release notes for 1.7 a bit longer, but I don't think we should optimise for brevity here. It's a bit inconsistent since the other releases are not done this way, so feel free to ignore this change.
    
    Also:
    - Add link to `u32::checked_neg`
    - Remove trailing back tick from BTreeMap line
    
    r? @brson
rustc: ./jld-day15-parser
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling combine v1.2.1
   Compiling day15 v0.1.0 (file:///root/benchmarks/jld-day15-parser)
time: 0.001; rss: 32MB	parsing
Lines of code:             72
Pre-expansion node count:  673
time: 0.000; rss: 36MB	configuration 1
time: 0.000; rss: 36MB	recursion limit
time: 0.000; rss: 36MB	gated macro checking
time: 0.000; rss: 36MB	crate injection
time: 0.003; rss: 39MB	macro loading
time: 0.000; rss: 39MB	plugin loading
time: 0.000; rss: 39MB	plugin registration
time: 0.002; rss: 39MB	expansion
time: 0.000; rss: 39MB	complete gated feature checking 1
time: 0.000; rss: 39MB	configuration 2
time: 0.000; rss: 39MB	gated configuration checking
time: 0.000; rss: 39MB	maybe building test harness
time: 0.000; rss: 39MB	prelude injection
time: 0.000; rss: 39MB	checking that all macro invocations are gone
time: 0.000; rss: 39MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 39MB	complete gated feature checking 2
time: 0.000; rss: 39MB	const fn bodies and arguments
Post-expansion node count: 1176
time: 0.000; rss: 39MB	assigning node ids
time: 0.000; rss: 39MB	lowering ast -> hir
time: 0.000; rss: 39MB	indexing hir
time: 0.000; rss: 39MB	attribute checking
time: 0.000; rss: 39MB	early lint checks
time: 0.001; rss: 43MB	external crate/lib resolution
time: 0.000; rss: 43MB	language item collection
time: 0.001; rss: 48MB	resolution
time: 0.000; rss: 48MB	lifetime resolution
time: 0.000; rss: 48MB	looking for entry point
time: 0.000; rss: 48MB	looking for plugin registrar
time: 0.000; rss: 48MB	region resolution
time: 0.000; rss: 48MB	loop checking
time: 0.000; rss: 48MB	static item recursion checking
time: 0.001; rss: 52MB	type collecting
time: 0.000; rss: 52MB	variance inference
time: 0.005; rss: 56MB	coherence checking
time: 0.006; rss: 63MB	wf checking
time: 0.000; rss: 63MB	item-types checking
time: 1.584; rss: 144MB	item-bodies checking
time: 0.000; rss: 144MB	drop-impl checking
time: 0.005; rss: 149MB	const checking
time: 0.000; rss: 149MB	privacy checking
time: 0.000; rss: 149MB	stability index
time: 0.000; rss: 149MB	intrinsic checking
time: 0.000; rss: 149MB	effect checking
time: 0.000; rss: 149MB	match checking
time: 0.000; rss: 149MB	liveness checking
time: 0.002; rss: 149MB	rvalue checking
time: 0.001; rss: 149MB	MIR dump
time: 0.000; rss: 149MB	MIR passes
time: 0.001; rss: 149MB	borrow checking
time: 0.000; rss: 149MB	reachability checking
time: 0.000; rss: 149MB	death checking
time: 0.000; rss: 149MB	stability checking
time: 0.000; rss: 149MB	unused lib feature checking
time: 0.003; rss: 150MB	lint checking
time: 0.001; rss: 150MB	resolving dependency formats
time: 0.000; rss: 150MB	erasing regions from MIR
  time: 11.896; rss: 185MB	translation item collection
  time: 0.000; rss: 202MB	write metadata
time: 32.784; rss: 202MB	translation
  time: 0.014; rss: 100MB	llvm function passes [0]
  time: 0.002; rss: 100MB	llvm module passes [0]
  time: 0.271; rss: 106MB	codegen passes [0]
  time: 0.000; rss: 98MB	codegen passes [0]
time: 0.295; rss: 98MB	LLVM passes
  time: 0.107; rss: 102MB	running linker
time: 0.107; rss: 102MB	linking
done
