commit cbe4de78e2daf84499988c79317c0862b8106115
Merge: 38824d1 5652b62
Author: bors <bors@rust-lang.org>
Date:   Mon Sep 5 14:41:16 2016 -0700

    Auto merge of #35845 - frewsxcv:result-into-iter, r=GuillaumeGomez
    
    Indicate where `core::result::IntoIter` is created.
    
    None
rustc: ./html5ever-2016-08-25
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling libc v0.2.15
   Compiling serde v0.8.7
   Compiling log v0.3.6
   Compiling mac v0.0.2
   Compiling lazy_static v0.2.1
   Compiling matches v0.1.2
   Compiling phf_shared v0.7.16
   Compiling void v1.0.2
   Compiling encoding_index_tests v0.1.4
   Compiling utf-8 v0.6.0
   Compiling unreachable v0.1.1
   Compiling rustc-serialize v0.3.19
   Compiling encoding-index-korean v1.20141219.5
   Compiling encoding-index-simpchinese v1.20141219.5
   Compiling encoding-index-singlebyte v1.20141219.5
   Compiling encoding-index-tradchinese v1.20141219.5
   Compiling phf v0.7.16
   Compiling debug_unreachable v0.1.1
   Compiling encoding-index-japanese v1.20141219.5
   Compiling futf v0.1.2
   Compiling rand v0.3.14
   Compiling encoding v0.2.33
   Compiling phf_generator v0.7.16
   Compiling string_cache v0.2.27
   Compiling phf_codegen v0.7.16
   Compiling tendril v0.2.3
   Compiling html5ever v0.5.4 (file:///root/benchmarks/html5ever-2016-08-25)
time: 0.029; rss: 53MB	parsing
Lines of code:             8210
Pre-expansion node count:  52238
time: 0.003; rss: 53MB	configuration
time: 0.000; rss: 53MB	recursion limit
time: 0.000; rss: 53MB	crate injection
time: 0.000; rss: 53MB	plugin loading
time: 0.000; rss: 53MB	plugin registration
time: 1.436; rss: 100MB	expansion
time: 0.000; rss: 100MB	maybe building test harness
time: 0.002; rss: 100MB	maybe creating a macro crate
time: 0.014; rss: 100MB	assigning node ids
Post-expansion node count: 164262
time: 0.000; rss: 100MB	checking for inline asm in case the target doesn't support it
time: 0.004; rss: 100MB	complete gated feature checking
time: 0.007; rss: 102MB	collecting defs
time: 0.055; rss: 103MB	external crate/lib resolution
time: 0.012; rss: 103MB	early lint checks
time: 0.002; rss: 103MB	AST validation
time: 0.020; rss: 109MB	name resolution
time: 0.016; rss: 123MB	lowering ast -> hir
time: 0.004; rss: 127MB	indexing hir
time: 0.002; rss: 127MB	attribute checking
time: 0.002; rss: 109MB	language item collection
time: 0.003; rss: 109MB	lifetime resolution
time: 0.000; rss: 109MB	looking for entry point
time: 0.000; rss: 109MB	looking for plugin registrar
time: 0.017; rss: 114MB	region resolution
time: 0.002; rss: 114MB	loop checking
time: 0.003; rss: 114MB	static item recursion checking
time: 0.023; rss: 115MB	compute_incremental_hashes_map
time: 0.000; rss: 115MB	load_dep_graph
time: 0.014; rss: 116MB	type collecting
time: 0.000; rss: 116MB	variance inference
time: 0.027; rss: 118MB	coherence checking
time: 0.028; rss: 119MB	wf checking
time: 0.367; rss: 133MB	item-types checking
time: 0.591; rss: 142MB	item-bodies checking
time: 0.000; rss: 142MB	drop-impl checking
time: 0.078; rss: 145MB	const checking
time: 0.009; rss: 145MB	privacy checking
time: 0.002; rss: 145MB	stability index
time: 0.005; rss: 145MB	intrinsic checking
time: 0.003; rss: 145MB	effect checking
time: 0.028; rss: 145MB	match checking
time: 0.013; rss: 138MB	liveness checking
time: 0.032; rss: 138MB	rvalue checking
time: 0.124; rss: 179MB	MIR dump
time: 0.056; rss: 182MB	MIR passes
time: 0.097; rss: 187MB	borrow checking
time: 0.003; rss: 187MB	reachability checking
time: 0.007; rss: 187MB	death checking
time: 0.009; rss: 187MB	stability checking
time: 0.000; rss: 187MB	unused lib feature checking
time: 0.064; rss: 187MB	lint checking
time: 0.000; rss: 187MB	resolving dependency formats
time: 0.109; rss: 189MB	Prepare MIR codegen passes
  time: 0.060; rss: 189MB	write metadata
  time: 0.043; rss: 191MB	translation item collection
  time: 0.005; rss: 191MB	codegen unit partitioning
  time: 0.010; rss: 209MB	internalize symbols
time: 0.404; rss: 182MB	translation
time: 0.000; rss: 182MB	assert dep graph
time: 0.000; rss: 182MB	serialize dep graph
  time: 0.023; rss: 115MB	llvm function passes [0]
  time: 0.013; rss: 115MB	llvm module passes [0]
  time: 0.530; rss: 117MB	codegen passes [0]
  time: 0.001; rss: 117MB	codegen passes [0]
time: 0.611; rss: 117MB	LLVM passes
time: 0.000; rss: 117MB	serialize work products
time: 0.061; rss: 96MB	linking
done
