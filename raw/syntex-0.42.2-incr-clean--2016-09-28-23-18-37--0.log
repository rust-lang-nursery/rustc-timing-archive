commit eee2d04d877fe909309c39b6bdf711dc586d0a1e
Merge: 86affcd bd1ae63
Author: bors <bors@rust-lang.org>
Date:   Wed Sep 28 18:31:07 2016 -0700

    Auto merge of #36395 - durka:rangeinclusive-no-esi, r=alexcrichton
    
    remove ExactSizeIterator from RangeInclusive<{u,i}{32,size}>
    
    Fixes #36386.
    
    This is a [breaking-change] for nightly users of `#![feature(inclusive_range_syntax)]` and/or `#![feature(inclusive_range)]`.
rustc: ./syntex-0.42.2-incr-clean
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax -- -Ztime-passes -Zinput-stats -Z incremental-info
   Compiling winapi v0.2.8
   Compiling bitflags v0.5.0
   Compiling log v0.3.6
   Compiling libc v0.2.15
   Compiling winapi-build v0.1.1
   Compiling rustc-serialize v0.3.19
   Compiling unicode-xid v0.0.3
   Compiling kernel32-sys v0.2.2
   Compiling term v0.4.4
   Compiling syntex_pos v0.42.0
   Compiling syntex_errors v0.42.0
   Compiling syntex_syntax v0.42.0
time: 0.114; rss: 76MB	parsing
Lines of code:             33863
Pre-expansion node count:  225089
time: 0.000; rss: 76MB	recursion limit
time: 0.000; rss: 76MB	crate injection
time: 0.000; rss: 76MB	plugin loading
time: 0.000; rss: 76MB	plugin registration
time: 0.234; rss: 135MB	expansion
time: 0.000; rss: 135MB	maybe building test harness
time: 0.007; rss: 135MB	maybe creating a macro crate
time: 0.030; rss: 135MB	assigning node ids
Post-expansion node count: 643065
time: 0.000; rss: 135MB	checking for inline asm in case the target doesn't support it
time: 0.013; rss: 135MB	complete gated feature checking
time: 0.032; rss: 146MB	collecting defs
time: 0.024; rss: 150MB	external crate/lib resolution
time: 0.024; rss: 150MB	early lint checks
time: 0.008; rss: 150MB	AST validation
time: 0.095; rss: 165MB	name resolution
time: 0.050; rss: 204MB	lowering ast -> hir
time: 0.010; rss: 212MB	indexing hir
time: 0.007; rss: 212MB	attribute checking
time: 0.006; rss: 167MB	language item collection
time: 0.013; rss: 167MB	lifetime resolution
time: 0.000; rss: 167MB	looking for entry point
time: 0.000; rss: 167MB	looking for plugin registrar
time: 0.048; rss: 188MB	region resolution
time: 0.006; rss: 188MB	loop checking
time: 0.006; rss: 188MB	static item recursion checking
time: 0.298; rss: 189MB	compute_incremental_hashes_map
time: 0.000; rss: 189MB	load_dep_graph
time: 0.081; rss: 186MB	type collecting
time: 0.001; rss: 186MB	variance inference
time: 0.042; rss: 192MB	coherence checking
time: 0.117; rss: 194MB	wf checking
time: 0.277; rss: 202MB	item-types checking
time: 4.074; rss: 256MB	item-bodies checking
time: 0.000; rss: 256MB	drop-impl checking
time: 0.338; rss: 258MB	const checking
time: 0.054; rss: 258MB	privacy checking
time: 0.007; rss: 258MB	stability index
time: 0.027; rss: 258MB	intrinsic checking
time: 0.019; rss: 258MB	effect checking
time: 0.080; rss: 258MB	match checking
time: 0.054; rss: 244MB	liveness checking
time: 0.305; rss: 244MB	rvalue checking
time: 0.460; rss: 435MB	MIR dump
  time: 0.059; rss: 436MB	SimplifyCfg
  time: 0.088; rss: 436MB	QualifyAndPromoteConstants
  time: 0.128; rss: 436MB	TypeckMir
  time: 0.004; rss: 436MB	SimplifyBranches
  time: 0.038; rss: 436MB	SimplifyCfg
time: 0.319; rss: 436MB	MIR passes
time: 0.696; rss: 436MB	borrow checking
time: 0.024; rss: 436MB	reachability checking
time: 0.042; rss: 436MB	death checking
time: 0.041; rss: 439MB	stability checking
time: 0.000; rss: 439MB	unused lib feature checking
time: 0.233; rss: 439MB	lint checking
time: 0.000; rss: 439MB	resolving dependency formats
  time: 0.003; rss: 439MB	NoLandingPads
  time: 0.028; rss: 439MB	SimplifyCfg
  time: 0.071; rss: 447MB	EraseRegions
  time: 0.011; rss: 447MB	AddCallGuards
  time: 1.180; rss: 461MB	ElaborateDrops
  time: 0.003; rss: 461MB	NoLandingPads
  time: 0.052; rss: 462MB	SimplifyCfg
  time: 0.012; rss: 462MB	Deaggregator
  time: 0.009; rss: 462MB	AddCallGuards
  time: 0.002; rss: 462MB	PreTrans
time: 1.372; rss: 462MB	Prepare MIR codegen passes
  time: 0.319; rss: 471MB	write metadata
  time: 0.344; rss: 481MB	translation item collection
  time: 0.059; rss: 484MB	codegen unit partitioning
  time: 0.111; rss: 747MB	internalize symbols
time: 6.019; rss: 624MB	translation
time: 0.000; rss: 624MB	assert dep graph
time: 0.000; rss: 624MB	serialize dep graph
incremental: re-using 0 out of 1 modules
  time: 0.514; rss: 417MB	llvm function passes [0]
  time: 0.254; rss: 414MB	llvm module passes [0]
  time: 9.975; rss: 426MB	codegen passes [0]
  time: 0.001; rss: 428MB	codegen passes [0]
time: 11.493; rss: 428MB	LLVM passes
time: 0.000; rss: 428MB	serialize work products
time: 0.669; rss: 113MB	linking
done
