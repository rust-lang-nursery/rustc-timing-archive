commit b5d0f90929ddaae89609e9bb229a9b8a27e27615
Merge: 1842efb cc6edb2
Author: bors <bors@rust-lang.org>
Date:   Tue Dec 6 17:38:26 2016 +0000

    Auto merge of #38036 - Mark-Simulacrum:polish-2, r=nagisa,eddyb
    
    Simplify calling find_implied_output_region.
    
    @nnethercote added the optimization that find_implied_output_region
    takes a closure as an optimization in #37014, but passing an iterator is
    simpler, and more ergonomic for callers.
rustc: ./syntex-0.42.2@010-incr@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.241; rss: 151MB	expansion
time: 0.000; rss: 151MB	maybe building test harness
time: 0.006; rss: 151MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 151MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 151MB	complete gated feature checking
time: 0.023; rss: 151MB	early lint checks
time: 0.007; rss: 151MB	AST validation
time: 0.076; rss: 166MB	name resolution
time: 0.059; rss: 199MB	lowering ast -> hir
time: 0.010; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 153MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.046; rss: 176MB	region resolution
time: 0.008; rss: 176MB	loop checking
time: 0.002; rss: 176MB	static item recursion checking
time: 0.383; rss: 177MB	compute_incremental_hashes_map
time: 0.000; rss: 177MB	load_dep_graph
time: 0.009; rss: 177MB	stability index
time: 0.019; rss: 181MB	stability checking
time: 0.055; rss: 189MB	type collecting
time: 0.004; rss: 189MB	variance inference
time: 0.006; rss: 193MB	impl wf inference
time: 0.026; rss: 196MB	coherence checking
time: 0.089; rss: 199MB	wf checking
time: 0.198; rss: 207MB	item-types checking
time: 3.590; rss: 267MB	item-bodies checking
time: 0.000; rss: 267MB	drop-impl checking
time: 0.215; rss: 276MB	const checking
time: 0.060; rss: 276MB	privacy checking
time: 0.021; rss: 283MB	intrinsic checking
time: 0.014; rss: 283MB	effect checking
time: 0.052; rss: 283MB	match checking
time: 0.048; rss: 290MB	liveness checking
time: 0.175; rss: 292MB	rvalue checking
time: 0.369; rss: 481MB	MIR dump
  time: 0.058; rss: 484MB	SimplifyCfg
  time: 0.076; rss: 484MB	QualifyAndPromoteConstants
  time: 0.125; rss: 501MB	TypeckMir
  time: 0.004; rss: 501MB	SimplifyBranches
  time: 0.032; rss: 501MB	SimplifyCfg
time: 0.296; rss: 501MB	MIR cleanup and validation
time: 0.472; rss: 501MB	borrow checking
time: 0.024; rss: 501MB	reachability checking
time: 0.038; rss: 501MB	death checking
time: 0.000; rss: 501MB	unused lib feature checking
time: 0.177; rss: 501MB	lint checking
time: 0.000; rss: 501MB	resolving dependency formats
  time: 0.004; rss: 501MB	NoLandingPads
  time: 0.028; rss: 501MB	SimplifyCfg
  time: 0.066; rss: 509MB	EraseRegions
  time: 0.011; rss: 509MB	AddCallGuards
  time: 0.279; rss: 530MB	ElaborateDrops
  time: 0.004; rss: 530MB	NoLandingPads
  time: 0.056; rss: 529MB	SimplifyCfg
  time: 0.030; rss: 528MB	InstCombine
  time: 0.013; rss: 528MB	Deaggregator
  time: 0.003; rss: 528MB	CopyPropagation
  time: 0.036; rss: 528MB	SimplifyLocals
  time: 0.010; rss: 528MB	AddCallGuards
  time: 0.003; rss: 528MB	PreTrans
time: 0.544; rss: 528MB	MIR optimisations
  time: 0.068; rss: 536MB	write metadata
  time: 0.400; rss: 551MB	translation item collection
  time: 0.073; rss: 554MB	codegen unit partitioning
  time: 0.048; rss: 1457MB	internalize symbols
time: 11.882; rss: 1457MB	translation
time: 0.000; rss: 1457MB	assert dep graph
time: 1.459; rss: 1485MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.001; rss: 1201MB	llvm function passes [0]
time: 0.000; rss: 1203MB	llvm module passes [0]
time: 0.001; rss: 1207MB	llvm function passes [2]
time: 0.000; rss: 1207MB	llvm module passes [2]
time: 0.001; rss: 1207MB	llvm function passes [1]
time: 0.000; rss: 1207MB	llvm module passes [1]
time: 0.002; rss: 1207MB	llvm function passes [3]
time: 0.000; rss: 1207MB	llvm module passes [3]
time: 0.002; rss: 1207MB	codegen passes [0]
time: 0.004; rss: 1220MB	llvm function passes [4]
time: 0.001; rss: 1224MB	llvm function passes [22]
time: 0.003; rss: 1234MB	llvm module passes [22]
time: 0.009; rss: 1234MB	llvm function passes [6]
time: 0.008; rss: 1237MB	llvm module passes [4]
time: 0.014; rss: 1237MB	llvm function passes [5]
time: 0.006; rss: 1237MB	llvm module passes [6]
time: 0.007; rss: 1237MB	llvm module passes [5]
time: 0.000; rss: 1247MB	llvm function passes [37]
time: 0.000; rss: 1249MB	llvm module passes [37]
time: 0.001; rss: 1251MB	codegen passes [37]
time: 0.027; rss: 1251MB	llvm function passes [35]
time: 0.017; rss: 1251MB	llvm function passes [19]
time: 0.004; rss: 1251MB	llvm module passes [19]
time: 0.008; rss: 1251MB	llvm module passes [35]
time: 0.043; rss: 1251MB	codegen passes [2]
time: 0.049; rss: 1253MB	codegen passes [1]
time: 0.000; rss: 1253MB	llvm function passes [1]
time: 0.000; rss: 1253MB	llvm module passes [1]
time: 0.004; rss: 1253MB	codegen passes [1]
time: 0.001; rss: 1253MB	llvm function passes [1]
time: 0.000; rss: 1253MB	llvm module passes [1]
time: 0.000; rss: 1266MB	llvm function passes [23]
time: 0.060; rss: 1266MB	llvm function passes [14]
time: 0.008; rss: 1270MB	llvm module passes [23]
time: 0.044; rss: 1276MB	llvm function passes [37]
time: 0.017; rss: 1276MB	codegen passes [1]
time: 0.015; rss: 1276MB	llvm module passes [14]
time: 0.000; rss: 1276MB	llvm function passes [25]
time: 0.000; rss: 1276MB	llvm module passes [25]
time: 0.001; rss: 1276MB	codegen passes [25]
time: 0.015; rss: 1278MB	llvm module passes [37]
time: 0.086; rss: 1285MB	codegen passes [22]
time: 0.102; rss: 1285MB	llvm function passes [17]
time: 0.046; rss: 1291MB	llvm function passes [24]
time: 0.122; rss: 1291MB	codegen passes [3]
time: 0.014; rss: 1293MB	llvm module passes [24]
time: 0.091; rss: 1300MB	llvm function passes [20]
time: 0.001; rss: 1300MB	llvm module passes [20]
time: 0.063; rss: 1299MB	codegen passes [23]
time: 0.145; rss: 1299MB	llvm function passes [0]
time: 0.023; rss: 1304MB	llvm function passes [30]
time: 0.004; rss: 1304MB	llvm module passes [30]
time: 0.142; rss: 1304MB	llvm function passes [18]
time: 0.074; rss: 1308MB	llvm module passes [17]
time: 0.018; rss: 1308MB	llvm module passes [18]
time: 0.148; rss: 1314MB	llvm function passes [2]
time: 0.131; rss: 1320MB	llvm function passes [21]
time: 0.221; rss: 1339MB	llvm function passes [13]
time: 0.230; rss: 1344MB	codegen passes [4]
time: 0.003; rss: 1344MB	llvm function passes [4]
time: 0.130; rss: 1368MB	llvm function passes [26]
time: 0.130; rss: 1368MB	llvm function passes [28]
time: 0.170; rss: 1368MB	llvm function passes [22]
time: 0.160; rss: 1344MB	llvm function passes [27]
time: 0.018; rss: 1368MB	llvm module passes [4]
time: 0.080; rss: 1370MB	llvm module passes [2]
time: 0.091; rss: 1377MB	llvm module passes [21]
time: 0.000; rss: 1377MB	llvm function passes [40]
time: 0.000; rss: 1379MB	codegen passes [43]
time: 0.036; rss: 1379MB	llvm module passes [26]
time: 0.151; rss: 1381MB	llvm module passes [0]
time: 0.009; rss: 1383MB	llvm function passes [8]
time: 0.045; rss: 1383MB	llvm module passes [28]
time: 0.005; rss: 1383MB	llvm module passes [8]
time: 0.003; rss: 1385MB	llvm function passes [39]
time: 0.001; rss: 1385MB	llvm module passes [39]
time: 0.058; rss: 1390MB	llvm module passes [27]
time: 0.193; rss: 1392MB	codegen passes [20]
time: 0.086; rss: 1406MB	llvm module passes [22]
time: 0.059; rss: 1406MB	llvm module passes [40]
time: 0.015; rss: 1400MB	codegen passes [40]
time: 0.292; rss: 1404MB	llvm function passes [25]
time: 0.194; rss: 1406MB	llvm function passes [33]
time: 0.119; rss: 1406MB	codegen passes [4]
time: 0.062; rss: 1400MB	codegen passes [39]
time: 0.214; rss: 1399MB	llvm function passes [31]
time: 0.033; rss: 1399MB	llvm module passes [33]
time: 0.019; rss: 1401MB	llvm module passes [31]
time: 0.178; rss: 1403MB	llvm function passes [10]
time: 0.073; rss: 1405MB	llvm module passes [25]
time: 0.041; rss: 1411MB	llvm module passes [10]
time: 0.215; rss: 1409MB	llvm function passes [11]
time: 0.386; rss: 1416MB	llvm function passes [29]
time: 0.249; rss: 1425MB	llvm function passes [32]
time: 0.400; rss: 1426MB	llvm function passes [23]
time: 0.055; rss: 1422MB	llvm module passes [11]
time: 0.342; rss: 1426MB	llvm module passes [13]
time: 0.084; rss: 1432MB	llvm module passes [29]
time: 0.073; rss: 1436MB	llvm module passes [32]
time: 0.487; rss: 1406MB	llvm function passes [3]
time: 0.605; rss: 1404MB	llvm function passes [16]
time: 0.111; rss: 1389MB	llvm module passes [23]
time: 0.375; rss: 1391MB	llvm function passes [38]
time: 0.640; rss: 1394MB	llvm function passes [15]
time: 0.228; rss: 1396MB	llvm function passes [12]
time: 0.104; rss: 1403MB	llvm module passes [3]
time: 0.509; rss: 1403MB	codegen passes [30]
time: 0.062; rss: 1392MB	llvm module passes [12]
time: 0.117; rss: 1400MB	llvm module passes [38]
time: 0.493; rss: 1400MB	llvm function passes [46]
time: 0.736; rss: 1409MB	llvm function passes [1]
time: 0.791; rss: 1418MB	codegen passes [6]
time: 0.651; rss: 1421MB	llvm function passes [9]
time: 0.355; rss: 1411MB	llvm module passes [16]
time: 0.194; rss: 1411MB	llvm module passes [1]
time: 0.150; rss: 1423MB	llvm module passes [9]
time: 0.405; rss: 1446MB	llvm module passes [46]
time: 0.525; rss: 1445MB	llvm module passes [15]
time: 0.701; rss: 1466MB	codegen passes [8]
time: 1.353; rss: 1465MB	codegen passes [19]
time: 1.213; rss: 1500MB	codegen passes [26]
time: 1.392; rss: 1481MB	codegen passes [5]
time: 1.544; rss: 1495MB	codegen passes [35]
time: 1.414; rss: 1483MB	codegen passes [33]
time: 1.459; rss: 1490MB	codegen passes [28]
time: 1.508; rss: 1471MB	codegen passes [18]
time: 1.656; rss: 1459MB	codegen passes [14]
time: 1.653; rss: 1469MB	codegen passes [37]
time: 1.331; rss: 1463MB	codegen passes [10]
time: 1.743; rss: 1461MB	codegen passes [24]
time: 1.350; rss: 1458MB	codegen passes [12]
time: 2.196; rss: 1456MB	codegen passes [27]
time: 2.389; rss: 1501MB	codegen passes [31]
time: 2.474; rss: 1519MB	codegen passes [11]
time: 2.459; rss: 1523MB	codegen passes [3]
time: 2.616; rss: 1559MB	codegen passes [21]
time: 3.155; rss: 1545MB	codegen passes [22]
time: 2.997; rss: 1544MB	codegen passes [17]
time: 4.058; rss: 1640MB	codegen passes [2]
time: 3.778; rss: 1714MB	codegen passes [32]
time: 3.933; rss: 1696MB	codegen passes [38]
time: 3.474; rss: 1698MB	codegen passes [1]
time: 4.202; rss: 1698MB	codegen passes [29]
time: 4.324; rss: 1675MB	codegen passes [25]
time: 4.233; rss: 1625MB	codegen passes [0]
time: 4.123; rss: 1571MB	codegen passes [46]
time: 3.915; rss: 1551MB	codegen passes [9]
time: 4.951; rss: 1542MB	codegen passes [13]
time: 4.595; rss: 1482MB	codegen passes [16]
time: 4.565; rss: 1424MB	codegen passes [15]
time: 5.200; rss: 1356MB	codegen passes [23]
time: 7.340; rss: 1351MB	LLVM passes
time: 0.000; rss: 1351MB	serialize work products
time: 1.063; rss: 315MB	linking
done
