commit 25e42ac10653e4d7178e36201608cc269e3c66c7
Merge: 0400d92 bc93fbc
Author: bors <bors@rust-lang.org>
Date:   Wed Mar 2 08:42:38 2016 +0000

    Auto merge of #31937 - petrochenkov:field, r=eddyb
    
    The names are "0", "1", "2" etc, the same as used in field access.
    
    This generally make things simpler and potentially allows to reuse braced struct machinery (struct patterns, struct expressions) for tuple structs.
    
    I haven't touched the AST for stability reasons, but I intend to do it later.
    
    r? @eddyb
rustc: ./inflate-0.1.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling inflate v0.1.0 (file:///root/benchmarks/inflate-0.1.0)
time: 0.004; rss: 38MB	parsing
Lines of code:             956
Pre-expansion node count:  4761
time: 0.001; rss: 38MB	configuration 1
time: 0.000; rss: 38MB	recursion limit
time: 0.000; rss: 38MB	gated macro checking
time: 0.000; rss: 38MB	crate injection
time: 0.003; rss: 42MB	macro loading
time: 0.000; rss: 42MB	plugin loading
time: 0.000; rss: 42MB	plugin registration
time: 0.079; rss: 48MB	expansion
time: 0.001; rss: 48MB	complete gated feature checking 1
time: 0.009; rss: 48MB	configuration 2
time: 0.000; rss: 48MB	gated configuration checking
time: 0.004; rss: 48MB	maybe building test harness
time: 0.004; rss: 48MB	prelude injection
time: 0.000; rss: 48MB	checking that all macro invocations are gone
time: 0.000; rss: 48MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 48MB	complete gated feature checking 2
time: 0.000; rss: 48MB	const fn bodies and arguments
Post-expansion node count: 54798
time: 0.004; rss: 48MB	assigning node ids
time: 0.008; rss: 52MB	lowering ast -> hir
time: 0.002; rss: 52MB	indexing hir
time: 0.001; rss: 52MB	attribute checking
time: 0.004; rss: 52MB	early lint checks
time: 0.001; rss: 49MB	external crate/lib resolution
time: 0.001; rss: 49MB	language item collection
time: 0.009; rss: 58MB	resolution
time: 0.001; rss: 58MB	lifetime resolution
time: 0.000; rss: 58MB	looking for entry point
time: 0.000; rss: 58MB	looking for plugin registrar
time: 0.003; rss: 59MB	region resolution
time: 0.000; rss: 59MB	loop checking
time: 0.000; rss: 59MB	static item recursion checking
time: 0.001; rss: 60MB	type collecting
time: 0.000; rss: 60MB	variance inference
time: 0.009; rss: 72MB	coherence checking
time: 0.002; rss: 72MB	wf checking
time: 0.002; rss: 75MB	item-types checking
time: 2.444; rss: 101MB	item-bodies checking
time: 0.000; rss: 101MB	drop-impl checking
time: 0.013; rss: 101MB	const checking
time: 0.002; rss: 101MB	privacy checking
time: 0.000; rss: 101MB	stability index
time: 0.000; rss: 101MB	intrinsic checking
time: 0.001; rss: 101MB	effect checking
time: 0.003; rss: 101MB	match checking
time: 0.064; rss: 102MB	liveness checking
time: 0.009; rss: 102MB	rvalue checking
time: 0.036; rss: 111MB	MIR dump
time: 0.000; rss: 111MB	MIR passes
time: 0.222; rss: 110MB	borrow checking
time: 0.000; rss: 110MB	reachability checking
time: 0.003; rss: 110MB	death checking
time: 0.002; rss: 110MB	stability checking
time: 0.000; rss: 110MB	unused lib feature checking
time: 0.017; rss: 111MB	lint checking
time: 0.000; rss: 111MB	resolving dependency formats
time: 0.002; rss: 111MB	erasing regions from MIR
  time: 0.012; rss: 122MB	translation item collection
  time: 0.003; rss: 135MB	write metadata
time: 0.364; rss: 132MB	translation
  time: 0.026; rss: 99MB	llvm function passes [0]
  time: 0.005; rss: 99MB	llvm module passes [0]
  time: 0.495; rss: 105MB	codegen passes [0]
  time: 0.000; rss: 93MB	codegen passes [0]
time: 0.568; rss: 92MB	LLVM passes
time: 0.034; rss: 91MB	linking
done
