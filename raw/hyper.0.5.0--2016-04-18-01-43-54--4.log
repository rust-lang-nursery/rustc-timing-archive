commit 63760acf31e605c8a91bb5cbcbcb4bfb95435e48
Merge: ed7c567 6ae8027
Author: bors <bors@rust-lang.org>
Date:   Sun Apr 17 19:11:20 2016 -0700

    Auto merge of #33064 - jseyfried:improve_resolve_performance, r=eddyb
    
    resolve: Improve performance
    
    This fixes #33061 by speeding up searchs through all traits in scope, a bottleneck in `resolve`.
    
    According to my measurements, this PR improves resolution performance by a factor of 3.4x on `librustc`, which almost completely reverses the 3.75x performance regression reported in #33061.
    
    r? @eddyb
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.040; rss: 41MB	parsing
Lines of code:             9154
Pre-expansion node count:  45594
time: 0.009; rss: 42MB	configuration 1
time: 0.000; rss: 42MB	recursion limit
time: 0.000; rss: 42MB	gated macro checking
time: 0.000; rss: 42MB	crate injection
time: 0.004; rss: 47MB	macro loading
time: 0.000; rss: 47MB	plugin loading
time: 0.000; rss: 47MB	plugin registration
time: 0.199; rss: 57MB	expansion
time: 0.005; rss: 57MB	complete gated feature checking 1
time: 0.029; rss: 57MB	configuration 2
time: 0.000; rss: 57MB	gated configuration checking
time: 0.012; rss: 57MB	maybe building test harness
time: 0.009; rss: 57MB	prelude injection
time: 0.001; rss: 57MB	checking that all macro invocations are gone
time: 0.000; rss: 57MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 57MB	complete gated feature checking 2
time: 0.001; rss: 57MB	const fn bodies and arguments
Post-expansion node count: 107125
time: 0.008; rss: 57MB	assigning node ids
time: 0.019; rss: 62MB	lowering ast -> hir
time: 0.007; rss: 64MB	indexing hir
time: 0.001; rss: 64MB	attribute checking
time: 0.007; rss: 64MB	early lint checks
time: 0.004; rss: 59MB	external crate/lib resolution
time: 0.001; rss: 59MB	language item collection
time: 0.027; rss: 75MB	resolution
time: 0.002; rss: 75MB	lifetime resolution
time: 0.000; rss: 75MB	looking for entry point
time: 0.000; rss: 75MB	looking for plugin registrar
time: 0.008; rss: 80MB	region resolution
time: 0.001; rss: 80MB	loop checking
time: 0.001; rss: 80MB	static item recursion checking
time: 0.000; rss: 80MB	load_dep_graph
time: 0.018; rss: 89MB	type collecting
time: 0.000; rss: 89MB	variance inference
time: 0.047; rss: 104MB	coherence checking
time: 0.074; rss: 105MB	wf checking
time: 0.029; rss: 106MB	item-types checking
time: 0.500; rss: 123MB	item-bodies checking
time: 0.000; rss: 123MB	drop-impl checking
time: 0.042; rss: 125MB	const checking
time: 0.010; rss: 125MB	privacy checking
time: 0.001; rss: 125MB	stability index
time: 0.004; rss: 125MB	intrinsic checking
time: 0.002; rss: 125MB	effect checking
time: 0.012; rss: 125MB	match checking
time: 0.005; rss: 126MB	liveness checking
time: 0.033; rss: 126MB	rvalue checking
time: 0.064; rss: 133MB	MIR dump
time: 0.022; rss: 134MB	MIR passes
time: 0.067; rss: 134MB	borrow checking
time: 0.003; rss: 134MB	reachability checking
time: 0.007; rss: 134MB	death checking
time: 0.006; rss: 134MB	stability checking
time: 0.000; rss: 134MB	unused lib feature checking
time: 0.048; rss: 135MB	lint checking
time: 0.000; rss: 135MB	resolving dependency formats
time: 0.011; rss: 136MB	Prepare MIR codegen passes
  time: 0.221; rss: 162MB	translation item collection
  time: 0.008; rss: 163MB	codegen unit partitioning
  time: 0.141; rss: 277MB	write metadata
time: 1.783; rss: 277MB	translation
time: 0.001; rss: 277MB	assert dep graph
time: 0.000; rss: 277MB	serialize dep graph
  time: 0.100; rss: 165MB	llvm function passes [0]
  time: 0.048; rss: 166MB	llvm module passes [0]
  time: 1.643; rss: 170MB	codegen passes [0]
  time: 0.001; rss: 118MB	codegen passes [0]
time: 1.996; rss: 116MB	LLVM passes
time: 0.175; rss: 114MB	linking
done
