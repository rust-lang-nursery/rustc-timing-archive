commit 6e8f92f11cdc713ddec4c60c66097d05c194bab2
Merge: ca76c7e 0714024
Author: bors <bors@rust-lang.org>
Date:   Fri Oct 7 11:38:27 2016 -0700

    Auto merge of #36981 - alexcrichton:catch-unwind-for-tests, r=sfackler
    
    std: Minor cleanup to libtest
    
    * Don't spawn two threads for all tests, just one now that `catch_unwind` is
      stable.
    * Remove usage of the unstable `box` keyword
    * Remove usage of the unstable `FnBox` trait
rustc: ./syntex-0.42.2-incr-clean
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax -- -Ztime-passes -Zinput-stats -Z incremental-info
   Compiling rustc-serialize v0.3.19
   Compiling libc v0.2.15
   Compiling log v0.3.6
   Compiling winapi-build v0.1.1
   Compiling bitflags v0.5.0
   Compiling unicode-xid v0.0.3
   Compiling winapi v0.2.8
   Compiling kernel32-sys v0.2.2
   Compiling term v0.4.4
   Compiling syntex_pos v0.42.0
   Compiling syntex_errors v0.42.0
   Compiling syntex_syntax v0.42.0
time: 0.141; rss: 74MB	parsing
Lines of code:             33687
Pre-expansion node count:  224033
time: 0.000; rss: 74MB	recursion limit
time: 0.000; rss: 74MB	crate injection
time: 0.000; rss: 74MB	plugin loading
time: 0.000; rss: 74MB	plugin registration
time: 0.360; rss: 142MB	expansion
time: 0.000; rss: 142MB	maybe building test harness
time: 0.007; rss: 142MB	maybe creating a macro crate
Post-expansion node count: 641571
time: 0.000; rss: 142MB	checking for inline asm in case the target doesn't support it
time: 0.014; rss: 142MB	complete gated feature checking
time: 0.024; rss: 142MB	early lint checks
time: 0.008; rss: 142MB	AST validation
time: 0.115; rss: 156MB	name resolution
time: 0.127; rss: 198MB	lowering ast -> hir
time: 0.019; rss: 205MB	indexing hir
time: 0.007; rss: 205MB	attribute checking
time: 0.006; rss: 157MB	language item collection
time: 0.012; rss: 157MB	lifetime resolution
time: 0.000; rss: 157MB	looking for entry point
time: 0.000; rss: 157MB	looking for plugin registrar
time: 0.067; rss: 166MB	region resolution
time: 0.006; rss: 166MB	loop checking
time: 0.006; rss: 166MB	static item recursion checking
time: 0.269; rss: 167MB	compute_incremental_hashes_map
time: 0.000; rss: 167MB	load_dep_graph
time: 0.081; rss: 171MB	type collecting
time: 0.001; rss: 171MB	variance inference
time: 0.040; rss: 175MB	coherence checking
time: 0.103; rss: 177MB	wf checking
time: 0.201; rss: 182MB	item-types checking
time: 4.126; rss: 224MB	item-bodies checking
time: 0.000; rss: 224MB	drop-impl checking
time: 0.338; rss: 227MB	const checking
time: 0.057; rss: 227MB	privacy checking
time: 0.007; rss: 227MB	stability index
time: 0.023; rss: 227MB	intrinsic checking
time: 0.020; rss: 227MB	effect checking
time: 0.059; rss: 227MB	match checking
time: 0.091; rss: 223MB	liveness checking
time: 0.297; rss: 223MB	rvalue checking
time: 0.681; rss: 398MB	MIR dump
  time: 0.060; rss: 404MB	SimplifyCfg
  time: 0.085; rss: 404MB	QualifyAndPromoteConstants
  time: 0.115; rss: 404MB	TypeckMir
  time: 0.005; rss: 404MB	SimplifyBranches
  time: 0.032; rss: 404MB	SimplifyCfg
time: 0.297; rss: 404MB	MIR passes
time: 0.713; rss: 407MB	borrow checking
time: 0.023; rss: 407MB	reachability checking
time: 0.048; rss: 407MB	death checking
time: 0.048; rss: 409MB	stability checking
time: 0.000; rss: 409MB	unused lib feature checking
time: 0.235; rss: 409MB	lint checking
time: 0.000; rss: 409MB	resolving dependency formats
  time: 0.004; rss: 409MB	NoLandingPads
  time: 0.027; rss: 409MB	SimplifyCfg
  time: 0.090; rss: 416MB	EraseRegions
  time: 0.012; rss: 416MB	AddCallGuards
  time: 1.081; rss: 437MB	ElaborateDrops
  time: 0.004; rss: 437MB	NoLandingPads
  time: 0.054; rss: 437MB	SimplifyCfg
  time: 0.032; rss: 436MB	InstCombine
  time: 0.012; rss: 436MB	Deaggregator
  time: 0.003; rss: 436MB	CopyPropagation
  time: 0.010; rss: 436MB	AddCallGuards
  time: 0.003; rss: 436MB	PreTrans
time: 1.330; rss: 436MB	Prepare MIR codegen passes
  time: 0.282; rss: 443MB	write metadata
  time: 0.493; rss: 451MB	translation item collection
  time: 0.074; rss: 459MB	codegen unit partitioning
  time: 0.060; rss: 708MB	internalize symbols
time: 5.731; rss: 588MB	translation
time: 0.000; rss: 588MB	assert dep graph
time: 0.000; rss: 588MB	serialize dep graph
incremental: re-using 0 out of 1 modules
  time: 0.514; rss: 407MB	llvm function passes [0]
  time: 0.248; rss: 415MB	llvm module passes [0]
  time: 10.133; rss: 403MB	codegen passes [0]
  time: 0.001; rss: 405MB	codegen passes [0]
time: 11.808; rss: 405MB	LLVM passes
time: 0.000; rss: 405MB	serialize work products
time: 0.660; rss: 106MB	linking
done
