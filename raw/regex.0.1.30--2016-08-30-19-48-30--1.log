commit eac41469d778d18ae7bf38fa917ed0fe122f944b
Merge: 4473130 59e5e0b
Author: bors <bors@rust-lang.org>
Date:   Tue Aug 30 16:28:32 2016 -0700

    Auto merge of #35048 - tmiasko:monotonic-wait-timeout, r=alexcrichton
    
    Use monotonic time in condition variables.
    
    Configure condition variables to use monotonic time using
    pthread_condattr_setclock on systems where this is possible.
    This fixes the issue when thread waiting on condition variable is
    woken up too late when system time is moved backwards.
rustc: ./regex.0.1.30
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling regex v0.1.30 (file:///root/benchmarks/regex.0.1.30)
time: 0.053; rss: 57MB	parsing
Lines of code:             8558
Pre-expansion node count:  58080
time: 0.005; rss: 57MB	configuration
time: 0.000; rss: 57MB	recursion limit
time: 0.000; rss: 57MB	crate injection
time: 0.000; rss: 57MB	plugin loading
time: 0.000; rss: 57MB	plugin registration
time: 0.029; rss: 79MB	expansion
time: 0.000; rss: 79MB	maybe building test harness
time: 0.003; rss: 79MB	assigning node ids
Post-expansion node count: 68152
time: 0.000; rss: 79MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 79MB	complete gated feature checking
time: 0.001; rss: 80MB	collecting defs
time: 0.001; rss: 80MB	external crate/lib resolution
time: 0.003; rss: 80MB	early lint checks
time: 0.000; rss: 80MB	AST validation
time: 0.006; rss: 81MB	name resolution
time: 0.008; rss: 92MB	lowering ast -> hir
time: 0.002; rss: 94MB	indexing hir
time: 0.001; rss: 94MB	attribute checking
time: 0.001; rss: 86MB	language item collection
time: 0.001; rss: 86MB	lifetime resolution
time: 0.000; rss: 86MB	looking for entry point
time: 0.000; rss: 86MB	looking for plugin registrar
time: 0.006; rss: 89MB	region resolution
time: 0.001; rss: 89MB	loop checking
time: 0.001; rss: 89MB	static item recursion checking
time: 0.008; rss: 89MB	compute_incremental_hashes_map
time: 0.000; rss: 89MB	load_dep_graph
time: 0.008; rss: 91MB	type collecting
time: 0.000; rss: 91MB	variance inference
time: 0.020; rss: 93MB	coherence checking
time: 0.009; rss: 94MB	wf checking
time: 0.254; rss: 103MB	item-types checking
time: 0.146; rss: 109MB	item-bodies checking
time: 0.000; rss: 109MB	drop-impl checking
time: 0.027; rss: 112MB	const checking
time: 0.004; rss: 112MB	privacy checking
time: 0.001; rss: 112MB	stability index
time: 0.002; rss: 112MB	intrinsic checking
time: 0.001; rss: 112MB	effect checking
time: 0.003; rss: 112MB	match checking
time: 0.002; rss: 112MB	liveness checking
time: 0.007; rss: 112MB	rvalue checking
time: 0.043; rss: 125MB	MIR dump
time: 0.020; rss: 125MB	MIR passes
time: 0.021; rss: 125MB	borrow checking
time: 0.000; rss: 125MB	reachability checking
time: 0.002; rss: 125MB	death checking
time: 0.002; rss: 125MB	stability checking
time: 0.000; rss: 125MB	unused lib feature checking
time: 0.026; rss: 125MB	lint checking
time: 0.000; rss: 125MB	resolving dependency formats
time: 0.019; rss: 127MB	Prepare MIR codegen passes
  time: 0.165; rss: 136MB	write metadata
  time: 0.045; rss: 137MB	translation item collection
  time: 0.007; rss: 139MB	codegen unit partitioning
  time: 0.013; rss: 162MB	internalize symbols
time: 0.650; rss: 156MB	translation
time: 0.000; rss: 156MB	assert dep graph
time: 0.000; rss: 156MB	serialize dep graph
  time: 0.036; rss: 112MB	llvm function passes [0]
  time: 0.019; rss: 114MB	llvm module passes [0]
  time: 0.669; rss: 117MB	codegen passes [0]
  time: 0.001; rss: 117MB	codegen passes [0]
time: 0.782; rss: 117MB	LLVM passes
time: 0.000; rss: 117MB	serialize work products
time: 0.066; rss: 89MB	linking
done
