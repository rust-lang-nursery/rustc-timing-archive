commit 187d9896028f1d0b79db3010f2a546334212838b
Merge: ab03f85 f35eff2
Author: bors <bors@rust-lang.org>
Date:   Thu Nov 10 05:10:04 2016 -0800

    Auto merge of #37542 - jseyfried:custom_derive_reexports, r=nrc
    
    Support `#[macro_reexport]`ing custom derives
    
    This is gated behind `#![feature(macro_reexport)]` and `#![feature(proc_macro)]`.
    r? @nrc
rustc: ./syntex-0.42.2-incr-clean
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax -- -Ztime-passes -Zinput-stats -Z incremental-info
   Compiling syntex_syntax v0.42.0
time: 0.094; rss: 70MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 70MB	recursion limit
time: 0.000; rss: 70MB	crate injection
time: 0.000; rss: 70MB	plugin loading
time: 0.000; rss: 70MB	plugin registration
time: 0.232; rss: 143MB	expansion
time: 0.000; rss: 143MB	maybe building test harness
time: 0.006; rss: 143MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 143MB	checking for inline asm in case the target doesn't support it
time: 0.013; rss: 143MB	complete gated feature checking
time: 0.023; rss: 143MB	early lint checks
time: 0.007; rss: 143MB	AST validation
time: 0.077; rss: 158MB	name resolution
time: 0.044; rss: 183MB	lowering ast -> hir
time: 0.008; rss: 194MB	indexing hir
time: 0.006; rss: 194MB	attribute checking
time: 0.005; rss: 150MB	language item collection
time: 0.010; rss: 150MB	lifetime resolution
time: 0.000; rss: 150MB	looking for entry point
time: 0.000; rss: 150MB	looking for plugin registrar
time: 0.042; rss: 171MB	region resolution
time: 0.005; rss: 171MB	loop checking
time: 0.005; rss: 171MB	static item recursion checking
time: 0.325; rss: 171MB	compute_incremental_hashes_map
time: 0.000; rss: 171MB	load_dep_graph
time: 0.040; rss: 170MB	type collecting
time: 0.001; rss: 170MB	variance inference
time: 0.018; rss: 173MB	coherence checking
time: 0.096; rss: 175MB	wf checking
time: 0.187; rss: 185MB	item-types checking
time: 3.361; rss: 233MB	item-bodies checking
time: 0.000; rss: 233MB	drop-impl checking
time: 0.218; rss: 253MB	const checking
time: 0.046; rss: 253MB	privacy checking
time: 0.006; rss: 253MB	stability index
time: 0.018; rss: 253MB	intrinsic checking
time: 0.014; rss: 253MB	effect checking
time: 0.047; rss: 253MB	match checking
time: 0.048; rss: 247MB	liveness checking
time: 0.183; rss: 247MB	rvalue checking
time: 0.376; rss: 437MB	MIR dump
  time: 0.056; rss: 439MB	SimplifyCfg
  time: 0.072; rss: 439MB	QualifyAndPromoteConstants
  time: 0.098; rss: 439MB	TypeckMir
  time: 0.004; rss: 439MB	SimplifyBranches
  time: 0.030; rss: 439MB	SimplifyCfg
time: 0.261; rss: 439MB	MIR cleanup and validation
time: 0.482; rss: 439MB	borrow checking
time: 0.025; rss: 439MB	reachability checking
time: 0.040; rss: 439MB	death checking
time: 0.031; rss: 441MB	stability checking
time: 0.000; rss: 441MB	unused lib feature checking
time: 0.195; rss: 441MB	lint checking
time: 0.000; rss: 441MB	resolving dependency formats
  time: 0.003; rss: 441MB	NoLandingPads
  time: 0.026; rss: 441MB	SimplifyCfg
  time: 0.061; rss: 450MB	EraseRegions
  time: 0.011; rss: 450MB	AddCallGuards
  time: 0.268; rss: 464MB	ElaborateDrops
  time: 0.003; rss: 464MB	NoLandingPads
  time: 0.051; rss: 464MB	SimplifyCfg
  time: 0.028; rss: 464MB	InstCombine
  time: 0.012; rss: 464MB	Deaggregator
  time: 0.002; rss: 464MB	CopyPropagation
  time: 0.034; rss: 464MB	SimplifyLocals
  time: 0.010; rss: 464MB	AddCallGuards
  time: 0.003; rss: 464MB	PreTrans
time: 0.515; rss: 464MB	MIR optimisations
  time: 0.060; rss: 476MB	write metadata
  time: 0.391; rss: 485MB	translation item collection
  time: 0.055; rss: 493MB	codegen unit partitioning
  time: 0.049; rss: 743MB	internalize symbols
time: 4.425; rss: 743MB	translation
time: 0.000; rss: 743MB	assert dep graph
time: 0.000; rss: 743MB	serialize dep graph
incremental: re-using 0 out of 1 modules
  time: 0.542; rss: 421MB	llvm function passes [0]
  time: 0.261; rss: 430MB	llvm module passes [0]
  time: 10.459; rss: 427MB	codegen passes [0]
  time: 0.000; rss: 427MB	codegen passes [0]
time: 12.056; rss: 427MB	LLVM passes
time: 0.000; rss: 427MB	serialize work products
time: 0.336; rss: 105MB	linking
done
