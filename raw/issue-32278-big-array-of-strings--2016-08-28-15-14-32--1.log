commit e4791e086d671d429db864787f6b60547a28b0f5
Merge: 6fd13fa 8766c18
Author: bors <bors@rust-lang.org>
Date:   Sun Aug 28 10:19:52 2016 -0700

    Auto merge of #35984 - jonas-schievink:reproducible-builds, r=eddyb
    
    Steps towards reproducible builds
    
    cc #34902
    
    Running `make dist` twice will result in a rustc tarball where only `librustc_back.so`, `librustc_llvm.so` and `librustc_trans.so` differ. Building `libstd` and `libcore` twice with the same compiler and flags produces identical artifacts.
    
    The third commit should close #24473
rustc: ./issue-32278-big-array-of-strings
/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc big-array-of-strings.rs -Ztime-passes -Zinput-stats
time: 0.138; rss: 63MB	parsing
Lines of code:             65577
Pre-expansion node count:  65552
time: 0.005; rss: 63MB	configuration
time: 0.000; rss: 63MB	recursion limit
time: 0.000; rss: 63MB	crate injection
time: 0.000; rss: 63MB	plugin loading
time: 0.000; rss: 63MB	plugin registration
time: 0.024; rss: 84MB	expansion
time: 0.000; rss: 84MB	maybe building test harness
time: 0.003; rss: 84MB	assigning node ids
Post-expansion node count: 65565
time: 0.000; rss: 84MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 84MB	complete gated feature checking
time: 0.001; rss: 84MB	collecting defs
time: 0.003; rss: 84MB	external crate/lib resolution
time: 0.004; rss: 84MB	early lint checks
time: 0.001; rss: 84MB	AST validation
time: 0.002; rss: 84MB	name resolution
time: 0.007; rss: 102MB	lowering ast -> hir
time: 0.002; rss: 107MB	indexing hir
time: 0.001; rss: 107MB	attribute checking
time: 0.001; rss: 97MB	language item collection
time: 0.001; rss: 97MB	lifetime resolution
time: 0.000; rss: 97MB	looking for entry point
time: 0.000; rss: 97MB	looking for plugin registrar
time: 0.009; rss: 103MB	region resolution
time: 0.001; rss: 103MB	loop checking
time: 0.001; rss: 103MB	static item recursion checking
time: 0.006; rss: 103MB	compute_incremental_hashes_map
time: 0.000; rss: 103MB	load_dep_graph
time: 0.000; rss: 103MB	type collecting
time: 0.000; rss: 103MB	variance inference
time: 0.005; rss: 105MB	coherence checking
time: 0.001; rss: 105MB	wf checking
time: 0.687; rss: 116MB	item-types checking
time: 0.000; rss: 116MB	item-bodies checking
time: 0.000; rss: 116MB	drop-impl checking
time: 0.023; rss: 113MB	const checking
time: 0.002; rss: 113MB	privacy checking
time: 0.001; rss: 113MB	stability index
time: 0.001; rss: 113MB	intrinsic checking
time: 0.000; rss: 113MB	effect checking
time: 0.000; rss: 113MB	match checking
time: 0.001; rss: 113MB	liveness checking
time: 0.000; rss: 113MB	rvalue checking
time: 0.046; rss: 125MB	MIR dump
time: 0.002; rss: 125MB	MIR passes
time: 0.001; rss: 125MB	borrow checking
time: 0.000; rss: 125MB	reachability checking
time: 0.001; rss: 125MB	death checking
time: 0.001; rss: 125MB	stability checking
time: 0.000; rss: 125MB	unused lib feature checking
time: 0.025; rss: 125MB	lint checking
time: 0.001; rss: 125MB	resolving dependency formats
time: 0.001; rss: 125MB	Prepare MIR codegen passes
  time: 0.000; rss: 125MB	write metadata
  time: 0.001; rss: 125MB	translation item collection
  time: 0.000; rss: 126MB	codegen unit partitioning
  time: 0.001; rss: 134MB	internalize symbols
time: 0.063; rss: 132MB	translation
time: 0.000; rss: 132MB	assert dep graph
time: 0.000; rss: 132MB	serialize dep graph
  time: 0.009; rss: 88MB	llvm function passes [0]
  time: 0.000; rss: 88MB	llvm module passes [0]
  time: 0.181; rss: 87MB	codegen passes [0]
  time: 0.000; rss: 87MB	codegen passes [0]
time: 0.191; rss: 87MB	LLVM passes
time: 0.000; rss: 87MB	serialize work products
  time: 0.187; rss: 76MB	running linker
time: 0.189; rss: 76MB	linking
done
