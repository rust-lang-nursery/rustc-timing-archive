commit 772c600d4d6f39daa6d07d1a60ee0df3d3426978
Merge: 241a9d0 432eb8a
Author: bors <bors@rust-lang.org>
Date:   Tue Apr 5 18:58:24 2016 -0700

    Auto merge of #32688 - jseyfried:ast_groundwork_for_1422, r=pnkfelix
    
    [breaking-batch] Add support for `pub(restricted)` syntax in the AST
    
    This PR allows the AST to represent the `pub(restricted)` syntax from RFC 1422 (cc #32409).
    
    More specifically, it makes `ast::Visibility` non-`Copy` and adds two new variants, `Visibility::Crate` for `pub(crate)` and `Visitibility::Restricted { path: P<Path>, id: NodeId }` for `pub(path)`.
    
    plugin-[breaking-change] cc #31645
    r? @pnkfelix
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.030; rss: 46MB	parsing
Lines of code:             9154
Pre-expansion node count:  45594
time: 0.010; rss: 46MB	configuration 1
time: 0.000; rss: 46MB	recursion limit
time: 0.000; rss: 46MB	gated macro checking
time: 0.000; rss: 46MB	crate injection
time: 0.004; rss: 51MB	macro loading
time: 0.000; rss: 51MB	plugin loading
time: 0.000; rss: 51MB	plugin registration
time: 0.192; rss: 60MB	expansion
time: 0.006; rss: 60MB	complete gated feature checking 1
time: 0.035; rss: 60MB	configuration 2
time: 0.000; rss: 60MB	gated configuration checking
time: 0.013; rss: 60MB	maybe building test harness
time: 0.011; rss: 60MB	prelude injection
time: 0.001; rss: 60MB	checking that all macro invocations are gone
time: 0.000; rss: 60MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 60MB	complete gated feature checking 2
time: 0.001; rss: 60MB	const fn bodies and arguments
Post-expansion node count: 107125
time: 0.010; rss: 60MB	assigning node ids
time: 0.011; rss: 64MB	lowering ast -> hir
time: 0.005; rss: 66MB	indexing hir
time: 0.001; rss: 66MB	attribute checking
time: 0.007; rss: 66MB	early lint checks
time: 0.004; rss: 64MB	external crate/lib resolution
time: 0.001; rss: 64MB	language item collection
time: 0.027; rss: 85MB	resolution
time: 0.002; rss: 85MB	lifetime resolution
time: 0.000; rss: 85MB	looking for entry point
time: 0.000; rss: 85MB	looking for plugin registrar
time: 0.006; rss: 87MB	region resolution
time: 0.001; rss: 87MB	loop checking
time: 0.001; rss: 87MB	static item recursion checking
time: 0.019; rss: 95MB	type collecting
time: 0.000; rss: 95MB	variance inference
time: 0.489; rss: 113MB	coherence checking
time: 0.075; rss: 114MB	wf checking
time: 0.029; rss: 117MB	item-types checking
time: 0.467; rss: 136MB	item-bodies checking
time: 0.000; rss: 136MB	drop-impl checking
time: 0.035; rss: 138MB	const checking
time: 0.007; rss: 138MB	privacy checking
time: 0.001; rss: 138MB	stability index
time: 0.004; rss: 138MB	intrinsic checking
time: 0.002; rss: 138MB	effect checking
time: 0.012; rss: 138MB	match checking
time: 0.005; rss: 138MB	liveness checking
time: 0.032; rss: 138MB	rvalue checking
time: 0.045; rss: 143MB	MIR dump
time: 0.022; rss: 143MB	MIR passes
time: 0.062; rss: 143MB	borrow checking
time: 0.003; rss: 143MB	reachability checking
time: 0.006; rss: 143MB	death checking
time: 0.005; rss: 143MB	stability checking
time: 0.000; rss: 143MB	unused lib feature checking
time: 0.046; rss: 143MB	lint checking
time: 0.000; rss: 143MB	resolving dependency formats
time: 0.010; rss: 145MB	Prepare MIR codegen passes
  time: 0.171; rss: 166MB	translation item collection
  time: 0.139; rss: 291MB	write metadata
time: 1.427; rss: 291MB	translation
  time: 0.097; rss: 169MB	llvm function passes [0]
  time: 0.049; rss: 171MB	llvm module passes [0]
  time: 1.631; rss: 175MB	codegen passes [0]
  time: 0.001; rss: 123MB	codegen passes [0]
time: 1.977; rss: 123MB	LLVM passes
time: 0.172; rss: 121MB	linking
done
