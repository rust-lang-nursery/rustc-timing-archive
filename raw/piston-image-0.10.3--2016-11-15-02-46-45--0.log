commit 0ed951993fb5721a303ca5fa743543dd9f3f6b10
Merge: bd6a54d 7cd8a49
Author: bors <bors@rust-lang.org>
Date:   Mon Nov 14 18:12:26 2016 -0800

    Auto merge of #37775 - alexcrichton:try-fix-dox, r=brson
    
    rustbuild: Tweak default rule inclusion
    
    If a rule is flagged with `default(true)` then the pseudo-rule `default:foo`
    will include that. If a rule is also flagged with `.host(true)`, however, then
    the rule shouldn't be included for targets that aren't in the host array. This
    adds a filter to ensure we don't pull in host rules for targets by accident.
rustc: ./piston-image-0.10.3
cargo rustc  -- -Ztime-passes -Zinput-stats
   Compiling num-traits v0.1.35
   Compiling libc v0.2.16
   Compiling inflate v0.1.1
   Compiling byteorder v0.5.3
   Compiling glob v0.2.11
   Compiling bitflags v0.7.0
   Compiling color_quant v1.0.0
   Compiling scoped_threadpool v0.1.7
   Compiling rustc-serialize v0.3.19
   Compiling lzw v0.10.0
   Compiling gcc v0.3.35
   Compiling num_cpus v0.2.13
   Compiling rand v0.3.14
   Compiling gif v0.9.0
   Compiling num-integer v0.1.32
   Compiling num-iter v0.1.32
   Compiling num v0.1.35
   Compiling enum_primitive v0.1.0
   Compiling miniz-sys v0.1.7
   Compiling flate2 v0.2.14
   Compiling deque v0.3.1
   Compiling rayon v0.4.2
   Compiling jpeg-decoder v0.1.6
   Compiling png v0.5.2
   Compiling num-bigint v0.1.35
   Compiling num-rational v0.1.35
   Compiling image v0.10.3 (file:///root/benchmarks/piston-image-0.10.3)
time: 0.052; rss: 47MB	parsing
Lines of code:             12000
Pre-expansion node count:  90152
time: 0.000; rss: 47MB	recursion limit
time: 0.000; rss: 47MB	crate injection
time: 0.000; rss: 47MB	plugin loading
time: 0.000; rss: 47MB	plugin registration
time: 0.080; rss: 86MB	expansion
time: 0.000; rss: 86MB	maybe building test harness
time: 0.001; rss: 86MB	maybe creating a macro crate
Post-expansion node count: 148881
time: 0.000; rss: 86MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 86MB	complete gated feature checking
time: 0.006; rss: 86MB	early lint checks
time: 0.001; rss: 86MB	AST validation
time: 0.025; rss: 90MB	name resolution
time: 0.026; rss: 98MB	lowering ast -> hir
time: 0.007; rss: 101MB	indexing hir
time: 0.002; rss: 101MB	attribute checking
time: 0.001; rss: 90MB	language item collection
time: 0.003; rss: 90MB	lifetime resolution
time: 0.000; rss: 90MB	looking for entry point
time: 0.000; rss: 90MB	looking for plugin registrar
time: 0.018; rss: 95MB	region resolution
time: 0.001; rss: 95MB	loop checking
time: 0.001; rss: 95MB	static item recursion checking
time: 0.051; rss: 95MB	compute_incremental_hashes_map
time: 0.000; rss: 95MB	load_dep_graph
time: 0.017; rss: 98MB	type collecting
time: 0.000; rss: 98MB	variance inference
time: 0.015; rss: 100MB	coherence checking
time: 0.065; rss: 101MB	wf checking
time: 0.139; rss: 104MB	item-types checking
time: 0.708; rss: 113MB	item-bodies checking
time: 0.000; rss: 113MB	drop-impl checking
time: 0.061; rss: 118MB	const checking
time: 0.009; rss: 118MB	privacy checking
time: 0.001; rss: 118MB	stability index
time: 0.006; rss: 118MB	intrinsic checking
time: 0.003; rss: 118MB	effect checking
time: 0.013; rss: 118MB	match checking
time: 0.010; rss: 119MB	liveness checking
time: 0.041; rss: 119MB	rvalue checking
time: 0.149; rss: 156MB	MIR dump
  time: 0.012; rss: 158MB	SimplifyCfg
  time: 0.020; rss: 158MB	QualifyAndPromoteConstants
  time: 0.022; rss: 158MB	TypeckMir
  time: 0.001; rss: 158MB	SimplifyBranches
  time: 0.005; rss: 158MB	SimplifyCfg
time: 0.060; rss: 158MB	MIR cleanup and validation
time: 0.111; rss: 158MB	borrow checking
time: 0.003; rss: 158MB	reachability checking
time: 0.008; rss: 158MB	death checking
time: 0.008; rss: 159MB	stability checking
time: 0.000; rss: 159MB	unused lib feature checking
time: 0.065; rss: 159MB	lint checking
time: 0.000; rss: 159MB	resolving dependency formats
  time: 0.001; rss: 159MB	NoLandingPads
  time: 0.005; rss: 159MB	SimplifyCfg
  time: 0.011; rss: 160MB	EraseRegions
  time: 0.002; rss: 160MB	AddCallGuards
  time: 0.047; rss: 163MB	ElaborateDrops
  time: 0.001; rss: 163MB	NoLandingPads
  time: 0.009; rss: 163MB	SimplifyCfg
  time: 0.006; rss: 163MB	InstCombine
  time: 0.002; rss: 163MB	Deaggregator
  time: 0.001; rss: 163MB	CopyPropagation
  time: 0.008; rss: 163MB	SimplifyLocals
  time: 0.002; rss: 163MB	AddCallGuards
  time: 0.000; rss: 163MB	PreTrans
time: 0.094; rss: 163MB	MIR optimisations
  time: 0.017; rss: 165MB	write metadata
  time: 0.451; rss: 178MB	translation item collection
  time: 0.025; rss: 182MB	codegen unit partitioning
  time: 0.022; rss: 301MB	internalize symbols
time: 2.619; rss: 301MB	translation
time: 0.000; rss: 301MB	assert dep graph
time: 0.000; rss: 301MB	serialize dep graph
  time: 0.210; rss: 218MB	llvm function passes [0]
  time: 0.083; rss: 221MB	llvm module passes [0]
  time: 4.219; rss: 221MB	codegen passes [0]
  time: 0.000; rss: 221MB	codegen passes [0]
time: 4.901; rss: 221MB	LLVM passes
time: 0.000; rss: 221MB	serialize work products
time: 0.151; rss: 92MB	linking
done
