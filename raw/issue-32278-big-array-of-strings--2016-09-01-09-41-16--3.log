commit b2799a56a1631ee351e4687ee649808e28cccda1
Merge: 3135b78 f040208
Author: bors <bors@rust-lang.org>
Date:   Thu Sep 1 02:53:28 2016 -0700

    Auto merge of #35755 - SimonSapin:char_convert, r=alexcrichton
    
    Implement std::convert traits for char
    
    This is motivated by avoiding the `as` operator, which sometimes silently truncates, and instead use conversions that are explicitly lossless and infallible.
    
    I’m less certain that `From<u8> for char` should be implemented: while it matches an existing behavior of `as`, it’s not necessarily the right thing to use for non-ASCII bytes. It effectively decodes bytes as ISO/IEC 8859-1 (since Unicode designed its first 256 code points to be compatible with that encoding), but that is not apparent in the API name.
rustc: ./issue-32278-big-array-of-strings
/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc big-array-of-strings.rs -Ztime-passes -Zinput-stats
time: 0.141; rss: 63MB	parsing
Lines of code:             65577
Pre-expansion node count:  65552
time: 0.005; rss: 63MB	configuration
time: 0.000; rss: 63MB	recursion limit
time: 0.000; rss: 63MB	crate injection
time: 0.000; rss: 63MB	plugin loading
time: 0.000; rss: 63MB	plugin registration
time: 0.023; rss: 86MB	expansion
time: 0.000; rss: 86MB	maybe building test harness
time: 0.004; rss: 86MB	assigning node ids
Post-expansion node count: 65565
time: 0.000; rss: 86MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 86MB	complete gated feature checking
time: 0.001; rss: 86MB	collecting defs
time: 0.003; rss: 86MB	external crate/lib resolution
time: 0.004; rss: 86MB	early lint checks
time: 0.000; rss: 86MB	AST validation
time: 0.002; rss: 86MB	name resolution
time: 0.007; rss: 104MB	lowering ast -> hir
time: 0.002; rss: 108MB	indexing hir
time: 0.001; rss: 108MB	attribute checking
time: 0.001; rss: 99MB	language item collection
time: 0.001; rss: 99MB	lifetime resolution
time: 0.000; rss: 99MB	looking for entry point
time: 0.000; rss: 99MB	looking for plugin registrar
time: 0.009; rss: 105MB	region resolution
time: 0.001; rss: 105MB	loop checking
time: 0.001; rss: 105MB	static item recursion checking
time: 0.006; rss: 105MB	compute_incremental_hashes_map
time: 0.000; rss: 105MB	load_dep_graph
time: 0.000; rss: 105MB	type collecting
time: 0.000; rss: 105MB	variance inference
time: 0.005; rss: 107MB	coherence checking
time: 0.001; rss: 107MB	wf checking
time: 0.694; rss: 118MB	item-types checking
time: 0.000; rss: 118MB	item-bodies checking
time: 0.000; rss: 118MB	drop-impl checking
time: 0.020; rss: 115MB	const checking
time: 0.002; rss: 115MB	privacy checking
time: 0.001; rss: 115MB	stability index
time: 0.001; rss: 115MB	intrinsic checking
time: 0.001; rss: 115MB	effect checking
time: 0.000; rss: 115MB	match checking
time: 0.001; rss: 115MB	liveness checking
time: 0.000; rss: 115MB	rvalue checking
time: 0.046; rss: 127MB	MIR dump
time: 0.002; rss: 127MB	MIR passes
time: 0.001; rss: 127MB	borrow checking
time: 0.000; rss: 127MB	reachability checking
time: 0.001; rss: 127MB	death checking
time: 0.001; rss: 127MB	stability checking
time: 0.000; rss: 127MB	unused lib feature checking
time: 0.026; rss: 127MB	lint checking
time: 0.001; rss: 127MB	resolving dependency formats
time: 0.001; rss: 127MB	Prepare MIR codegen passes
  time: 0.000; rss: 127MB	write metadata
  time: 0.001; rss: 127MB	translation item collection
  time: 0.000; rss: 127MB	codegen unit partitioning
  time: 0.001; rss: 135MB	internalize symbols
time: 0.065; rss: 134MB	translation
time: 0.000; rss: 134MB	assert dep graph
time: 0.000; rss: 134MB	serialize dep graph
  time: 0.009; rss: 91MB	llvm function passes [0]
  time: 0.000; rss: 91MB	llvm module passes [0]
  time: 0.177; rss: 89MB	codegen passes [0]
  time: 0.000; rss: 89MB	codegen passes [0]
time: 0.187; rss: 89MB	LLVM passes
time: 0.000; rss: 89MB	serialize work products
  time: 0.212; rss: 79MB	running linker
time: 0.213; rss: 79MB	linking
done
