commit 2dc132e4d25cf7424deddf6c33c6059d93ff5248
Merge: 59b7c90 8f803c2
Author: bors <bors@rust-lang.org>
Date:   Tue Feb 2 17:11:48 2016 +0000

    Auto merge of #31312 - alexcrichton:no-le-in-powerpc64le, r=alexcrichton
    
    Currently the `mipsel-unknown-linux-gnu` target doesn't actually set the
    `target_arch` value to `mipsel` but it rather uses `mips`. Alternatively the
    `powerpc64le` target does indeed set the `target_arch` as `powerpc64le`,
    causing a bit of inconsistency between theset two.
    
    As these are just the same instance of one instruction set, let's use
    `target_endian` to switch between them and only set the `target_arch` as one
    value. This should cut down on the number of `#[cfg]` annotations necessary and
    all around be a little more ergonomic.
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.031; rss: 43MB	parsing
Lines of code:             9154
Pre-expansion node count:  45594
time: 0.009; rss: 43MB	configuration 1
time: 0.000; rss: 43MB	recursion limit
time: 0.000; rss: 43MB	gated macro checking
time: 0.000; rss: 43MB	crate injection
time: 0.004; rss: 49MB	macro loading
time: 0.000; rss: 49MB	plugin loading
time: 0.000; rss: 49MB	plugin registration
time: 0.191; rss: 57MB	expansion
time: 0.005; rss: 57MB	complete gated feature checking 1
time: 0.034; rss: 57MB	configuration 2
time: 0.000; rss: 57MB	gated configuration checking
time: 0.013; rss: 57MB	maybe building test harness
time: 0.011; rss: 57MB	prelude injection
time: 0.001; rss: 57MB	checking that all macro invocations are gone
time: 0.000; rss: 57MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 57MB	complete gated feature checking 2
Post-expansion node count: 109258
time: 0.010; rss: 57MB	assigning node ids
time: 0.011; rss: 62MB	lowering ast -> hir
time: 0.005; rss: 66MB	indexing hir
time: 0.000; rss: 66MB	attribute checking
time: 0.005; rss: 66MB	early lint checks
time: 0.003; rss: 61MB	external crate/lib resolution
time: 0.001; rss: 61MB	language item collection
time: 0.028; rss: 81MB	resolution
time: 0.002; rss: 81MB	lifetime resolution
time: 0.000; rss: 81MB	looking for entry point
time: 0.000; rss: 81MB	looking for plugin registrar
time: 0.006; rss: 84MB	region resolution
time: 0.001; rss: 84MB	loop checking
time: 0.001; rss: 84MB	static item recursion checking
time: 0.014; rss: 88MB	type collecting
time: 0.000; rss: 88MB	variance inference
time: 0.038; rss: 106MB	coherence checking
time: 0.068; rss: 106MB	wf checking
time: 0.026; rss: 109MB	item-types checking
time: 0.518; rss: 131MB	item-bodies checking
time: 0.000; rss: 131MB	drop-impl checking
time: 0.042; rss: 133MB	const checking
time: 0.008; rss: 133MB	privacy checking
time: 0.001; rss: 133MB	stability index
time: 0.004; rss: 133MB	intrinsic checking
time: 0.002; rss: 133MB	effect checking
time: 0.013; rss: 133MB	match checking
time: 0.049; rss: 137MB	MIR dump
time: 0.006; rss: 137MB	liveness checking
time: 0.070; rss: 137MB	borrow checking
time: 0.035; rss: 137MB	rvalue checking
time: 0.003; rss: 137MB	reachability checking
time: 0.006; rss: 137MB	death checking
time: 0.007; rss: 137MB	stability checking
time: 0.000; rss: 137MB	unused lib feature checking
time: 0.046; rss: 137MB	lint checking
time: 0.000; rss: 137MB	resolving dependency formats
time: 0.007; rss: 137MB	erasing regions from MIR
  time: 0.135; rss: 271MB	write metadata
time: 1.430; rss: 271MB	translation
  time: 0.101; rss: 169MB	llvm function passes [0]
  time: 0.049; rss: 169MB	llvm module passes [0]
  time: 1.677; rss: 214MB	codegen passes [0]
  time: 0.001; rss: 177MB	codegen passes [0]
time: 2.060; rss: 177MB	LLVM passes
time: 0.171; rss: 175MB	linking
done
