commit 8ce735858d97fbabffa1d78d29fb644cd7c4f845
Merge: bd938166 1fac8a4
Author: bors <bors@rust-lang.org>
Date:   Mon Apr 25 18:48:05 2016 -0700

    Auto merge of #33210 - alexcrichton:fix-ndk-dir, r=alexcrichton
    
    mk: Fix use of deprecated configure var
    
    The `--android-cross-path` has been deprecated for some time now, we should use
    `CFG_ARM_LINUX_ANDROIDEABI_NDK` instead.
    
    Ideally this would use the right triple, but we're only testing ARM for now.
rustc: ./rust-encoding.0.2.32
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling encoding_index_tests v0.1.4 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-simpchinese v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-japanese v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-tradchinese v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-singlebyte v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-korean v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding v0.2.32 (file:///root/benchmarks/rust-encoding.0.2.32)
time: 0.033; rss: 53MB	parsing
Lines of code:             6441
Pre-expansion node count:  30335
time: 0.006; rss: 54MB	configuration 1
time: 0.000; rss: 54MB	recursion limit
time: 0.000; rss: 54MB	gated macro checking
time: 0.000; rss: 54MB	crate injection
time: 0.003; rss: 57MB	macro loading
time: 0.000; rss: 57MB	plugin loading
time: 0.000; rss: 57MB	plugin registration
time: 0.044; rss: 59MB	expansion
time: 0.001; rss: 59MB	complete gated feature checking 1
time: 0.006; rss: 59MB	configuration 2
time: 0.000; rss: 59MB	gated configuration checking
time: 0.003; rss: 59MB	maybe building test harness
time: 0.003; rss: 59MB	prelude injection
time: 0.000; rss: 59MB	checking that all macro invocations are gone
time: 0.000; rss: 59MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 59MB	complete gated feature checking 2
time: 0.000; rss: 59MB	const fn bodies and arguments
Post-expansion node count: 41611
time: 0.003; rss: 59MB	assigning node ids
time: 0.003; rss: 61MB	collecting defs
time: 0.001; rss: 61MB	external crate/lib resolution
time: 0.005; rss: 63MB	lowering ast -> hir
time: 0.002; rss: 64MB	indexing hir
time: 0.000; rss: 64MB	attribute checking
time: 0.002; rss: 64MB	early lint checks
time: 0.000; rss: 63MB	language item collection
time: 0.008; rss: 72MB	name resolution
time: 0.001; rss: 72MB	lifetime resolution
time: 0.000; rss: 72MB	looking for entry point
time: 0.000; rss: 72MB	looking for plugin registrar
time: 0.003; rss: 73MB	region resolution
time: 0.000; rss: 73MB	loop checking
time: 0.000; rss: 73MB	static item recursion checking
time: 0.000; rss: 73MB	load_dep_graph
time: 0.005; rss: 76MB	type collecting
time: 0.000; rss: 76MB	variance inference
time: 0.022; rss: 93MB	coherence checking
time: 0.017; rss: 93MB	wf checking
time: 0.015; rss: 94MB	item-types checking
time: 0.209; rss: 104MB	item-bodies checking
time: 0.000; rss: 104MB	drop-impl checking
time: 0.011; rss: 104MB	const checking
time: 0.003; rss: 104MB	privacy checking
time: 0.000; rss: 104MB	stability index
time: 0.001; rss: 104MB	intrinsic checking
time: 0.000; rss: 104MB	effect checking
time: 0.006; rss: 104MB	match checking
time: 0.002; rss: 104MB	liveness checking
time: 0.006; rss: 104MB	rvalue checking
time: 0.032; rss: 111MB	MIR dump
time: 0.008; rss: 111MB	MIR passes
time: 0.022; rss: 111MB	borrow checking
time: 0.000; rss: 111MB	reachability checking
time: 0.002; rss: 111MB	death checking
time: 0.002; rss: 111MB	stability checking
time: 0.000; rss: 111MB	unused lib feature checking
time: 0.024; rss: 112MB	lint checking
time: 0.000; rss: 112MB	resolving dependency formats
time: 0.004; rss: 113MB	Prepare MIR codegen passes
  time: 0.030; rss: 117MB	translation item collection
  time: 0.002; rss: 118MB	codegen unit partitioning
  time: 0.060; rss: 150MB	write metadata
time: 0.396; rss: 150MB	translation
time: 0.000; rss: 150MB	assert dep graph
time: 0.000; rss: 150MB	serialize dep graph
  time: 0.027; rss: 114MB	llvm function passes [0]
  time: 0.050; rss: 117MB	llvm module passes [0]
  time: 0.579; rss: 122MB	codegen passes [0]
  time: 0.001; rss: 107MB	codegen passes [0]
time: 0.722; rss: 106MB	LLVM passes
time: 0.054; rss: 104MB	linking
done
