commit 3c795e08d6f4a532f12f3f8e1837db5e0647f8b0
Merge: d5759a3 5b40452
Author: bors <bors@rust-lang.org>
Date:   Thu May 26 02:52:49 2016 -0700

    Auto merge of #33872 - nagisa:undef-is-llvm-for-sigsegv, r=eddyb
    
    Fix handling of FFI arguments
    
    r? @eddyb @nikomatsakis or whoever else.
    
    cc @alexcrichton @rust-lang/core
    
    The strategy employed here was to essentially change code we generate from
    
    ```llvm
      %s = alloca %S ; potentially smaller than argument, but never larger
      %1 = bitcast %S* %s to { i64, i64 }*
      store { i64, i64 } %0, { i64, i64 }* %1, align 4
    ```
    
    to
    
    ```llvm
      %1 = alloca { i64, i64 } ; the copy of argument itself
      store { i64, i64 } %0, { i64, i64 }* %1, align 4
      %s = bitcast { i64, i64 }* %1 to %S* ; potentially truncate by casting to a pointer of smaller type.
    ```
rustc: ./issue-32278-big-array-of-strings
/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc big-array-of-strings.rs -Ztime-passes -Zinput-stats
time: 0.217; rss: 66MB	parsing
Lines of code:             65577
Pre-expansion node count:  65552
time: 0.013; rss: 66MB	configuration 1
time: 0.000; rss: 66MB	recursion limit
time: 0.000; rss: 66MB	crate injection
time: 0.021; rss: 99MB	macro loading
time: 0.000; rss: 99MB	plugin loading
time: 0.000; rss: 99MB	plugin registration
time: 0.055; rss: 107MB	expansion
time: 0.014; rss: 107MB	configuration 2
time: 0.000; rss: 107MB	gated configuration checking
time: 0.006; rss: 107MB	maybe building test harness
time: 0.007; rss: 107MB	prelude injection
time: 0.000; rss: 107MB	checking that all macro invocations are gone
time: 0.000; rss: 107MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 107MB	complete gated feature checking
Post-expansion node count: 65565
time: 0.009; rss: 107MB	assigning node ids
time: 0.001; rss: 107MB	collecting defs
time: 0.004; rss: 108MB	external crate/lib resolution
time: 0.010; rss: 108MB	early lint checks
time: 0.002; rss: 108MB	name resolution
time: 0.014; rss: 120MB	lowering ast -> hir
time: 0.002; rss: 121MB	indexing hir
time: 0.001; rss: 121MB	attribute checking
time: 0.001; rss: 107MB	language item collection
time: 0.001; rss: 107MB	lifetime resolution
time: 0.000; rss: 107MB	looking for entry point
time: 0.000; rss: 107MB	looking for plugin registrar
time: 0.016; rss: 115MB	region resolution
time: 0.001; rss: 115MB	loop checking
time: 0.002; rss: 115MB	static item recursion checking
time: 0.000; rss: 115MB	load_dep_graph
time: 0.000; rss: 115MB	type collecting
time: 0.000; rss: 115MB	variance inference
time: 0.006; rss: 118MB	coherence checking
time: 0.001; rss: 118MB	wf checking
time: 1.291; rss: 133MB	item-types checking
time: 0.000; rss: 133MB	item-bodies checking
time: 0.000; rss: 133MB	drop-impl checking
time: 0.024; rss: 130MB	const checking
time: 0.002; rss: 130MB	privacy checking
time: 0.001; rss: 130MB	stability index
time: 0.001; rss: 130MB	intrinsic checking
time: 0.001; rss: 130MB	effect checking
time: 0.001; rss: 130MB	match checking
time: 0.001; rss: 130MB	liveness checking
time: 0.000; rss: 130MB	rvalue checking
time: 0.071; rss: 140MB	MIR dump
time: 0.002; rss: 140MB	MIR passes
time: 0.001; rss: 140MB	borrow checking
time: 0.000; rss: 140MB	reachability checking
time: 0.001; rss: 140MB	death checking
time: 0.001; rss: 140MB	stability checking
time: 0.000; rss: 140MB	unused lib feature checking
time: 0.031; rss: 140MB	lint checking
time: 0.002; rss: 140MB	resolving dependency formats
time: 0.001; rss: 140MB	Prepare MIR codegen passes
  time: 0.000; rss: 142MB	write metadata
  time: 0.001; rss: 142MB	translation item collection
  time: 0.000; rss: 142MB	codegen unit partitioning
time: 0.090; rss: 145MB	translation
time: 0.000; rss: 145MB	assert dep graph
time: 0.000; rss: 145MB	serialize dep graph
  time: 0.003; rss: 107MB	llvm function passes [0]
  time: 0.000; rss: 107MB	llvm module passes [0]
  time: 0.168; rss: 109MB	codegen passes [0]
  time: 0.000; rss: 98MB	codegen passes [0]
time: 0.183; rss: 98MB	LLVM passes
  time: 0.193; rss: 98MB	running linker
time: 0.194; rss: 96MB	linking
done
