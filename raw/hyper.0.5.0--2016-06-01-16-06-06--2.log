commit 12d16599d84c25899f02a6e53110d1e70cdcbd8a
Merge: c2cab1f 696a570
Author: bors <bors@rust-lang.org>
Date:   Wed Jun 1 10:21:55 2016 -0700

    Auto merge of #33814 - lambda:rtabort-use-platform-abort, r=alexcrichton
    
    Open code the __fastfail intrinsic for rtabort! on windows
    
    As described https://msdn.microsoft.com/en-us/library/dn774154.aspx
    
    This is a Windows 8+ mechanism for terminating the process quickly,
    which degrades to either an access violation or bugcheck in older versions.
    
    I'm not sure this is better the the current mechanism of terminating
    with an illegal instruction, but we recently converted unix to
    terminate more correctly with SIGABORT, and this *seems* more correct
    for windows.
    
    [breaking-change]
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.036; rss: 53MB	parsing
Lines of code:             9154
Pre-expansion node count:  44646
time: 0.007; rss: 53MB	configuration 1
time: 0.000; rss: 53MB	recursion limit
time: 0.000; rss: 53MB	crate injection
time: 0.019; rss: 91MB	macro loading
time: 0.000; rss: 91MB	plugin loading
time: 0.000; rss: 91MB	plugin registration
time: 0.249; rss: 101MB	expansion
time: 0.000; rss: 101MB	gated configuration checking
time: 0.014; rss: 101MB	maybe building test harness
time: 0.011; rss: 101MB	prelude injection
time: 0.001; rss: 101MB	checking that all macro invocations are gone
time: 0.000; rss: 101MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 101MB	complete gated feature checking
Post-expansion node count: 101566
time: 0.010; rss: 101MB	assigning node ids
time: 0.003; rss: 101MB	collecting defs
time: 0.011; rss: 114MB	external crate/lib resolution
time: 0.007; rss: 114MB	early lint checks
time: 0.001; rss: 114MB	AST validation
time: 0.022; rss: 117MB	name resolution
time: 0.012; rss: 124MB	lowering ast -> hir
time: 0.001; rss: 126MB	indexing hir
time: 0.001; rss: 126MB	attribute checking
time: 0.001; rss: 117MB	language item collection
time: 0.002; rss: 117MB	lifetime resolution
time: 0.000; rss: 117MB	looking for entry point
time: 0.000; rss: 117MB	looking for plugin registrar
time: 0.006; rss: 121MB	region resolution
time: 0.001; rss: 121MB	loop checking
time: 0.001; rss: 121MB	static item recursion checking
time: 0.000; rss: 121MB	load_dep_graph
time: 0.044; rss: 124MB	type collecting
time: 0.000; rss: 124MB	variance inference
time: 0.046; rss: 131MB	coherence checking
time: 0.107; rss: 132MB	wf checking
time: 0.037; rss: 132MB	item-types checking
time: 0.547; rss: 142MB	item-bodies checking
time: 0.000; rss: 142MB	drop-impl checking
time: 0.045; rss: 142MB	const checking
time: 0.008; rss: 142MB	privacy checking
time: 0.001; rss: 142MB	stability index
time: 0.006; rss: 142MB	intrinsic checking
time: 0.002; rss: 142MB	effect checking
time: 0.015; rss: 142MB	match checking
time: 0.004; rss: 143MB	liveness checking
time: 0.033; rss: 145MB	rvalue checking
time: 0.070; rss: 153MB	MIR dump
time: 0.043; rss: 153MB	MIR passes
time: 0.076; rss: 153MB	borrow checking
time: 0.003; rss: 153MB	reachability checking
time: 0.006; rss: 153MB	death checking
time: 0.006; rss: 153MB	stability checking
time: 0.000; rss: 153MB	unused lib feature checking
time: 0.052; rss: 153MB	lint checking
time: 0.000; rss: 153MB	resolving dependency formats
time: 0.012; rss: 156MB	Prepare MIR codegen passes
  time: 0.132; rss: 160MB	write metadata
  time: 0.300; rss: 168MB	translation item collection
  time: 0.007; rss: 168MB	codegen unit partitioning
time: 1.818; rss: 287MB	translation
time: 0.001; rss: 287MB	assert dep graph
time: 0.000; rss: 287MB	serialize dep graph
  time: 0.097; rss: 180MB	llvm function passes [0]
  time: 0.048; rss: 181MB	llvm module passes [0]
  time: 1.622; rss: 183MB	codegen passes [0]
  time: 0.001; rss: 132MB	codegen passes [0]
time: 1.967; rss: 130MB	LLVM passes
time: 0.176; rss: 128MB	linking
done
