commit 16281888c0f319706cd07e3c569e0aeb5a66d3b6
Merge: 375fa6e 9e2bd92
Author: bors <bors@rust-lang.org>
Date:   Thu Jun 30 23:30:51 2016 -0700

    Auto merge of #34563 - alexcrichton:robust-mk, r=brson
    
    mk: Don't consider LLVM done until it's done
    
    Currently if an LLVM build is interrupted *after* it creates the llvm-config
    binary but before it's done it puts us in an inconsistent state where we think
    LLVM is compiled but it's not actually. This tweaks our logic to only consider
    LLVM done building once it's actually done building.
    
    This should hopefully alleviate problems on the bots where if we interrupt at
    the wrong time it doesn't corrupt the build directory.
rustc: ./jld-day15-parser
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling day15 v0.1.0 (file:///root/benchmarks/jld-day15-parser)
time: 0.001; rss: 76MB	parsing
Lines of code:             72
Pre-expansion node count:  654
time: 0.000; rss: 76MB	configuration
time: 0.000; rss: 76MB	recursion limit
time: 0.000; rss: 76MB	crate injection
time: 0.000; rss: 80MB	plugin loading
time: 0.000; rss: 80MB	plugin registration
time: 0.021; rss: 114MB	expansion
time: 0.000; rss: 114MB	maybe building test harness
time: 0.000; rss: 114MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 114MB	complete gated feature checking
Post-expansion node count: 1155
time: 0.000; rss: 114MB	assigning node ids
time: 0.000; rss: 114MB	collecting defs
time: 0.004; rss: 118MB	external crate/lib resolution
time: 0.000; rss: 118MB	early lint checks
time: 0.000; rss: 118MB	AST validation
time: 0.001; rss: 118MB	name resolution
time: 0.000; rss: 118MB	lowering ast -> hir
time: 0.000; rss: 118MB	indexing hir
time: 0.000; rss: 118MB	attribute checking
time: 0.000; rss: 118MB	language item collection
time: 0.000; rss: 118MB	lifetime resolution
time: 0.000; rss: 118MB	looking for entry point
time: 0.000; rss: 118MB	looking for plugin registrar
time: 0.000; rss: 118MB	region resolution
time: 0.000; rss: 118MB	loop checking
time: 0.000; rss: 118MB	static item recursion checking
time: 0.000; rss: 118MB	load_dep_graph
time: 0.001; rss: 118MB	type collecting
time: 0.000; rss: 118MB	variance inference
time: 0.005; rss: 123MB	coherence checking
time: 0.007; rss: 123MB	wf checking
time: 0.000; rss: 123MB	item-types checking
time: 0.046; rss: 131MB	item-bodies checking
time: 0.000; rss: 131MB	drop-impl checking
time: 0.001; rss: 131MB	const checking
time: 0.000; rss: 131MB	privacy checking
time: 0.000; rss: 131MB	stability index
time: 0.000; rss: 131MB	intrinsic checking
time: 0.000; rss: 131MB	effect checking
time: 0.000; rss: 131MB	match checking
time: 0.000; rss: 131MB	liveness checking
time: 0.000; rss: 131MB	rvalue checking
time: 0.001; rss: 131MB	MIR dump
time: 0.001; rss: 131MB	MIR passes
time: 0.001; rss: 131MB	borrow checking
time: 0.000; rss: 131MB	reachability checking
time: 0.000; rss: 131MB	death checking
time: 0.000; rss: 131MB	stability checking
time: 0.000; rss: 131MB	unused lib feature checking
time: 0.004; rss: 131MB	lint checking
time: 0.002; rss: 131MB	resolving dependency formats
time: 0.002; rss: 131MB	Prepare MIR codegen passes
  time: 0.000; rss: 131MB	write metadata
  time: 0.615; rss: 137MB	translation item collection
  time: 0.000; rss: 137MB	codegen unit partitioning
time: 3.232; rss: 164MB	translation
time: 0.000; rss: 164MB	assert dep graph
time: 0.000; rss: 164MB	serialize dep graph
  time: 0.177; rss: 143MB	llvm function passes [0]
  time: 0.015; rss: 143MB	llvm module passes [0]
  time: 2.765; rss: 148MB	codegen passes [0]
  time: 0.001; rss: 142MB	codegen passes [0]
time: 3.007; rss: 141MB	LLVM passes
  time: 0.126; rss: 141MB	running linker
time: 0.127; rss: 141MB	linking
done
