commit a29c49f5cca849cd5ac79b3cd70b934bb33cf4e6
Merge: 0b2c356 f5827d0
Author: bors <bors@rust-lang.org>
Date:   Tue Oct 11 23:36:29 2016 -0700

    Auto merge of #37095 - petrochenkov:metactor, r=alexcrichton
    
    Temporary fix for metadata decoding for struct constructors
    
    Same as https://github.com/rust-lang/rust/pull/37078, but for nightly.
    Ideally, metadata lookup functions should "just work" for constructor ids, but this fixes the issue as well.
    
    Fixes https://github.com/rust-lang/rust/issues/37026
    r? @alexcrichton
rustc: ./syntex-0.42.2-incr-clean
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax -- -Ztime-passes -Zinput-stats -Z incremental-info
   Compiling rustc-serialize v0.3.19
   Compiling winapi v0.2.8
   Compiling log v0.3.6
   Compiling libc v0.2.15
   Compiling bitflags v0.5.0
   Compiling winapi-build v0.1.1
   Compiling unicode-xid v0.0.3
   Compiling kernel32-sys v0.2.2
   Compiling term v0.4.4
   Compiling syntex_pos v0.42.0
   Compiling syntex_errors v0.42.0
   Compiling syntex_syntax v0.42.0
time: 0.155; rss: 73MB	parsing
Lines of code:             33687
Pre-expansion node count:  224033
time: 0.000; rss: 73MB	recursion limit
time: 0.000; rss: 73MB	crate injection
time: 0.000; rss: 73MB	plugin loading
time: 0.000; rss: 73MB	plugin registration
time: 0.361; rss: 142MB	expansion
time: 0.000; rss: 142MB	maybe building test harness
time: 0.007; rss: 142MB	maybe creating a macro crate
Post-expansion node count: 641571
time: 0.000; rss: 142MB	checking for inline asm in case the target doesn't support it
time: 0.014; rss: 142MB	complete gated feature checking
time: 0.024; rss: 142MB	early lint checks
time: 0.008; rss: 142MB	AST validation
time: 0.119; rss: 157MB	name resolution
time: 0.125; rss: 197MB	lowering ast -> hir
time: 0.019; rss: 205MB	indexing hir
time: 0.007; rss: 205MB	attribute checking
time: 0.006; rss: 157MB	language item collection
time: 0.013; rss: 157MB	lifetime resolution
time: 0.000; rss: 157MB	looking for entry point
time: 0.000; rss: 157MB	looking for plugin registrar
time: 0.069; rss: 166MB	region resolution
time: 0.006; rss: 166MB	loop checking
time: 0.006; rss: 166MB	static item recursion checking
time: 0.266; rss: 168MB	compute_incremental_hashes_map
time: 0.000; rss: 168MB	load_dep_graph
time: 0.044; rss: 173MB	type collecting
time: 0.001; rss: 173MB	variance inference
time: 0.039; rss: 177MB	coherence checking
time: 0.099; rss: 179MB	wf checking
time: 0.196; rss: 184MB	item-types checking
time: 4.136; rss: 224MB	item-bodies checking
time: 0.000; rss: 224MB	drop-impl checking
time: 0.341; rss: 227MB	const checking
time: 0.059; rss: 227MB	privacy checking
time: 0.008; rss: 227MB	stability index
time: 0.024; rss: 227MB	intrinsic checking
time: 0.020; rss: 227MB	effect checking
time: 0.061; rss: 227MB	match checking
time: 0.092; rss: 221MB	liveness checking
time: 0.303; rss: 221MB	rvalue checking
time: 0.684; rss: 397MB	MIR dump
  time: 0.065; rss: 404MB	SimplifyCfg
  time: 0.088; rss: 404MB	QualifyAndPromoteConstants
  time: 0.114; rss: 404MB	TypeckMir
  time: 0.005; rss: 404MB	SimplifyBranches
  time: 0.032; rss: 404MB	SimplifyCfg
time: 0.303; rss: 404MB	MIR passes
time: 0.727; rss: 407MB	borrow checking
time: 0.023; rss: 407MB	reachability checking
time: 0.049; rss: 407MB	death checking
time: 0.046; rss: 408MB	stability checking
time: 0.000; rss: 408MB	unused lib feature checking
time: 0.234; rss: 408MB	lint checking
time: 0.000; rss: 408MB	resolving dependency formats
  time: 0.003; rss: 408MB	NoLandingPads
  time: 0.027; rss: 408MB	SimplifyCfg
  time: 0.097; rss: 416MB	EraseRegions
  time: 0.012; rss: 416MB	AddCallGuards
  time: 1.106; rss: 435MB	ElaborateDrops
  time: 0.003; rss: 435MB	NoLandingPads
  time: 0.054; rss: 436MB	SimplifyCfg
  time: 0.032; rss: 436MB	InstCombine
  time: 0.012; rss: 436MB	Deaggregator
  time: 0.003; rss: 436MB	CopyPropagation
  time: 0.010; rss: 436MB	AddCallGuards
  time: 0.003; rss: 436MB	PreTrans
time: 1.362; rss: 436MB	Prepare MIR codegen passes
  time: 0.279; rss: 442MB	write metadata
  time: 0.494; rss: 451MB	translation item collection
  time: 0.071; rss: 457MB	codegen unit partitioning
  time: 0.060; rss: 705MB	internalize symbols
time: 5.826; rss: 585MB	translation
time: 0.000; rss: 585MB	assert dep graph
time: 0.000; rss: 585MB	serialize dep graph
incremental: re-using 0 out of 1 modules
  time: 0.515; rss: 410MB	llvm function passes [0]
  time: 0.261; rss: 416MB	llvm module passes [0]
  time: 10.161; rss: 414MB	codegen passes [0]
  time: 0.002; rss: 410MB	codegen passes [0]
time: 11.833; rss: 410MB	LLVM passes
time: 0.000; rss: 410MB	serialize work products
time: 0.667; rss: 105MB	linking
done
