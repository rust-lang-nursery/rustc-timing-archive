commit 509d14fc70d673bd01c7721481f63cb1bc503103
Merge: 35e8924 8918ddf
Author: bors <bors@rust-lang.org>
Date:   Thu Nov 17 20:56:03 2016 -0800

    Auto merge of #37846 - jseyfried:fix_proc_macro_dep, r=alexcrichton
    
    Fix bug in proc_macro dependency loading
    
    Fixes #37839.
    r? @alexcrichton
rustc: ./issue-32278-big-array-of-strings
cargo rustc  -- -Ztime-passes -Zinput-stats
   Compiling issue-32278-big-array-of-strings v0.1.0 (file:///root/benchmarks/issue-32278-big-array-of-strings)
time: 0.099; rss: 60MB	parsing
Lines of code:             65577
Pre-expansion node count:  65552
time: 0.000; rss: 60MB	recursion limit
time: 0.000; rss: 60MB	crate injection
time: 0.000; rss: 60MB	plugin loading
time: 0.000; rss: 60MB	plugin registration
time: 0.022; rss: 82MB	expansion
time: 0.000; rss: 82MB	maybe building test harness
time: 0.001; rss: 82MB	maybe creating a macro crate
Post-expansion node count: 65565
time: 0.000; rss: 82MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 82MB	complete gated feature checking
time: 0.005; rss: 82MB	early lint checks
time: 0.000; rss: 86MB	AST validation
time: 0.003; rss: 86MB	name resolution
time: 0.005; rss: 95MB	lowering ast -> hir
time: 0.001; rss: 99MB	indexing hir
time: 0.001; rss: 99MB	attribute checking
time: 0.000; rss: 88MB	language item collection
time: 0.000; rss: 88MB	lifetime resolution
time: 0.000; rss: 88MB	looking for entry point
time: 0.000; rss: 88MB	looking for plugin registrar
time: 0.005; rss: 94MB	region resolution
time: 0.000; rss: 94MB	loop checking
time: 0.001; rss: 94MB	static item recursion checking
time: 0.020; rss: 94MB	compute_incremental_hashes_map
time: 0.000; rss: 94MB	load_dep_graph
time: 0.000; rss: 94MB	type collecting
time: 0.000; rss: 94MB	variance inference
time: 0.000; rss: 94MB	impl wf inference
time: 0.004; rss: 96MB	coherence checking
time: 0.000; rss: 97MB	wf checking
time: 0.538; rss: 108MB	item-types checking
time: 0.000; rss: 108MB	item-bodies checking
time: 0.000; rss: 108MB	drop-impl checking
time: 0.022; rss: 107MB	const checking
time: 0.001; rss: 107MB	privacy checking
time: 0.000; rss: 107MB	stability index
time: 0.000; rss: 107MB	intrinsic checking
time: 0.000; rss: 107MB	effect checking
time: 0.000; rss: 107MB	match checking
time: 0.000; rss: 107MB	liveness checking
time: 0.000; rss: 107MB	rvalue checking
time: 0.032; rss: 115MB	MIR dump
  time: 0.000; rss: 115MB	SimplifyCfg
  time: 0.001; rss: 115MB	QualifyAndPromoteConstants
  time: 0.001; rss: 115MB	TypeckMir
  time: 0.000; rss: 115MB	SimplifyBranches
  time: 0.000; rss: 115MB	SimplifyCfg
time: 0.001; rss: 115MB	MIR cleanup and validation
time: 0.001; rss: 115MB	borrow checking
time: 0.000; rss: 115MB	reachability checking
time: 0.000; rss: 115MB	death checking
time: 0.000; rss: 115MB	stability checking
time: 0.000; rss: 115MB	unused lib feature checking
time: 0.023; rss: 115MB	lint checking
time: 0.001; rss: 116MB	resolving dependency formats
  time: 0.000; rss: 116MB	NoLandingPads
  time: 0.000; rss: 116MB	SimplifyCfg
  time: 0.001; rss: 116MB	EraseRegions
  time: 0.000; rss: 116MB	AddCallGuards
  time: 0.000; rss: 116MB	ElaborateDrops
  time: 0.000; rss: 116MB	NoLandingPads
  time: 0.000; rss: 116MB	SimplifyCfg
  time: 0.000; rss: 116MB	InstCombine
  time: 0.000; rss: 116MB	Deaggregator
  time: 0.000; rss: 116MB	CopyPropagation
  time: 0.000; rss: 116MB	SimplifyLocals
  time: 0.000; rss: 116MB	AddCallGuards
  time: 0.000; rss: 116MB	PreTrans
time: 0.001; rss: 116MB	MIR optimisations
  time: 0.000; rss: 116MB	write metadata
  time: 0.000; rss: 116MB	translation item collection
  time: 0.000; rss: 116MB	codegen unit partitioning
  time: 0.001; rss: 127MB	internalize symbols
time: 0.056; rss: 127MB	translation
time: 0.000; rss: 127MB	assert dep graph
time: 0.000; rss: 127MB	serialize dep graph
  time: 0.008; rss: 86MB	llvm function passes [0]
  time: 0.000; rss: 86MB	llvm module passes [0]
  time: 0.191; rss: 86MB	codegen passes [0]
  time: 0.000; rss: 86MB	codegen passes [0]
time: 0.201; rss: 86MB	LLVM passes
time: 0.000; rss: 86MB	serialize work products
  time: 0.150; rss: 76MB	running linker
time: 0.152; rss: 76MB	linking
done
