commit 6dc035ed911672c6a1f7afc9eed15fb08e574e5b
Merge: 98a3502 0b2746c
Author: bors <bors@rust-lang.org>
Date:   Sat Oct 15 19:49:12 2016 -0700

    Auto merge of #37098 - ollie27:rustdoc_playground, r=GuillaumeGomez
    
    rustdoc: Improve playground run buttons
    
    The main change is to stop using javascript to generate the URLs and use
    rustdoc instead.
    
    This also adds run buttons to the error index examples.
    
    You can test the changes at https://ollie27.github.io/rust_doc_test/.
    
    Fixes #36621
    Fixes #36910
rustc: ./syntex-0.42.2-incr-clean
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax -- -Ztime-passes -Zinput-stats -Z incremental-info
   Compiling syntex_syntax v0.42.0
time: 0.110; rss: 76MB	parsing
Lines of code:             33687
Pre-expansion node count:  224033
time: 0.000; rss: 76MB	recursion limit
time: 0.000; rss: 76MB	crate injection
time: 0.000; rss: 76MB	plugin loading
time: 0.000; rss: 76MB	plugin registration
time: 0.273; rss: 148MB	expansion
time: 0.000; rss: 148MB	maybe building test harness
time: 0.006; rss: 148MB	maybe creating a macro crate
Post-expansion node count: 641571
time: 0.000; rss: 148MB	checking for inline asm in case the target doesn't support it
time: 0.013; rss: 148MB	complete gated feature checking
time: 0.023; rss: 148MB	early lint checks
time: 0.007; rss: 148MB	AST validation
time: 0.084; rss: 162MB	name resolution
time: 0.049; rss: 202MB	lowering ast -> hir
time: 0.009; rss: 213MB	indexing hir
time: 0.006; rss: 213MB	attribute checking
time: 0.005; rss: 164MB	language item collection
time: 0.011; rss: 164MB	lifetime resolution
time: 0.000; rss: 164MB	looking for entry point
time: 0.000; rss: 164MB	looking for plugin registrar
time: 0.043; rss: 174MB	region resolution
time: 0.006; rss: 174MB	loop checking
time: 0.006; rss: 174MB	static item recursion checking
time: 0.264; rss: 176MB	compute_incremental_hashes_map
time: 0.000; rss: 176MB	load_dep_graph
time: 0.044; rss: 181MB	type collecting
time: 0.001; rss: 181MB	variance inference
time: 0.038; rss: 186MB	coherence checking
time: 0.103; rss: 187MB	wf checking
time: 0.196; rss: 194MB	item-types checking
time: 3.936; rss: 244MB	item-bodies checking
time: 0.000; rss: 244MB	drop-impl checking
time: 0.257; rss: 248MB	const checking
time: 0.052; rss: 248MB	privacy checking
time: 0.007; rss: 248MB	stability index
time: 0.021; rss: 248MB	intrinsic checking
time: 0.018; rss: 248MB	effect checking
time: 0.056; rss: 248MB	match checking
time: 0.052; rss: 238MB	liveness checking
time: 0.219; rss: 238MB	rvalue checking
time: 0.615; rss: 416MB	MIR dump
  time: 0.063; rss: 422MB	SimplifyCfg
  time: 0.083; rss: 423MB	QualifyAndPromoteConstants
  time: 0.112; rss: 423MB	TypeckMir
  time: 0.004; rss: 423MB	SimplifyBranches
  time: 0.031; rss: 423MB	SimplifyCfg
time: 0.294; rss: 423MB	MIR passes
time: 0.575; rss: 425MB	borrow checking
time: 0.022; rss: 425MB	reachability checking
time: 0.044; rss: 425MB	death checking
time: 0.041; rss: 428MB	stability checking
time: 0.000; rss: 428MB	unused lib feature checking
time: 0.216; rss: 428MB	lint checking
time: 0.000; rss: 428MB	resolving dependency formats
  time: 0.003; rss: 428MB	NoLandingPads
  time: 0.027; rss: 428MB	SimplifyCfg
  time: 0.092; rss: 434MB	EraseRegions
  time: 0.011; rss: 434MB	AddCallGuards
  time: 0.333; rss: 452MB	ElaborateDrops
  time: 0.003; rss: 452MB	NoLandingPads
  time: 0.053; rss: 453MB	SimplifyCfg
  time: 0.031; rss: 453MB	InstCombine
  time: 0.012; rss: 453MB	Deaggregator
  time: 0.003; rss: 453MB	CopyPropagation
  time: 0.009; rss: 453MB	AddCallGuards
  time: 0.003; rss: 453MB	PreTrans
time: 0.580; rss: 453MB	Prepare MIR codegen passes
  time: 0.283; rss: 460MB	write metadata
  time: 0.470; rss: 471MB	translation item collection
  time: 0.065; rss: 475MB	codegen unit partitioning
  time: 0.054; rss: 722MB	internalize symbols
time: 5.793; rss: 603MB	translation
time: 0.000; rss: 603MB	assert dep graph
time: 0.000; rss: 603MB	serialize dep graph
incremental: re-using 0 out of 1 modules
  time: 0.518; rss: 408MB	llvm function passes [0]
  time: 0.249; rss: 417MB	llvm module passes [0]
  time: 10.079; rss: 417MB	codegen passes [0]
  time: 0.001; rss: 418MB	codegen passes [0]
time: 11.648; rss: 418MB	LLVM passes
time: 0.000; rss: 418MB	serialize work products
time: 0.664; rss: 105MB	linking
done
