commit d6af19b89c477708ed0f5341ab7a26f1764f1ffa
Merge: 8ba2ea5 3a790ac
Author: bors <bors@rust-lang.org>
Date:   Wed Mar 23 01:03:04 2016 -0700

    Auto merge of #32348 - brson:cargotest, r=alexcrichton
    
    Introduce 'cargotest' and the check-cargotest buildstep
    
    This is a new suite of tests that verifies that the compiler builds specific revisions of select crates from crates.io.
    
    It does not run by default. It is intended that bors runs these tests against all PRs, and gates on them. In this way we will make it harder still to break important swaths of the ecosystem, even on nightly.
    
    This is a very basic implementation intended for feedback. The biggest thing it probably should do but doesn't is use a lockfile for every project it builds.
    
    r? @alexcrichton cc @rust-lang/lang @rust-lang/libs
rustc: ./regex.0.1.30
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling regex v0.1.30 (file:///root/benchmarks/regex.0.1.30)
time: 0.059; rss: 49MB	parsing
Lines of code:             8558
Pre-expansion node count:  58217
time: 0.011; rss: 50MB	configuration 1
time: 0.000; rss: 50MB	recursion limit
time: 0.001; rss: 50MB	gated macro checking
time: 0.000; rss: 50MB	crate injection
time: 0.003; rss: 54MB	macro loading
time: 0.000; rss: 54MB	plugin loading
time: 0.000; rss: 54MB	plugin registration
time: 0.057; rss: 56MB	expansion
time: 0.001; rss: 56MB	complete gated feature checking 1
time: 0.013; rss: 56MB	configuration 2
time: 0.000; rss: 56MB	gated configuration checking
time: 0.006; rss: 56MB	maybe building test harness
time: 0.006; rss: 56MB	prelude injection
time: 0.001; rss: 56MB	checking that all macro invocations are gone
time: 0.000; rss: 56MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 56MB	complete gated feature checking 2
time: 0.001; rss: 56MB	const fn bodies and arguments
Post-expansion node count: 68485
time: 0.006; rss: 56MB	assigning node ids
time: 0.009; rss: 66MB	lowering ast -> hir
time: 0.002; rss: 69MB	indexing hir
time: 0.001; rss: 69MB	attribute checking
time: 0.006; rss: 69MB	early lint checks
time: 0.001; rss: 61MB	external crate/lib resolution
time: 0.001; rss: 61MB	language item collection
time: 0.009; rss: 71MB	resolution
time: 0.001; rss: 71MB	lifetime resolution
time: 0.000; rss: 71MB	looking for entry point
time: 0.000; rss: 71MB	looking for plugin registrar
time: 0.005; rss: 76MB	region resolution
time: 0.001; rss: 76MB	loop checking
time: 0.001; rss: 76MB	static item recursion checking
time: 0.003; rss: 78MB	type collecting
time: 0.000; rss: 78MB	variance inference
time: 0.069; rss: 96MB	coherence checking
time: 0.010; rss: 96MB	wf checking
time: 0.266; rss: 101MB	item-types checking
time: 0.201; rss: 114MB	item-bodies checking
time: 0.000; rss: 114MB	drop-impl checking
time: 0.024; rss: 114MB	const checking
time: 0.004; rss: 114MB	privacy checking
time: 0.001; rss: 114MB	stability index
time: 0.001; rss: 114MB	intrinsic checking
time: 0.001; rss: 114MB	effect checking
time: 0.003; rss: 114MB	match checking
time: 0.002; rss: 114MB	liveness checking
time: 0.007; rss: 114MB	rvalue checking
time: 0.014; rss: 116MB	MIR dump
time: 0.008; rss: 116MB	MIR passes
time: 0.019; rss: 116MB	borrow checking
time: 0.000; rss: 116MB	reachability checking
time: 0.003; rss: 116MB	death checking
time: 0.002; rss: 116MB	stability checking
time: 0.000; rss: 116MB	unused lib feature checking
time: 0.027; rss: 116MB	lint checking
time: 0.000; rss: 116MB	resolving dependency formats
  time: 0.060; rss: 126MB	translation item collection
  time: 0.130; rss: 184MB	write metadata
time: 0.590; rss: 184MB	translation
  time: 0.036; rss: 118MB	llvm function passes [0]
  time: 0.018; rss: 119MB	llvm module passes [0]
  time: 0.618; rss: 123MB	codegen passes [0]
  time: 0.001; rss: 103MB	codegen passes [0]
time: 0.744; rss: 102MB	LLVM passes
time: 0.065; rss: 101MB	linking
done
