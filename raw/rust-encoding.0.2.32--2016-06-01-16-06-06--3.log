commit 12d16599d84c25899f02a6e53110d1e70cdcbd8a
Merge: c2cab1f 696a570
Author: bors <bors@rust-lang.org>
Date:   Wed Jun 1 10:21:55 2016 -0700

    Auto merge of #33814 - lambda:rtabort-use-platform-abort, r=alexcrichton
    
    Open code the __fastfail intrinsic for rtabort! on windows
    
    As described https://msdn.microsoft.com/en-us/library/dn774154.aspx
    
    This is a Windows 8+ mechanism for terminating the process quickly,
    which degrades to either an access violation or bugcheck in older versions.
    
    I'm not sure this is better the the current mechanism of terminating
    with an illegal instruction, but we recently converted unix to
    terminate more correctly with SIGABORT, and this *seems* more correct
    for windows.
    
    [breaking-change]
rustc: ./rust-encoding.0.2.32
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling encoding v0.2.32 (file:///root/benchmarks/rust-encoding.0.2.32)
time: 0.028; rss: 50MB	parsing
Lines of code:             6441
Pre-expansion node count:  30015
time: 0.004; rss: 55MB	configuration 1
time: 0.000; rss: 55MB	recursion limit
time: 0.000; rss: 55MB	crate injection
time: 0.018; rss: 89MB	macro loading
time: 0.000; rss: 89MB	plugin loading
time: 0.000; rss: 89MB	plugin registration
time: 0.060; rss: 92MB	expansion
time: 0.000; rss: 92MB	gated configuration checking
time: 0.004; rss: 92MB	maybe building test harness
time: 0.004; rss: 92MB	prelude injection
time: 0.000; rss: 92MB	checking that all macro invocations are gone
time: 0.000; rss: 92MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 92MB	complete gated feature checking
Post-expansion node count: 40773
time: 0.004; rss: 92MB	assigning node ids
time: 0.001; rss: 93MB	collecting defs
time: 0.001; rss: 93MB	external crate/lib resolution
time: 0.003; rss: 93MB	early lint checks
time: 0.000; rss: 93MB	AST validation
time: 0.007; rss: 95MB	name resolution
time: 0.005; rss: 97MB	lowering ast -> hir
time: 0.000; rss: 97MB	indexing hir
time: 0.000; rss: 97MB	attribute checking
time: 0.000; rss: 96MB	language item collection
time: 0.000; rss: 96MB	lifetime resolution
time: 0.000; rss: 96MB	looking for entry point
time: 0.000; rss: 96MB	looking for plugin registrar
time: 0.002; rss: 98MB	region resolution
time: 0.000; rss: 98MB	loop checking
time: 0.000; rss: 98MB	static item recursion checking
time: 0.000; rss: 98MB	load_dep_graph
time: 0.018; rss: 101MB	type collecting
time: 0.000; rss: 101MB	variance inference
time: 0.022; rss: 104MB	coherence checking
time: 0.026; rss: 104MB	wf checking
time: 0.016; rss: 104MB	item-types checking
time: 0.242; rss: 111MB	item-bodies checking
time: 0.000; rss: 111MB	drop-impl checking
time: 0.013; rss: 111MB	const checking
time: 0.002; rss: 111MB	privacy checking
time: 0.000; rss: 111MB	stability index
time: 0.002; rss: 111MB	intrinsic checking
time: 0.000; rss: 111MB	effect checking
time: 0.008; rss: 111MB	match checking
time: 0.001; rss: 111MB	liveness checking
time: 0.008; rss: 111MB	rvalue checking
time: 0.027; rss: 117MB	MIR dump
time: 0.015; rss: 118MB	MIR passes
time: 0.026; rss: 118MB	borrow checking
time: 0.000; rss: 118MB	reachability checking
time: 0.002; rss: 118MB	death checking
time: 0.002; rss: 118MB	stability checking
time: 0.000; rss: 118MB	unused lib feature checking
time: 0.024; rss: 118MB	lint checking
time: 0.000; rss: 118MB	resolving dependency formats
time: 0.004; rss: 118MB	Prepare MIR codegen passes
  time: 0.059; rss: 120MB	write metadata
  time: 0.031; rss: 124MB	translation item collection
  time: 0.001; rss: 125MB	codegen unit partitioning
time: 0.378; rss: 150MB	translation
time: 0.000; rss: 150MB	assert dep graph
time: 0.000; rss: 150MB	serialize dep graph
  time: 0.027; rss: 120MB	llvm function passes [0]
  time: 0.051; rss: 124MB	llvm module passes [0]
  time: 0.580; rss: 128MB	codegen passes [0]
  time: 0.001; rss: 112MB	codegen passes [0]
time: 0.725; rss: 111MB	LLVM passes
time: 0.055; rss: 110MB	linking
done
