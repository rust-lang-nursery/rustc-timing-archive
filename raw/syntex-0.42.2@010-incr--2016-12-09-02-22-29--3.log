commit adb4279e549f51d287140658c1c64b51d7715bfa
Merge: 6a495f7 d38db82
Author: bors <bors@rust-lang.org>
Date:   Fri Dec 9 07:08:29 2016 +0000

    Auto merge of #38256 - alexcrichton:distcheck, r=brson
    
    rustbuild: Implement distcheck
    
    This commit implements the `distcheck` target for rustbuild which is only ever
    run on our nightly bots. This essentially just creates a tarball, un-tars it,
    and then runs a full build, validating that the release tarballs do indeed have
    everything they need to build Rust.
rustc: ./syntex-0.42.2@010-incr@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.242; rss: 151MB	expansion
time: 0.000; rss: 151MB	maybe building test harness
time: 0.006; rss: 151MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 151MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 151MB	complete gated feature checking
time: 0.023; rss: 151MB	early lint checks
time: 0.007; rss: 151MB	AST validation
time: 0.075; rss: 166MB	name resolution
time: 0.058; rss: 199MB	lowering ast -> hir
time: 0.010; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 153MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.046; rss: 176MB	region resolution
time: 0.007; rss: 176MB	loop checking
time: 0.002; rss: 176MB	static item recursion checking
time: 0.381; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.021; rss: 181MB	stability checking
time: 0.054; rss: 189MB	type collecting
time: 0.004; rss: 189MB	variance inference
time: 0.006; rss: 193MB	impl wf inference
time: 0.026; rss: 196MB	coherence checking
time: 0.091; rss: 199MB	wf checking
time: 0.201; rss: 207MB	item-types checking
time: 3.612; rss: 265MB	item-bodies checking
time: 0.000; rss: 265MB	drop-impl checking
time: 0.214; rss: 276MB	const checking
time: 0.057; rss: 276MB	privacy checking
time: 0.021; rss: 283MB	intrinsic checking
time: 0.016; rss: 283MB	effect checking
time: 0.049; rss: 283MB	match checking
time: 0.049; rss: 290MB	liveness checking
time: 0.180; rss: 292MB	rvalue checking
time: 0.368; rss: 481MB	MIR dump
  time: 0.056; rss: 482MB	SimplifyCfg
  time: 0.075; rss: 482MB	QualifyAndPromoteConstants
  time: 0.121; rss: 499MB	TypeckMir
  time: 0.004; rss: 499MB	SimplifyBranches
  time: 0.031; rss: 499MB	SimplifyCfg
time: 0.287; rss: 499MB	MIR cleanup and validation
time: 0.470; rss: 500MB	borrow checking
time: 0.024; rss: 500MB	reachability checking
time: 0.038; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.181; rss: 500MB	lint checking
time: 0.000; rss: 500MB	resolving dependency formats
  time: 0.004; rss: 500MB	NoLandingPads
  time: 0.027; rss: 500MB	SimplifyCfg
  time: 0.064; rss: 509MB	EraseRegions
  time: 0.011; rss: 509MB	AddCallGuards
  time: 0.272; rss: 528MB	ElaborateDrops
  time: 0.004; rss: 528MB	NoLandingPads
  time: 0.052; rss: 528MB	SimplifyCfg
  time: 0.028; rss: 528MB	InstCombine
  time: 0.012; rss: 528MB	Deaggregator
  time: 0.004; rss: 528MB	CopyPropagation
  time: 0.035; rss: 528MB	SimplifyLocals
  time: 0.010; rss: 528MB	AddCallGuards
  time: 0.003; rss: 528MB	PreTrans
time: 0.526; rss: 528MB	MIR optimisations
  time: 0.065; rss: 537MB	write metadata
  time: 0.399; rss: 550MB	translation item collection
  time: 0.073; rss: 555MB	codegen unit partitioning
  time: 0.053; rss: 1454MB	internalize symbols
time: 13.139; rss: 1454MB	translation
time: 0.000; rss: 1454MB	assert dep graph
time: 2.136; rss: 1482MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1195MB	llvm function passes [0]
time: 0.000; rss: 1195MB	llvm module passes [0]
time: 0.001; rss: 1203MB	llvm function passes [2]
time: 0.000; rss: 1206MB	llvm module passes [2]
time: 0.003; rss: 1212MB	llvm function passes [5]
time: 0.005; rss: 1212MB	llvm function passes [3]
time: 0.000; rss: 1212MB	llvm module passes [3]
time: 0.008; rss: 1216MB	llvm function passes [6]
time: 0.001; rss: 1216MB	llvm function passes [9]
time: 0.010; rss: 1216MB	llvm function passes [1]
time: 0.007; rss: 1216MB	llvm module passes [5]
time: 0.000; rss: 1216MB	llvm module passes [1]
time: 0.010; rss: 1216MB	codegen passes [0]
time: 0.000; rss: 1216MB	llvm module passes [9]
time: 0.012; rss: 1216MB	codegen passes [2]
time: 0.006; rss: 1216MB	llvm module passes [6]
time: 0.022; rss: 1216MB	llvm function passes [4]
time: 0.016; rss: 1225MB	codegen passes [9]
time: 0.022; rss: 1225MB	codegen passes [3]
time: 0.009; rss: 1229MB	llvm module passes [4]
time: 0.020; rss: 1229MB	llvm function passes [2]
time: 0.009; rss: 1231MB	llvm module passes [2]
time: 0.034; rss: 1231MB	codegen passes [1]
time: 0.000; rss: 1237MB	llvm function passes [12]
time: 0.000; rss: 1237MB	llvm module passes [12]
time: 0.043; rss: 1237MB	llvm function passes [0]
time: 0.001; rss: 1237MB	codegen passes [12]
time: 0.001; rss: 1248MB	llvm function passes [15]
time: 0.000; rss: 1248MB	llvm module passes [15]
time: 0.001; rss: 1254MB	llvm function passes [16]
time: 0.000; rss: 1254MB	llvm module passes [16]
time: 0.000; rss: 1259MB	llvm function passes [37]
time: 0.000; rss: 1259MB	llvm module passes [37]
time: 0.060; rss: 1259MB	codegen passes [5]
time: 0.004; rss: 1259MB	codegen passes [37]
time: 0.000; rss: 1263MB	llvm function passes [38]
time: 0.000; rss: 1263MB	llvm module passes [38]
time: 0.001; rss: 1263MB	codegen passes [38]
time: 0.050; rss: 1263MB	llvm function passes [9]
time: 0.030; rss: 1265MB	llvm module passes [0]
time: 0.036; rss: 1273MB	llvm function passes [12]
time: 0.001; rss: 1273MB	llvm module passes [12]
time: 0.010; rss: 1273MB	llvm module passes [9]
time: 0.120; rss: 1281MB	llvm function passes [8]
time: 0.054; rss: 1281MB	codegen passes [15]
time: 0.013; rss: 1283MB	llvm function passes [15]
time: 0.060; rss: 1287MB	llvm function passes [37]
time: 0.067; rss: 1287MB	codegen passes [16]
time: 0.008; rss: 1287MB	llvm module passes [15]
time: 0.016; rss: 1287MB	llvm function passes [16]
time: 0.004; rss: 1287MB	llvm module passes [16]
time: 0.030; rss: 1287MB	llvm module passes [37]
time: 0.143; rss: 1287MB	llvm function passes [3]
time: 0.107; rss: 1286MB	llvm function passes [40]
time: 0.046; rss: 1285MB	llvm module passes [3]
time: 0.172; rss: 1285MB	llvm function passes [13]
time: 0.016; rss: 1285MB	llvm module passes [13]
time: 0.129; rss: 1285MB	llvm function passes [41]
time: 0.063; rss: 1285MB	llvm module passes [40]
time: 0.012; rss: 1284MB	llvm module passes [41]
time: 0.214; rss: 1284MB	llvm function passes [1]
time: 0.141; rss: 1284MB	llvm module passes [8]
time: 0.238; rss: 1284MB	llvm function passes [10]
time: 0.151; rss: 1285MB	llvm function passes [44]
time: 0.184; rss: 1285MB	llvm function passes [39]
time: 0.020; rss: 1285MB	llvm module passes [44]
time: 0.042; rss: 1287MB	llvm module passes [39]
time: 0.293; rss: 1290MB	llvm function passes [14]
time: 0.104; rss: 1291MB	llvm module passes [1]
time: 0.292; rss: 1291MB	llvm function passes [5]
time: 0.000; rss: 1290MB	llvm function passes [23]
time: 0.000; rss: 1290MB	codegen passes [27]
time: 0.000; rss: 1290MB	llvm module passes [23]
time: 0.017; rss: 1290MB	llvm function passes [32]
time: 0.297; rss: 1290MB	llvm function passes [42]
time: 0.092; rss: 1292MB	llvm function passes [45]
time: 0.006; rss: 1292MB	codegen passes [23]
time: 0.109; rss: 1296MB	llvm function passes [18]
time: 0.060; rss: 1296MB	llvm module passes [32]
time: 0.427; rss: 1297MB	llvm function passes [7]
time: 0.058; rss: 1299MB	llvm function passes [46]
time: 0.002; rss: 1299MB	llvm module passes [46]
time: 0.097; rss: 1300MB	llvm function passes [28]
time: 0.370; rss: 1300MB	codegen passes [12]
time: 0.202; rss: 1300MB	llvm module passes [10]
time: 0.011; rss: 1299MB	llvm module passes [28]
time: 0.426; rss: 1304MB	llvm function passes [43]
time: 0.132; rss: 1305MB	llvm function passes [47]
time: 0.177; rss: 1307MB	llvm module passes [5]
time: 0.110; rss: 1308MB	llvm module passes [18]
time: 0.161; rss: 1306MB	llvm function passes [22]
time: 0.238; rss: 1306MB	llvm function passes [24]
time: 0.027; rss: 1310MB	llvm module passes [22]
time: 0.567; rss: 1312MB	llvm function passes [11]
time: 0.309; rss: 1313MB	llvm function passes [48]
time: 0.095; rss: 1314MB	llvm module passes [47]
time: 0.403; rss: 1320MB	llvm function passes [19]
time: 0.585; rss: 1321MB	llvm function passes [38]
time: 0.293; rss: 1326MB	llvm module passes [45]
time: 0.343; rss: 1326MB	llvm function passes [25]
time: 0.247; rss: 1333MB	codegen passes [32]
time: 0.416; rss: 1340MB	llvm module passes [14]
time: 0.386; rss: 1336MB	llvm function passes [20]
time: 0.228; rss: 1350MB	llvm module passes [48]
time: 0.091; rss: 1351MB	llvm module passes [20]
time: 0.837; rss: 1350MB	codegen passes [6]
time: 0.356; rss: 1352MB	llvm module passes [43]
time: 0.699; rss: 1353MB	llvm function passes [49]
time: 0.645; rss: 1352MB	codegen passes [16]
time: 0.243; rss: 1355MB	llvm module passes [38]
time: 0.384; rss: 1353MB	codegen passes [46]
time: 0.564; rss: 1353MB	llvm module passes [42]
time: 0.284; rss: 1360MB	llvm module passes [25]
time: 0.454; rss: 1351MB	llvm module passes [24]
time: 0.942; rss: 1351MB	codegen passes [9]
time: 0.532; rss: 1356MB	llvm module passes [19]
time: 0.772; rss: 1352MB	llvm module passes [7]
time: 0.657; rss: 1358MB	llvm module passes [11]
time: 1.213; rss: 1368MB	codegen passes [2]
time: 0.534; rss: 1368MB	llvm module passes [49]
time: 0.946; rss: 1375MB	codegen passes [28]
time: 1.545; rss: 1379MB	codegen passes [4]
time: 1.493; rss: 1407MB	codegen passes [15]
time: 1.777; rss: 1415MB	codegen passes [0]
time: 1.211; rss: 1416MB	codegen passes [18]
time: 1.492; rss: 1424MB	codegen passes [1]
time: 1.882; rss: 1421MB	codegen passes [41]
time: 1.881; rss: 1452MB	codegen passes [47]
time: 2.523; rss: 1463MB	codegen passes [37]
time: 2.362; rss: 1444MB	codegen passes [40]
time: 2.345; rss: 1436MB	codegen passes [13]
time: 2.339; rss: 1436MB	codegen passes [22]
time: 2.387; rss: 1467MB	codegen passes [45]
time: 2.251; rss: 1454MB	codegen passes [20]
time: 3.100; rss: 1502MB	codegen passes [44]
time: 3.013; rss: 1493MB	codegen passes [39]
time: 3.138; rss: 1529MB	codegen passes [5]
time: 3.405; rss: 1504MB	codegen passes [3]
time: 3.550; rss: 1646MB	codegen passes [38]
time: 3.746; rss: 1626MB	codegen passes [48]
time: 4.127; rss: 1616MB	codegen passes [14]
time: 4.012; rss: 1623MB	codegen passes [25]
time: 4.051; rss: 1565MB	codegen passes [43]
time: 4.296; rss: 1552MB	codegen passes [8]
time: 3.864; rss: 1561MB	codegen passes [42]
time: 4.619; rss: 1536MB	codegen passes [24]
time: 4.126; rss: 1527MB	codegen passes [19]
time: 5.003; rss: 1459MB	codegen passes [10]
time: 5.707; rss: 1444MB	codegen passes [49]
time: 4.992; rss: 1381MB	codegen passes [7]
time: 5.355; rss: 1310MB	codegen passes [11]
time: 8.524; rss: 1307MB	LLVM passes
time: 0.000; rss: 1307MB	serialize work products
time: 1.053; rss: 268MB	linking
done
