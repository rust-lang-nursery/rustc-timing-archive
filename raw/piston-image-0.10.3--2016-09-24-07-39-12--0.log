commit bdad70213b32454837c0ed16dbbac3954325feea
Merge: 41e3aee 2e02803
Author: bors <bors@rust-lang.org>
Date:   Sat Sep 24 02:03:18 2016 -0700

    Auto merge of #36685 - brson:rev-string-from, r=sfackler
    
    Revert "implement `From<Vec<char>>` and `From<&'a [char]>` for `String`"
    
    This reverts commit ac73335f2f5421c914fa3900567696cc6dc73d8d.
    
    This is a revert of https://github.com/rust-lang/rust/pull/35054, which resulted in at least 7 known regressions, reported [here](https://internals.rust-lang.org/t/regression-report-stable-2016-08-16-vs-beta-2016-09-21/4119) and [here](https://github.com/rust-lang/rust/issues/36352), which will hit stable next week.
    
    I think this breakage was somewhat unanticipated, and we did not realize so many crates were broken until this week, so reverting is the conservative thing to do until we figure out how not to cause so much breakage. I've run crater on the revert and did not find any new breakage from the revert.
    
    Fixes https://github.com/rust-lang/rust/issues/36352
    
    cc @pwoolcoc @rust-lang/libs
rustc: ./piston-image-0.10.3
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling byteorder v0.5.3
   Compiling lzw v0.10.0
   Compiling bitflags v0.7.0
   Compiling num-traits v0.1.35
   Compiling libc v0.2.16
   Compiling rustc-serialize v0.3.19
   Compiling color_quant v1.0.0
   Compiling gcc v0.3.35
   Compiling scoped_threadpool v0.1.7
   Compiling glob v0.2.11
   Compiling inflate v0.1.1
   Compiling gif v0.9.0
   Compiling num_cpus v0.2.13
   Compiling rand v0.3.14
   Compiling miniz-sys v0.1.7
   Compiling num-integer v0.1.32
   Compiling num-iter v0.1.32
   Compiling num v0.1.35
   Compiling enum_primitive v0.1.0
   Compiling flate2 v0.2.14
   Compiling deque v0.3.1
   Compiling rayon v0.4.2
   Compiling jpeg-decoder v0.1.6
   Compiling png v0.5.2
   Compiling num-bigint v0.1.35
   Compiling num-rational v0.1.35
   Compiling image v0.10.3 (file:///root/benchmarks/piston-image-0.10.3)
time: 0.046; rss: 58MB	parsing
Lines of code:             12000
Pre-expansion node count:  90272
time: 0.000; rss: 58MB	recursion limit
time: 0.000; rss: 58MB	crate injection
time: 0.000; rss: 58MB	plugin loading
time: 0.000; rss: 58MB	plugin registration
time: 0.070; rss: 88MB	expansion
time: 0.000; rss: 88MB	maybe building test harness
time: 0.002; rss: 88MB	maybe creating a macro crate
time: 0.008; rss: 88MB	assigning node ids
Post-expansion node count: 149551
time: 0.000; rss: 88MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 88MB	complete gated feature checking
time: 0.004; rss: 88MB	collecting defs
time: 0.011; rss: 96MB	external crate/lib resolution
time: 0.006; rss: 96MB	early lint checks
time: 0.002; rss: 96MB	AST validation
time: 0.023; rss: 101MB	name resolution
time: 0.015; rss: 112MB	lowering ast -> hir
time: 0.004; rss: 116MB	indexing hir
time: 0.002; rss: 116MB	attribute checking
time: 0.002; rss: 106MB	language item collection
time: 0.004; rss: 106MB	lifetime resolution
time: 0.000; rss: 106MB	looking for entry point
time: 0.000; rss: 106MB	looking for plugin registrar
time: 0.012; rss: 112MB	region resolution
time: 0.002; rss: 112MB	loop checking
time: 0.002; rss: 112MB	static item recursion checking
time: 0.059; rss: 111MB	compute_incremental_hashes_map
time: 0.000; rss: 111MB	load_dep_graph
time: 0.025; rss: 113MB	type collecting
time: 0.000; rss: 113MB	variance inference
time: 0.033; rss: 116MB	coherence checking
time: 0.100; rss: 117MB	wf checking
time: 0.219; rss: 125MB	item-types checking
time: 0.932; rss: 138MB	item-bodies checking
time: 0.000; rss: 138MB	drop-impl checking
time: 0.071; rss: 138MB	const checking
time: 0.011; rss: 138MB	privacy checking
time: 0.001; rss: 138MB	stability index
time: 0.010; rss: 138MB	intrinsic checking
time: 0.003; rss: 138MB	effect checking
time: 0.025; rss: 138MB	match checking
time: 0.011; rss: 139MB	liveness checking
time: 0.067; rss: 139MB	rvalue checking
time: 0.114; rss: 183MB	MIR dump
  time: 0.012; rss: 183MB	SimplifyCfg
  time: 0.025; rss: 183MB	QualifyAndPromoteConstants
  time: 0.028; rss: 183MB	TypeckMir
  time: 0.001; rss: 183MB	SimplifyBranches
  time: 0.007; rss: 183MB	SimplifyCfg
time: 0.073; rss: 183MB	MIR passes
time: 0.143; rss: 183MB	borrow checking
time: 0.004; rss: 183MB	reachability checking
time: 0.008; rss: 183MB	death checking
time: 0.010; rss: 183MB	stability checking
time: 0.000; rss: 183MB	unused lib feature checking
time: 0.075; rss: 183MB	lint checking
time: 0.000; rss: 183MB	resolving dependency formats
  time: 0.001; rss: 183MB	NoLandingPads
  time: 0.005; rss: 183MB	SimplifyCfg
  time: 0.013; rss: 185MB	EraseRegions
  time: 0.002; rss: 185MB	AddCallGuards
  time: 0.133; rss: 189MB	ElaborateDrops
  time: 0.001; rss: 189MB	NoLandingPads
  time: 0.009; rss: 189MB	SimplifyCfg
  time: 0.002; rss: 189MB	Deaggregator
  time: 0.001; rss: 189MB	AddCallGuards
  time: 0.000; rss: 189MB	PreTrans
time: 0.167; rss: 189MB	Prepare MIR codegen passes
  time: 0.081; rss: 190MB	write metadata
  time: 0.536; rss: 201MB	translation item collection
  time: 0.030; rss: 205MB	codegen unit partitioning
  time: 0.052; rss: 328MB	internalize symbols
time: 3.517; rss: 302MB	translation
time: 0.000; rss: 302MB	assert dep graph
time: 0.000; rss: 302MB	serialize dep graph
  time: 0.199; rss: 226MB	llvm function passes [0]
  time: 0.086; rss: 230MB	llvm module passes [0]
  time: 4.018; rss: 233MB	codegen passes [0]
  time: 0.001; rss: 234MB	codegen passes [0]
time: 4.613; rss: 234MB	LLVM passes
time: 0.000; rss: 234MB	serialize work products
time: 0.255; rss: 105MB	linking
done
