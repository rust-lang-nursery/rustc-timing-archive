commit 14f33a5996054c817349c8ae95abbbe17347a6be
Merge: 449e8bf 526965a
Author: bors <bors@rust-lang.org>
Date:   Sat Jan 30 18:51:13 2016 +0000

    Auto merge of #30778 - fhahn:issue-21195-expect-help, r=nikomatsakis
    
    This is a PR for #21195. It changes the way unspecified `help` and `Ç¹ote` messages are handled in compile-fail tests as suggested by @oli-obk in the issue: if there are some `note` or `help` annotations, there must be annotations for all `help` or `note` messages of this test. Maybe it makes also sense to add an option to specify that the this test should fail if there are unspecified `help` or `note` messages.
    
    With this change, the following tests fail:
    
        [compile-fail] compile-fail/changing-crates.rs
        [compile-fail] compile-fail/default_ty_param_conflict_cross_crate.rs
        [compile-fail] compile-fail/lifetime-inference-give-expl-lifetime-param.rs
        [compile-fail] compile-fail/privacy1.rs
        [compile-fail] compile-fail/svh-change-lit.rs
        [compile-fail] compile-fail/svh-change-significant-cfg.rs
        [compile-fail] compile-fail/svh-change-trait-bound.rs
        [compile-fail] compile-fail/svh-change-type-arg.rs
        [compile-fail] compile-fail/svh-change-type-ret.rs
        [compile-fail] compile-fail/svh-change-type-static.rs
        [compile-fail] compile-fail/svh-use-trait.rs
    
    I'll add the missing annotations if we decide to accept this change.
rustc: ./jld-day15-parser
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling day15 v0.1.0 (file:///root/benchmarks/jld-day15-parser)
time: 0.001; rss: 35MB	parsing
Lines of code:             72
Pre-expansion node count:  673
time: 0.000; rss: 35MB	configuration 1
time: 0.000; rss: 35MB	recursion limit
time: 0.000; rss: 35MB	gated macro checking
time: 0.000; rss: 35MB	crate injection
time: 0.003; rss: 38MB	macro loading
time: 0.000; rss: 38MB	plugin loading
time: 0.000; rss: 38MB	plugin registration
time: 0.002; rss: 38MB	expansion
time: 0.000; rss: 38MB	complete gated feature checking 1
time: 0.000; rss: 38MB	configuration 2
time: 0.000; rss: 38MB	gated configuration checking
time: 0.000; rss: 38MB	maybe building test harness
time: 0.000; rss: 38MB	prelude injection
time: 0.000; rss: 38MB	checking that all macro invocations are gone
time: 0.000; rss: 38MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 38MB	complete gated feature checking 2
Post-expansion node count: 1176
time: 0.000; rss: 38MB	assigning node ids
time: 0.000; rss: 38MB	lowering ast -> hir
time: 0.000; rss: 38MB	indexing hir
time: 0.000; rss: 38MB	attribute checking
time: 0.000; rss: 38MB	early lint checks
time: 0.001; rss: 38MB	external crate/lib resolution
time: 0.000; rss: 42MB	language item collection
time: 0.001; rss: 46MB	resolution
time: 0.000; rss: 46MB	lifetime resolution
time: 0.000; rss: 46MB	looking for entry point
time: 0.000; rss: 46MB	looking for plugin registrar
time: 0.000; rss: 46MB	region resolution
time: 0.000; rss: 46MB	loop checking
time: 0.000; rss: 46MB	static item recursion checking
time: 0.001; rss: 50MB	type collecting
time: 0.000; rss: 50MB	variance inference
time: 0.005; rss: 55MB	coherence checking
time: 0.006; rss: 62MB	wf checking
time: 0.000; rss: 62MB	item-types checking
time: 1.138; rss: 101MB	item-bodies checking
time: 0.000; rss: 101MB	drop-impl checking
time: 0.001; rss: 101MB	const checking
time: 0.000; rss: 101MB	privacy checking
time: 0.000; rss: 101MB	stability index
time: 0.000; rss: 101MB	intrinsic checking
time: 0.000; rss: 101MB	effect checking
time: 0.000; rss: 101MB	match checking
time: 0.001; rss: 101MB	MIR dump
time: 0.000; rss: 101MB	liveness checking
time: 0.001; rss: 102MB	borrow checking
time: 0.002; rss: 102MB	rvalue checking
time: 0.000; rss: 102MB	reachability checking
time: 0.000; rss: 102MB	death checking
time: 0.000; rss: 102MB	stability checking
time: 0.000; rss: 102MB	unused lib feature checking
time: 0.003; rss: 103MB	lint checking
time: 0.001; rss: 103MB	resolving dependency formats
time: 0.000; rss: 103MB	erasing regions from MIR
  time: 0.000; rss: 156MB	write metadata
time: 16.390; rss: 156MB	translation
  time: 0.015; rss: 93MB	llvm function passes [0]
  time: 0.002; rss: 93MB	llvm module passes [0]
  time: 0.272; rss: 104MB	codegen passes [0]
  time: 0.000; rss: 101MB	codegen passes [0]
time: 0.298; rss: 101MB	LLVM passes
  time: 0.111; rss: 106MB	running linker
time: 0.112; rss: 106MB	linking
done
