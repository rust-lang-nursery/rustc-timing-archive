commit 8fc0554e4df413537760850108b10aafcdccd4b0
Merge: 6cc502c 6e4bc47
Author: bors <bors@rust-lang.org>
Date:   Tue Mar 22 02:05:16 2016 -0700

    Auto merge of #32388 - semarie:snapshot-openbsd, r=alexcrichton
    
    register openbsd snapshot
    
    Here openbsd version for latest snapshot.
    
    The archive is at http://semarie.online.fr/rust/rust-stage0-2016-03-18-235d774-openbsd-x86_64-c5b6feda38138a12cd5c05574b585dadebbb5e87.tar.bz2
    
    These segmentation fault starts to be annoying. @dhuseby do you think it would be possible to have a shell access to openbsd buildbot in order to try to investigating a bit the reason of them ?
    
    r? @alexcrichton
    Ref #32345
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.030; rss: 45MB	parsing
Lines of code:             9154
Pre-expansion node count:  45594
time: 0.009; rss: 45MB	configuration 1
time: 0.000; rss: 45MB	recursion limit
time: 0.000; rss: 45MB	gated macro checking
time: 0.000; rss: 45MB	crate injection
time: 0.005; rss: 51MB	macro loading
time: 0.000; rss: 51MB	plugin loading
time: 0.000; rss: 51MB	plugin registration
time: 0.186; rss: 60MB	expansion
time: 0.005; rss: 60MB	complete gated feature checking 1
time: 0.034; rss: 60MB	configuration 2
time: 0.000; rss: 60MB	gated configuration checking
time: 0.013; rss: 60MB	maybe building test harness
time: 0.010; rss: 60MB	prelude injection
time: 0.001; rss: 60MB	checking that all macro invocations are gone
time: 0.000; rss: 60MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 60MB	complete gated feature checking 2
time: 0.001; rss: 60MB	const fn bodies and arguments
Post-expansion node count: 106876
time: 0.010; rss: 60MB	assigning node ids
time: 0.011; rss: 67MB	lowering ast -> hir
time: 0.004; rss: 69MB	indexing hir
time: 0.001; rss: 69MB	attribute checking
time: 0.006; rss: 69MB	early lint checks
time: 0.004; rss: 65MB	external crate/lib resolution
time: 0.001; rss: 65MB	language item collection
time: 0.024; rss: 81MB	resolution
time: 0.002; rss: 81MB	lifetime resolution
time: 0.000; rss: 81MB	looking for entry point
time: 0.000; rss: 81MB	looking for plugin registrar
time: 0.005; rss: 85MB	region resolution
time: 0.001; rss: 85MB	loop checking
time: 0.001; rss: 85MB	static item recursion checking
time: 0.013; rss: 89MB	type collecting
time: 0.000; rss: 89MB	variance inference
time: 0.528; rss: 110MB	coherence checking
time: 0.080; rss: 110MB	wf checking
time: 0.029; rss: 112MB	item-types checking
time: 0.496; rss: 132MB	item-bodies checking
time: 0.000; rss: 132MB	drop-impl checking
time: 0.037; rss: 134MB	const checking
time: 0.009; rss: 135MB	privacy checking
time: 0.001; rss: 135MB	stability index
time: 0.004; rss: 135MB	intrinsic checking
time: 0.002; rss: 135MB	effect checking
time: 0.012; rss: 135MB	match checking
time: 0.005; rss: 135MB	liveness checking
time: 0.033; rss: 135MB	rvalue checking
time: 0.045; rss: 140MB	MIR dump
time: 0.027; rss: 142MB	MIR passes
time: 0.063; rss: 142MB	borrow checking
time: 0.003; rss: 142MB	reachability checking
time: 0.006; rss: 142MB	death checking
time: 0.005; rss: 142MB	stability checking
time: 0.000; rss: 142MB	unused lib feature checking
time: 0.047; rss: 142MB	lint checking
time: 0.000; rss: 142MB	resolving dependency formats
  time: 0.198; rss: 162MB	translation item collection
  time: 0.134; rss: 285MB	write metadata
time: 1.338; rss: 285MB	translation
  time: 0.097; rss: 165MB	llvm function passes [0]
  time: 0.047; rss: 167MB	llvm module passes [0]
  time: 1.619; rss: 166MB	codegen passes [0]
  time: 0.001; rss: 118MB	codegen passes [0]
time: 1.957; rss: 116MB	LLVM passes
time: 0.167; rss: 114MB	linking
done
