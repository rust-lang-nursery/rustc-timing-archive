commit 10771498273764e25d197209f80830a45b7cfdcd
Merge: 908dba0 242cd7e
Author: bors <bors@rust-lang.org>
Date:   Fri Dec 2 00:20:11 2016 +0000

    Auto merge of #37789 - arielb1:length-limit, r=nikomatsakis
    
    limit the length of types in monomorphization
    
    This adds the new insta-stable `#![type_size_limit]` crate attribute to control
    the limit, and is obviously a [breaking-change] fixable by that.
    
    Fixes #37311.
    
    r? @nikomatsakis
rustc: ./tuple-stress
cargo rustc  -- -Ztime-passes -Zinput-stats
time: 0.407; rss: 136MB	parsing
Lines of code:             65571
Pre-expansion node count:  393241
time: 0.000; rss: 136MB	recursion limit
time: 0.000; rss: 136MB	crate injection
time: 0.000; rss: 136MB	plugin loading
time: 0.000; rss: 136MB	plugin registration
time: 0.093; rss: 158MB	expansion
time: 0.000; rss: 158MB	maybe building test harness
time: 0.005; rss: 158MB	maybe creating a macro crate
Post-expansion node count: 393303
time: 0.000; rss: 158MB	checking for inline asm in case the target doesn't support it
time: 0.005; rss: 158MB	complete gated feature checking
time: 0.033; rss: 158MB	early lint checks
time: 0.005; rss: 158MB	AST validation
time: 0.012; rss: 158MB	name resolution
time: 0.031; rss: 201MB	lowering ast -> hir
time: 0.008; rss: 218MB	indexing hir
time: 0.005; rss: 218MB	attribute checking
time: 0.002; rss: 140MB	language item collection
time: 0.002; rss: 140MB	lifetime resolution
time: 0.000; rss: 140MB	looking for entry point
time: 0.000; rss: 140MB	looking for plugin registrar
time: 0.051; rss: 164MB	region resolution
time: 0.002; rss: 164MB	loop checking
time: 0.005; rss: 164MB	static item recursion checking
time: 0.208; rss: 164MB	compute_incremental_hashes_map
time: 0.000; rss: 164MB	load_dep_graph
time: 0.002; rss: 164MB	stability index
time: 0.002; rss: 164MB	stability checking
time: 0.002; rss: 164MB	type collecting
time: 0.000; rss: 164MB	variance inference
time: 0.000; rss: 164MB	impl wf inference
time: 0.004; rss: 166MB	coherence checking
time: 0.002; rss: 166MB	wf checking
time: 0.585; rss: 209MB	item-types checking
time: 0.003; rss: 209MB	item-bodies checking
time: 0.000; rss: 209MB	drop-impl checking
time: 0.181; rss: 220MB	const checking
time: 0.004; rss: 220MB	privacy checking
time: 0.002; rss: 220MB	intrinsic checking
time: 0.002; rss: 220MB	effect checking
time: 0.000; rss: 220MB	match checking
time: 0.003; rss: 220MB	liveness checking
time: 0.002; rss: 220MB	rvalue checking
time: 0.288; rss: 278MB	MIR dump
  time: 0.000; rss: 278MB	SimplifyCfg
  time: 0.012; rss: 278MB	QualifyAndPromoteConstants
  time: 0.036; rss: 278MB	TypeckMir
  time: 0.000; rss: 278MB	SimplifyBranches
  time: 0.000; rss: 278MB	SimplifyCfg
time: 0.048; rss: 278MB	MIR cleanup and validation
time: 0.004; rss: 278MB	borrow checking
time: 0.000; rss: 278MB	reachability checking
time: 0.004; rss: 278MB	death checking
time: 0.000; rss: 278MB	unused lib feature checking
time: 0.184; rss: 278MB	lint checking
time: 0.001; rss: 278MB	resolving dependency formats
  time: 0.000; rss: 278MB	NoLandingPads
  time: 0.000; rss: 278MB	SimplifyCfg
  time: 0.007; rss: 278MB	EraseRegions
  time: 0.000; rss: 278MB	AddCallGuards
  time: 0.000; rss: 278MB	ElaborateDrops
  time: 0.000; rss: 278MB	NoLandingPads
  time: 0.000; rss: 278MB	SimplifyCfg
  time: 0.007; rss: 278MB	InstCombine
  time: 0.000; rss: 278MB	Deaggregator
  time: 0.000; rss: 278MB	CopyPropagation
  time: 0.009; rss: 278MB	SimplifyLocals
  time: 0.000; rss: 278MB	AddCallGuards
  time: 0.000; rss: 278MB	PreTrans
time: 0.023; rss: 278MB	MIR optimisations
  time: 0.000; rss: 278MB	write metadata
  time: 0.006; rss: 278MB	translation item collection
  time: 0.000; rss: 278MB	codegen unit partitioning
  time: 0.000; rss: 306MB	internalize symbols
time: 0.278; rss: 306MB	translation
time: 0.000; rss: 306MB	assert dep graph
time: 0.000; rss: 306MB	serialize dep graph
  time: 0.025; rss: 127MB	llvm function passes [0]
  time: 0.000; rss: 127MB	llvm module passes [0]
  time: 0.324; rss: 127MB	codegen passes [0]
  time: 0.000; rss: 127MB	codegen passes [0]
time: 0.351; rss: 127MB	LLVM passes
time: 0.000; rss: 127MB	serialize work products
  time: 0.077; rss: 91MB	running linker
time: 0.078; rss: 91MB	linking
done
