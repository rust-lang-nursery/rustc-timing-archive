commit 6ad10844db51b950306d49070932562246e06616
Merge: 1cf592f e4b1842
Author: bors <bors@rust-lang.org>
Date:   Wed Sep 21 22:40:51 2016 -0700

    Auto merge of #36585 - jonathandturner:misc_error_touchups, r=nrc
    
    Add the ability to merge spans to codemap
    
    This PR adds the ability to merge Spans.  To do so, it builds on the Codemap's ability to verify the locations of spans, namely that following can be verified:
    
    * the expn_id of both spans much match
    * the lhs span needs to end on the same line the rhs span begins
    * the lhs span must start at or before the rhs span
    
    If all of these are met, a new span is returned that is min(lo), max(hi) of the two spans.
    
    This PR also removes an older Span merge, as this new functionality subsumes it.
    
    r? @nrc
rustc: ./piston-image-0.10.3
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling rustc-serialize v0.3.19
   Compiling bitflags v0.7.0
   Compiling gcc v0.3.35
   Compiling scoped_threadpool v0.1.7
   Compiling color_quant v1.0.0
   Compiling libc v0.2.16
   Compiling inflate v0.1.1
   Compiling glob v0.2.11
   Compiling lzw v0.10.0
   Compiling num-traits v0.1.35
   Compiling gif v0.9.0
   Compiling rand v0.3.14
   Compiling byteorder v0.5.3
   Compiling num_cpus v0.2.13
   Compiling miniz-sys v0.1.7
   Compiling flate2 v0.2.14
   Compiling num-integer v0.1.32
   Compiling num-iter v0.1.32
   Compiling num v0.1.35
   Compiling enum_primitive v0.1.0
   Compiling deque v0.3.1
   Compiling rayon v0.4.2
   Compiling png v0.5.2
   Compiling jpeg-decoder v0.1.6
   Compiling num-bigint v0.1.35
   Compiling num-rational v0.1.35
   Compiling image v0.10.3 (file:///root/benchmarks/piston-image-0.10.3)
time: 0.047; rss: 58MB	parsing
Lines of code:             12000
Pre-expansion node count:  90272
time: 0.000; rss: 59MB	recursion limit
time: 0.000; rss: 59MB	crate injection
time: 0.000; rss: 59MB	plugin loading
time: 0.000; rss: 59MB	plugin registration
time: 0.068; rss: 88MB	expansion
time: 0.000; rss: 88MB	maybe building test harness
time: 0.002; rss: 88MB	maybe creating a macro crate
time: 0.007; rss: 88MB	assigning node ids
Post-expansion node count: 149551
time: 0.000; rss: 88MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 88MB	complete gated feature checking
time: 0.004; rss: 88MB	collecting defs
time: 0.011; rss: 97MB	external crate/lib resolution
time: 0.006; rss: 97MB	early lint checks
time: 0.002; rss: 97MB	AST validation
time: 0.022; rss: 102MB	name resolution
time: 0.013; rss: 112MB	lowering ast -> hir
time: 0.003; rss: 116MB	indexing hir
time: 0.002; rss: 116MB	attribute checking
time: 0.002; rss: 106MB	language item collection
time: 0.003; rss: 106MB	lifetime resolution
time: 0.000; rss: 106MB	looking for entry point
time: 0.000; rss: 106MB	looking for plugin registrar
time: 0.011; rss: 112MB	region resolution
time: 0.002; rss: 112MB	loop checking
time: 0.001; rss: 112MB	static item recursion checking
time: 0.058; rss: 112MB	compute_incremental_hashes_map
time: 0.000; rss: 112MB	load_dep_graph
time: 0.024; rss: 113MB	type collecting
time: 0.000; rss: 113MB	variance inference
time: 0.031; rss: 117MB	coherence checking
time: 0.098; rss: 118MB	wf checking
time: 0.218; rss: 126MB	item-types checking
time: 0.937; rss: 139MB	item-bodies checking
time: 0.000; rss: 139MB	drop-impl checking
time: 0.070; rss: 139MB	const checking
time: 0.011; rss: 139MB	privacy checking
time: 0.001; rss: 139MB	stability index
time: 0.009; rss: 139MB	intrinsic checking
time: 0.003; rss: 139MB	effect checking
time: 0.024; rss: 139MB	match checking
time: 0.011; rss: 139MB	liveness checking
time: 0.068; rss: 139MB	rvalue checking
time: 0.111; rss: 181MB	MIR dump
  time: 0.012; rss: 181MB	SimplifyCfg
  time: 0.025; rss: 181MB	QualifyAndPromoteConstants
  time: 0.028; rss: 181MB	TypeckMir
  time: 0.001; rss: 181MB	SimplifyBranches
  time: 0.007; rss: 181MB	SimplifyCfg
time: 0.073; rss: 181MB	MIR passes
time: 0.142; rss: 181MB	borrow checking
time: 0.004; rss: 181MB	reachability checking
time: 0.008; rss: 181MB	death checking
time: 0.010; rss: 181MB	stability checking
time: 0.000; rss: 181MB	unused lib feature checking
time: 0.074; rss: 181MB	lint checking
time: 0.000; rss: 181MB	resolving dependency formats
  time: 0.001; rss: 181MB	NoLandingPads
  time: 0.005; rss: 181MB	SimplifyCfg
  time: 0.012; rss: 183MB	EraseRegions
  time: 0.002; rss: 183MB	AddCallGuards
  time: 0.131; rss: 187MB	ElaborateDrops
  time: 0.001; rss: 187MB	NoLandingPads
  time: 0.009; rss: 187MB	SimplifyCfg
  time: 0.002; rss: 187MB	Deaggregator
  time: 0.001; rss: 187MB	AddCallGuards
  time: 0.000; rss: 187MB	PreTrans
time: 0.165; rss: 187MB	Prepare MIR codegen passes
  time: 0.081; rss: 189MB	write metadata
  time: 0.531; rss: 199MB	translation item collection
  time: 0.029; rss: 204MB	codegen unit partitioning
  time: 0.057; rss: 326MB	internalize symbols
time: 3.458; rss: 300MB	translation
time: 0.000; rss: 300MB	assert dep graph
time: 0.000; rss: 300MB	serialize dep graph
  time: 0.200; rss: 229MB	llvm function passes [0]
  time: 0.082; rss: 233MB	llvm module passes [0]
  time: 3.994; rss: 233MB	codegen passes [0]
  time: 0.001; rss: 233MB	codegen passes [0]
time: 4.570; rss: 233MB	LLVM passes
time: 0.000; rss: 233MB	serialize work products
time: 0.254; rss: 106MB	linking
done
