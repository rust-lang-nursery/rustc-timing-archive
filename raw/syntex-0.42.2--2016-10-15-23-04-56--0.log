commit 98a3502da1456b209ff031604cabbbcb9d0eddf1
Merge: 5bfe107 a61d85b
Author: bors <bors@rust-lang.org>
Date:   Sat Oct 15 15:38:52 2016 -0700

    Auto merge of #37152 - arielb1:drop-cache, r=pnkfelix
    
    add a per-param-env cache to `impls_bound`
    
    There used to be only a global cache, which led to uncached calls to
    trait selection when there were type parameters.
    
    This causes a 20% decrease in borrow-checking time and an overall 0.5% performance increase during bootstrapping (as borrow-checking tends to be a tiny part of compilation time).
    
    Fixes #37106 (drop elaboration times are now ~half of borrow checking,
    so might still be worthy of optimization, but not critical).
    
    r? @pnkfelix
rustc: ./syntex-0.42.2
cargo rustc -p syntex_syntax -- -Ztime-passes -Zinput-stats
   Compiling bitflags v0.5.0
   Compiling log v0.3.6
   Compiling winapi-build v0.1.1
   Compiling libc v0.2.15
   Compiling rustc-serialize v0.3.19
   Compiling unicode-xid v0.0.3
   Compiling winapi v0.2.8
   Compiling kernel32-sys v0.2.2
   Compiling term v0.4.4
   Compiling syntex_pos v0.42.0
   Compiling syntex_errors v0.42.0
   Compiling syntex_syntax v0.42.0
time: 0.170; rss: 68MB	parsing
Lines of code:             33687
Pre-expansion node count:  224033
time: 0.000; rss: 68MB	recursion limit
time: 0.000; rss: 68MB	crate injection
time: 0.000; rss: 68MB	plugin loading
time: 0.000; rss: 68MB	plugin registration
time: 0.367; rss: 137MB	expansion
time: 0.000; rss: 137MB	maybe building test harness
time: 0.007; rss: 137MB	maybe creating a macro crate
Post-expansion node count: 641571
time: 0.000; rss: 137MB	checking for inline asm in case the target doesn't support it
time: 0.014; rss: 137MB	complete gated feature checking
time: 0.024; rss: 137MB	early lint checks
time: 0.008; rss: 137MB	AST validation
time: 0.118; rss: 153MB	name resolution
time: 0.122; rss: 193MB	lowering ast -> hir
time: 0.024; rss: 201MB	indexing hir
time: 0.007; rss: 201MB	attribute checking
time: 0.006; rss: 154MB	language item collection
time: 0.012; rss: 154MB	lifetime resolution
time: 0.000; rss: 154MB	looking for entry point
time: 0.000; rss: 154MB	looking for plugin registrar
time: 0.064; rss: 164MB	region resolution
time: 0.006; rss: 164MB	loop checking
time: 0.006; rss: 164MB	static item recursion checking
time: 0.267; rss: 166MB	compute_incremental_hashes_map
time: 0.000; rss: 166MB	load_dep_graph
time: 0.044; rss: 172MB	type collecting
time: 0.001; rss: 172MB	variance inference
time: 0.038; rss: 175MB	coherence checking
time: 0.108; rss: 177MB	wf checking
time: 0.209; rss: 182MB	item-types checking
time: 4.088; rss: 227MB	item-bodies checking
time: 0.000; rss: 227MB	drop-impl checking
time: 0.289; rss: 233MB	const checking
time: 0.057; rss: 233MB	privacy checking
time: 0.007; rss: 233MB	stability index
time: 0.024; rss: 233MB	intrinsic checking
time: 0.019; rss: 233MB	effect checking
time: 0.061; rss: 233MB	match checking
time: 0.091; rss: 224MB	liveness checking
time: 0.235; rss: 224MB	rvalue checking
time: 0.665; rss: 400MB	MIR dump
  time: 0.061; rss: 407MB	SimplifyCfg
  time: 0.084; rss: 407MB	QualifyAndPromoteConstants
  time: 0.114; rss: 407MB	TypeckMir
  time: 0.005; rss: 407MB	SimplifyBranches
  time: 0.031; rss: 407MB	SimplifyCfg
time: 0.295; rss: 407MB	MIR passes
time: 0.593; rss: 410MB	borrow checking
time: 0.023; rss: 410MB	reachability checking
time: 0.047; rss: 410MB	death checking
time: 0.049; rss: 413MB	stability checking
time: 0.000; rss: 413MB	unused lib feature checking
time: 0.226; rss: 413MB	lint checking
time: 0.000; rss: 413MB	resolving dependency formats
  time: 0.003; rss: 413MB	NoLandingPads
  time: 0.027; rss: 413MB	SimplifyCfg
  time: 0.091; rss: 420MB	EraseRegions
  time: 0.012; rss: 420MB	AddCallGuards
  time: 0.332; rss: 438MB	ElaborateDrops
  time: 0.003; rss: 438MB	NoLandingPads
  time: 0.054; rss: 439MB	SimplifyCfg
  time: 0.032; rss: 439MB	InstCombine
  time: 0.012; rss: 439MB	Deaggregator
  time: 0.003; rss: 439MB	CopyPropagation
  time: 0.010; rss: 439MB	AddCallGuards
  time: 0.003; rss: 439MB	PreTrans
time: 0.582; rss: 439MB	Prepare MIR codegen passes
  time: 0.282; rss: 446MB	write metadata
  time: 0.476; rss: 458MB	translation item collection
  time: 0.065; rss: 463MB	codegen unit partitioning
  time: 0.054; rss: 710MB	internalize symbols
time: 5.772; rss: 591MB	translation
time: 0.000; rss: 591MB	assert dep graph
time: 0.000; rss: 591MB	serialize dep graph
  time: 0.521; rss: 402MB	llvm function passes [0]
  time: 0.264; rss: 412MB	llvm module passes [0]
  time: 10.106; rss: 409MB	codegen passes [0]
  time: 0.001; rss: 410MB	codegen passes [0]
time: 11.813; rss: 410MB	LLVM passes
time: 0.000; rss: 410MB	serialize work products
time: 0.673; rss: 101MB	linking
done
