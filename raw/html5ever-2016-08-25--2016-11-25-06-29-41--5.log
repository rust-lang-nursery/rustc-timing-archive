commit c78cc52afd99ec0b3dd7f83cd257f0be767a508a
Merge: 2e7176f 4d0618e
Author: bors <bors@rust-lang.org>
Date:   Fri Nov 25 00:22:49 2016 -0600

    Auto merge of #37979 - nnethercote:Ty-super_fold_with, r=eddyb
    
    Avoid more unnecessary mk_ty calls in Ty::super_fold_with.
    
    This speeds up several rustc-benchmarks by 1--5%.
    
    This PR is the lovechild of #37108 and #37705.
    ```
    futures-rs-test  4.059s vs  4.011s --> 1.012x faster (variance: 1.016x, 1.026x)
    helloworld       0.236s vs  0.239s --> 0.986x faster (variance: 1.051x, 1.014x)
    html5ever-2016-  3.831s vs  3.824s --> 1.002x faster (variance: 1.020x, 1.019x)
    hyper.0.5.0      4.928s vs  4.936s --> 0.998x faster (variance: 1.003x, 1.012x)
    inflate-0.1.0    4.135s vs  4.104s --> 1.007x faster (variance: 1.026x, 1.028x)
    issue-32062-equ  0.309s vs  0.303s --> 1.017x faster (variance: 1.019x, 1.084x)
    issue-32278-big  1.818s vs  1.797s --> 1.011x faster (variance: 1.011x, 1.008x)
    jld-day15-parse  1.304s vs  1.271s --> 1.026x faster (variance: 1.018x, 1.012x)
    piston-image-0. 10.938s vs 10.921s --> 1.002x faster (variance: 1.025x, 1.016x)
    reddit-stress    2.327s vs  2.208s --> 1.054x faster (variance: 1.016x, 1.006x)
    regex-0.1.80     8.796s vs  8.727s --> 1.008x faster (variance: 1.012x, 1.019x)
    regex.0.1.30     2.294s vs  2.249s --> 1.020x faster (variance: 1.013x, 1.026x)
    rust-encoding-0  1.914s vs  1.886s --> 1.015x faster (variance: 1.027x, 1.026x)
    ```
rustc: ./html5ever-2016-08-25
cargo rustc  -- -Ztime-passes -Zinput-stats
   Compiling html5ever v0.5.4 (file:///root/benchmarks/html5ever-2016-08-25)
time: 0.023; rss: 50MB	parsing
Lines of code:             8210
Pre-expansion node count:  52140
time: 0.000; rss: 50MB	recursion limit
time: 0.000; rss: 50MB	crate injection
time: 0.000; rss: 50MB	plugin loading
time: 0.000; rss: 50MB	plugin registration
time: 0.632; rss: 102MB	expansion
time: 0.000; rss: 102MB	maybe building test harness
time: 0.002; rss: 102MB	maybe creating a macro crate
Post-expansion node count: 163412
time: 0.000; rss: 102MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 102MB	complete gated feature checking
time: 0.008; rss: 102MB	early lint checks
time: 0.002; rss: 102MB	AST validation
time: 0.015; rss: 105MB	name resolution
time: 0.011; rss: 112MB	lowering ast -> hir
time: 0.002; rss: 116MB	indexing hir
time: 0.002; rss: 116MB	attribute checking
time: 0.001; rss: 96MB	language item collection
time: 0.002; rss: 96MB	lifetime resolution
time: 0.000; rss: 96MB	looking for entry point
time: 0.000; rss: 96MB	looking for plugin registrar
time: 0.010; rss: 105MB	region resolution
time: 0.001; rss: 105MB	loop checking
time: 0.001; rss: 105MB	static item recursion checking
time: 0.020; rss: 105MB	compute_incremental_hashes_map
time: 0.000; rss: 105MB	load_dep_graph
time: 0.009; rss: 106MB	type collecting
time: 0.000; rss: 106MB	variance inference
time: 0.000; rss: 106MB	impl wf inference
time: 0.011; rss: 107MB	coherence checking
time: 0.020; rss: 108MB	wf checking
time: 0.263; rss: 120MB	item-types checking
time: 0.459; rss: 129MB	item-bodies checking
time: 0.000; rss: 129MB	drop-impl checking
time: 0.058; rss: 132MB	const checking
time: 0.005; rss: 132MB	privacy checking
time: 0.001; rss: 132MB	stability index
time: 0.003; rss: 132MB	intrinsic checking
time: 0.002; rss: 132MB	effect checking
time: 0.014; rss: 132MB	match checking
time: 0.011; rss: 131MB	liveness checking
time: 0.021; rss: 131MB	rvalue checking
time: 0.102; rss: 173MB	MIR dump
  time: 0.008; rss: 173MB	SimplifyCfg
  time: 0.014; rss: 175MB	QualifyAndPromoteConstants
  time: 0.022; rss: 175MB	TypeckMir
  time: 0.000; rss: 175MB	SimplifyBranches
  time: 0.004; rss: 175MB	SimplifyCfg
time: 0.048; rss: 175MB	MIR cleanup and validation
time: 0.078; rss: 181MB	borrow checking
time: 0.002; rss: 181MB	reachability checking
time: 0.005; rss: 181MB	death checking
time: 0.006; rss: 181MB	stability checking
time: 0.000; rss: 181MB	unused lib feature checking
time: 0.055; rss: 181MB	lint checking
time: 0.000; rss: 181MB	resolving dependency formats
  time: 0.000; rss: 181MB	NoLandingPads
  time: 0.004; rss: 181MB	SimplifyCfg
  time: 0.009; rss: 181MB	EraseRegions
  time: 0.001; rss: 181MB	AddCallGuards
  time: 0.072; rss: 185MB	ElaborateDrops
  time: 0.000; rss: 185MB	NoLandingPads
  time: 0.007; rss: 183MB	SimplifyCfg
  time: 0.007; rss: 181MB	InstCombine
  time: 0.001; rss: 181MB	Deaggregator
  time: 0.000; rss: 181MB	CopyPropagation
  time: 0.007; rss: 178MB	SimplifyLocals
  time: 0.001; rss: 178MB	AddCallGuards
  time: 0.000; rss: 178MB	PreTrans
time: 0.109; rss: 178MB	MIR optimisations
  time: 0.011; rss: 180MB	write metadata
  time: 0.039; rss: 181MB	translation item collection
  time: 0.004; rss: 181MB	codegen unit partitioning
  time: 0.004; rss: 194MB	internalize symbols
time: 0.258; rss: 194MB	translation
time: 0.000; rss: 194MB	assert dep graph
time: 0.000; rss: 194MB	serialize dep graph
  time: 0.021; rss: 107MB	llvm function passes [0]
  time: 0.012; rss: 108MB	llvm module passes [0]
  time: 0.481; rss: 112MB	codegen passes [0]
  time: 0.000; rss: 112MB	codegen passes [0]
time: 0.554; rss: 112MB	LLVM passes
time: 0.000; rss: 112MB	serialize work products
time: 0.025; rss: 95MB	linking
done
