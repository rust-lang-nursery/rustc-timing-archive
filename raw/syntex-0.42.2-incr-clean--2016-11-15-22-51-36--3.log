commit c87bae6b6575efe97a0642142d9af1306dce7a7e
Merge: 43006fc 30f75e3
Author: bors <bors@rust-lang.org>
Date:   Tue Nov 15 15:59:52 2016 -0800

    Auto merge of #37758 - euclio:unstable, r=brson
    
    do not use deprecated text for unstable docs
    
    ![2016-11-13-18 55 23](https://cloud.githubusercontent.com/assets/1372438/20249943/d7f684a2-a9d2-11e6-8c5a-a2bfe354b9aa.png)
    ![2016-11-13-18 55 12](https://cloud.githubusercontent.com/assets/1372438/20249942/d7f6595a-a9d2-11e6-9240-07f5a89367f4.png)
    
    ![2016-11-13-18 54 00](https://cloud.githubusercontent.com/assets/1372438/20249946/da176d46-a9d2-11e6-8f34-c09cff9bcc15.png)
    ![2016-11-13-18 54 45](https://cloud.githubusercontent.com/assets/1372438/20249941/d7d9837a-a9d2-11e6-99f4-e4bf8807b1c9.png)
rustc: ./syntex-0.42.2-incr-clean
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
   Compiling syntex_syntax v0.42.0
time: 0.091; rss: 71MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 71MB	recursion limit
time: 0.000; rss: 71MB	crate injection
time: 0.000; rss: 71MB	plugin loading
time: 0.000; rss: 71MB	plugin registration
time: 0.232; rss: 144MB	expansion
time: 0.000; rss: 144MB	maybe building test harness
time: 0.006; rss: 144MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 144MB	checking for inline asm in case the target doesn't support it
time: 0.013; rss: 144MB	complete gated feature checking
time: 0.023; rss: 144MB	early lint checks
time: 0.007; rss: 144MB	AST validation
time: 0.076; rss: 159MB	name resolution
time: 0.045; rss: 184MB	lowering ast -> hir
time: 0.008; rss: 195MB	indexing hir
time: 0.006; rss: 195MB	attribute checking
time: 0.004; rss: 151MB	language item collection
time: 0.010; rss: 151MB	lifetime resolution
time: 0.000; rss: 151MB	looking for entry point
time: 0.000; rss: 151MB	looking for plugin registrar
time: 0.040; rss: 172MB	region resolution
time: 0.005; rss: 172MB	loop checking
time: 0.005; rss: 172MB	static item recursion checking
time: 0.325; rss: 173MB	compute_incremental_hashes_map
time: 0.000; rss: 173MB	load_dep_graph
time: 0.047; rss: 177MB	type collecting
time: 0.001; rss: 177MB	variance inference
time: 0.018; rss: 178MB	coherence checking
time: 0.097; rss: 180MB	wf checking
time: 0.185; rss: 183MB	item-types checking
time: 3.373; rss: 233MB	item-bodies checking
time: 0.000; rss: 233MB	drop-impl checking
time: 0.221; rss: 254MB	const checking
time: 0.045; rss: 254MB	privacy checking
time: 0.005; rss: 254MB	stability index
time: 0.017; rss: 254MB	intrinsic checking
time: 0.014; rss: 254MB	effect checking
time: 0.045; rss: 254MB	match checking
time: 0.048; rss: 239MB	liveness checking
time: 0.183; rss: 239MB	rvalue checking
time: 0.374; rss: 437MB	MIR dump
  time: 0.057; rss: 438MB	SimplifyCfg
  time: 0.075; rss: 438MB	QualifyAndPromoteConstants
  time: 0.097; rss: 438MB	TypeckMir
  time: 0.004; rss: 438MB	SimplifyBranches
  time: 0.030; rss: 438MB	SimplifyCfg
time: 0.264; rss: 438MB	MIR cleanup and validation
time: 0.484; rss: 439MB	borrow checking
time: 0.025; rss: 439MB	reachability checking
time: 0.039; rss: 439MB	death checking
time: 0.030; rss: 441MB	stability checking
time: 0.000; rss: 441MB	unused lib feature checking
time: 0.195; rss: 441MB	lint checking
time: 0.000; rss: 441MB	resolving dependency formats
  time: 0.003; rss: 441MB	NoLandingPads
  time: 0.026; rss: 441MB	SimplifyCfg
  time: 0.061; rss: 448MB	EraseRegions
  time: 0.011; rss: 448MB	AddCallGuards
  time: 0.273; rss: 464MB	ElaborateDrops
  time: 0.003; rss: 464MB	NoLandingPads
  time: 0.052; rss: 465MB	SimplifyCfg
  time: 0.028; rss: 465MB	InstCombine
  time: 0.012; rss: 465MB	Deaggregator
  time: 0.002; rss: 465MB	CopyPropagation
  time: 0.034; rss: 465MB	SimplifyLocals
  time: 0.009; rss: 465MB	AddCallGuards
  time: 0.003; rss: 465MB	PreTrans
time: 0.519; rss: 465MB	MIR optimisations
  time: 0.060; rss: 475MB	write metadata
  time: 0.402; rss: 490MB	translation item collection
  time: 0.064; rss: 498MB	codegen unit partitioning
  time: 0.046; rss: 739MB	internalize symbols
time: 4.446; rss: 739MB	translation
time: 0.000; rss: 739MB	assert dep graph
time: 0.000; rss: 739MB	serialize dep graph
incremental: re-using 0 out of 1 modules
  time: 0.528; rss: 421MB	llvm function passes [0]
  time: 0.248; rss: 426MB	llvm module passes [0]
  time: 10.418; rss: 429MB	codegen passes [0]
  time: 0.000; rss: 429MB	codegen passes [0]
time: 11.938; rss: 429MB	LLVM passes
time: 0.000; rss: 429MB	serialize work products
time: 0.343; rss: 106MB	linking
done
