commit e5ed0a5d78be74238af31631e7ecf311eb661586
Merge: 7c535c6 36f2af1
Author: bors <bors@rust-lang.org>
Date:   Sat Nov 19 23:39:25 2016 -0600

    Auto merge of #37842 - nikomatsakis:incremental-test, r=mw
    
    Add tests for incremental reuse scenarios
    
    These are microbenchmarks checking that we achieve the expected reuse in the scenarios covered by incremental beta.
    
    r? @michaelwoerister
rustc: ./syntex-0.42.2
cargo rustc -p syntex_syntax  -- -Ztime-passes -Zinput-stats
   Compiling syntex_syntax v0.42.0
time: 0.127; rss: 65MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 65MB	recursion limit
time: 0.000; rss: 65MB	crate injection
time: 0.000; rss: 65MB	plugin loading
time: 0.000; rss: 65MB	plugin registration
time: 0.327; rss: 138MB	expansion
time: 0.000; rss: 138MB	maybe building test harness
time: 0.007; rss: 138MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 138MB	checking for inline asm in case the target doesn't support it
time: 0.014; rss: 138MB	complete gated feature checking
time: 0.024; rss: 138MB	early lint checks
time: 0.007; rss: 138MB	AST validation
time: 0.106; rss: 153MB	name resolution
time: 0.087; rss: 178MB	lowering ast -> hir
time: 0.021; rss: 186MB	indexing hir
time: 0.007; rss: 186MB	attribute checking
time: 0.005; rss: 144MB	language item collection
time: 0.011; rss: 144MB	lifetime resolution
time: 0.000; rss: 144MB	looking for entry point
time: 0.000; rss: 144MB	looking for plugin registrar
time: 0.080; rss: 163MB	region resolution
time: 0.005; rss: 163MB	loop checking
time: 0.005; rss: 163MB	static item recursion checking
time: 0.335; rss: 164MB	compute_incremental_hashes_map
time: 0.000; rss: 164MB	load_dep_graph
time: 0.049; rss: 169MB	type collecting
time: 0.002; rss: 169MB	variance inference
time: 0.002; rss: 169MB	impl wf inference
time: 0.019; rss: 171MB	coherence checking
time: 0.089; rss: 173MB	wf checking
time: 0.180; rss: 175MB	item-types checking
time: 6.670; rss: 218MB	item-bodies checking
time: 0.000; rss: 218MB	drop-impl checking
time: 0.286; rss: 239MB	const checking
time: 0.051; rss: 239MB	privacy checking
time: 0.006; rss: 239MB	stability index
time: 0.018; rss: 239MB	intrinsic checking
time: 0.015; rss: 239MB	effect checking
time: 0.047; rss: 239MB	match checking
time: 0.081; rss: 232MB	liveness checking
time: 0.193; rss: 232MB	rvalue checking
time: 0.583; rss: 407MB	MIR dump
  time: 0.060; rss: 413MB	SimplifyCfg
  time: 0.076; rss: 413MB	QualifyAndPromoteConstants
  time: 0.109; rss: 413MB	TypeckMir
  time: 0.004; rss: 413MB	SimplifyBranches
  time: 0.031; rss: 413MB	SimplifyCfg
time: 0.280; rss: 413MB	MIR cleanup and validation
time: 0.577; rss: 416MB	borrow checking
time: 0.020; rss: 417MB	reachability checking
time: 0.047; rss: 417MB	death checking
time: 0.036; rss: 419MB	stability checking
time: 0.000; rss: 419MB	unused lib feature checking
time: 0.209; rss: 419MB	lint checking
time: 0.000; rss: 419MB	resolving dependency formats
  time: 0.003; rss: 419MB	NoLandingPads
  time: 0.027; rss: 419MB	SimplifyCfg
  time: 0.078; rss: 426MB	EraseRegions
  time: 0.012; rss: 426MB	AddCallGuards
  time: 0.304; rss: 445MB	ElaborateDrops
  time: 0.003; rss: 445MB	NoLandingPads
  time: 0.053; rss: 445MB	SimplifyCfg
  time: 0.030; rss: 445MB	InstCombine
  time: 0.013; rss: 445MB	Deaggregator
  time: 0.002; rss: 445MB	CopyPropagation
  time: 0.036; rss: 446MB	SimplifyLocals
  time: 0.010; rss: 446MB	AddCallGuards
  time: 0.003; rss: 446MB	PreTrans
time: 0.575; rss: 446MB	MIR optimisations
  time: 0.082; rss: 454MB	write metadata
  time: 0.433; rss: 467MB	translation item collection
  time: 0.073; rss: 472MB	codegen unit partitioning
  time: 0.048; rss: 720MB	internalize symbols
time: 5.091; rss: 720MB	translation
time: 0.000; rss: 720MB	assert dep graph
time: 0.000; rss: 720MB	serialize dep graph
  time: 0.534; rss: 412MB	llvm function passes [0]
  time: 0.270; rss: 422MB	llvm module passes [0]
  time: 10.394; rss: 420MB	codegen passes [0]
  time: 0.000; rss: 420MB	codegen passes [0]
time: 12.107; rss: 420MB	LLVM passes
time: 0.000; rss: 420MB	serialize work products
time: 0.349; rss: 100MB	linking
done
