commit 0ed951993fb5721a303ca5fa743543dd9f3f6b10
Merge: bd6a54d 7cd8a49
Author: bors <bors@rust-lang.org>
Date:   Mon Nov 14 18:12:26 2016 -0800

    Auto merge of #37775 - alexcrichton:try-fix-dox, r=brson
    
    rustbuild: Tweak default rule inclusion
    
    If a rule is flagged with `default(true)` then the pseudo-rule `default:foo`
    will include that. If a rule is also flagged with `.host(true)`, however, then
    the rule shouldn't be included for targets that aren't in the host array. This
    adds a filter to ensure we don't pull in host rules for targets by accident.
rustc: ./syntex-0.42.2
cargo rustc -p syntex_syntax  -- -Ztime-passes -Zinput-stats
   Compiling syntex_syntax v0.42.0
time: 0.125; rss: 63MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 63MB	recursion limit
time: 0.000; rss: 63MB	crate injection
time: 0.000; rss: 63MB	plugin loading
time: 0.000; rss: 63MB	plugin registration
time: 0.321; rss: 134MB	expansion
time: 0.000; rss: 134MB	maybe building test harness
time: 0.007; rss: 134MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 134MB	checking for inline asm in case the target doesn't support it
time: 0.015; rss: 134MB	complete gated feature checking
time: 0.024; rss: 134MB	early lint checks
time: 0.007; rss: 134MB	AST validation
time: 0.104; rss: 150MB	name resolution
time: 0.088; rss: 175MB	lowering ast -> hir
time: 0.020; rss: 183MB	indexing hir
time: 0.006; rss: 183MB	attribute checking
time: 0.005; rss: 141MB	language item collection
time: 0.010; rss: 141MB	lifetime resolution
time: 0.000; rss: 141MB	looking for entry point
time: 0.000; rss: 141MB	looking for plugin registrar
time: 0.079; rss: 161MB	region resolution
time: 0.005; rss: 161MB	loop checking
time: 0.005; rss: 161MB	static item recursion checking
time: 0.331; rss: 161MB	compute_incremental_hashes_map
time: 0.000; rss: 161MB	load_dep_graph
time: 0.049; rss: 166MB	type collecting
time: 0.001; rss: 166MB	variance inference
time: 0.018; rss: 168MB	coherence checking
time: 0.096; rss: 170MB	wf checking
time: 0.186; rss: 173MB	item-types checking
time: 3.482; rss: 216MB	item-bodies checking
time: 0.000; rss: 216MB	drop-impl checking
time: 0.286; rss: 236MB	const checking
time: 0.047; rss: 237MB	privacy checking
time: 0.005; rss: 237MB	stability index
time: 0.018; rss: 237MB	intrinsic checking
time: 0.015; rss: 237MB	effect checking
time: 0.047; rss: 237MB	match checking
time: 0.069; rss: 224MB	liveness checking
time: 0.191; rss: 224MB	rvalue checking
time: 0.617; rss: 404MB	MIR dump
  time: 0.060; rss: 410MB	SimplifyCfg
  time: 0.076; rss: 410MB	QualifyAndPromoteConstants
  time: 0.101; rss: 410MB	TypeckMir
  time: 0.004; rss: 410MB	SimplifyBranches
  time: 0.031; rss: 411MB	SimplifyCfg
time: 0.272; rss: 411MB	MIR cleanup and validation
time: 0.504; rss: 414MB	borrow checking
time: 0.025; rss: 414MB	reachability checking
time: 0.040; rss: 414MB	death checking
time: 0.039; rss: 417MB	stability checking
time: 0.000; rss: 417MB	unused lib feature checking
time: 0.211; rss: 417MB	lint checking
time: 0.000; rss: 417MB	resolving dependency formats
  time: 0.004; rss: 417MB	NoLandingPads
  time: 0.027; rss: 417MB	SimplifyCfg
  time: 0.074; rss: 423MB	EraseRegions
  time: 0.012; rss: 424MB	AddCallGuards
  time: 0.297; rss: 440MB	ElaborateDrops
  time: 0.004; rss: 440MB	NoLandingPads
  time: 0.054; rss: 441MB	SimplifyCfg
  time: 0.030; rss: 441MB	InstCombine
  time: 0.012; rss: 441MB	Deaggregator
  time: 0.003; rss: 441MB	CopyPropagation
  time: 0.036; rss: 441MB	SimplifyLocals
  time: 0.010; rss: 441MB	AddCallGuards
  time: 0.003; rss: 441MB	PreTrans
time: 0.564; rss: 441MB	MIR optimisations
  time: 0.082; rss: 451MB	write metadata
  time: 0.437; rss: 466MB	translation item collection
  time: 0.073; rss: 472MB	codegen unit partitioning
  time: 0.048; rss: 718MB	internalize symbols
time: 5.049; rss: 718MB	translation
time: 0.000; rss: 718MB	assert dep graph
time: 0.000; rss: 718MB	serialize dep graph
  time: 0.534; rss: 410MB	llvm function passes [0]
  time: 0.259; rss: 419MB	llvm module passes [0]
  time: 10.413; rss: 417MB	codegen passes [0]
  time: 0.000; rss: 417MB	codegen passes [0]
time: 12.085; rss: 417MB	LLVM passes
time: 0.000; rss: 417MB	serialize work products
time: 0.346; rss: 99MB	linking
done
