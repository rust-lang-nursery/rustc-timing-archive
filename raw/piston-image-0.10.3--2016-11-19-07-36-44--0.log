commit aa97dafe018de235b544b13e5beceba1b5d0593b
Merge: 2f4368b 4fc02f6
Author: bors <bors@rust-lang.org>
Date:   Sat Nov 19 01:49:07 2016 -0800

    Auto merge of #37797 - arielb1:inline-closure, r=michaelwoerister
    
    instantiate closures on demand
    
    this should fix compilation with `-C codegen-units=4` - tested locally
    with `RUSTFLAGS='-C codegen-units=4' ../x.py test`
    
    r? @michaelwoerister
rustc: ./piston-image-0.10.3
cargo rustc  -- -Ztime-passes -Zinput-stats
   Compiling libc v0.2.16
   Compiling color_quant v1.0.0
   Compiling glob v0.2.11
   Compiling rustc-serialize v0.3.19
   Compiling num-traits v0.1.35
   Compiling inflate v0.1.1
   Compiling lzw v0.10.0
   Compiling gcc v0.3.35
   Compiling bitflags v0.7.0
   Compiling scoped_threadpool v0.1.7
   Compiling gif v0.9.0
   Compiling num_cpus v0.2.13
   Compiling rand v0.3.14
   Compiling num-integer v0.1.32
   Compiling byteorder v0.5.3
   Compiling num-iter v0.1.32
   Compiling miniz-sys v0.1.7
   Compiling num v0.1.35
   Compiling enum_primitive v0.1.0
   Compiling flate2 v0.2.14
   Compiling deque v0.3.1
   Compiling rayon v0.4.2
   Compiling jpeg-decoder v0.1.6
   Compiling num-bigint v0.1.35
   Compiling png v0.5.2
   Compiling num-rational v0.1.35
   Compiling image v0.10.3 (file:///root/benchmarks/piston-image-0.10.3)
time: 0.037; rss: 54MB	parsing
Lines of code:             12000
Pre-expansion node count:  90152
time: 0.000; rss: 54MB	recursion limit
time: 0.000; rss: 54MB	crate injection
time: 0.000; rss: 54MB	plugin loading
time: 0.000; rss: 54MB	plugin registration
time: 0.066; rss: 95MB	expansion
time: 0.000; rss: 95MB	maybe building test harness
time: 0.001; rss: 95MB	maybe creating a macro crate
Post-expansion node count: 148881
time: 0.000; rss: 95MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 95MB	complete gated feature checking
time: 0.005; rss: 95MB	early lint checks
time: 0.001; rss: 95MB	AST validation
time: 0.018; rss: 99MB	name resolution
time: 0.012; rss: 105MB	lowering ast -> hir
time: 0.002; rss: 110MB	indexing hir
time: 0.001; rss: 110MB	attribute checking
time: 0.001; rss: 99MB	language item collection
time: 0.002; rss: 99MB	lifetime resolution
time: 0.000; rss: 99MB	looking for entry point
time: 0.000; rss: 99MB	looking for plugin registrar
time: 0.009; rss: 105MB	region resolution
time: 0.001; rss: 105MB	loop checking
time: 0.001; rss: 105MB	static item recursion checking
time: 0.051; rss: 105MB	compute_incremental_hashes_map
time: 0.000; rss: 105MB	load_dep_graph
time: 0.016; rss: 107MB	type collecting
time: 0.000; rss: 107MB	variance inference
time: 0.000; rss: 107MB	impl wf inference
time: 0.014; rss: 109MB	coherence checking
time: 0.066; rss: 109MB	wf checking
time: 0.134; rss: 113MB	item-types checking
time: 0.770; rss: 121MB	item-bodies checking
time: 0.000; rss: 121MB	drop-impl checking
time: 0.049; rss: 127MB	const checking
time: 0.009; rss: 127MB	privacy checking
time: 0.001; rss: 127MB	stability index
time: 0.006; rss: 127MB	intrinsic checking
time: 0.002; rss: 127MB	effect checking
time: 0.013; rss: 127MB	match checking
time: 0.009; rss: 127MB	liveness checking
time: 0.039; rss: 127MB	rvalue checking
time: 0.087; rss: 168MB	MIR dump
  time: 0.011; rss: 168MB	SimplifyCfg
  time: 0.019; rss: 168MB	QualifyAndPromoteConstants
  time: 0.023; rss: 168MB	TypeckMir
  time: 0.001; rss: 168MB	SimplifyBranches
  time: 0.004; rss: 168MB	SimplifyCfg
time: 0.058; rss: 168MB	MIR cleanup and validation
time: 0.107; rss: 168MB	borrow checking
time: 0.003; rss: 168MB	reachability checking
time: 0.007; rss: 168MB	death checking
time: 0.007; rss: 170MB	stability checking
time: 0.000; rss: 170MB	unused lib feature checking
time: 0.062; rss: 170MB	lint checking
time: 0.000; rss: 170MB	resolving dependency formats
  time: 0.001; rss: 170MB	NoLandingPads
  time: 0.005; rss: 170MB	SimplifyCfg
  time: 0.010; rss: 170MB	EraseRegions
  time: 0.002; rss: 170MB	AddCallGuards
  time: 0.042; rss: 172MB	ElaborateDrops
  time: 0.001; rss: 172MB	NoLandingPads
  time: 0.009; rss: 172MB	SimplifyCfg
  time: 0.006; rss: 172MB	InstCombine
  time: 0.002; rss: 172MB	Deaggregator
  time: 0.000; rss: 172MB	CopyPropagation
  time: 0.007; rss: 172MB	SimplifyLocals
  time: 0.002; rss: 172MB	AddCallGuards
  time: 0.000; rss: 172MB	PreTrans
time: 0.086; rss: 172MB	MIR optimisations
  time: 0.016; rss: 174MB	write metadata
  time: 0.421; rss: 187MB	translation item collection
  time: 0.024; rss: 192MB	codegen unit partitioning
  time: 0.021; rss: 313MB	internalize symbols
time: 2.325; rss: 313MB	translation
time: 0.000; rss: 313MB	assert dep graph
time: 0.000; rss: 313MB	serialize dep graph
  time: 0.206; rss: 224MB	llvm function passes [0]
  time: 0.080; rss: 228MB	llvm module passes [0]
  time: 4.184; rss: 227MB	codegen passes [0]
  time: 0.000; rss: 227MB	codegen passes [0]
time: 4.775; rss: 227MB	LLVM passes
time: 0.000; rss: 227MB	serialize work products
time: 0.128; rss: 98MB	linking
done
