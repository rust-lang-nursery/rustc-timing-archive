commit 59b7c907a3e3dd8b263297adf6ff0515fac125e3
Merge: ddd1bf5 9a30ecd
Author: bors <bors@rust-lang.org>
Date:   Tue Feb 2 14:00:50 2016 +0000

    Auto merge of #31254 - tmiasko:macro-pretty-print-fix, r=sfackler
    
    Pretty printing of macro with braces but without terminated semicolon
    removed more boxes from stack than it put there, resulting in panic.
    This fixes the issue #30731.
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling gcc v0.3.21
   Compiling httparse v0.1.6
   Compiling matches v0.1.2
   Compiling bitflags v0.3.3
   Compiling libc v0.2.6
   Compiling winapi v0.2.5
   Compiling winapi-build v0.1.1
   Compiling rustc-serialize v0.3.16
   Compiling unicase v0.1.0
   Compiling pkg-config v0.3.6
   Compiling lazy_static v0.1.15
   Compiling typeable v0.1.2
   Compiling traitobject v0.0.1
   Compiling kernel32-sys v0.2.1
   Compiling advapi32-sys v0.1.2
   Compiling libc v0.1.12
   Compiling rand v0.3.13
   Compiling time v0.1.34
   Compiling num_cpus v0.2.10
   Compiling log v0.3.5
   Compiling mime v0.0.11
   Compiling openssl-sys v0.6.7
   Compiling openssl v0.6.7
   Compiling uuid v0.1.18
   Compiling url v0.2.38
   Compiling cookie v0.1.21
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.029; rss: 43MB	parsing
Lines of code:             9154
Pre-expansion node count:  45594
time: 0.009; rss: 43MB	configuration 1
time: 0.000; rss: 43MB	recursion limit
time: 0.000; rss: 43MB	gated macro checking
time: 0.000; rss: 43MB	crate injection
time: 0.004; rss: 49MB	macro loading
time: 0.000; rss: 49MB	plugin loading
time: 0.000; rss: 49MB	plugin registration
time: 0.194; rss: 58MB	expansion
time: 0.005; rss: 58MB	complete gated feature checking 1
time: 0.034; rss: 58MB	configuration 2
time: 0.000; rss: 58MB	gated configuration checking
time: 0.013; rss: 58MB	maybe building test harness
time: 0.011; rss: 58MB	prelude injection
time: 0.001; rss: 58MB	checking that all macro invocations are gone
time: 0.000; rss: 58MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 58MB	complete gated feature checking 2
Post-expansion node count: 109258
time: 0.010; rss: 58MB	assigning node ids
time: 0.011; rss: 62MB	lowering ast -> hir
time: 0.005; rss: 66MB	indexing hir
time: 0.000; rss: 66MB	attribute checking
time: 0.005; rss: 66MB	early lint checks
time: 0.003; rss: 61MB	external crate/lib resolution
time: 0.001; rss: 61MB	language item collection
time: 0.028; rss: 80MB	resolution
time: 0.002; rss: 80MB	lifetime resolution
time: 0.000; rss: 80MB	looking for entry point
time: 0.000; rss: 80MB	looking for plugin registrar
time: 0.006; rss: 84MB	region resolution
time: 0.001; rss: 84MB	loop checking
time: 0.001; rss: 84MB	static item recursion checking
time: 0.014; rss: 88MB	type collecting
time: 0.000; rss: 88MB	variance inference
time: 0.038; rss: 106MB	coherence checking
time: 0.070; rss: 109MB	wf checking
time: 0.026; rss: 109MB	item-types checking
time: 0.521; rss: 133MB	item-bodies checking
time: 0.000; rss: 133MB	drop-impl checking
time: 0.042; rss: 135MB	const checking
time: 0.008; rss: 135MB	privacy checking
time: 0.001; rss: 135MB	stability index
time: 0.004; rss: 135MB	intrinsic checking
time: 0.002; rss: 135MB	effect checking
time: 0.013; rss: 135MB	match checking
time: 0.049; rss: 137MB	MIR dump
time: 0.006; rss: 137MB	liveness checking
time: 0.069; rss: 137MB	borrow checking
time: 0.035; rss: 137MB	rvalue checking
time: 0.003; rss: 137MB	reachability checking
time: 0.006; rss: 137MB	death checking
time: 0.006; rss: 137MB	stability checking
time: 0.000; rss: 137MB	unused lib feature checking
time: 0.045; rss: 137MB	lint checking
time: 0.000; rss: 137MB	resolving dependency formats
time: 0.007; rss: 137MB	erasing regions from MIR
  time: 0.135; rss: 272MB	write metadata
time: 1.452; rss: 272MB	translation
  time: 0.100; rss: 169MB	llvm function passes [0]
  time: 0.053; rss: 170MB	llvm module passes [0]
  time: 1.688; rss: 214MB	codegen passes [0]
  time: 0.001; rss: 177MB	codegen passes [0]
time: 2.066; rss: 177MB	LLVM passes
time: 0.174; rss: 175MB	linking
done
