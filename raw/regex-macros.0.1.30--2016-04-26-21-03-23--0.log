commit 8f552181895921a377ab8c235340ea3d80ec7fc0
Merge: 897199a 9249e6a
Author: bors <bors@rust-lang.org>
Date:   Tue Apr 26 14:54:37 2016 -0700

    Auto merge of #31414 - durka:clone-copy, r=alexcrichton
    
    special-case #[derive(Copy, Clone)] with a shallow clone
    
    If a type is Copy then its Clone implementation can be a no-op. Currently `#[derive(Clone)]` generates a deep clone anyway. This can lead to lots of code bloat.
    
    This PR detects the case where Copy and Clone are both being derived (the general case of "is this type Copy" can't be determined by a syntax extension) and generates the shallow Clone impl. Right now this can only be done if there are no type parameters (see https://github.com/rust-lang/rust/issues/31085#issuecomment-178988663), but this restriction can be removed after specialization.
    
    Fixes #31085.
rustc: ./regex-macros.0.1.30
cd regex_macros && cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling regex v0.1.30 (file:///root/benchmarks/regex-macros.0.1.30/regex_macros)
   Compiling regex_macros v0.1.17 (file:///root/benchmarks/regex-macros.0.1.30/regex_macros)
time: 0.002; rss: 47MB	parsing
Lines of code:             639
Pre-expansion node count:  2170
time: 0.001; rss: 47MB	configuration 1
time: 0.000; rss: 51MB	recursion limit
time: 0.000; rss: 51MB	gated macro checking
time: 0.000; rss: 51MB	crate injection
time: 0.003; rss: 53MB	macro loading
time: 0.000; rss: 53MB	plugin loading
time: 0.000; rss: 53MB	plugin registration
time: 0.032; rss: 60MB	expansion
time: 0.001; rss: 60MB	complete gated feature checking 1
time: 0.010; rss: 60MB	configuration 2
time: 0.000; rss: 60MB	gated configuration checking
time: 0.005; rss: 60MB	maybe building test harness
time: 0.005; rss: 60MB	prelude injection
time: 0.000; rss: 60MB	checking that all macro invocations are gone
time: 0.000; rss: 60MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 60MB	complete gated feature checking 2
time: 0.000; rss: 60MB	const fn bodies and arguments
Post-expansion node count: 69741
time: 0.004; rss: 60MB	assigning node ids
time: 0.000; rss: 60MB	collecting defs
time: 0.073; rss: 97MB	external crate/lib resolution
time: 0.005; rss: 103MB	lowering ast -> hir
time: 0.001; rss: 105MB	indexing hir
time: 0.001; rss: 105MB	attribute checking
time: 0.003; rss: 105MB	early lint checks
time: 0.001; rss: 102MB	language item collection
time: 0.011; rss: 120MB	name resolution
time: 0.001; rss: 120MB	lifetime resolution
time: 0.000; rss: 120MB	looking for entry point
time: 0.000; rss: 120MB	looking for plugin registrar
time: 0.002; rss: 122MB	region resolution
time: 0.000; rss: 122MB	loop checking
time: 0.000; rss: 122MB	static item recursion checking
time: 0.000; rss: 122MB	load_dep_graph
time: 0.016; rss: 157MB	type collecting
time: 0.000; rss: 157MB	variance inference
time: 0.010; rss: 162MB	coherence checking
time: 0.007; rss: 164MB	wf checking
time: 0.001; rss: 164MB	item-types checking
time: 1.026; rss: 202MB	item-bodies checking
makefile:2: recipe for target 'all' failed
done
