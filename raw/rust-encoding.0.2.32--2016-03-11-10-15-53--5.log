commit aeb85a953322df7773095186e9762f3fe73375e2
Merge: 40c85cd 3e6fed3
Author: bors <bors@rust-lang.org>
Date:   Fri Mar 11 04:38:04 2016 -0800

    Auto merge of #32133 - alexcrichton:linkchecker, r=brson
    
    Add a link validator to rustbuild
    
    This commit was originally targeted at just adding a link checking script to the rustbuild system. This ended up snowballing a bit to extend rustbuild to be amenable to various tools we have as part of the build system in general.
    
    There's a new `src/tools` directory which has a number of scripts/programs that are purely intended to be used as part of the build system and CI of this repository. This is currently inhabited by rustbook, the error index generator, and a new linkchecker script added as part of this PR. I suspect that more tools like compiletest, tidy scripts, snapshot scripts, etc will migrate their way into this directory over time.
    
    The commit which adds the error index generator shows the steps necessary to add new tools to the build system, namely:
    
    1. New steps are defined for building the tool and running the tool
    2. The dependencies are configured
    3. The steps are implemented
    
    In terms of the link checker, these commits do a few things:
    
    * A new `src/tools/linkchecker` script is added. This will read an entire documentation tree looking for broken relative links (HTTP links aren't followed yet).
    * A large number of broken links throughout the documentation were fixed. Many of these were just broken when viewed from core as opposed to std, but were easily fixed.
    * A few rustdoc bugs here and there were fixed
rustc: ./rust-encoding.0.2.32
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling encoding v0.2.32 (file:///root/benchmarks/rust-encoding.0.2.32)
time: 0.023; rss: 42MB	parsing
Lines of code:             6441
Pre-expansion node count:  30335
time: 0.006; rss: 42MB	configuration 1
time: 0.000; rss: 42MB	recursion limit
time: 0.000; rss: 42MB	gated macro checking
time: 0.000; rss: 42MB	crate injection
time: 0.003; rss: 45MB	macro loading
time: 0.000; rss: 45MB	plugin loading
time: 0.000; rss: 45MB	plugin registration
time: 0.044; rss: 48MB	expansion
time: 0.001; rss: 48MB	complete gated feature checking 1
time: 0.008; rss: 48MB	configuration 2
time: 0.000; rss: 48MB	gated configuration checking
time: 0.004; rss: 48MB	maybe building test harness
time: 0.003; rss: 48MB	prelude injection
time: 0.000; rss: 48MB	checking that all macro invocations are gone
time: 0.000; rss: 48MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 48MB	complete gated feature checking 2
time: 0.000; rss: 48MB	const fn bodies and arguments
Post-expansion node count: 41783
time: 0.003; rss: 48MB	assigning node ids
time: 0.004; rss: 51MB	lowering ast -> hir
time: 0.001; rss: 53MB	indexing hir
time: 0.001; rss: 53MB	attribute checking
time: 0.002; rss: 53MB	early lint checks
time: 0.001; rss: 53MB	external crate/lib resolution
time: 0.000; rss: 53MB	language item collection
time: 0.008; rss: 62MB	resolution
time: 0.000; rss: 62MB	lifetime resolution
time: 0.000; rss: 62MB	looking for entry point
time: 0.000; rss: 62MB	looking for plugin registrar
time: 0.002; rss: 64MB	region resolution
time: 0.000; rss: 64MB	loop checking
time: 0.000; rss: 64MB	static item recursion checking
time: 0.004; rss: 66MB	type collecting
time: 0.000; rss: 66MB	variance inference
time: 0.020; rss: 81MB	coherence checking
time: 0.018; rss: 82MB	wf checking
time: 0.012; rss: 82MB	item-types checking
time: 0.180; rss: 94MB	item-bodies checking
time: 0.000; rss: 94MB	drop-impl checking
time: 0.010; rss: 94MB	const checking
time: 0.002; rss: 94MB	privacy checking
time: 0.000; rss: 94MB	stability index
time: 0.001; rss: 94MB	intrinsic checking
time: 0.000; rss: 94MB	effect checking
time: 0.006; rss: 94MB	match checking
time: 0.002; rss: 94MB	liveness checking
time: 0.006; rss: 94MB	rvalue checking
time: 0.021; rss: 98MB	MIR dump
time: 0.000; rss: 98MB	MIR passes
time: 0.021; rss: 98MB	borrow checking
time: 0.000; rss: 98MB	reachability checking
time: 0.002; rss: 98MB	death checking
time: 0.002; rss: 98MB	stability checking
time: 0.000; rss: 98MB	unused lib feature checking
time: 0.018; rss: 98MB	lint checking
time: 0.000; rss: 98MB	resolving dependency formats
time: 0.002; rss: 98MB	erasing regions from MIR
  time: 0.023; rss: 108MB	translation item collection
  time: 0.057; rss: 146MB	write metadata
time: 0.315; rss: 146MB	translation
  time: 0.026; rss: 108MB	llvm function passes [0]
  time: 0.048; rss: 112MB	llvm module passes [0]
  time: 0.560; rss: 117MB	codegen passes [0]
  time: 0.001; rss: 102MB	codegen passes [0]
time: 0.697; rss: 101MB	LLVM passes
time: 0.051; rss: 99MB	linking
done
