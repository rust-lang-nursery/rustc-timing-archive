commit e87cd7e380c89e3f80ceab417e3525e546a1e362
Merge: e90307d a62a690
Author: bors <bors@rust-lang.org>
Date:   Sun May 15 23:14:52 2016 -0700

    Auto merge of #33505 - petrochenkov:self, r=nrc
    
    Remove ExplicitSelf from HIR
    
    `self` argument is already kept in the argument list and can be retrieved from there if necessary, so there's no need for the duplication.
    The same changes can be applied to AST, I'll make them in the next breaking batch.
    The first commit also improves parsing of method declarations and fixes https://github.com/rust-lang/rust/issues/33413.
    
    r? @eddyb
rustc: ./jld-day15-parser
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling combine v1.3.0
   Compiling day15 v0.1.0 (file:///root/benchmarks/jld-day15-parser)
time: 0.001; rss: 44MB	parsing
Lines of code:             72
Pre-expansion node count:  673
time: 0.000; rss: 44MB	configuration 1
time: 0.000; rss: 44MB	recursion limit
time: 0.000; rss: 44MB	crate injection
time: 0.003; rss: 50MB	macro loading
time: 0.000; rss: 50MB	plugin loading
time: 0.000; rss: 50MB	plugin registration
time: 0.002; rss: 50MB	expansion
time: 0.000; rss: 50MB	configuration 2
time: 0.000; rss: 50MB	gated configuration checking
time: 0.000; rss: 50MB	maybe building test harness
time: 0.000; rss: 50MB	prelude injection
time: 0.000; rss: 50MB	checking that all macro invocations are gone
time: 0.000; rss: 50MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 50MB	complete gated feature checking
Post-expansion node count: 1176
time: 0.000; rss: 50MB	assigning node ids
time: 0.000; rss: 50MB	collecting defs
time: 0.004; rss: 54MB	external crate/lib resolution
time: 0.000; rss: 54MB	early lint checks
time: 0.001; rss: 58MB	name resolution
time: 0.000; rss: 58MB	lowering ast -> hir
time: 0.000; rss: 58MB	indexing hir
time: 0.000; rss: 58MB	attribute checking
time: 0.000; rss: 58MB	language item collection
time: 0.000; rss: 58MB	lifetime resolution
time: 0.000; rss: 58MB	looking for entry point
time: 0.000; rss: 58MB	looking for plugin registrar
time: 0.000; rss: 58MB	region resolution
time: 0.000; rss: 58MB	loop checking
time: 0.000; rss: 58MB	static item recursion checking
time: 0.000; rss: 58MB	load_dep_graph
time: 0.001; rss: 63MB	type collecting
time: 0.000; rss: 63MB	variance inference
time: 0.005; rss: 72MB	coherence checking
time: 0.007; rss: 76MB	wf checking
time: 0.000; rss: 76MB	item-types checking
time: 1.725; rss: 111MB	item-bodies checking
time: 0.000; rss: 111MB	drop-impl checking
time: 0.001; rss: 111MB	const checking
time: 0.000; rss: 111MB	privacy checking
time: 0.000; rss: 111MB	stability index
time: 0.000; rss: 111MB	intrinsic checking
time: 0.000; rss: 111MB	effect checking
time: 0.000; rss: 111MB	match checking
time: 0.000; rss: 111MB	liveness checking
time: 0.000; rss: 111MB	rvalue checking
time: 0.001; rss: 112MB	MIR dump
time: 0.001; rss: 112MB	MIR passes
time: 0.001; rss: 112MB	borrow checking
time: 0.000; rss: 112MB	reachability checking
time: 0.000; rss: 112MB	death checking
time: 0.000; rss: 112MB	stability checking
time: 0.000; rss: 112MB	unused lib feature checking
time: 0.004; rss: 113MB	lint checking
time: 0.002; rss: 113MB	resolving dependency formats
time: 0.000; rss: 114MB	Prepare MIR codegen passes
  time: 14.673; rss: 125MB	translation item collection
  time: 0.000; rss: 125MB	codegen unit partitioning
  time: 0.000; rss: 150MB	write metadata
time: 47.883; rss: 150MB	translation
time: 0.000; rss: 150MB	assert dep graph
time: 0.000; rss: 150MB	serialize dep graph
  time: 0.014; rss: 106MB	llvm function passes [0]
  time: 0.001; rss: 106MB	llvm module passes [0]
  time: 0.275; rss: 112MB	codegen passes [0]
  time: 0.000; rss: 106MB	codegen passes [0]
time: 0.300; rss: 105MB	LLVM passes
  time: 0.119; rss: 105MB	running linker
time: 0.119; rss: 105MB	linking
done
