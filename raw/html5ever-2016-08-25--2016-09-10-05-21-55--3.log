commit f508ddc5470e65243c4f6c79fc72e8b8534e71a6
Merge: 1284081 76a2f9f
Author: bors <bors@rust-lang.org>
Date:   Fri Sep 9 21:35:30 2016 -0700

    Auto merge of #36332 - llogiq:static_consts_feature, r=nikomatsakis
    
    add static_in_const feature gate
    
    also updates tests and deletes the spurious .bk files I inadvertently added last time.
    
    r? @nikomatsakis
rustc: ./html5ever-2016-08-25
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling html5ever v0.5.4 (file:///root/benchmarks/html5ever-2016-08-25)
time: 0.029; rss: 53MB	parsing
Lines of code:             8210
Pre-expansion node count:  52238
time: 0.000; rss: 53MB	recursion limit
time: 0.000; rss: 53MB	crate injection
time: 0.000; rss: 53MB	plugin loading
time: 0.000; rss: 53MB	plugin registration
time: 1.429; rss: 100MB	expansion
time: 0.000; rss: 100MB	maybe building test harness
time: 0.002; rss: 100MB	maybe creating a macro crate
time: 0.008; rss: 100MB	assigning node ids
Post-expansion node count: 164262
time: 0.000; rss: 100MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 100MB	complete gated feature checking
time: 0.005; rss: 101MB	collecting defs
time: 0.006; rss: 104MB	external crate/lib resolution
time: 0.009; rss: 104MB	early lint checks
time: 0.002; rss: 104MB	AST validation
time: 0.019; rss: 108MB	name resolution
time: 0.017; rss: 125MB	lowering ast -> hir
time: 0.004; rss: 129MB	indexing hir
time: 0.002; rss: 129MB	attribute checking
time: 0.002; rss: 110MB	language item collection
time: 0.003; rss: 110MB	lifetime resolution
time: 0.000; rss: 110MB	looking for entry point
time: 0.000; rss: 110MB	looking for plugin registrar
time: 0.016; rss: 117MB	region resolution
time: 0.002; rss: 117MB	loop checking
time: 0.003; rss: 117MB	static item recursion checking
time: 0.023; rss: 118MB	compute_incremental_hashes_map
time: 0.000; rss: 118MB	load_dep_graph
time: 0.015; rss: 118MB	type collecting
time: 0.000; rss: 118MB	variance inference
time: 0.027; rss: 122MB	coherence checking
time: 0.027; rss: 123MB	wf checking
time: 0.372; rss: 130MB	item-types checking
time: 0.592; rss: 142MB	item-bodies checking
time: 0.000; rss: 142MB	drop-impl checking
time: 0.076; rss: 145MB	const checking
time: 0.009; rss: 145MB	privacy checking
time: 0.002; rss: 145MB	stability index
time: 0.005; rss: 145MB	intrinsic checking
time: 0.003; rss: 145MB	effect checking
time: 0.027; rss: 145MB	match checking
time: 0.014; rss: 139MB	liveness checking
time: 0.032; rss: 139MB	rvalue checking
time: 0.123; rss: 183MB	MIR dump
  time: 0.009; rss: 185MB	SimplifyCfg
  time: 0.015; rss: 185MB	QualifyAndPromoteConstants
  time: 0.027; rss: 185MB	TypeckMir
  time: 0.000; rss: 185MB	SimplifyBranches
  time: 0.005; rss: 185MB	SimplifyCfg
time: 0.057; rss: 185MB	MIR passes
time: 0.096; rss: 188MB	borrow checking
time: 0.003; rss: 188MB	reachability checking
time: 0.007; rss: 188MB	death checking
time: 0.009; rss: 188MB	stability checking
time: 0.000; rss: 188MB	unused lib feature checking
time: 0.068; rss: 188MB	lint checking
time: 0.000; rss: 188MB	resolving dependency formats
  time: 0.000; rss: 188MB	NoLandingPads
  time: 0.004; rss: 188MB	SimplifyCfg
  time: 0.010; rss: 188MB	EraseRegions
  time: 0.001; rss: 188MB	AddCallGuards
  time: 0.084; rss: 192MB	ElaborateDrops
  time: 0.000; rss: 192MB	NoLandingPads
  time: 0.007; rss: 190MB	SimplifyCfg
  time: 0.001; rss: 190MB	Deaggregator
  time: 0.001; rss: 190MB	AddCallGuards
  time: 0.000; rss: 190MB	PreTrans
time: 0.109; rss: 190MB	Prepare MIR codegen passes
  time: 0.061; rss: 192MB	write metadata
  time: 0.042; rss: 194MB	translation item collection
  time: 0.005; rss: 194MB	codegen unit partitioning
  time: 0.010; rss: 210MB	internalize symbols
time: 0.422; rss: 183MB	translation
time: 0.000; rss: 183MB	assert dep graph
time: 0.000; rss: 183MB	serialize dep graph
  time: 0.023; rss: 114MB	llvm function passes [0]
  time: 0.013; rss: 114MB	llvm module passes [0]
  time: 0.533; rss: 117MB	codegen passes [0]
  time: 0.001; rss: 117MB	codegen passes [0]
time: 0.614; rss: 117MB	LLVM passes
time: 0.000; rss: 117MB	serialize work products
time: 0.060; rss: 96MB	linking
done
