commit 28d6623bccf8f7e9a40a47895df75dd9ef2619da
Merge: 2cdbd5e 2e038ed
Author: bors <bors@rust-lang.org>
Date:   Sat Dec 3 20:59:08 2016 +0000

    Auto merge of #38148 - frewsxcv:rollup, r=frewsxcv
    
    Rollup of 15 pull requests
    
    - Successful merges: #37859, #37919, #38020, #38028, #38029, #38065, #38073, #38077, #38089, #38090, #38096, #38112, #38113, #38130, #38141
    - Failed merges:
rustc: ./regex-0.1.80@040-is_valid_cap_letter@040-is_valid_cap_letter
git apply 040-is_valid_cap_letter.diff 
find . -name "*.rs" | xargs touch
git diff
diff --git a/regex-0.1.80/src/compile.rs b/regex-0.1.80/src/compile.rs
index 9db743f..9a32d30 100644
--- a/regex-0.1.80/src/compile.rs
+++ b/regex-0.1.80/src/compile.rs
@@ -137,6 +137,8 @@ impl Compiler {
     }
 
     fn compile_one(mut self, expr: &Expr) -> result::Result<Program, Error> {
+        {} // @030
+
         // If we're compiling a forward DFA and we aren't anchored, then
         // add a `.*?` before the first capture group.
         // Other matching engines handle this by baking the logic into the
diff --git a/regex-0.1.80/src/expand.rs b/regex-0.1.80/src/expand.rs
index 9bea703..3b6ae94 100644
--- a/regex-0.1.80/src/expand.rs
+++ b/regex-0.1.80/src/expand.rs
@@ -84,6 +84,7 @@ fn find_cap_ref(mut replacement: &[u8]) -> Option<CaptureRef> {
 }
 
 fn is_valid_cap_letter(b: &u8) -> bool {
+    { }
     match *b {
         b'0' ... b'9' | b'a' ... b'z' | b'A' ... b'Z' | b'_' => true,
         _ => false,
RUSTFLAGS="""" cargo rustc  -- \
  -Ztime-passes -Zinput-stats -Z incremental-info
makefile:32: recipe for target 'all@040-is_valid_cap_letter' failed
done
