commit bba3fca20e3ddfdf1173c8ae2851b492ca2c98a6
Merge: 50932b5 faae99d
Author: bors <bors@rust-lang.org>
Date:   Fri Sep 30 15:43:52 2016 -0700

    Auto merge of #36866 - alexcrichton:fix-hash-again, r=eddyb
    
    rustc: More fixes for arch-independent hashing
    
    In another attempt to fix #36793 this commit attempts to head off any future
    problems by adding a custom `WidentUsizeHasher` which will widen any hashing of
    `isize` and `usize` to a `u64` as necessary. This obviates the need for a
    previous number of `as u64` annotations and will hopefully protect us against
    future problems here.
    
    Closes #36793 (hopefully)
rustc: ./html5ever-2016-08-25
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling encoding_index_tests v0.1.4
   Compiling phf_shared v0.7.16
   Compiling void v1.0.2
   Compiling lazy_static v0.2.1
   Compiling rustc-serialize v0.3.19
   Compiling libc v0.2.16
   Compiling mac v0.0.2
   Compiling matches v0.1.2
   Compiling encoding-index-korean v1.20141219.5
   Compiling unreachable v0.1.1
   Compiling encoding-index-tradchinese v1.20141219.5
   Compiling encoding-index-simpchinese v1.20141219.5
   Compiling utf-8 v0.6.0
   Compiling debug_unreachable v0.1.1
   Compiling futf v0.1.2
   Compiling encoding-index-japanese v1.20141219.5
   Compiling phf v0.7.16
   Compiling serde v0.8.10
   Compiling log v0.3.6
   Compiling encoding-index-singlebyte v1.20141219.5
   Compiling rand v0.3.14
   Compiling encoding v0.2.33
   Compiling tendril v0.2.3
   Compiling phf_generator v0.7.16
   Compiling phf_codegen v0.7.16
   Compiling string_cache v0.2.29
   Compiling html5ever v0.5.4 (file:///root/benchmarks/html5ever-2016-08-25)
time: 0.027; rss: 51MB	parsing
Lines of code:             8210
Pre-expansion node count:  52238
time: 0.000; rss: 51MB	recursion limit
time: 0.000; rss: 51MB	crate injection
time: 0.000; rss: 51MB	plugin loading
time: 0.000; rss: 51MB	plugin registration
time: 1.244; rss: 103MB	expansion
time: 0.000; rss: 103MB	maybe building test harness
time: 0.002; rss: 103MB	maybe creating a macro crate
Post-expansion node count: 163524
time: 0.000; rss: 103MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 103MB	complete gated feature checking
time: 0.008; rss: 103MB	early lint checks
time: 0.002; rss: 103MB	AST validation
time: 0.018; rss: 108MB	name resolution
time: 0.016; rss: 123MB	lowering ast -> hir
time: 0.003; rss: 127MB	indexing hir
time: 0.002; rss: 127MB	attribute checking
time: 0.002; rss: 104MB	language item collection
time: 0.003; rss: 104MB	lifetime resolution
time: 0.000; rss: 104MB	looking for entry point
time: 0.000; rss: 104MB	looking for plugin registrar
time: 0.016; rss: 109MB	region resolution
time: 0.002; rss: 109MB	loop checking
time: 0.003; rss: 109MB	static item recursion checking
time: 0.024; rss: 110MB	compute_incremental_hashes_map
time: 0.000; rss: 110MB	load_dep_graph
time: 0.014; rss: 111MB	type collecting
time: 0.000; rss: 111MB	variance inference
time: 0.026; rss: 112MB	coherence checking
time: 0.024; rss: 113MB	wf checking
time: 0.354; rss: 121MB	item-types checking
time: 0.511; rss: 134MB	item-bodies checking
time: 0.000; rss: 134MB	drop-impl checking
time: 0.073; rss: 137MB	const checking
time: 0.009; rss: 137MB	privacy checking
time: 0.002; rss: 137MB	stability index
time: 0.003; rss: 137MB	intrinsic checking
time: 0.003; rss: 137MB	effect checking
time: 0.024; rss: 138MB	match checking
time: 0.013; rss: 132MB	liveness checking
time: 0.029; rss: 132MB	rvalue checking
time: 0.117; rss: 181MB	MIR dump
  time: 0.009; rss: 181MB	SimplifyCfg
  time: 0.015; rss: 180MB	QualifyAndPromoteConstants
  time: 0.024; rss: 180MB	TypeckMir
  time: 0.000; rss: 180MB	SimplifyBranches
  time: 0.005; rss: 180MB	SimplifyCfg
time: 0.053; rss: 180MB	MIR passes
time: 0.094; rss: 184MB	borrow checking
time: 0.003; rss: 184MB	reachability checking
time: 0.007; rss: 184MB	death checking
time: 0.009; rss: 184MB	stability checking
time: 0.000; rss: 184MB	unused lib feature checking
time: 0.064; rss: 184MB	lint checking
time: 0.000; rss: 184MB	resolving dependency formats
  time: 0.000; rss: 184MB	NoLandingPads
  time: 0.004; rss: 184MB	SimplifyCfg
  time: 0.010; rss: 184MB	EraseRegions
  time: 0.001; rss: 184MB	AddCallGuards
  time: 0.076; rss: 189MB	ElaborateDrops
  time: 0.000; rss: 189MB	NoLandingPads
  time: 0.007; rss: 185MB	SimplifyCfg
  time: 0.007; rss: 184MB	InstCombine
  time: 0.001; rss: 184MB	Deaggregator
  time: 0.000; rss: 184MB	CopyPropagation
  time: 0.001; rss: 184MB	AddCallGuards
  time: 0.000; rss: 184MB	PreTrans
time: 0.109; rss: 184MB	Prepare MIR codegen passes
  time: 0.052; rss: 184MB	write metadata
  time: 0.053; rss: 186MB	translation item collection
  time: 0.006; rss: 186MB	codegen unit partitioning
  time: 0.006; rss: 200MB	internalize symbols
time: 0.365; rss: 170MB	translation
time: 0.000; rss: 170MB	assert dep graph
time: 0.000; rss: 170MB	serialize dep graph
  time: 0.020; rss: 102MB	llvm function passes [0]
  time: 0.012; rss: 104MB	llvm module passes [0]
  time: 0.475; rss: 109MB	codegen passes [0]
  time: 0.001; rss: 109MB	codegen passes [0]
time: 0.550; rss: 109MB	LLVM passes
time: 0.000; rss: 109MB	serialize work products
time: 0.058; rss: 91MB	linking
done
