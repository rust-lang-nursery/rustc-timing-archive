commit f3930aab46c1ea470c8c2a2d7d6832174630596d
Merge: f8614c3 fcebf3b
Author: bors <bors@rust-lang.org>
Date:   Sat Nov 26 21:49:41 2016 -0600

    Auto merge of #38023 - arielb1:constant-evil-x2, r=eddyb
    
    don't double-apply variant padding to const enums
    
    `build_const_struct` already returns the struct with padding - don't double-apply it in the `General` case.
    
    This should hopefully be the last time we have this sort of bug.
    
    Fixes #38002.
    
    Beta-nominating because regression.
    
    r? @eddyb
rustc: ./syntex-0.42.2
cargo rustc -p syntex_syntax  -- -Ztime-passes -Zinput-stats
   Compiling syntex_syntax v0.42.0
time: 0.092; rss: 71MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 71MB	recursion limit
time: 0.000; rss: 71MB	crate injection
time: 0.000; rss: 71MB	plugin loading
time: 0.000; rss: 71MB	plugin registration
time: 0.236; rss: 146MB	expansion
time: 0.000; rss: 146MB	maybe building test harness
time: 0.006; rss: 146MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 146MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 146MB	complete gated feature checking
time: 0.022; rss: 146MB	early lint checks
time: 0.007; rss: 146MB	AST validation
time: 0.075; rss: 161MB	name resolution
time: 0.044; rss: 184MB	lowering ast -> hir
time: 0.008; rss: 195MB	indexing hir
time: 0.006; rss: 195MB	attribute checking
time: 0.004; rss: 150MB	language item collection
time: 0.010; rss: 150MB	lifetime resolution
time: 0.000; rss: 150MB	looking for entry point
time: 0.000; rss: 150MB	looking for plugin registrar
time: 0.041; rss: 169MB	region resolution
time: 0.005; rss: 169MB	loop checking
time: 0.004; rss: 169MB	static item recursion checking
time: 0.328; rss: 169MB	compute_incremental_hashes_map
time: 0.000; rss: 169MB	load_dep_graph
time: 0.047; rss: 169MB	type collecting
time: 0.001; rss: 169MB	variance inference
time: 0.002; rss: 169MB	impl wf inference
time: 0.018; rss: 172MB	coherence checking
time: 0.088; rss: 176MB	wf checking
time: 0.176; rss: 181MB	item-types checking
time: 6.198; rss: 229MB	item-bodies checking
time: 0.000; rss: 229MB	drop-impl checking
time: 0.211; rss: 250MB	const checking
time: 0.047; rss: 250MB	privacy checking
time: 0.006; rss: 250MB	stability index
time: 0.017; rss: 250MB	intrinsic checking
time: 0.014; rss: 250MB	effect checking
time: 0.045; rss: 250MB	match checking
time: 0.049; rss: 252MB	liveness checking
time: 0.177; rss: 252MB	rvalue checking
time: 0.358; rss: 439MB	MIR dump
  time: 0.056; rss: 440MB	SimplifyCfg
  time: 0.074; rss: 440MB	QualifyAndPromoteConstants
  time: 0.103; rss: 440MB	TypeckMir
  time: 0.004; rss: 440MB	SimplifyBranches
  time: 0.030; rss: 440MB	SimplifyCfg
time: 0.266; rss: 440MB	MIR cleanup and validation
time: 0.539; rss: 440MB	borrow checking
time: 0.019; rss: 440MB	reachability checking
time: 0.038; rss: 440MB	death checking
time: 0.030; rss: 442MB	stability checking
time: 0.000; rss: 442MB	unused lib feature checking
time: 0.192; rss: 442MB	lint checking
time: 0.000; rss: 442MB	resolving dependency formats
  time: 0.003; rss: 442MB	NoLandingPads
  time: 0.026; rss: 442MB	SimplifyCfg
  time: 0.061; rss: 449MB	EraseRegions
  time: 0.011; rss: 449MB	AddCallGuards
  time: 0.267; rss: 465MB	ElaborateDrops
  time: 0.003; rss: 465MB	NoLandingPads
  time: 0.051; rss: 465MB	SimplifyCfg
  time: 0.028; rss: 465MB	InstCombine
  time: 0.011; rss: 465MB	Deaggregator
  time: 0.002; rss: 465MB	CopyPropagation
  time: 0.034; rss: 465MB	SimplifyLocals
  time: 0.009; rss: 465MB	AddCallGuards
  time: 0.002; rss: 465MB	PreTrans
time: 0.508; rss: 465MB	MIR optimisations
  time: 0.060; rss: 476MB	write metadata
  time: 0.375; rss: 490MB	translation item collection
  time: 0.060; rss: 501MB	codegen unit partitioning
  time: 0.040; rss: 741MB	internalize symbols
time: 4.395; rss: 741MB	translation
time: 0.000; rss: 741MB	assert dep graph
time: 0.000; rss: 741MB	serialize dep graph
  time: 0.531; rss: 430MB	llvm function passes [0]
  time: 0.278; rss: 437MB	llvm module passes [0]
  time: 10.351; rss: 433MB	codegen passes [0]
  time: 0.000; rss: 433MB	codegen passes [0]
time: 11.915; rss: 433MB	LLVM passes
time: 0.000; rss: 433MB	serialize work products
time: 0.339; rss: 115MB	linking
done
