commit a9430a359f36e8d19505398129223a60d3f3b972
Merge: e18f7a1 fadc95e
Author: bors <bors@rust-lang.org>
Date:   Thu Feb 18 03:35:21 2016 +0000

    Auto merge of #31641 - petrochenkov:reach, r=alexcrichton
    
    Fixes https://github.com/rust-lang/rust/issues/16734 and probably some other issues
    
    This is a continuation of https://github.com/rust-lang/rust/pull/29822, but the algorithm is mostly a copy of https://github.com/rust-lang/rust/pull/29973, so
    r? @alexcrichton or @nikomatsakis
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling bitflags v0.3.3
   Compiling pkg-config v0.3.7
   Compiling httparse v0.1.6
   Compiling lazy_static v0.1.15
   Compiling rustc-serialize v0.3.18
   Compiling matches v0.1.2
   Compiling typeable v0.1.2
   Compiling winapi-build v0.1.1
   Compiling libc v0.1.12
   Compiling gcc v0.3.24
   Compiling traitobject v0.0.1
   Compiling libc v0.2.7
   Compiling unicase v0.1.0
   Compiling winapi v0.2.5
   Compiling kernel32-sys v0.2.1
   Compiling log v0.3.5
   Compiling rand v0.3.14
   Compiling num_cpus v0.2.10
   Compiling time v0.1.34
   Compiling mime v0.0.11
   Compiling openssl-sys v0.6.7
   Compiling openssl v0.6.7
   Compiling uuid v0.1.18
   Compiling url v0.2.38
   Compiling cookie v0.1.21
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.040; rss: 41MB	parsing
Lines of code:             9154
Pre-expansion node count:  45594
time: 0.010; rss: 42MB	configuration 1
time: 0.000; rss: 42MB	recursion limit
time: 0.000; rss: 42MB	gated macro checking
time: 0.000; rss: 42MB	crate injection
time: 0.005; rss: 47MB	macro loading
time: 0.000; rss: 47MB	plugin loading
time: 0.000; rss: 47MB	plugin registration
time: 0.200; rss: 57MB	expansion
time: 0.005; rss: 57MB	complete gated feature checking 1
time: 0.034; rss: 57MB	configuration 2
time: 0.000; rss: 57MB	gated configuration checking
time: 0.013; rss: 57MB	maybe building test harness
time: 0.011; rss: 57MB	prelude injection
time: 0.001; rss: 57MB	checking that all macro invocations are gone
time: 0.000; rss: 57MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 57MB	complete gated feature checking 2
time: 0.001; rss: 57MB	const fn bodies and arguments
Post-expansion node count: 109258
time: 0.010; rss: 57MB	assigning node ids
time: 0.017; rss: 62MB	lowering ast -> hir
time: 0.006; rss: 64MB	indexing hir
time: 0.000; rss: 64MB	attribute checking
time: 0.007; rss: 64MB	early lint checks
time: 0.004; rss: 58MB	external crate/lib resolution
time: 0.001; rss: 58MB	language item collection
time: 0.030; rss: 77MB	resolution
time: 0.002; rss: 77MB	lifetime resolution
time: 0.000; rss: 77MB	looking for entry point
time: 0.000; rss: 77MB	looking for plugin registrar
time: 0.006; rss: 80MB	region resolution
time: 0.001; rss: 80MB	loop checking
time: 0.001; rss: 80MB	static item recursion checking
time: 0.012; rss: 85MB	type collecting
time: 0.000; rss: 85MB	variance inference
time: 0.040; rss: 102MB	coherence checking
time: 0.077; rss: 103MB	wf checking
time: 0.027; rss: 103MB	item-types checking
time: 0.506; rss: 120MB	item-bodies checking
time: 0.000; rss: 120MB	drop-impl checking
time: 0.042; rss: 121MB	const checking
time: 0.012; rss: 121MB	privacy checking
time: 0.001; rss: 121MB	stability index
time: 0.004; rss: 121MB	intrinsic checking
time: 0.002; rss: 121MB	effect checking
time: 0.012; rss: 121MB	match checking
time: 0.054; rss: 125MB	MIR dump
time: 0.000; rss: 125MB	MIR passes
time: 0.005; rss: 126MB	liveness checking
time: 0.067; rss: 126MB	borrow checking
time: 0.033; rss: 126MB	rvalue checking
time: 0.003; rss: 126MB	reachability checking
time: 0.006; rss: 126MB	death checking
time: 0.006; rss: 126MB	stability checking
time: 0.000; rss: 126MB	unused lib feature checking
time: 0.046; rss: 126MB	lint checking
time: 0.000; rss: 126MB	resolving dependency formats
time: 0.007; rss: 127MB	erasing regions from MIR
  time: 0.207; rss: 147MB	translation item collection
  time: 0.137; rss: 239MB	write metadata
time: 1.568; rss: 239MB	translation
  time: 0.099; rss: 163MB	llvm function passes [0]
  time: 0.048; rss: 164MB	llvm module passes [0]
  time: 1.654; rss: 169MB	codegen passes [0]
  time: 0.001; rss: 118MB	codegen passes [0]
time: 2.006; rss: 116MB	LLVM passes
time: 0.172; rss: 116MB	linking
done
