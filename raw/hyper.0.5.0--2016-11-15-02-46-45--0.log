commit 0ed951993fb5721a303ca5fa743543dd9f3f6b10
Merge: bd6a54d 7cd8a49
Author: bors <bors@rust-lang.org>
Date:   Mon Nov 14 18:12:26 2016 -0800

    Auto merge of #37775 - alexcrichton:try-fix-dox, r=brson
    
    rustbuild: Tweak default rule inclusion
    
    If a rule is flagged with `default(true)` then the pseudo-rule `default:foo`
    will include that. If a rule is also flagged with `.host(true)`, however, then
    the rule shouldn't be included for targets that aren't in the host array. This
    adds a filter to ensure we don't pull in host rules for targets by accident.
rustc: ./hyper.0.5.0
cargo rustc  -- -Ztime-passes -Zinput-stats
   Compiling matches v0.1.2
   Compiling unicase v0.1.0
   Compiling gcc v0.3.35
   Compiling lazy_static v0.1.16
   Compiling log v0.3.6
   Compiling pkg-config v0.3.8
   Compiling libc v0.1.12
   Compiling bitflags v0.3.3
   Compiling winapi-build v0.1.1
   Compiling libc v0.2.16
   Compiling rustc-serialize v0.3.19
   Compiling typeable v0.1.2
   Compiling winapi v0.2.8
   Compiling kernel32-sys v0.2.2
   Compiling mime v0.0.11
   Compiling traitobject v0.0.1
   Compiling httparse v0.1.6
   Compiling num_cpus v0.2.13
   Compiling rand v0.3.14
   Compiling time v0.1.35
   Compiling openssl-sys v0.6.7
   Compiling openssl v0.6.7
   Compiling uuid v0.1.18
   Compiling url v0.2.38
   Compiling cookie v0.1.21
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.030; rss: 43MB	parsing
Lines of code:             9003
Pre-expansion node count:  44055
time: 0.000; rss: 43MB	recursion limit
time: 0.000; rss: 43MB	crate injection
time: 0.000; rss: 43MB	plugin loading
time: 0.000; rss: 43MB	plugin registration
time: 0.093; rss: 81MB	expansion
time: 0.000; rss: 81MB	maybe building test harness
time: 0.001; rss: 81MB	maybe creating a macro crate
Post-expansion node count: 101769
time: 0.000; rss: 81MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 81MB	complete gated feature checking
time: 0.004; rss: 81MB	early lint checks
time: 0.001; rss: 81MB	AST validation
time: 0.023; rss: 86MB	name resolution
time: 0.015; rss: 89MB	lowering ast -> hir
time: 0.001; rss: 90MB	indexing hir
time: 0.001; rss: 90MB	attribute checking
time: 0.001; rss: 86MB	language item collection
time: 0.002; rss: 86MB	lifetime resolution
time: 0.000; rss: 86MB	looking for entry point
time: 0.000; rss: 86MB	looking for plugin registrar
time: 0.011; rss: 88MB	region resolution
time: 0.001; rss: 88MB	loop checking
time: 0.001; rss: 88MB	static item recursion checking
time: 0.038; rss: 89MB	compute_incremental_hashes_map
time: 0.000; rss: 89MB	load_dep_graph
time: 0.015; rss: 91MB	type collecting
time: 0.000; rss: 91MB	variance inference
time: 0.015; rss: 92MB	coherence checking
time: 0.041; rss: 93MB	wf checking
time: 0.028; rss: 94MB	item-types checking
time: 0.314; rss: 103MB	item-bodies checking
time: 0.000; rss: 103MB	drop-impl checking
time: 0.051; rss: 104MB	const checking
time: 0.008; rss: 104MB	privacy checking
time: 0.001; rss: 104MB	stability index
time: 0.003; rss: 104MB	intrinsic checking
time: 0.001; rss: 104MB	effect checking
time: 0.008; rss: 104MB	match checking
time: 0.004; rss: 105MB	liveness checking
time: 0.020; rss: 105MB	rvalue checking
time: 0.061; rss: 125MB	MIR dump
  time: 0.007; rss: 125MB	SimplifyCfg
  time: 0.015; rss: 127MB	QualifyAndPromoteConstants
  time: 0.012; rss: 127MB	TypeckMir
  time: 0.001; rss: 127MB	SimplifyBranches
  time: 0.003; rss: 127MB	SimplifyCfg
time: 0.038; rss: 127MB	MIR cleanup and validation
time: 0.052; rss: 128MB	borrow checking
time: 0.003; rss: 128MB	reachability checking
time: 0.005; rss: 128MB	death checking
time: 0.004; rss: 128MB	stability checking
time: 0.000; rss: 128MB	unused lib feature checking
time: 0.038; rss: 128MB	lint checking
time: 0.000; rss: 128MB	resolving dependency formats
  time: 0.001; rss: 128MB	NoLandingPads
  time: 0.003; rss: 128MB	SimplifyCfg
  time: 0.008; rss: 129MB	EraseRegions
  time: 0.001; rss: 129MB	AddCallGuards
  time: 0.024; rss: 130MB	ElaborateDrops
  time: 0.001; rss: 130MB	NoLandingPads
  time: 0.005; rss: 130MB	SimplifyCfg
  time: 0.003; rss: 130MB	InstCombine
  time: 0.003; rss: 130MB	Deaggregator
  time: 0.001; rss: 130MB	CopyPropagation
  time: 0.004; rss: 130MB	SimplifyLocals
  time: 0.001; rss: 130MB	AddCallGuards
  time: 0.000; rss: 130MB	PreTrans
time: 0.054; rss: 130MB	MIR optimisations
  time: 0.018; rss: 133MB	write metadata
  time: 0.133; rss: 139MB	translation item collection
  time: 0.016; rss: 143MB	codegen unit partitioning
  time: 0.014; rss: 195MB	internalize symbols
time: 1.073; rss: 195MB	translation
time: 0.000; rss: 195MB	assert dep graph
time: 0.000; rss: 195MB	serialize dep graph
  time: 0.090; rss: 143MB	llvm function passes [0]
  time: 0.043; rss: 146MB	llvm module passes [0]
  time: 1.666; rss: 149MB	codegen passes [0]
  time: 0.000; rss: 147MB	codegen passes [0]
time: 1.968; rss: 147MB	LLVM passes
time: 0.000; rss: 147MB	serialize work products
time: 0.070; rss: 90MB	linking
done
