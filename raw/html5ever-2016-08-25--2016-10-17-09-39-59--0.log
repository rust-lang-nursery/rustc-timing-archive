commit da7f8c540b47c5bb063356bf5ad05a6a49ed0ff1
Merge: 54c133d 8d5b523
Author: bors <bors@rust-lang.org>
Date:   Mon Oct 17 00:31:25 2016 -0700

    Auto merge of #37153 - michaelwoerister:spread-arg-debuginfo, r=eddyb
    
    debuginfo: Handle spread_arg case in MIR-trans in a more stable way.
    
    Use `VariableAccess::DirectVariable` instead of `VariableAccess::IndirectVariable` in order not to make LLVM's SROA angry. This is a step towards fixing #36774 and #35547. At least, I can build Cargo with optimizations + debuginfo again.
    
    r? @eddyb
rustc: ./html5ever-2016-08-25
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling log v0.3.6
   Compiling encoding_index_tests v0.1.4
   Compiling lazy_static v0.2.1
   Compiling void v1.0.2
   Compiling matches v0.1.2
   Compiling libc v0.2.16
   Compiling rustc-serialize v0.3.19
   Compiling mac v0.0.2
   Compiling utf-8 v0.6.0
   Compiling encoding-index-tradchinese v1.20141219.5
   Compiling unreachable v0.1.1
   Compiling encoding-index-korean v1.20141219.5
   Compiling encoding-index-japanese v1.20141219.5
   Compiling debug_unreachable v0.1.1
   Compiling encoding-index-singlebyte v1.20141219.5
   Compiling phf_shared v0.7.16
   Compiling encoding-index-simpchinese v1.20141219.5
   Compiling serde v0.8.9
   Compiling phf v0.7.16
   Compiling futf v0.1.2
   Compiling rand v0.3.14
   Compiling encoding v0.2.33
   Compiling phf_generator v0.7.16
   Compiling string_cache v0.2.29
   Compiling phf_codegen v0.7.16
   Compiling tendril v0.2.3
   Compiling html5ever v0.5.4 (file:///root/benchmarks/html5ever-2016-08-25)
time: 0.027; rss: 51MB	parsing
Lines of code:             8210
Pre-expansion node count:  52238
time: 0.000; rss: 51MB	recursion limit
time: 0.000; rss: 51MB	crate injection
time: 0.000; rss: 51MB	plugin loading
time: 0.000; rss: 51MB	plugin registration
time: 1.292; rss: 106MB	expansion
time: 0.000; rss: 106MB	maybe building test harness
time: 0.002; rss: 106MB	maybe creating a macro crate
Post-expansion node count: 163524
time: 0.000; rss: 106MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 106MB	complete gated feature checking
time: 0.008; rss: 106MB	early lint checks
time: 0.002; rss: 106MB	AST validation
time: 0.018; rss: 109MB	name resolution
time: 0.016; rss: 125MB	lowering ast -> hir
time: 0.004; rss: 130MB	indexing hir
time: 0.002; rss: 130MB	attribute checking
time: 0.002; rss: 107MB	language item collection
time: 0.002; rss: 107MB	lifetime resolution
time: 0.000; rss: 107MB	looking for entry point
time: 0.000; rss: 107MB	looking for plugin registrar
time: 0.016; rss: 112MB	region resolution
time: 0.002; rss: 112MB	loop checking
time: 0.003; rss: 112MB	static item recursion checking
time: 0.022; rss: 113MB	compute_incremental_hashes_map
time: 0.000; rss: 113MB	load_dep_graph
time: 0.010; rss: 114MB	type collecting
time: 0.000; rss: 114MB	variance inference
time: 0.025; rss: 118MB	coherence checking
time: 0.024; rss: 118MB	wf checking
time: 0.351; rss: 125MB	item-types checking
time: 0.509; rss: 138MB	item-bodies checking
time: 0.000; rss: 138MB	drop-impl checking
time: 0.069; rss: 140MB	const checking
time: 0.008; rss: 140MB	privacy checking
time: 0.002; rss: 140MB	stability index
time: 0.004; rss: 140MB	intrinsic checking
time: 0.003; rss: 140MB	effect checking
time: 0.024; rss: 140MB	match checking
time: 0.013; rss: 135MB	liveness checking
time: 0.027; rss: 135MB	rvalue checking
time: 0.118; rss: 184MB	MIR dump
  time: 0.009; rss: 182MB	SimplifyCfg
  time: 0.015; rss: 182MB	QualifyAndPromoteConstants
  time: 0.025; rss: 182MB	TypeckMir
  time: 0.000; rss: 182MB	SimplifyBranches
  time: 0.004; rss: 182MB	SimplifyCfg
time: 0.053; rss: 182MB	MIR passes
time: 0.089; rss: 184MB	borrow checking
time: 0.003; rss: 184MB	reachability checking
time: 0.007; rss: 184MB	death checking
time: 0.009; rss: 184MB	stability checking
time: 0.000; rss: 184MB	unused lib feature checking
time: 0.064; rss: 184MB	lint checking
time: 0.000; rss: 184MB	resolving dependency formats
  time: 0.000; rss: 184MB	NoLandingPads
  time: 0.004; rss: 184MB	SimplifyCfg
  time: 0.010; rss: 184MB	EraseRegions
  time: 0.001; rss: 184MB	AddCallGuards
  time: 0.075; rss: 189MB	ElaborateDrops
  time: 0.000; rss: 189MB	NoLandingPads
  time: 0.007; rss: 186MB	SimplifyCfg
  time: 0.007; rss: 186MB	InstCombine
  time: 0.001; rss: 186MB	Deaggregator
  time: 0.000; rss: 186MB	CopyPropagation
  time: 0.001; rss: 186MB	AddCallGuards
  time: 0.000; rss: 186MB	PreTrans
time: 0.107; rss: 186MB	Prepare MIR codegen passes
  time: 0.052; rss: 187MB	write metadata
  time: 0.050; rss: 189MB	translation item collection
  time: 0.006; rss: 189MB	codegen unit partitioning
  time: 0.006; rss: 203MB	internalize symbols
time: 0.357; rss: 173MB	translation
time: 0.000; rss: 173MB	assert dep graph
time: 0.000; rss: 173MB	serialize dep graph
  time: 0.020; rss: 106MB	llvm function passes [0]
  time: 0.012; rss: 106MB	llvm module passes [0]
  time: 0.456; rss: 109MB	codegen passes [0]
  time: 0.001; rss: 109MB	codegen passes [0]
time: 0.528; rss: 109MB	LLVM passes
time: 0.000; rss: 109MB	serialize work products
time: 0.058; rss: 92MB	linking
done
