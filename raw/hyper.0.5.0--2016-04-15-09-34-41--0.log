commit 74b3684d009c0e243a282c9a573ef5e29a2681d9
Merge: a7b5d69 8efbfae
Author: bors <bors@rust-lang.org>
Date:   Fri Apr 15 04:10:11 2016 -0700

    Auto merge of #32895 - alexcrichton:rustbuild-beta, r=brson
    
    rustbuild: Fix handling of the bootstrap key
    
    Bring the calculation logic in line with the makefiles and also set the
    RUSTC_BOOTSTRAP_KEY environment variable to enable the bootstrap on the stable
    compiler.
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
 Downloading gcc v0.3.27
   Compiling libc v0.1.12
   Compiling traitobject v0.0.1
   Compiling gcc v0.3.27
   Compiling libc v0.2.10
   Compiling httparse v0.1.6
   Compiling lazy_static v0.1.16
   Compiling rustc-serialize v0.3.19
   Compiling winapi v0.2.6
   Compiling winapi-build v0.1.1
   Compiling unicase v0.1.0
   Compiling typeable v0.1.2
   Compiling kernel32-sys v0.2.1
   Compiling log v0.3.6
   Compiling matches v0.1.2
   Compiling bitflags v0.3.3
   Compiling pkg-config v0.3.8
   Compiling mime v0.0.11
   Compiling num_cpus v0.2.11
   Compiling time v0.1.35
   Compiling rand v0.3.14
   Compiling openssl-sys v0.6.7
   Compiling openssl v0.6.7
   Compiling uuid v0.1.18
   Compiling url v0.2.38
   Compiling cookie v0.1.21
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.041; rss: 41MB	parsing
Lines of code:             9154
Pre-expansion node count:  45594
time: 0.009; rss: 42MB	configuration 1
time: 0.000; rss: 42MB	recursion limit
time: 0.000; rss: 42MB	gated macro checking
time: 0.000; rss: 42MB	crate injection
time: 0.004; rss: 47MB	macro loading
time: 0.000; rss: 47MB	plugin loading
time: 0.000; rss: 47MB	plugin registration
time: 0.200; rss: 57MB	expansion
time: 0.005; rss: 57MB	complete gated feature checking 1
time: 0.031; rss: 57MB	configuration 2
time: 0.000; rss: 57MB	gated configuration checking
time: 0.011; rss: 57MB	maybe building test harness
time: 0.008; rss: 57MB	prelude injection
time: 0.001; rss: 57MB	checking that all macro invocations are gone
time: 0.000; rss: 57MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 57MB	complete gated feature checking 2
time: 0.001; rss: 57MB	const fn bodies and arguments
Post-expansion node count: 107125
time: 0.008; rss: 57MB	assigning node ids
time: 0.019; rss: 62MB	lowering ast -> hir
time: 0.009; rss: 63MB	indexing hir
time: 0.001; rss: 63MB	attribute checking
time: 0.007; rss: 64MB	early lint checks
time: 0.004; rss: 59MB	external crate/lib resolution
time: 0.001; rss: 59MB	language item collection
time: 0.027; rss: 76MB	resolution
time: 0.002; rss: 76MB	lifetime resolution
time: 0.000; rss: 76MB	looking for entry point
time: 0.000; rss: 76MB	looking for plugin registrar
time: 0.007; rss: 79MB	region resolution
time: 0.001; rss: 79MB	loop checking
time: 0.001; rss: 79MB	static item recursion checking
time: 0.000; rss: 79MB	load_dep_graph
time: 0.018; rss: 88MB	type collecting
time: 0.000; rss: 88MB	variance inference
time: 0.046; rss: 104MB	coherence checking
time: 0.073; rss: 105MB	wf checking
time: 0.028; rss: 106MB	item-types checking
time: 0.506; rss: 122MB	item-bodies checking
time: 0.000; rss: 122MB	drop-impl checking
time: 0.040; rss: 124MB	const checking
time: 0.009; rss: 124MB	privacy checking
time: 0.002; rss: 124MB	stability index
time: 0.004; rss: 124MB	intrinsic checking
time: 0.002; rss: 124MB	effect checking
time: 0.012; rss: 124MB	match checking
time: 0.005; rss: 125MB	liveness checking
time: 0.033; rss: 125MB	rvalue checking
time: 0.061; rss: 133MB	MIR dump
time: 0.022; rss: 134MB	MIR passes
time: 0.067; rss: 134MB	borrow checking
time: 0.003; rss: 134MB	reachability checking
time: 0.006; rss: 134MB	death checking
time: 0.006; rss: 134MB	stability checking
time: 0.000; rss: 134MB	unused lib feature checking
time: 0.048; rss: 134MB	lint checking
time: 0.000; rss: 134MB	resolving dependency formats
time: 0.014; rss: 135MB	Prepare MIR codegen passes
  time: 0.197; rss: 154MB	translation item collection
  time: 0.141; rss: 279MB	write metadata
time: 1.788; rss: 279MB	translation
time: 0.001; rss: 279MB	assert dep graph
time: 0.000; rss: 279MB	serialize dep graph
  time: 0.100; rss: 164MB	llvm function passes [0]
  time: 0.047; rss: 166MB	llvm module passes [0]
  time: 1.638; rss: 169MB	codegen passes [0]
  time: 0.001; rss: 119MB	codegen passes [0]
time: 1.991; rss: 116MB	LLVM passes
time: 0.177; rss: 114MB	linking
done
