commit 026add5f06191dfbd592a4f02bb4a38866553c63
Merge: acce384 1a5456b
Author: bors <bors@rust-lang.org>
Date:   Sat Nov 12 08:41:30 2016 -0800

    Auto merge of #37531 - estebank:fix-ref-mut-mut, r=jonathandturner
    
    Fix invalid "ref mut mut" sugestion
    
    Change output from:
    
    ```nocode
    error: cannot borrow immutable local variable `x` as mutable
      --> <anon>:12:23
       |
    11 |         TestEnum::Item(ref mut x) => {
       |                        --------- use `ref mut mut x` here to make mutable
    12 |             test(&mut x);
       |                       ^ cannot borrow mutably
    ```
    
    to
    
    ```nocode
    error: cannot borrow immutable local variable `x` as mutable
      --> <anon>:12:23
       |
    12 |             test(&mut x);
       |                       ^
       |                       |
       |                       cannot reborrow mutably
       |                       try removing `&mut` here
    ```
    Fixes #37139, #34337, #34126
rustc: ./regex.0.1.30
cargo rustc  -- -Ztime-passes -Zinput-stats
   Compiling regex v0.1.30 (file:///root/benchmarks/regex.0.1.30)
time: 0.041; rss: 54MB	parsing
Lines of code:             8558
Pre-expansion node count:  58049
time: 0.000; rss: 54MB	recursion limit
time: 0.000; rss: 54MB	crate injection
time: 0.000; rss: 54MB	plugin loading
time: 0.000; rss: 54MB	plugin registration
time: 0.027; rss: 78MB	expansion
time: 0.000; rss: 78MB	maybe building test harness
time: 0.001; rss: 78MB	maybe creating a macro crate
Post-expansion node count: 68093
time: 0.000; rss: 78MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 78MB	complete gated feature checking
time: 0.003; rss: 78MB	early lint checks
time: 0.000; rss: 78MB	AST validation
time: 0.005; rss: 79MB	name resolution
time: 0.005; rss: 85MB	lowering ast -> hir
time: 0.001; rss: 87MB	indexing hir
time: 0.001; rss: 87MB	attribute checking
time: 0.001; rss: 79MB	language item collection
time: 0.001; rss: 79MB	lifetime resolution
time: 0.000; rss: 79MB	looking for entry point
time: 0.000; rss: 79MB	looking for plugin registrar
time: 0.004; rss: 82MB	region resolution
time: 0.000; rss: 82MB	loop checking
time: 0.001; rss: 82MB	static item recursion checking
time: 0.018; rss: 83MB	compute_incremental_hashes_map
time: 0.000; rss: 83MB	load_dep_graph
time: 0.007; rss: 84MB	type collecting
time: 0.000; rss: 84MB	variance inference
time: 0.010; rss: 86MB	coherence checking
time: 0.007; rss: 86MB	wf checking
time: 0.146; rss: 98MB	item-types checking
time: 0.105; rss: 100MB	item-bodies checking
time: 0.000; rss: 100MB	drop-impl checking
time: 0.022; rss: 101MB	const checking
time: 0.002; rss: 101MB	privacy checking
time: 0.000; rss: 101MB	stability index
time: 0.001; rss: 101MB	intrinsic checking
time: 0.000; rss: 101MB	effect checking
time: 0.002; rss: 101MB	match checking
time: 0.002; rss: 101MB	liveness checking
time: 0.006; rss: 101MB	rvalue checking
time: 0.040; rss: 113MB	MIR dump
  time: 0.003; rss: 113MB	SimplifyCfg
  time: 0.005; rss: 113MB	QualifyAndPromoteConstants
  time: 0.007; rss: 113MB	TypeckMir
  time: 0.000; rss: 113MB	SimplifyBranches
  time: 0.001; rss: 113MB	SimplifyCfg
time: 0.016; rss: 113MB	MIR cleanup and validation
time: 0.019; rss: 113MB	borrow checking
time: 0.000; rss: 113MB	reachability checking
time: 0.002; rss: 113MB	death checking
time: 0.001; rss: 113MB	stability checking
time: 0.000; rss: 113MB	unused lib feature checking
time: 0.022; rss: 113MB	lint checking
time: 0.000; rss: 113MB	resolving dependency formats
  time: 0.000; rss: 113MB	NoLandingPads
  time: 0.001; rss: 113MB	SimplifyCfg
  time: 0.003; rss: 113MB	EraseRegions
  time: 0.000; rss: 113MB	AddCallGuards
  time: 0.007; rss: 115MB	ElaborateDrops
  time: 0.000; rss: 115MB	NoLandingPads
  time: 0.002; rss: 115MB	SimplifyCfg
  time: 0.002; rss: 115MB	InstCombine
  time: 0.000; rss: 115MB	Deaggregator
  time: 0.000; rss: 115MB	CopyPropagation
  time: 0.002; rss: 115MB	SimplifyLocals
  time: 0.000; rss: 115MB	AddCallGuards
  time: 0.000; rss: 115MB	PreTrans
time: 0.020; rss: 115MB	MIR optimisations
  time: 0.018; rss: 121MB	write metadata
  time: 0.043; rss: 123MB	translation item collection
  time: 0.006; rss: 123MB	codegen unit partitioning
  time: 0.006; rss: 151MB	internalize symbols
time: 0.408; rss: 151MB	translation
time: 0.000; rss: 151MB	assert dep graph
time: 0.000; rss: 151MB	serialize dep graph
  time: 0.037; rss: 109MB	llvm function passes [0]
  time: 0.019; rss: 110MB	llvm module passes [0]
  time: 0.693; rss: 113MB	codegen passes [0]
  time: 0.000; rss: 113MB	codegen passes [0]
time: 0.808; rss: 113MB	LLVM passes
time: 0.000; rss: 113MB	serialize work products
time: 0.035; rss: 84MB	linking
done
