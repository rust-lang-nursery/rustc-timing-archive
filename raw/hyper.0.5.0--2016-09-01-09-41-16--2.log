commit b2799a56a1631ee351e4687ee649808e28cccda1
Merge: 3135b78 f040208
Author: bors <bors@rust-lang.org>
Date:   Thu Sep 1 02:53:28 2016 -0700

    Auto merge of #35755 - SimonSapin:char_convert, r=alexcrichton
    
    Implement std::convert traits for char
    
    This is motivated by avoiding the `as` operator, which sometimes silently truncates, and instead use conversions that are explicitly lossless and infallible.
    
    I’m less certain that `From<u8> for char` should be implemented: while it matches an existing behavior of `as`, it’s not necessarily the right thing to use for non-ASCII bytes. It effectively decodes bytes as ISO/IEC 8859-1 (since Unicode designed its first 256 code points to be compatible with that encoding), but that is not apparent in the API name.
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.028; rss: 51MB	parsing
Lines of code:             9154
Pre-expansion node count:  44873
time: 0.003; rss: 51MB	configuration
time: 0.000; rss: 51MB	recursion limit
time: 0.000; rss: 51MB	crate injection
time: 0.000; rss: 51MB	plugin loading
time: 0.000; rss: 51MB	plugin registration
time: 0.093; rss: 79MB	expansion
time: 0.000; rss: 79MB	maybe building test harness
time: 0.005; rss: 79MB	assigning node ids
Post-expansion node count: 101610
time: 0.000; rss: 79MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 79MB	complete gated feature checking
time: 0.003; rss: 81MB	collecting defs
time: 0.009; rss: 87MB	external crate/lib resolution
time: 0.004; rss: 87MB	early lint checks
time: 0.001; rss: 87MB	AST validation
time: 0.017; rss: 95MB	name resolution
time: 0.008; rss: 99MB	lowering ast -> hir
time: 0.002; rss: 101MB	indexing hir
time: 0.001; rss: 101MB	attribute checking
time: 0.001; rss: 94MB	language item collection
time: 0.002; rss: 94MB	lifetime resolution
time: 0.000; rss: 94MB	looking for entry point
time: 0.000; rss: 94MB	looking for plugin registrar
time: 0.006; rss: 99MB	region resolution
time: 0.001; rss: 99MB	loop checking
time: 0.000; rss: 99MB	static item recursion checking
time: 0.012; rss: 99MB	compute_incremental_hashes_map
time: 0.000; rss: 99MB	load_dep_graph
time: 0.023; rss: 100MB	type collecting
time: 0.000; rss: 100MB	variance inference
time: 0.035; rss: 104MB	coherence checking
time: 0.057; rss: 107MB	wf checking
time: 0.027; rss: 107MB	item-types checking
time: 0.364; rss: 118MB	item-bodies checking
time: 0.000; rss: 118MB	drop-impl checking
time: 0.037; rss: 121MB	const checking
time: 0.006; rss: 121MB	privacy checking
time: 0.001; rss: 121MB	stability index
time: 0.005; rss: 121MB	intrinsic checking
time: 0.002; rss: 121MB	effect checking
time: 0.013; rss: 121MB	match checking
time: 0.005; rss: 121MB	liveness checking
time: 0.027; rss: 121MB	rvalue checking
time: 0.053; rss: 139MB	MIR dump
time: 0.042; rss: 139MB	MIR passes
time: 0.061; rss: 139MB	borrow checking
time: 0.003; rss: 139MB	reachability checking
time: 0.005; rss: 139MB	death checking
time: 0.005; rss: 139MB	stability checking
time: 0.000; rss: 139MB	unused lib feature checking
time: 0.040; rss: 139MB	lint checking
time: 0.000; rss: 139MB	resolving dependency formats
time: 0.079; rss: 141MB	Prepare MIR codegen passes
  time: 0.055; rss: 148MB	write metadata
  time: 0.131; rss: 150MB	translation item collection
  time: 0.018; rss: 152MB	codegen unit partitioning
  time: 0.032; rss: 218MB	internalize symbols
time: 1.450; rss: 208MB	translation
time: 0.000; rss: 208MB	assert dep graph
time: 0.000; rss: 208MB	serialize dep graph
  time: 0.099; rss: 158MB	llvm function passes [0]
  time: 0.047; rss: 160MB	llvm module passes [0]
  time: 1.850; rss: 166MB	codegen passes [0]
  time: 0.001; rss: 166MB	codegen passes [0]
time: 2.158; rss: 166MB	LLVM passes
time: 0.000; rss: 166MB	serialize work products
time: 0.156; rss: 98MB	linking
done
