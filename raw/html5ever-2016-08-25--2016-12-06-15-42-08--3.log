commit b5d0f90929ddaae89609e9bb229a9b8a27e27615
Merge: 1842efb cc6edb2
Author: bors <bors@rust-lang.org>
Date:   Tue Dec 6 17:38:26 2016 +0000

    Auto merge of #38036 - Mark-Simulacrum:polish-2, r=nagisa,eddyb
    
    Simplify calling find_implied_output_region.
    
    @nnethercote added the optimization that find_implied_output_region
    takes a closure as an optimization in #37014, but passing an iterator is
    simpler, and more ergonomic for callers.
rustc: ./html5ever-2016-08-25
cargo rustc  -- -Ztime-passes -Zinput-stats
time: 0.023; rss: 50MB	parsing
Lines of code:             8210
Pre-expansion node count:  52140
time: 0.000; rss: 50MB	recursion limit
time: 0.000; rss: 50MB	crate injection
time: 0.000; rss: 50MB	plugin loading
time: 0.000; rss: 50MB	plugin registration
time: 0.672; rss: 103MB	expansion
time: 0.000; rss: 103MB	maybe building test harness
time: 0.002; rss: 103MB	maybe creating a macro crate
Post-expansion node count: 163412
time: 0.000; rss: 103MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 103MB	complete gated feature checking
time: 0.008; rss: 103MB	early lint checks
time: 0.002; rss: 103MB	AST validation
time: 0.015; rss: 105MB	name resolution
time: 0.014; rss: 116MB	lowering ast -> hir
time: 0.002; rss: 118MB	indexing hir
time: 0.002; rss: 118MB	attribute checking
time: 0.001; rss: 100MB	language item collection
time: 0.002; rss: 100MB	lifetime resolution
time: 0.000; rss: 100MB	looking for entry point
time: 0.000; rss: 100MB	looking for plugin registrar
time: 0.011; rss: 104MB	region resolution
time: 0.001; rss: 104MB	loop checking
time: 0.001; rss: 104MB	static item recursion checking
time: 0.023; rss: 105MB	compute_incremental_hashes_map
time: 0.000; rss: 105MB	load_dep_graph
time: 0.001; rss: 105MB	stability index
time: 0.003; rss: 105MB	stability checking
time: 0.009; rss: 106MB	type collecting
time: 0.000; rss: 106MB	variance inference
time: 0.000; rss: 106MB	impl wf inference
time: 0.011; rss: 108MB	coherence checking
time: 0.019; rss: 109MB	wf checking
time: 0.250; rss: 116MB	item-types checking
time: 0.465; rss: 128MB	item-bodies checking
time: 0.000; rss: 128MB	drop-impl checking
time: 0.077; rss: 135MB	const checking
time: 0.008; rss: 135MB	privacy checking
time: 0.003; rss: 135MB	intrinsic checking
time: 0.002; rss: 135MB	effect checking
time: 0.021; rss: 135MB	match checking
time: 0.013; rss: 130MB	liveness checking
time: 0.027; rss: 130MB	rvalue checking
time: 0.133; rss: 171MB	MIR dump
  time: 0.012; rss: 171MB	SimplifyCfg
  time: 0.018; rss: 173MB	QualifyAndPromoteConstants
  time: 0.033; rss: 173MB	TypeckMir
  time: 0.000; rss: 173MB	SimplifyBranches
  time: 0.006; rss: 173MB	SimplifyCfg
time: 0.070; rss: 173MB	MIR cleanup and validation
time: 0.108; rss: 177MB	borrow checking
time: 0.003; rss: 177MB	reachability checking
time: 0.006; rss: 177MB	death checking
time: 0.000; rss: 177MB	unused lib feature checking
time: 0.074; rss: 177MB	lint checking
time: 0.000; rss: 177MB	resolving dependency formats
  time: 0.000; rss: 177MB	NoLandingPads
  time: 0.005; rss: 177MB	SimplifyCfg
  time: 0.012; rss: 178MB	EraseRegions
  time: 0.002; rss: 178MB	AddCallGuards
  time: 0.108; rss: 183MB	ElaborateDrops
  time: 0.000; rss: 183MB	NoLandingPads
  time: 0.007; rss: 179MB	SimplifyCfg
  time: 0.007; rss: 179MB	InstCombine
  time: 0.001; rss: 178MB	Deaggregator
  time: 0.000; rss: 178MB	CopyPropagation
  time: 0.007; rss: 176MB	SimplifyLocals
  time: 0.001; rss: 176MB	AddCallGuards
  time: 0.000; rss: 176MB	PreTrans
time: 0.151; rss: 176MB	MIR optimisations
  time: 0.011; rss: 178MB	write metadata
  time: 0.042; rss: 191MB	translation item collection
  time: 0.004; rss: 192MB	codegen unit partitioning
  time: 0.005; rss: 206MB	internalize symbols
time: 0.318; rss: 206MB	translation
time: 0.000; rss: 206MB	assert dep graph
time: 0.000; rss: 206MB	serialize dep graph
  time: 0.020; rss: 112MB	llvm function passes [0]
  time: 0.014; rss: 112MB	llvm module passes [0]
  time: 0.478; rss: 117MB	codegen passes [0]
  time: 0.000; rss: 116MB	codegen passes [0]
time: 0.551; rss: 116MB	LLVM passes
time: 0.000; rss: 116MB	serialize work products
time: 0.025; rss: 101MB	linking
done
