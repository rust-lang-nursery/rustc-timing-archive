commit d9aae6362d566497d55a94da060ec163cd874a41
Merge: 7b06438 8e9f7f5
Author: bors <bors@rust-lang.org>
Date:   Thu Dec 8 03:03:51 2016 +0000

    Auto merge of #38076 - alexcrichton:another-rustbuild-bug, r=japaric
    
    rustbuild: Use src/rustc for assembled compilers
    
    The `src/rustc` path is intended for assembling a compiler (e.g. the bare bones)
    not actually compiling the whole compiler itself. This path was accidentally
    getting hijacked to represent the whole compiler being compiled, so let's
    redirect that elsewhere for that particular cargo project.
    
    Closes #38039
rustc: ./issue-32062-equality-relations-complexity
cargo rustc  -- -Ztime-passes -Zinput-stats
time: 0.000; rss: 42MB	parsing
Lines of code:             60
Pre-expansion node count:  580
time: 0.000; rss: 42MB	recursion limit
time: 0.000; rss: 42MB	crate injection
time: 0.000; rss: 42MB	plugin loading
time: 0.000; rss: 42MB	plugin registration
time: 0.012; rss: 66MB	expansion
time: 0.000; rss: 66MB	maybe building test harness
time: 0.000; rss: 66MB	maybe creating a macro crate
Post-expansion node count: 593
time: 0.000; rss: 66MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 66MB	complete gated feature checking
time: 0.000; rss: 66MB	early lint checks
time: 0.000; rss: 66MB	AST validation
time: 0.002; rss: 66MB	name resolution
time: 0.000; rss: 66MB	lowering ast -> hir
time: 0.000; rss: 66MB	indexing hir
time: 0.000; rss: 66MB	attribute checking
time: 0.000; rss: 66MB	language item collection
time: 0.000; rss: 66MB	lifetime resolution
time: 0.000; rss: 66MB	looking for entry point
time: 0.000; rss: 66MB	looking for plugin registrar
time: 0.000; rss: 66MB	region resolution
time: 0.000; rss: 66MB	loop checking
time: 0.000; rss: 66MB	static item recursion checking
time: 0.000; rss: 66MB	compute_incremental_hashes_map
time: 0.000; rss: 66MB	load_dep_graph
time: 0.000; rss: 66MB	stability index
time: 0.000; rss: 66MB	stability checking
time: 0.000; rss: 66MB	type collecting
time: 0.000; rss: 66MB	variance inference
time: 0.000; rss: 66MB	impl wf inference
time: 0.003; rss: 66MB	coherence checking
time: 0.003; rss: 72MB	wf checking
time: 0.000; rss: 72MB	item-types checking
time: 0.012; rss: 72MB	item-bodies checking
time: 0.000; rss: 72MB	drop-impl checking
time: 0.000; rss: 72MB	const checking
time: 0.000; rss: 72MB	privacy checking
time: 0.000; rss: 72MB	intrinsic checking
time: 0.000; rss: 72MB	effect checking
time: 0.000; rss: 72MB	match checking
time: 0.000; rss: 72MB	liveness checking
time: 0.000; rss: 72MB	rvalue checking
time: 0.000; rss: 72MB	MIR dump
  time: 0.000; rss: 72MB	SimplifyCfg
  time: 0.000; rss: 72MB	QualifyAndPromoteConstants
  time: 0.000; rss: 72MB	TypeckMir
  time: 0.000; rss: 72MB	SimplifyBranches
  time: 0.000; rss: 72MB	SimplifyCfg
time: 0.000; rss: 72MB	MIR cleanup and validation
time: 0.001; rss: 72MB	borrow checking
time: 0.000; rss: 72MB	reachability checking
time: 0.000; rss: 72MB	death checking
time: 0.000; rss: 72MB	unused lib feature checking
time: 0.000; rss: 72MB	lint checking
time: 0.001; rss: 72MB	resolving dependency formats
  time: 0.000; rss: 72MB	NoLandingPads
  time: 0.000; rss: 72MB	SimplifyCfg
  time: 0.000; rss: 72MB	EraseRegions
  time: 0.000; rss: 72MB	AddCallGuards
  time: 0.000; rss: 72MB	ElaborateDrops
  time: 0.000; rss: 72MB	NoLandingPads
  time: 0.000; rss: 72MB	SimplifyCfg
  time: 0.000; rss: 72MB	InstCombine
  time: 0.000; rss: 72MB	Deaggregator
  time: 0.000; rss: 72MB	CopyPropagation
  time: 0.000; rss: 72MB	SimplifyLocals
  time: 0.000; rss: 72MB	AddCallGuards
  time: 0.000; rss: 72MB	PreTrans
time: 0.001; rss: 72MB	MIR optimisations
  time: 0.000; rss: 72MB	write metadata
  time: 0.013; rss: 72MB	translation item collection
  time: 0.000; rss: 72MB	codegen unit partitioning
  time: 0.000; rss: 74MB	internalize symbols
time: 0.070; rss: 74MB	translation
time: 0.000; rss: 74MB	assert dep graph
time: 0.000; rss: 74MB	serialize dep graph
  time: 0.000; rss: 77MB	llvm function passes [0]
  time: 0.000; rss: 77MB	llvm module passes [0]
  time: 0.011; rss: 81MB	codegen passes [0]
  time: 0.000; rss: 81MB	codegen passes [0]
time: 0.012; rss: 81MB	LLVM passes
time: 0.000; rss: 81MB	serialize work products
  time: 0.074; rss: 81MB	running linker
time: 0.075; rss: 81MB	linking
done
