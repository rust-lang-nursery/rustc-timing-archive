commit 5ab11d72cab23f0cea63cbf7a88817ff2a45bab0
Merge: 3ec71b0 4b9ddf4
Author: bors <bors@rust-lang.org>
Date:   Sat Apr 2 15:52:00 2016 -0700

    Auto merge of #32667 - dotdash:def_dec, r=nagisa
    
    Stop accepting declarations when looking for definitions
    
    eternally_available linkage isn't legal for declarations anyway, so the
    check for an externally_available declaration should never succeed, so
    let's remove it.
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling lazy_static v0.1.15
   Compiling typeable v0.1.2
   Compiling winapi v0.2.6
   Compiling winapi-build v0.1.1
   Compiling unicase v0.1.0
   Compiling bitflags v0.3.3
   Compiling libc v0.2.9
   Compiling traitobject v0.0.1
   Compiling matches v0.1.2
   Compiling libc v0.1.12
   Compiling gcc v0.3.26
   Compiling pkg-config v0.3.8
   Compiling rustc-serialize v0.3.18
   Compiling log v0.3.6
   Compiling kernel32-sys v0.2.1
   Compiling httparse v0.1.6
   Compiling mime v0.0.11
   Compiling openssl-sys v0.6.7
   Compiling time v0.1.35
   Compiling rand v0.3.14
   Compiling num_cpus v0.2.11
   Compiling openssl v0.6.7
   Compiling uuid v0.1.18
   Compiling url v0.2.38
   Compiling cookie v0.1.21
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.030; rss: 45MB	parsing
Lines of code:             9154
Pre-expansion node count:  45594
time: 0.009; rss: 45MB	configuration 1
time: 0.000; rss: 45MB	recursion limit
time: 0.000; rss: 45MB	gated macro checking
time: 0.000; rss: 45MB	crate injection
time: 0.004; rss: 51MB	macro loading
time: 0.000; rss: 51MB	plugin loading
time: 0.000; rss: 51MB	plugin registration
time: 0.190; rss: 60MB	expansion
time: 0.005; rss: 60MB	complete gated feature checking 1
time: 0.033; rss: 60MB	configuration 2
time: 0.000; rss: 60MB	gated configuration checking
time: 0.013; rss: 60MB	maybe building test harness
time: 0.010; rss: 60MB	prelude injection
time: 0.001; rss: 60MB	checking that all macro invocations are gone
time: 0.000; rss: 60MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 60MB	complete gated feature checking 2
time: 0.001; rss: 60MB	const fn bodies and arguments
Post-expansion node count: 107125
time: 0.010; rss: 60MB	assigning node ids
time: 0.011; rss: 66MB	lowering ast -> hir
time: 0.004; rss: 68MB	indexing hir
time: 0.001; rss: 68MB	attribute checking
time: 0.006; rss: 68MB	early lint checks
time: 0.004; rss: 65MB	external crate/lib resolution
time: 0.001; rss: 65MB	language item collection
time: 0.023; rss: 83MB	resolution
time: 0.002; rss: 83MB	lifetime resolution
time: 0.000; rss: 83MB	looking for entry point
time: 0.000; rss: 83MB	looking for plugin registrar
time: 0.006; rss: 86MB	region resolution
time: 0.001; rss: 86MB	loop checking
time: 0.001; rss: 86MB	static item recursion checking
time: 0.018; rss: 95MB	type collecting
time: 0.000; rss: 95MB	variance inference
time: 0.522; rss: 113MB	coherence checking
time: 0.075; rss: 113MB	wf checking
time: 0.029; rss: 115MB	item-types checking
time: 0.487; rss: 135MB	item-bodies checking
time: 0.000; rss: 135MB	drop-impl checking
time: 0.036; rss: 137MB	const checking
time: 0.007; rss: 137MB	privacy checking
time: 0.001; rss: 137MB	stability index
time: 0.004; rss: 137MB	intrinsic checking
time: 0.002; rss: 137MB	effect checking
time: 0.012; rss: 137MB	match checking
time: 0.004; rss: 137MB	liveness checking
time: 0.032; rss: 137MB	rvalue checking
time: 0.047; rss: 142MB	MIR dump
time: 0.028; rss: 144MB	MIR passes
time: 0.064; rss: 144MB	borrow checking
time: 0.003; rss: 144MB	reachability checking
time: 0.006; rss: 144MB	death checking
time: 0.006; rss: 144MB	stability checking
time: 0.000; rss: 144MB	unused lib feature checking
time: 0.047; rss: 144MB	lint checking
time: 0.000; rss: 144MB	resolving dependency formats
  time: 0.184; rss: 157MB	translation item collection
  time: 0.137; rss: 288MB	write metadata
time: 1.435; rss: 288MB	translation
  time: 0.096; rss: 169MB	llvm function passes [0]
  time: 0.047; rss: 171MB	llvm module passes [0]
  time: 1.630; rss: 174MB	codegen passes [0]
  time: 0.001; rss: 122MB	codegen passes [0]
time: 1.971; rss: 119MB	LLVM passes
time: 0.171; rss: 120MB	linking
done
