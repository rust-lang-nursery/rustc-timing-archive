commit 2c01bb885108c436adae2006632ff6dfc0a5f2cd
Merge: 7a187c3 bcd2f90
Author: bors <bors@rust-lang.org>
Date:   Wed Aug 31 12:56:15 2016 -0700

    Auto merge of #35718 - michaelwoerister:incr-comp-dir-locking, r=alexcrichton
    
    Implement synchronization scheme for incr. comp. directory
    
    This PR implements a copy-on-write-based synchronization scheme for the incremental compilation cache directory. For technical details, see the documentation at the beginning of `rustc_incremental/persist/fs.rs`.
    
    The PR contains unit tests for some functions but for testing whether the scheme properly handles races, a more elaborate test setup would be needed. It would probably involve a small tool that allows to manipulate the incremental compilation directory in a controlled way and then letting a compiler instance run against directories in different states. I don't know if it's worth the trouble of adding another test category to `compiletest`, but I'd be happy to do so.
    
    Fixes #32754
    Fixes #34957
rustc: ./helloworld
/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc hello.rs -Ztime-passes -Zinput-stats
time: 0.000; rss: 42MB	parsing
Lines of code:             3
Pre-expansion node count:  8
time: 0.000; rss: 42MB	configuration
time: 0.000; rss: 42MB	recursion limit
time: 0.000; rss: 42MB	crate injection
time: 0.000; rss: 42MB	plugin loading
time: 0.000; rss: 42MB	plugin registration
time: 0.017; rss: 65MB	expansion
time: 0.000; rss: 65MB	maybe building test harness
time: 0.000; rss: 65MB	assigning node ids
Post-expansion node count: 68
time: 0.000; rss: 65MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 65MB	complete gated feature checking
time: 0.000; rss: 65MB	collecting defs
time: 0.002; rss: 65MB	external crate/lib resolution
time: 0.000; rss: 65MB	early lint checks
time: 0.000; rss: 65MB	AST validation
time: 0.000; rss: 65MB	name resolution
time: 0.000; rss: 65MB	lowering ast -> hir
time: 0.000; rss: 65MB	indexing hir
time: 0.000; rss: 65MB	attribute checking
time: 0.000; rss: 65MB	language item collection
time: 0.000; rss: 65MB	lifetime resolution
time: 0.000; rss: 65MB	looking for entry point
time: 0.000; rss: 65MB	looking for plugin registrar
time: 0.000; rss: 65MB	region resolution
time: 0.000; rss: 65MB	loop checking
time: 0.000; rss: 65MB	static item recursion checking
time: 0.000; rss: 65MB	compute_incremental_hashes_map
time: 0.000; rss: 65MB	load_dep_graph
time: 0.000; rss: 65MB	type collecting
time: 0.000; rss: 65MB	variance inference
time: 0.004; rss: 65MB	coherence checking
time: 0.000; rss: 65MB	wf checking
time: 0.000; rss: 69MB	item-types checking
time: 0.000; rss: 69MB	item-bodies checking
time: 0.000; rss: 69MB	drop-impl checking
time: 0.000; rss: 69MB	const checking
time: 0.000; rss: 69MB	privacy checking
time: 0.000; rss: 69MB	stability index
time: 0.000; rss: 69MB	intrinsic checking
time: 0.000; rss: 69MB	effect checking
time: 0.000; rss: 69MB	match checking
time: 0.000; rss: 69MB	liveness checking
time: 0.000; rss: 69MB	rvalue checking
time: 0.000; rss: 69MB	MIR dump
time: 0.000; rss: 69MB	MIR passes
time: 0.000; rss: 69MB	borrow checking
time: 0.000; rss: 69MB	reachability checking
time: 0.000; rss: 69MB	death checking
time: 0.000; rss: 69MB	stability checking
time: 0.000; rss: 69MB	unused lib feature checking
time: 0.000; rss: 69MB	lint checking
time: 0.001; rss: 69MB	resolving dependency formats
time: 0.000; rss: 69MB	Prepare MIR codegen passes
  time: 0.000; rss: 73MB	write metadata
  time: 0.001; rss: 73MB	translation item collection
  time: 0.000; rss: 73MB	codegen unit partitioning
  time: 0.000; rss: 73MB	internalize symbols
time: 0.007; rss: 73MB	translation
time: 0.000; rss: 73MB	assert dep graph
time: 0.000; rss: 73MB	serialize dep graph
  time: 0.000; rss: 73MB	llvm function passes [0]
  time: 0.000; rss: 73MB	llvm module passes [0]
  time: 0.001; rss: 77MB	codegen passes [0]
  time: 0.000; rss: 77MB	codegen passes [0]
time: 0.002; rss: 77MB	LLVM passes
time: 0.000; rss: 77MB	serialize work products
  time: 0.112; rss: 77MB	running linker
time: 0.112; rss: 77MB	linking
done
