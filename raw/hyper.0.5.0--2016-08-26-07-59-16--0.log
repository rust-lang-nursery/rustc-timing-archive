commit eaf71f8d1034f16140791f566cab3f3c9a0bf96a
Merge: e07dd59 a9a2979
Author: bors <bors@rust-lang.org>
Date:   Thu Aug 25 20:45:32 2016 -0700

    Auto merge of #35906 - jseyfried:local_prelude, r=eddyb
    
    Use `#[prelude_import]` in `libcore` and `libstd`
    
    r? @eddyb
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling typeable v0.1.2
   Compiling libc v0.1.12
   Compiling libc v0.2.15
   Compiling winapi v0.2.8
   Compiling winapi-build v0.1.1
   Compiling gcc v0.3.35
   Compiling lazy_static v0.1.16
   Compiling log v0.3.6
   Compiling rustc-serialize v0.3.19
   Compiling unicase v0.1.0
   Compiling bitflags v0.3.3
   Compiling matches v0.1.2
   Compiling httparse v0.1.6
   Compiling kernel32-sys v0.2.2
   Compiling pkg-config v0.3.8
   Compiling mime v0.0.11
   Compiling traitobject v0.0.1
   Compiling num_cpus v0.2.13
   Compiling rand v0.3.14
   Compiling time v0.1.35
   Compiling openssl-sys v0.6.7
   Compiling openssl v0.6.7
   Compiling uuid v0.1.18
   Compiling url v0.2.38
   Compiling cookie v0.1.21
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.038; rss: 49MB	parsing
Lines of code:             9154
Pre-expansion node count:  44838
time: 0.003; rss: 50MB	configuration
time: 0.000; rss: 50MB	recursion limit
time: 0.000; rss: 50MB	crate injection
time: 0.000; rss: 50MB	plugin loading
time: 0.000; rss: 50MB	plugin registration
time: 0.101; rss: 74MB	expansion
time: 0.000; rss: 74MB	maybe building test harness
time: 0.005; rss: 74MB	assigning node ids
Post-expansion node count: 101581
time: 0.000; rss: 74MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 74MB	complete gated feature checking
time: 0.003; rss: 76MB	collecting defs
time: 0.013; rss: 82MB	external crate/lib resolution
time: 0.004; rss: 82MB	early lint checks
time: 0.001; rss: 82MB	AST validation
time: 0.023; rss: 89MB	name resolution
time: 0.017; rss: 95MB	lowering ast -> hir
time: 0.003; rss: 96MB	indexing hir
time: 0.001; rss: 96MB	attribute checking
time: 0.001; rss: 90MB	language item collection
time: 0.002; rss: 90MB	lifetime resolution
time: 0.000; rss: 90MB	looking for entry point
time: 0.000; rss: 90MB	looking for plugin registrar
time: 0.008; rss: 92MB	region resolution
time: 0.001; rss: 92MB	loop checking
time: 0.001; rss: 92MB	static item recursion checking
time: 0.013; rss: 92MB	compute_incremental_hashes_map
time: 0.000; rss: 92MB	load_dep_graph
time: 0.023; rss: 94MB	type collecting
time: 0.000; rss: 94MB	variance inference
time: 0.038; rss: 99MB	coherence checking
time: 0.066; rss: 101MB	wf checking
time: 0.029; rss: 101MB	item-types checking
time: 0.421; rss: 110MB	item-bodies checking
time: 0.000; rss: 110MB	drop-impl checking
time: 0.043; rss: 112MB	const checking
time: 0.008; rss: 112MB	privacy checking
time: 0.001; rss: 112MB	stability index
time: 0.006; rss: 112MB	intrinsic checking
time: 0.002; rss: 112MB	effect checking
time: 0.013; rss: 112MB	match checking
time: 0.005; rss: 112MB	liveness checking
time: 0.028; rss: 112MB	rvalue checking
time: 0.082; rss: 129MB	MIR dump
time: 0.044; rss: 130MB	MIR passes
time: 0.065; rss: 130MB	borrow checking
time: 0.003; rss: 130MB	reachability checking
time: 0.005; rss: 131MB	death checking
time: 0.005; rss: 131MB	stability checking
time: 0.000; rss: 131MB	unused lib feature checking
time: 0.042; rss: 131MB	lint checking
time: 0.000; rss: 131MB	resolving dependency formats
time: 0.088; rss: 134MB	Prepare MIR codegen passes
  time: 0.063; rss: 138MB	write metadata
  time: 0.151; rss: 143MB	translation item collection
  time: 0.020; rss: 146MB	codegen unit partitioning
  time: 0.034; rss: 209MB	internalize symbols
time: 1.633; rss: 199MB	translation
time: 0.000; rss: 199MB	assert dep graph
time: 0.000; rss: 199MB	serialize dep graph
  time: 0.102; rss: 154MB	llvm function passes [0]
  time: 0.048; rss: 157MB	llvm module passes [0]
  time: 1.829; rss: 159MB	codegen passes [0]
  time: 0.001; rss: 159MB	codegen passes [0]
time: 2.182; rss: 159MB	LLVM passes
time: 0.000; rss: 159MB	serialize work products
time: 0.158; rss: 95MB	linking
done
