commit 6dbb0e86aec11050480beb76eade6fb805010ba7
Merge: 04308ce fef8276
Author: bors <bors@rust-lang.org>
Date:   Tue May 10 14:36:46 2016 -0700

    Auto merge of #33319 - birkenfeld:issue31424, r=jseyfried
    
    borrowck: do not suggest to change "&mut self" to "&mut mut self"
    
    Matching the snippet string might not be the cleanest, but matching
    the AST node instead seems to end in a lot of nested `if let`s, so I
    don't know what's better.
    
    Of course it's entirely possible that there is another API altogether
    that I just don't know of?
    
    Fixes #31424.
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.032; rss: 53MB	parsing
Lines of code:             9154
Pre-expansion node count:  45594
time: 0.008; rss: 53MB	configuration 1
time: 0.000; rss: 53MB	recursion limit
time: 0.000; rss: 53MB	crate injection
time: 0.005; rss: 61MB	macro loading
time: 0.000; rss: 61MB	plugin loading
time: 0.000; rss: 61MB	plugin registration
time: 0.191; rss: 70MB	expansion
time: 0.030; rss: 70MB	configuration 2
time: 0.000; rss: 70MB	gated configuration checking
time: 0.011; rss: 70MB	maybe building test harness
time: 0.008; rss: 70MB	prelude injection
time: 0.001; rss: 70MB	checking that all macro invocations are gone
time: 0.000; rss: 70MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 70MB	complete gated feature checking
Post-expansion node count: 107141
time: 0.008; rss: 70MB	assigning node ids
time: 0.003; rss: 72MB	collecting defs
time: 0.005; rss: 75MB	external crate/lib resolution
time: 0.006; rss: 75MB	early lint checks
time: 0.026; rss: 94MB	name resolution
time: 0.010; rss: 100MB	lowering ast -> hir
time: 0.001; rss: 102MB	indexing hir
time: 0.001; rss: 102MB	attribute checking
time: 0.001; rss: 92MB	language item collection
time: 0.002; rss: 92MB	lifetime resolution
time: 0.000; rss: 92MB	looking for entry point
time: 0.000; rss: 92MB	looking for plugin registrar
time: 0.006; rss: 96MB	region resolution
time: 0.001; rss: 96MB	loop checking
time: 0.001; rss: 96MB	static item recursion checking
time: 0.000; rss: 96MB	load_dep_graph
time: 0.018; rss: 106MB	type collecting
time: 0.000; rss: 106MB	variance inference
time: 0.042; rss: 122MB	coherence checking
time: 0.078; rss: 122MB	wf checking
time: 0.029; rss: 125MB	item-types checking
time: 0.467; rss: 145MB	item-bodies checking
time: 0.000; rss: 145MB	drop-impl checking
time: 0.036; rss: 148MB	const checking
time: 0.007; rss: 148MB	privacy checking
time: 0.001; rss: 148MB	stability index
time: 0.004; rss: 148MB	intrinsic checking
time: 0.002; rss: 148MB	effect checking
time: 0.012; rss: 148MB	match checking
time: 0.004; rss: 148MB	liveness checking
time: 0.024; rss: 148MB	rvalue checking
time: 0.053; rss: 156MB	MIR dump
time: 0.036; rss: 156MB	MIR passes
time: 0.064; rss: 156MB	borrow checking
time: 0.003; rss: 156MB	reachability checking
time: 0.006; rss: 156MB	death checking
time: 0.006; rss: 156MB	stability checking
time: 0.000; rss: 156MB	unused lib feature checking
time: 0.047; rss: 156MB	lint checking
time: 0.000; rss: 156MB	resolving dependency formats
time: 0.012; rss: 158MB	Prepare MIR codegen passes
  time: 0.181; rss: 169MB	translation item collection
  time: 0.009; rss: 169MB	codegen unit partitioning
  time: 0.136; rss: 296MB	write metadata
time: 1.495; rss: 296MB	translation
time: 0.001; rss: 296MB	assert dep graph
time: 0.000; rss: 296MB	serialize dep graph
  time: 0.096; rss: 174MB	llvm function passes [0]
  time: 0.046; rss: 174MB	llvm module passes [0]
  time: 1.633; rss: 179MB	codegen passes [0]
  time: 0.001; rss: 129MB	codegen passes [0]
time: 1.975; rss: 128MB	LLVM passes
time: 0.177; rss: 126MB	linking
done
