commit 0894b06283ac513bd4b6351aa9065fa515e2a71d
Merge: a09f386 a3fdde7
Author: bors <bors@rust-lang.org>
Date:   Sun Apr 3 03:12:41 2016 -0700

    Auto merge of #32168 - alexcrichton:fix-filecheck, r=aturon
    
    mk: Add configure option for disabling codegen tests
    
    Our `codegen` test suite requires the LLVM `FileCheck` utility but unfortunately
    this isn't always available in all custom LLVM roots (e.g. those specified via
    `--llvm-root`). This commit adds a `./configure` option called
    `--disable-codegen-tests` which will manually disable running these tests. In
    the case that this option is passed we can forgo the need for the `FileCheck`
    executable. Note that we still require `FileCheck` by default as we will attempt
    to run these tests.
    
    Closes #28667
rustc: ./rust-encoding.0.2.32
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling encoding_index_tests v0.1.4 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-korean v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-tradchinese v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-simpchinese v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-singlebyte v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-japanese v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding v0.2.32 (file:///root/benchmarks/rust-encoding.0.2.32)
time: 0.023; rss: 43MB	parsing
Lines of code:             6441
Pre-expansion node count:  30335
time: 0.006; rss: 43MB	configuration 1
time: 0.000; rss: 43MB	recursion limit
time: 0.000; rss: 43MB	gated macro checking
time: 0.000; rss: 43MB	crate injection
time: 0.003; rss: 47MB	macro loading
time: 0.000; rss: 47MB	plugin loading
time: 0.000; rss: 47MB	plugin registration
time: 0.045; rss: 49MB	expansion
time: 0.001; rss: 49MB	complete gated feature checking 1
time: 0.008; rss: 49MB	configuration 2
time: 0.000; rss: 49MB	gated configuration checking
time: 0.004; rss: 49MB	maybe building test harness
time: 0.003; rss: 49MB	prelude injection
time: 0.000; rss: 49MB	checking that all macro invocations are gone
time: 0.000; rss: 49MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 49MB	complete gated feature checking 2
time: 0.000; rss: 49MB	const fn bodies and arguments
Post-expansion node count: 41611
time: 0.003; rss: 49MB	assigning node ids
time: 0.004; rss: 53MB	lowering ast -> hir
time: 0.001; rss: 55MB	indexing hir
time: 0.001; rss: 55MB	attribute checking
time: 0.002; rss: 55MB	early lint checks
time: 0.001; rss: 54MB	external crate/lib resolution
time: 0.000; rss: 54MB	language item collection
time: 0.008; rss: 63MB	resolution
time: 0.000; rss: 63MB	lifetime resolution
time: 0.000; rss: 63MB	looking for entry point
time: 0.000; rss: 63MB	looking for plugin registrar
time: 0.002; rss: 65MB	region resolution
time: 0.000; rss: 65MB	loop checking
time: 0.000; rss: 65MB	static item recursion checking
time: 0.005; rss: 67MB	type collecting
time: 0.000; rss: 67MB	variance inference
time: 0.142; rss: 86MB	coherence checking
time: 0.017; rss: 86MB	wf checking
time: 0.012; rss: 86MB	item-types checking
time: 0.204; rss: 98MB	item-bodies checking
time: 0.000; rss: 98MB	drop-impl checking
time: 0.010; rss: 98MB	const checking
time: 0.002; rss: 98MB	privacy checking
time: 0.000; rss: 98MB	stability index
time: 0.001; rss: 98MB	intrinsic checking
time: 0.000; rss: 98MB	effect checking
time: 0.006; rss: 98MB	match checking
time: 0.002; rss: 98MB	liveness checking
time: 0.006; rss: 98MB	rvalue checking
time: 0.017; rss: 105MB	MIR dump
time: 0.010; rss: 105MB	MIR passes
time: 0.021; rss: 105MB	borrow checking
time: 0.000; rss: 105MB	reachability checking
time: 0.002; rss: 105MB	death checking
time: 0.002; rss: 105MB	stability checking
time: 0.000; rss: 105MB	unused lib feature checking
time: 0.023; rss: 105MB	lint checking
time: 0.000; rss: 105MB	resolving dependency formats
  time: 0.024; rss: 113MB	translation item collection
  time: 0.058; rss: 151MB	write metadata
time: 0.335; rss: 151MB	translation
  time: 0.027; rss: 112MB	llvm function passes [0]
  time: 0.051; rss: 116MB	llvm module passes [0]
  time: 0.582; rss: 121MB	codegen passes [0]
  time: 0.001; rss: 104MB	codegen passes [0]
time: 0.725; rss: 103MB	LLVM passes
time: 0.054; rss: 102MB	linking
done
