commit 86dde9bbda92c02c61282b5df5d38338a798ef3b
Merge: acd3f79 4b5007a
Author: bors <bors@rust-lang.org>
Date:   Sun Aug 28 21:57:51 2016 -0700

    Auto merge of #36062 - japaric:smarter-submodules, r=alexcrichton
    
    rustbuild: smarter `git submodule`-ing
    
    With this commit, if one bootstraps rust against system llvm then the
    src/llvm submodule is not updated/checked-out. This saves considerable
    network bandwith when starting from a fresh clone of rust-lang/rust as
    the llvm submodule is never cloned.
    
    cc #30107
    
    r? @alexcrichton
    cc @petevine
    
    ~~We could also avoid updating the jemalloc submodule if --disable-jemalloc is used. It just hasn't been implemented.~~ Done
    
    This probably doesn't handle "recursive" submodules correctly but I think we don't have any of those right now.
    
    I'm still testing a bootstrap but already confirmed that the llvm submodule doesn't get updated when `--llvm-root` is passed to `configure`.
rustc: ./helloworld
/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc hello.rs -Ztime-passes -Zinput-stats
time: 0.000; rss: 42MB	parsing
Lines of code:             3
Pre-expansion node count:  8
time: 0.000; rss: 42MB	configuration
time: 0.000; rss: 42MB	recursion limit
time: 0.000; rss: 42MB	crate injection
time: 0.000; rss: 42MB	plugin loading
time: 0.000; rss: 42MB	plugin registration
time: 0.018; rss: 60MB	expansion
time: 0.000; rss: 60MB	maybe building test harness
time: 0.000; rss: 60MB	assigning node ids
Post-expansion node count: 68
time: 0.000; rss: 60MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 60MB	complete gated feature checking
time: 0.000; rss: 60MB	collecting defs
time: 0.002; rss: 60MB	external crate/lib resolution
time: 0.000; rss: 60MB	early lint checks
time: 0.000; rss: 60MB	AST validation
time: 0.000; rss: 64MB	name resolution
time: 0.000; rss: 64MB	lowering ast -> hir
time: 0.000; rss: 64MB	indexing hir
time: 0.000; rss: 64MB	attribute checking
time: 0.000; rss: 64MB	language item collection
time: 0.000; rss: 64MB	lifetime resolution
time: 0.000; rss: 64MB	looking for entry point
time: 0.000; rss: 64MB	looking for plugin registrar
time: 0.000; rss: 64MB	region resolution
time: 0.000; rss: 64MB	loop checking
time: 0.000; rss: 64MB	static item recursion checking
time: 0.000; rss: 64MB	compute_incremental_hashes_map
time: 0.000; rss: 64MB	load_dep_graph
time: 0.000; rss: 64MB	type collecting
time: 0.000; rss: 64MB	variance inference
time: 0.004; rss: 64MB	coherence checking
time: 0.000; rss: 64MB	wf checking
time: 0.000; rss: 64MB	item-types checking
time: 0.000; rss: 64MB	item-bodies checking
time: 0.000; rss: 64MB	drop-impl checking
time: 0.000; rss: 64MB	const checking
time: 0.000; rss: 64MB	privacy checking
time: 0.000; rss: 64MB	stability index
time: 0.000; rss: 64MB	intrinsic checking
time: 0.000; rss: 64MB	effect checking
time: 0.000; rss: 64MB	match checking
time: 0.000; rss: 64MB	liveness checking
time: 0.000; rss: 64MB	rvalue checking
time: 0.000; rss: 64MB	MIR dump
time: 0.000; rss: 68MB	MIR passes
time: 0.000; rss: 68MB	borrow checking
time: 0.000; rss: 68MB	reachability checking
time: 0.000; rss: 68MB	death checking
time: 0.000; rss: 68MB	stability checking
time: 0.000; rss: 68MB	unused lib feature checking
time: 0.000; rss: 68MB	lint checking
time: 0.001; rss: 71MB	resolving dependency formats
time: 0.000; rss: 71MB	Prepare MIR codegen passes
  time: 0.000; rss: 71MB	write metadata
  time: 0.001; rss: 71MB	translation item collection
  time: 0.000; rss: 71MB	codegen unit partitioning
  time: 0.000; rss: 71MB	internalize symbols
time: 0.007; rss: 71MB	translation
time: 0.000; rss: 71MB	assert dep graph
time: 0.000; rss: 71MB	serialize dep graph
  time: 0.000; rss: 71MB	llvm function passes [0]
  time: 0.000; rss: 71MB	llvm module passes [0]
  time: 0.001; rss: 75MB	codegen passes [0]
  time: 0.000; rss: 75MB	codegen passes [0]
time: 0.002; rss: 75MB	LLVM passes
time: 0.000; rss: 75MB	serialize work products
  time: 0.107; rss: 75MB	running linker
time: 0.107; rss: 75MB	linking
done
