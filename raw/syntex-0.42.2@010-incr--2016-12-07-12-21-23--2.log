commit 209308439a1099b285520459f57e380f18793c07
Merge: 7846610 d6ec686
Author: bors <bors@rust-lang.org>
Date:   Wed Dec 7 16:32:48 2016 +0000

    Auto merge of #38105 - ollie27:rustdoc_deterministic_js, r=GuillaumeGomez
    
    rustdoc: Sort lines in search index and implementors js
    
    This means the files are generated deterministically even with rustdoc running in parallel.
    
    Fixes the first part of #30220.
rustc: ./syntex-0.42.2@010-incr@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.126; rss: 69MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 69MB	recursion limit
time: 0.000; rss: 69MB	crate injection
time: 0.000; rss: 69MB	plugin loading
time: 0.000; rss: 69MB	plugin registration
time: 0.330; rss: 144MB	expansion
time: 0.000; rss: 144MB	maybe building test harness
time: 0.006; rss: 144MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 144MB	checking for inline asm in case the target doesn't support it
time: 0.013; rss: 144MB	complete gated feature checking
time: 0.024; rss: 144MB	early lint checks
time: 0.008; rss: 144MB	AST validation
time: 0.105; rss: 159MB	name resolution
time: 0.116; rss: 193MB	lowering ast -> hir
time: 0.011; rss: 185MB	indexing hir
time: 0.006; rss: 185MB	attribute checking
time: 0.002; rss: 147MB	language item collection
time: 0.015; rss: 149MB	lifetime resolution
time: 0.000; rss: 149MB	looking for entry point
time: 0.000; rss: 149MB	looking for plugin registrar
time: 0.096; rss: 169MB	region resolution
time: 0.009; rss: 169MB	loop checking
time: 0.002; rss: 169MB	static item recursion checking
time: 0.388; rss: 170MB	compute_incremental_hashes_map
time: 0.000; rss: 170MB	load_dep_graph
time: 0.011; rss: 171MB	stability index
time: 0.029; rss: 173MB	stability checking
time: 0.073; rss: 180MB	type collecting
time: 0.005; rss: 180MB	variance inference
time: 0.013; rss: 185MB	impl wf inference
time: 0.039; rss: 189MB	coherence checking
time: 0.093; rss: 191MB	wf checking
time: 0.218; rss: 200MB	item-types checking
time: 3.825; rss: 252MB	item-bodies checking
time: 0.000; rss: 252MB	drop-impl checking
time: 0.328; rss: 263MB	const checking
time: 0.073; rss: 264MB	privacy checking
time: 0.043; rss: 270MB	intrinsic checking
time: 0.016; rss: 270MB	effect checking
time: 0.053; rss: 270MB	match checking
time: 0.055; rss: 278MB	liveness checking
time: 0.190; rss: 278MB	rvalue checking
time: 0.592; rss: 450MB	MIR dump
  time: 0.062; rss: 457MB	SimplifyCfg
  time: 0.080; rss: 457MB	QualifyAndPromoteConstants
  time: 0.183; rss: 474MB	TypeckMir
  time: 0.005; rss: 474MB	SimplifyBranches
  time: 0.035; rss: 474MB	SimplifyCfg
time: 0.366; rss: 474MB	MIR cleanup and validation
time: 0.506; rss: 477MB	borrow checking
time: 0.026; rss: 477MB	reachability checking
time: 0.046; rss: 477MB	death checking
time: 0.000; rss: 477MB	unused lib feature checking
time: 0.189; rss: 477MB	lint checking
time: 0.000; rss: 477MB	resolving dependency formats
  time: 0.004; rss: 477MB	NoLandingPads
  time: 0.030; rss: 477MB	SimplifyCfg
  time: 0.090; rss: 485MB	EraseRegions
  time: 0.014; rss: 485MB	AddCallGuards
  time: 0.327; rss: 507MB	ElaborateDrops
  time: 0.004; rss: 507MB	NoLandingPads
  time: 0.059; rss: 507MB	SimplifyCfg
  time: 0.035; rss: 507MB	InstCombine
  time: 0.013; rss: 507MB	Deaggregator
  time: 0.004; rss: 507MB	CopyPropagation
  time: 0.044; rss: 507MB	SimplifyLocals
  time: 0.012; rss: 507MB	AddCallGuards
  time: 0.003; rss: 507MB	PreTrans
time: 0.639; rss: 507MB	MIR optimisations
  time: 0.097; rss: 516MB	write metadata
  time: 0.434; rss: 528MB	translation item collection
  time: 0.079; rss: 533MB	codegen unit partitioning
  time: 0.055; rss: 1436MB	internalize symbols
time: 14.332; rss: 1436MB	translation
time: 0.000; rss: 1436MB	assert dep graph
time: 2.104; rss: 1466MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1176MB	llvm function passes [1]
time: 0.000; rss: 1176MB	llvm module passes [1]
time: 0.000; rss: 1176MB	llvm function passes [0]
time: 0.000; rss: 1176MB	llvm module passes [0]
time: 0.001; rss: 1178MB	llvm function passes [9]
time: 0.002; rss: 1179MB	llvm function passes [5]
time: 0.000; rss: 1179MB	llvm module passes [5]
time: 0.001; rss: 1179MB	llvm module passes [9]
time: 0.002; rss: 1179MB	codegen passes [1]
time: 0.004; rss: 1180MB	llvm function passes [2]
time: 0.001; rss: 1183MB	llvm module passes [2]
time: 0.006; rss: 1185MB	codegen passes [0]
time: 0.006; rss: 1185MB	llvm function passes [3]
time: 0.000; rss: 1185MB	llvm module passes [3]
time: 0.014; rss: 1187MB	llvm function passes [6]
time: 0.021; rss: 1189MB	codegen passes [9]
time: 0.028; rss: 1189MB	llvm function passes [1]
time: 0.018; rss: 1189MB	llvm module passes [6]
time: 0.029; rss: 1189MB	llvm function passes [4]
time: 0.018; rss: 1193MB	llvm module passes [4]
time: 0.023; rss: 1193MB	llvm module passes [1]
time: 0.070; rss: 1197MB	llvm function passes [0]
time: 0.076; rss: 1200MB	codegen passes [3]
time: 0.001; rss: 1200MB	llvm function passes [3]
time: 0.000; rss: 1200MB	llvm module passes [3]
time: 0.004; rss: 1200MB	llvm function passes [15]
time: 0.001; rss: 1200MB	llvm module passes [15]
time: 0.000; rss: 1201MB	llvm function passes [14]
time: 0.000; rss: 1201MB	llvm module passes [14]
time: 0.001; rss: 1201MB	codegen passes [14]
time: 0.000; rss: 1201MB	llvm function passes [14]
time: 0.000; rss: 1201MB	llvm module passes [14]
time: 0.038; rss: 1203MB	llvm function passes [11]
time: 0.008; rss: 1205MB	llvm module passes [11]
time: 0.086; rss: 1205MB	llvm function passes [12]
time: 0.028; rss: 1205MB	codegen passes [14]
time: 0.000; rss: 1205MB	llvm function passes [14]
time: 0.000; rss: 1205MB	llvm module passes [14]
time: 0.022; rss: 1206MB	codegen passes [14]
time: 0.086; rss: 1206MB	llvm module passes [0]
time: 0.006; rss: 1209MB	codegen passes [3]
time: 0.193; rss: 1214MB	codegen passes [5]
time: 0.056; rss: 1214MB	llvm function passes [18]
time: 0.000; rss: 1214MB	llvm module passes [18]
time: 0.112; rss: 1217MB	llvm module passes [12]
time: 0.235; rss: 1219MB	llvm function passes [10]
time: 0.006; rss: 1221MB	llvm function passes [39]
time: 0.005; rss: 1221MB	llvm function passes [28]
time: 0.185; rss: 1222MB	llvm function passes [16]
time: 0.047; rss: 1226MB	llvm function passes [34]
time: 0.019; rss: 1227MB	llvm module passes [28]
time: 0.027; rss: 1227MB	llvm module passes [39]
time: 0.126; rss: 1227MB	llvm function passes [30]
time: 0.012; rss: 1227MB	llvm module passes [34]
time: 0.013; rss: 1230MB	llvm module passes [30]
time: 0.099; rss: 1226MB	llvm function passes [26]
time: 0.188; rss: 1232MB	llvm function passes [19]
time: 0.358; rss: 1233MB	llvm function passes [7]
time: 0.160; rss: 1233MB	llvm function passes [27]
time: 0.216; rss: 1235MB	llvm function passes [20]
time: 0.352; rss: 1235MB	llvm function passes [9]
time: 0.223; rss: 1236MB	llvm function passes [25]
time: 0.239; rss: 1237MB	llvm function passes [14]
time: 0.210; rss: 1237MB	llvm function passes [21]
time: 0.212; rss: 1238MB	llvm function passes [31]
time: 0.216; rss: 1239MB	llvm function passes [29]
time: 0.152; rss: 1239MB	llvm function passes [36]
time: 0.027; rss: 1239MB	llvm function passes [40]
time: 0.228; rss: 1240MB	codegen passes [18]
time: 0.109; rss: 1240MB	llvm function passes [38]
time: 0.060; rss: 1240MB	llvm module passes [20]
time: 0.007; rss: 1240MB	llvm module passes [40]
time: 0.010; rss: 1240MB	codegen passes [40]
time: 0.047; rss: 1241MB	llvm module passes [31]
time: 0.126; rss: 1241MB	llvm module passes [26]
time: 0.069; rss: 1242MB	codegen passes [41]
time: 0.174; rss: 1243MB	llvm module passes [16]
time: 0.030; rss: 1246MB	llvm module passes [38]
time: 0.160; rss: 1246MB	codegen passes [39]
time: 0.060; rss: 1246MB	llvm module passes [29]
time: 0.235; rss: 1248MB	llvm module passes [10]
time: 0.099; rss: 1249MB	llvm module passes [25]
time: 0.427; rss: 1252MB	llvm function passes [17]
time: 0.249; rss: 1252MB	llvm function passes [33]
time: 0.182; rss: 1254MB	llvm module passes [19]
time: 0.420; rss: 1255MB	codegen passes [15]
time: 0.128; rss: 1257MB	llvm module passes [36]
time: 0.364; rss: 1260MB	llvm function passes [5]
time: 0.188; rss: 1266MB	llvm module passes [14]
time: 0.232; rss: 1267MB	llvm module passes [27]
time: 0.082; rss: 1266MB	llvm module passes [33]
time: 0.176; rss: 1264MB	llvm module passes [21]
time: 0.592; rss: 1268MB	codegen passes [2]
time: 0.446; rss: 1267MB	llvm function passes [3]
time: 0.502; rss: 1275MB	llvm function passes [22]
time: 0.653; rss: 1275MB	llvm function passes [8]
time: 0.327; rss: 1277MB	llvm module passes [7]
time: 0.520; rss: 1279MB	llvm function passes [23]
time: 0.368; rss: 1284MB	llvm module passes [9]
time: 0.484; rss: 1285MB	llvm function passes [37]
time: 0.568; rss: 1291MB	llvm function passes [35]
time: 0.773; rss: 1296MB	llvm function passes [13]
time: 0.312; rss: 1296MB	llvm module passes [17]
time: 0.679; rss: 1302MB	llvm function passes [32]
time: 0.555; rss: 1308MB	codegen passes [28]
time: 0.664; rss: 1309MB	llvm function passes [24]
time: 0.274; rss: 1315MB	llvm module passes [22]
time: 0.141; rss: 1314MB	llvm module passes [35]
time: 0.421; rss: 1319MB	llvm module passes [5]
time: 0.904; rss: 1321MB	codegen passes [6]
time: 0.409; rss: 1332MB	llvm module passes [23]
time: 0.252; rss: 1331MB	llvm module passes [24]
time: 0.467; rss: 1329MB	llvm module passes [37]
time: 0.665; rss: 1330MB	codegen passes [31]
time: 0.452; rss: 1329MB	llvm module passes [32]
time: 0.735; rss: 1345MB	llvm module passes [8]
time: 0.811; rss: 1350MB	llvm module passes [3]
time: 0.959; rss: 1362MB	codegen passes [11]
time: 0.701; rss: 1362MB	llvm module passes [13]
time: 1.251; rss: 1362MB	codegen passes [4]
time: 1.012; rss: 1381MB	codegen passes [38]
time: 1.435; rss: 1401MB	codegen passes [29]
time: 1.605; rss: 1397MB	codegen passes [0]
time: 1.604; rss: 1403MB	codegen passes [34]
time: 1.466; rss: 1411MB	codegen passes [26]
time: 1.734; rss: 1393MB	codegen passes [30]
time: 2.182; rss: 1410MB	codegen passes [1]
time: 1.942; rss: 1405MB	codegen passes [12]
time: 1.815; rss: 1408MB	codegen passes [16]
time: 2.338; rss: 1408MB	codegen passes [36]
time: 2.128; rss: 1398MB	codegen passes [27]
time: 2.324; rss: 1395MB	codegen passes [20]
time: 2.137; rss: 1401MB	codegen passes [21]
time: 2.915; rss: 1468MB	codegen passes [33]
time: 2.940; rss: 1475MB	codegen passes [25]
time: 2.950; rss: 1520MB	codegen passes [14]
time: 3.101; rss: 1504MB	codegen passes [19]
time: 3.676; rss: 1525MB	codegen passes [10]
time: 3.462; rss: 1563MB	codegen passes [22]
time: 3.822; rss: 1610MB	codegen passes [5]
time: 3.988; rss: 1578MB	codegen passes [17]
time: 3.973; rss: 1629MB	codegen passes [37]
time: 4.280; rss: 1574MB	codegen passes [7]
time: 4.055; rss: 1539MB	codegen passes [24]
time: 4.211; rss: 1550MB	codegen passes [23]
time: 4.672; rss: 1507MB	codegen passes [35]
time: 4.386; rss: 1490MB	codegen passes [32]
time: 5.147; rss: 1452MB	codegen passes [9]
time: 4.747; rss: 1413MB	codegen passes [8]
time: 5.132; rss: 1364MB	codegen passes [3]
time: 5.121; rss: 1292MB	codegen passes [13]
time: 8.397; rss: 1288MB	LLVM passes
time: 0.000; rss: 1288MB	serialize work products
time: 1.054; rss: 263MB	linking
done
