commit a4f781e47710d8c938130446bf4cd5e9be2231d2
Merge: 9330006 bcbc9e5
Author: bors <bors@rust-lang.org>
Date:   Tue Apr 12 10:12:55 2016 -0700

    Auto merge of #31963 - barosl:rename-doc, r=alexcrichton
    
    Describe more platform-specific behaviors of `std::fs::rename`
    
    I did some tests myself regarding the situation when both `from` and `to` exist, and the results were:
    
    On Linux:
    
    `from` | `to` | Result
    ---- | ---- | ----
    Directory | Directory | Ok
    Directory | File | Error
    File | Directory | Error
    File | File | Ok
    
    On Windows:
    
    `from` | `to` | Result
    ---- | ---- | ----
    Directory | Directory | Error
    Directory | File | Ok
    File | Directory | Error
    File | File | Ok
    
    This is a bit against the official MSDN documentation, which says "(`MOVEFILE_REPLACE_EXISTING`) cannot be used if `lpNewFileName` or `lpExistingFileName` names a directory." As evidenced above, `lpExistingFileName` *can* be a directory.
    
    I also mentioned the atomicity of the operation.
    
    Fixes #31301.
cfg: version 1.9.0-dev (a4f781e47 2016-04-12)
cfg: build triple x86_64-unknown-linux-gnu
cfg: host triples x86_64-unknown-linux-gnu
cfg: target triples x86_64-unknown-linux-gnu
cfg: host for x86_64-unknown-linux-gnu is x86_64
cfg: os for x86_64-unknown-linux-gnu is unknown-linux-gnu
cfg: have good valgrind for x86_64-unknown-linux-gnu
cfg: using CC=gcc (CFG_CC)
cfg: disabling valgrind run-pass tests
make: Nothing to be done for 'all'.
