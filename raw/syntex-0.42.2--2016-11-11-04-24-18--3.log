commit 280362a02df97670dd08ed19557c81b504b395c3
Merge: 3ac9ec7 12f0b6f
Author: bors <bors@rust-lang.org>
Date:   Thu Nov 10 23:44:44 2016 -0800

    Auto merge of #36615 - sinkuu:e0243_0244, r=nrc
    
    Make E0243/E0244 message consistent with E0107
    
    E0243/E0233 prints `expected {}, found {}` on the span note, while E0107 prints it on the first line. This is confusing when both error occur simultaneously.
    
    This PR makes E0243/E0233 print `expected {}, found {}` on the first line.
    
    Code:
    
    ``` rust
    struct Foo<'a, 'b> {
        s: &'a str,
        t: &'b str,
    }
    
    type Bar<T, U> = Foo<T, U>;
    ```
    
    rustc output (before):
    
    ```
    error[E0107]: wrong number of lifetime parameters: expected 2, found 0
     --> test.rs:6:18
      |
    6 | type Bar<T, U> = Foo<T, U>;
      |                  ^^^^^^^^^ expected 2 lifetime parameters
    
    error[E0244]: wrong number of type arguments
     --> test.rs:6:18
      |
    6 | type Bar<T, U> = Foo<T, U>;
      |                  ^^^^^^^^^ expected no type arguments, found 2
    ```
    
    rustc output (after):
    
    ```
    error[E0107]: wrong number of lifetime parameters: expected 2, found 0
     --> /tmp/test.rs:6:18
      |
    6 | type Bar<T, U> = Foo<T, U>;
      |                  ^^^^^^^^^ expected 2 lifetime parameters
    
    error[E0244]: wrong number of type arguments: expected 0, found 2
     --> /tmp/test.rs:6:18
      |
    6 | type Bar<T, U> = Foo<T, U>;
      |                  ^^^^^^^^^ expected no type arguments
    ```
rustc: ./syntex-0.42.2
cargo rustc -p syntex_syntax  -- -Ztime-passes -Zinput-stats
   Compiling syntex_syntax v0.42.0
time: 0.092; rss: 70MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 70MB	recursion limit
time: 0.000; rss: 70MB	crate injection
time: 0.000; rss: 70MB	plugin loading
time: 0.000; rss: 70MB	plugin registration
time: 0.243; rss: 144MB	expansion
time: 0.000; rss: 144MB	maybe building test harness
time: 0.007; rss: 144MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 144MB	checking for inline asm in case the target doesn't support it
time: 0.014; rss: 144MB	complete gated feature checking
time: 0.024; rss: 144MB	early lint checks
time: 0.008; rss: 144MB	AST validation
time: 0.081; rss: 158MB	name resolution
time: 0.050; rss: 184MB	lowering ast -> hir
time: 0.009; rss: 194MB	indexing hir
time: 0.006; rss: 194MB	attribute checking
time: 0.004; rss: 150MB	language item collection
time: 0.010; rss: 150MB	lifetime resolution
time: 0.000; rss: 150MB	looking for entry point
time: 0.000; rss: 150MB	looking for plugin registrar
time: 0.040; rss: 171MB	region resolution
time: 0.005; rss: 171MB	loop checking
time: 0.004; rss: 171MB	static item recursion checking
time: 0.326; rss: 160MB	compute_incremental_hashes_map
time: 0.000; rss: 160MB	load_dep_graph
time: 0.041; rss: 170MB	type collecting
time: 0.001; rss: 170MB	variance inference
time: 0.018; rss: 173MB	coherence checking
time: 0.092; rss: 175MB	wf checking
time: 0.191; rss: 185MB	item-types checking
time: 3.338; rss: 231MB	item-bodies checking
time: 0.000; rss: 231MB	drop-impl checking
time: 0.220; rss: 252MB	const checking
time: 0.044; rss: 252MB	privacy checking
time: 0.005; rss: 252MB	stability index
time: 0.017; rss: 252MB	intrinsic checking
time: 0.014; rss: 252MB	effect checking
time: 0.045; rss: 252MB	match checking
time: 0.048; rss: 255MB	liveness checking
time: 0.180; rss: 255MB	rvalue checking
time: 0.380; rss: 438MB	MIR dump
  time: 0.056; rss: 439MB	SimplifyCfg
  time: 0.074; rss: 439MB	QualifyAndPromoteConstants
  time: 0.098; rss: 439MB	TypeckMir
  time: 0.004; rss: 439MB	SimplifyBranches
  time: 0.031; rss: 439MB	SimplifyCfg
time: 0.263; rss: 439MB	MIR cleanup and validation
time: 0.488; rss: 440MB	borrow checking
time: 0.025; rss: 440MB	reachability checking
time: 0.038; rss: 440MB	death checking
time: 0.030; rss: 442MB	stability checking
time: 0.000; rss: 442MB	unused lib feature checking
time: 0.196; rss: 442MB	lint checking
time: 0.000; rss: 442MB	resolving dependency formats
  time: 0.003; rss: 442MB	NoLandingPads
  time: 0.026; rss: 442MB	SimplifyCfg
  time: 0.061; rss: 450MB	EraseRegions
  time: 0.011; rss: 450MB	AddCallGuards
  time: 0.269; rss: 464MB	ElaborateDrops
  time: 0.003; rss: 464MB	NoLandingPads
  time: 0.052; rss: 464MB	SimplifyCfg
  time: 0.028; rss: 464MB	InstCombine
  time: 0.012; rss: 464MB	Deaggregator
  time: 0.002; rss: 464MB	CopyPropagation
  time: 0.034; rss: 464MB	SimplifyLocals
  time: 0.010; rss: 464MB	AddCallGuards
  time: 0.003; rss: 464MB	PreTrans
time: 0.514; rss: 464MB	MIR optimisations
  time: 0.059; rss: 476MB	write metadata
  time: 0.395; rss: 485MB	translation item collection
  time: 0.055; rss: 493MB	codegen unit partitioning
  time: 0.048; rss: 743MB	internalize symbols
time: 4.458; rss: 743MB	translation
time: 0.000; rss: 743MB	assert dep graph
time: 0.000; rss: 743MB	serialize dep graph
  time: 0.531; rss: 420MB	llvm function passes [0]
  time: 0.250; rss: 430MB	llvm module passes [0]
  time: 10.419; rss: 428MB	codegen passes [0]
  time: 0.000; rss: 428MB	codegen passes [0]
time: 11.968; rss: 428MB	LLVM passes
time: 0.000; rss: 428MB	serialize work products
time: 0.340; rss: 105MB	linking
done
