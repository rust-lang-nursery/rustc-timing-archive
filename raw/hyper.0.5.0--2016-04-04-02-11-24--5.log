commit 6a3b5585061e34bc87374adec993a6b1f0ec2a55
Merge: f92ce2e 913a2b4
Author: bors <bors@rust-lang.org>
Date:   Mon Apr 4 07:07:42 2016 -0700

    Auto merge of #32644 - oli-obk:check_all_constants_early, r=nrc
    
    check constants even if they are not used in the current crate
    
    For now this is just a `warn`-by-default lint. I suggest to make it a `deny`-by-default lint in the next release cycle (so no dependencies break), and then in another release cycle move to an error.
    
    cc #19265
    cc #3170
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.030; rss: 46MB	parsing
Lines of code:             9154
Pre-expansion node count:  45594
time: 0.009; rss: 46MB	configuration 1
time: 0.000; rss: 46MB	recursion limit
time: 0.000; rss: 46MB	gated macro checking
time: 0.000; rss: 46MB	crate injection
time: 0.004; rss: 51MB	macro loading
time: 0.000; rss: 51MB	plugin loading
time: 0.000; rss: 51MB	plugin registration
time: 0.186; rss: 60MB	expansion
time: 0.005; rss: 60MB	complete gated feature checking 1
time: 0.033; rss: 60MB	configuration 2
time: 0.000; rss: 60MB	gated configuration checking
time: 0.013; rss: 60MB	maybe building test harness
time: 0.010; rss: 60MB	prelude injection
time: 0.001; rss: 60MB	checking that all macro invocations are gone
time: 0.000; rss: 60MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 60MB	complete gated feature checking 2
time: 0.001; rss: 60MB	const fn bodies and arguments
Post-expansion node count: 107125
time: 0.010; rss: 60MB	assigning node ids
time: 0.011; rss: 67MB	lowering ast -> hir
time: 0.004; rss: 69MB	indexing hir
time: 0.001; rss: 69MB	attribute checking
time: 0.006; rss: 69MB	early lint checks
time: 0.004; rss: 66MB	external crate/lib resolution
time: 0.001; rss: 66MB	language item collection
time: 0.023; rss: 84MB	resolution
time: 0.002; rss: 84MB	lifetime resolution
time: 0.000; rss: 84MB	looking for entry point
time: 0.000; rss: 84MB	looking for plugin registrar
time: 0.006; rss: 87MB	region resolution
time: 0.001; rss: 87MB	loop checking
time: 0.001; rss: 87MB	static item recursion checking
time: 0.019; rss: 96MB	type collecting
time: 0.000; rss: 96MB	variance inference
time: 0.521; rss: 113MB	coherence checking
time: 0.077; rss: 114MB	wf checking
time: 0.030; rss: 116MB	item-types checking
time: 0.494; rss: 136MB	item-bodies checking
time: 0.000; rss: 136MB	drop-impl checking
time: 0.037; rss: 138MB	const checking
time: 0.007; rss: 138MB	privacy checking
time: 0.001; rss: 138MB	stability index
time: 0.004; rss: 138MB	intrinsic checking
time: 0.002; rss: 138MB	effect checking
time: 0.012; rss: 138MB	match checking
time: 0.005; rss: 138MB	liveness checking
time: 0.033; rss: 138MB	rvalue checking
time: 0.046; rss: 143MB	MIR dump
time: 0.021; rss: 143MB	MIR passes
time: 0.064; rss: 143MB	borrow checking
time: 0.003; rss: 143MB	reachability checking
time: 0.006; rss: 143MB	death checking
time: 0.006; rss: 143MB	stability checking
time: 0.000; rss: 143MB	unused lib feature checking
time: 0.047; rss: 143MB	lint checking
time: 0.000; rss: 143MB	resolving dependency formats
time: 0.011; rss: 145MB	Prepare MIR codegen passes
  time: 0.186; rss: 161MB	translation item collection
  time: 0.139; rss: 291MB	write metadata
time: 1.475; rss: 291MB	translation
  time: 0.095; rss: 170MB	llvm function passes [0]
  time: 0.050; rss: 171MB	llvm module passes [0]
  time: 1.638; rss: 174MB	codegen passes [0]
  time: 0.001; rss: 124MB	codegen passes [0]
time: 1.984; rss: 123MB	LLVM passes
time: 0.171; rss: 121MB	linking
done
