commit e33562078ff6027c116cb43abd052e256354ab2f
Merge: 1e4c8b1 19d1929
Author: bors <bors@rust-lang.org>
Date:   Tue Oct 11 04:26:56 2016 -0700

    Auto merge of #36983 - alexcrichton:configure-multiple-musl, r=brson
    
    configure: Add options for separate musl roots
    
    This allows using the `./configure` script to enable rustbuild to compile
    multiple musl targets at once. We'll hopefully use this soon on our bots to
    produce a bunch of targets.
rustc: ./syntex-0.42.2-incr-clean
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax -- -Ztime-passes -Zinput-stats -Z incremental-info
   Compiling syntex_syntax v0.42.0
time: 0.108; rss: 76MB	parsing
Lines of code:             33687
Pre-expansion node count:  224033
time: 0.000; rss: 76MB	recursion limit
time: 0.000; rss: 76MB	crate injection
time: 0.000; rss: 76MB	plugin loading
time: 0.000; rss: 76MB	plugin registration
time: 0.271; rss: 145MB	expansion
time: 0.000; rss: 145MB	maybe building test harness
time: 0.006; rss: 145MB	maybe creating a macro crate
Post-expansion node count: 641571
time: 0.000; rss: 145MB	checking for inline asm in case the target doesn't support it
time: 0.014; rss: 145MB	complete gated feature checking
time: 0.024; rss: 145MB	early lint checks
time: 0.007; rss: 145MB	AST validation
time: 0.084; rss: 160MB	name resolution
time: 0.050; rss: 202MB	lowering ast -> hir
time: 0.009; rss: 211MB	indexing hir
time: 0.006; rss: 211MB	attribute checking
time: 0.006; rss: 161MB	language item collection
time: 0.012; rss: 161MB	lifetime resolution
time: 0.000; rss: 161MB	looking for entry point
time: 0.000; rss: 161MB	looking for plugin registrar
time: 0.045; rss: 173MB	region resolution
time: 0.006; rss: 173MB	loop checking
time: 0.006; rss: 173MB	static item recursion checking
time: 0.262; rss: 174MB	compute_incremental_hashes_map
time: 0.000; rss: 174MB	load_dep_graph
time: 0.044; rss: 178MB	type collecting
time: 0.001; rss: 178MB	variance inference
time: 0.039; rss: 182MB	coherence checking
time: 0.099; rss: 183MB	wf checking
time: 0.192; rss: 189MB	item-types checking
time: 3.932; rss: 242MB	item-bodies checking
time: 0.000; rss: 242MB	drop-impl checking
time: 0.313; rss: 243MB	const checking
time: 0.054; rss: 243MB	privacy checking
time: 0.007; rss: 243MB	stability index
time: 0.021; rss: 243MB	intrinsic checking
time: 0.018; rss: 243MB	effect checking
time: 0.057; rss: 243MB	match checking
time: 0.055; rss: 238MB	liveness checking
time: 0.283; rss: 238MB	rvalue checking
time: 0.414; rss: 426MB	MIR dump
  time: 0.057; rss: 429MB	SimplifyCfg
  time: 0.082; rss: 429MB	QualifyAndPromoteConstants
  time: 0.109; rss: 429MB	TypeckMir
  time: 0.004; rss: 429MB	SimplifyBranches
  time: 0.031; rss: 429MB	SimplifyCfg
time: 0.285; rss: 429MB	MIR passes
time: 0.687; rss: 430MB	borrow checking
time: 0.022; rss: 430MB	reachability checking
time: 0.045; rss: 430MB	death checking
time: 0.041; rss: 430MB	stability checking
time: 0.000; rss: 430MB	unused lib feature checking
time: 0.220; rss: 430MB	lint checking
time: 0.000; rss: 430MB	resolving dependency formats
  time: 0.003; rss: 430MB	NoLandingPads
  time: 0.027; rss: 430MB	SimplifyCfg
  time: 0.072; rss: 442MB	EraseRegions
  time: 0.011; rss: 442MB	AddCallGuards
  time: 1.040; rss: 461MB	ElaborateDrops
  time: 0.003; rss: 461MB	NoLandingPads
  time: 0.054; rss: 459MB	SimplifyCfg
  time: 0.031; rss: 459MB	InstCombine
  time: 0.012; rss: 459MB	Deaggregator
  time: 0.003; rss: 459MB	CopyPropagation
  time: 0.009; rss: 459MB	AddCallGuards
  time: 0.003; rss: 459MB	PreTrans
time: 1.268; rss: 459MB	Prepare MIR codegen passes
  time: 0.263; rss: 466MB	write metadata
  time: 0.471; rss: 479MB	translation item collection
  time: 0.068; rss: 481MB	codegen unit partitioning
  time: 0.058; rss: 724MB	internalize symbols
time: 5.148; rss: 602MB	translation
time: 0.000; rss: 602MB	assert dep graph
time: 0.000; rss: 602MB	serialize dep graph
incremental: re-using 0 out of 1 modules
  time: 0.509; rss: 409MB	llvm function passes [0]
  time: 0.243; rss: 418MB	llvm module passes [0]
  time: 10.078; rss: 410MB	codegen passes [0]
  time: 0.001; rss: 411MB	codegen passes [0]
time: 11.564; rss: 411MB	LLVM passes
time: 0.000; rss: 411MB	serialize work products
time: 0.654; rss: 107MB	linking
done
