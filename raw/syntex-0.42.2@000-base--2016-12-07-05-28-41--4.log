commit 5938eba4e30b766751483e93776a87a4db1681f4
Merge: 02ea82d d53f82c
Author: bors <bors@rust-lang.org>
Date:   Wed Dec 7 07:15:31 2016 +0000

    Auto merge of #38149 - bluss:is-empty, r=alexcrichton
    
    Forward more ExactSizeIterator methods and `is_empty` edits
    
    - Forward ExactSizeIterator methods in more places, like `&mut I` and `Box<I>` iterator impls.
    - Improve `VecDeque::is_empty` itself (see commit 4)
    - All the collections iterators now have `len` or `is_empty` forwarded if doing so is a benefit. In the remaining cases, they already use a simple size hint (using something like a stored `usize` value), which is sufficient for the default implementation of len and is_empty.
rustc: ./syntex-0.42.2@000-base@000-base
cargo rustc -p syntex_syntax  -- -Ztime-passes -Zinput-stats
time: 0.092; rss: 71MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 71MB	recursion limit
time: 0.000; rss: 71MB	crate injection
time: 0.000; rss: 71MB	plugin loading
time: 0.000; rss: 71MB	plugin registration
time: 0.241; rss: 146MB	expansion
time: 0.000; rss: 146MB	maybe building test harness
time: 0.006; rss: 146MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 146MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 146MB	complete gated feature checking
time: 0.023; rss: 146MB	early lint checks
time: 0.007; rss: 146MB	AST validation
time: 0.075; rss: 161MB	name resolution
time: 0.059; rss: 194MB	lowering ast -> hir
time: 0.010; rss: 187MB	indexing hir
time: 0.006; rss: 187MB	attribute checking
time: 0.002; rss: 149MB	language item collection
time: 0.011; rss: 149MB	lifetime resolution
time: 0.000; rss: 149MB	looking for entry point
time: 0.000; rss: 149MB	looking for plugin registrar
time: 0.047; rss: 169MB	region resolution
time: 0.007; rss: 169MB	loop checking
time: 0.002; rss: 169MB	static item recursion checking
time: 0.382; rss: 171MB	compute_incremental_hashes_map
time: 0.000; rss: 171MB	load_dep_graph
time: 0.009; rss: 171MB	stability index
time: 0.017; rss: 171MB	stability checking
time: 0.047; rss: 175MB	type collecting
time: 0.001; rss: 175MB	variance inference
time: 0.002; rss: 176MB	impl wf inference
time: 0.017; rss: 177MB	coherence checking
time: 0.085; rss: 180MB	wf checking
time: 0.183; rss: 184MB	item-types checking
time: 3.554; rss: 234MB	item-bodies checking
time: 0.000; rss: 234MB	drop-impl checking
time: 0.210; rss: 244MB	const checking
time: 0.056; rss: 244MB	privacy checking
time: 0.016; rss: 244MB	intrinsic checking
time: 0.014; rss: 244MB	effect checking
time: 0.048; rss: 244MB	match checking
time: 0.046; rss: 251MB	liveness checking
time: 0.170; rss: 251MB	rvalue checking
time: 0.355; rss: 441MB	MIR dump
  time: 0.056; rss: 443MB	SimplifyCfg
  time: 0.073; rss: 443MB	QualifyAndPromoteConstants
  time: 0.105; rss: 443MB	TypeckMir
  time: 0.004; rss: 443MB	SimplifyBranches
  time: 0.030; rss: 443MB	SimplifyCfg
time: 0.268; rss: 443MB	MIR cleanup and validation
time: 0.473; rss: 443MB	borrow checking
time: 0.024; rss: 443MB	reachability checking
time: 0.038; rss: 443MB	death checking
time: 0.000; rss: 443MB	unused lib feature checking
time: 0.174; rss: 443MB	lint checking
time: 0.000; rss: 443MB	resolving dependency formats
  time: 0.003; rss: 443MB	NoLandingPads
  time: 0.026; rss: 443MB	SimplifyCfg
  time: 0.064; rss: 452MB	EraseRegions
  time: 0.011; rss: 452MB	AddCallGuards
  time: 0.277; rss: 472MB	ElaborateDrops
  time: 0.003; rss: 472MB	NoLandingPads
  time: 0.052; rss: 472MB	SimplifyCfg
  time: 0.028; rss: 472MB	InstCombine
  time: 0.012; rss: 472MB	Deaggregator
  time: 0.002; rss: 472MB	CopyPropagation
  time: 0.034; rss: 472MB	SimplifyLocals
  time: 0.010; rss: 472MB	AddCallGuards
  time: 0.002; rss: 472MB	PreTrans
time: 0.524; rss: 472MB	MIR optimisations
  time: 0.065; rss: 481MB	write metadata
  time: 0.382; rss: 494MB	translation item collection
  time: 0.058; rss: 499MB	codegen unit partitioning
  time: 0.046; rss: 756MB	internalize symbols
time: 4.474; rss: 756MB	translation
time: 0.000; rss: 756MB	assert dep graph
time: 0.000; rss: 756MB	serialize dep graph
  time: 0.524; rss: 430MB	llvm function passes [0]
  time: 0.306; rss: 436MB	llvm module passes [0]
  time: 10.571; rss: 435MB	codegen passes [0]
  time: 0.000; rss: 435MB	codegen passes [0]
time: 12.176; rss: 435MB	LLVM passes
time: 0.000; rss: 435MB	serialize work products
time: 0.341; rss: 118MB	linking
done
