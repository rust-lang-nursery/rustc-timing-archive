commit 954873055a998a06841ac19b39b1fe18a6641731
Merge: 1d64acd a84b550
Author: bors <bors@rust-lang.org>
Date:   Fri Sep 30 07:35:04 2016 -0700

    Auto merge of #36823 - durka:discriminant_value, r=nagisa
    
    add wrapper for discriminant_value, take 2
    
    [This is #34785 reopened, since @bors apparently gave up on that thread.]
    
    add wrapper for discriminant_value intrinsic
    
    Implementation of [RFC 1696](https://github.com/rust-lang/rfcs/blob/master/text/1696-discriminant.md).
    
    Wraps the `discriminant_value` intrinsic under the name `std::mem::discriminant`. In order to avoid prematurely leaking information about the implementation of enums, the return value is an opaque type, generic over the enum type, which implements Copy, Clone, PartialEq, Eq, Hash, and Debug (notably not PartialOrd). There is currently no way to get the value out excepting printing the debug representation.
    
    The wrapper is safe and can be stabilized soon as per discussion in #24263.
    
    cc @aturon
    r? @nagisa
rustc: ./html5ever-2016-08-25
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling html5ever v0.5.4 (file:///root/benchmarks/html5ever-2016-08-25)
time: 0.027; rss: 51MB	parsing
Lines of code:             8210
Pre-expansion node count:  52238
time: 0.000; rss: 51MB	recursion limit
time: 0.000; rss: 51MB	crate injection
time: 0.000; rss: 51MB	plugin loading
time: 0.000; rss: 51MB	plugin registration
time: 1.244; rss: 103MB	expansion
time: 0.000; rss: 103MB	maybe building test harness
time: 0.002; rss: 103MB	maybe creating a macro crate
Post-expansion node count: 163524
time: 0.000; rss: 103MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 103MB	complete gated feature checking
time: 0.009; rss: 103MB	early lint checks
time: 0.002; rss: 103MB	AST validation
time: 0.018; rss: 108MB	name resolution
time: 0.015; rss: 123MB	lowering ast -> hir
time: 0.003; rss: 127MB	indexing hir
time: 0.002; rss: 127MB	attribute checking
time: 0.002; rss: 104MB	language item collection
time: 0.003; rss: 104MB	lifetime resolution
time: 0.000; rss: 104MB	looking for entry point
time: 0.000; rss: 104MB	looking for plugin registrar
time: 0.016; rss: 110MB	region resolution
time: 0.002; rss: 110MB	loop checking
time: 0.003; rss: 110MB	static item recursion checking
time: 0.024; rss: 110MB	compute_incremental_hashes_map
time: 0.000; rss: 110MB	load_dep_graph
time: 0.014; rss: 111MB	type collecting
time: 0.000; rss: 111MB	variance inference
time: 0.025; rss: 113MB	coherence checking
time: 0.024; rss: 113MB	wf checking
time: 0.351; rss: 121MB	item-types checking
time: 0.506; rss: 136MB	item-bodies checking
time: 0.000; rss: 136MB	drop-impl checking
time: 0.073; rss: 138MB	const checking
time: 0.009; rss: 138MB	privacy checking
time: 0.002; rss: 138MB	stability index
time: 0.003; rss: 138MB	intrinsic checking
time: 0.003; rss: 138MB	effect checking
time: 0.024; rss: 138MB	match checking
time: 0.013; rss: 132MB	liveness checking
time: 0.029; rss: 132MB	rvalue checking
time: 0.118; rss: 181MB	MIR dump
  time: 0.009; rss: 181MB	SimplifyCfg
  time: 0.015; rss: 180MB	QualifyAndPromoteConstants
  time: 0.024; rss: 180MB	TypeckMir
  time: 0.000; rss: 180MB	SimplifyBranches
  time: 0.005; rss: 180MB	SimplifyCfg
time: 0.053; rss: 180MB	MIR passes
time: 0.095; rss: 184MB	borrow checking
time: 0.003; rss: 184MB	reachability checking
time: 0.007; rss: 184MB	death checking
time: 0.009; rss: 184MB	stability checking
time: 0.000; rss: 184MB	unused lib feature checking
time: 0.065; rss: 184MB	lint checking
time: 0.000; rss: 184MB	resolving dependency formats
  time: 0.000; rss: 184MB	NoLandingPads
  time: 0.004; rss: 184MB	SimplifyCfg
  time: 0.010; rss: 184MB	EraseRegions
  time: 0.001; rss: 184MB	AddCallGuards
  time: 0.076; rss: 189MB	ElaborateDrops
  time: 0.000; rss: 189MB	NoLandingPads
  time: 0.007; rss: 185MB	SimplifyCfg
  time: 0.008; rss: 185MB	InstCombine
  time: 0.001; rss: 185MB	Deaggregator
  time: 0.000; rss: 185MB	CopyPropagation
  time: 0.001; rss: 183MB	AddCallGuards
  time: 0.000; rss: 183MB	PreTrans
time: 0.109; rss: 183MB	Prepare MIR codegen passes
  time: 0.052; rss: 183MB	write metadata
  time: 0.052; rss: 185MB	translation item collection
  time: 0.006; rss: 185MB	codegen unit partitioning
  time: 0.006; rss: 200MB	internalize symbols
time: 0.373; rss: 170MB	translation
time: 0.000; rss: 170MB	assert dep graph
time: 0.000; rss: 170MB	serialize dep graph
  time: 0.020; rss: 102MB	llvm function passes [0]
  time: 0.012; rss: 104MB	llvm module passes [0]
  time: 0.482; rss: 109MB	codegen passes [0]
  time: 0.001; rss: 109MB	codegen passes [0]
time: 0.557; rss: 109MB	LLVM passes
time: 0.000; rss: 109MB	serialize work products
time: 0.058; rss: 91MB	linking
done
