commit 6dc035ed911672c6a1f7afc9eed15fb08e574e5b
Merge: 98a3502 0b2746c
Author: bors <bors@rust-lang.org>
Date:   Sat Oct 15 19:49:12 2016 -0700

    Auto merge of #37098 - ollie27:rustdoc_playground, r=GuillaumeGomez
    
    rustdoc: Improve playground run buttons
    
    The main change is to stop using javascript to generate the URLs and use
    rustdoc instead.
    
    This also adds run buttons to the error index examples.
    
    You can test the changes at https://ollie27.github.io/rust_doc_test/.
    
    Fixes #36621
    Fixes #36910
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.026; rss: 49MB	parsing
Lines of code:             9003
Pre-expansion node count:  44129
time: 0.000; rss: 49MB	recursion limit
time: 0.000; rss: 49MB	crate injection
time: 0.000; rss: 49MB	plugin loading
time: 0.000; rss: 49MB	plugin registration
time: 0.101; rss: 87MB	expansion
time: 0.000; rss: 87MB	maybe building test harness
time: 0.001; rss: 87MB	maybe creating a macro crate
Post-expansion node count: 101371
time: 0.000; rss: 87MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 87MB	complete gated feature checking
time: 0.003; rss: 87MB	early lint checks
time: 0.001; rss: 87MB	AST validation
time: 0.016; rss: 91MB	name resolution
time: 0.008; rss: 97MB	lowering ast -> hir
time: 0.001; rss: 97MB	indexing hir
time: 0.001; rss: 97MB	attribute checking
time: 0.001; rss: 91MB	language item collection
time: 0.002; rss: 91MB	lifetime resolution
time: 0.000; rss: 91MB	looking for entry point
time: 0.000; rss: 91MB	looking for plugin registrar
time: 0.005; rss: 95MB	region resolution
time: 0.001; rss: 95MB	loop checking
time: 0.000; rss: 95MB	static item recursion checking
time: 0.038; rss: 96MB	compute_incremental_hashes_map
time: 0.000; rss: 96MB	load_dep_graph
time: 0.016; rss: 97MB	type collecting
time: 0.000; rss: 97MB	variance inference
time: 0.031; rss: 102MB	coherence checking
time: 0.049; rss: 104MB	wf checking
time: 0.021; rss: 104MB	item-types checking
time: 0.364; rss: 112MB	item-bodies checking
time: 0.000; rss: 112MB	drop-impl checking
time: 0.031; rss: 113MB	const checking
time: 0.008; rss: 113MB	privacy checking
time: 0.001; rss: 113MB	stability index
time: 0.004; rss: 113MB	intrinsic checking
time: 0.002; rss: 113MB	effect checking
time: 0.009; rss: 113MB	match checking
time: 0.004; rss: 113MB	liveness checking
time: 0.022; rss: 113MB	rvalue checking
time: 0.077; rss: 130MB	MIR dump
  time: 0.007; rss: 131MB	SimplifyCfg
  time: 0.012; rss: 131MB	QualifyAndPromoteConstants
  time: 0.013; rss: 131MB	TypeckMir
  time: 0.001; rss: 131MB	SimplifyBranches
  time: 0.003; rss: 131MB	SimplifyCfg
time: 0.037; rss: 131MB	MIR passes
time: 0.057; rss: 131MB	borrow checking
time: 0.003; rss: 131MB	reachability checking
time: 0.005; rss: 131MB	death checking
time: 0.009; rss: 132MB	stability checking
time: 0.000; rss: 132MB	unused lib feature checking
time: 0.045; rss: 134MB	lint checking
time: 0.000; rss: 134MB	resolving dependency formats
  time: 0.001; rss: 134MB	NoLandingPads
  time: 0.003; rss: 134MB	SimplifyCfg
  time: 0.009; rss: 134MB	EraseRegions
  time: 0.001; rss: 134MB	AddCallGuards
  time: 0.023; rss: 135MB	ElaborateDrops
  time: 0.001; rss: 135MB	NoLandingPads
  time: 0.005; rss: 135MB	SimplifyCfg
  time: 0.003; rss: 135MB	InstCombine
  time: 0.003; rss: 135MB	Deaggregator
  time: 0.001; rss: 135MB	CopyPropagation
  time: 0.001; rss: 135MB	AddCallGuards
  time: 0.000; rss: 135MB	PreTrans
time: 0.051; rss: 135MB	Prepare MIR codegen passes
  time: 0.050; rss: 139MB	write metadata
  time: 0.148; rss: 145MB	translation item collection
  time: 0.017; rss: 148MB	codegen unit partitioning
  time: 0.015; rss: 202MB	internalize symbols
time: 1.228; rss: 190MB	translation
time: 0.000; rss: 190MB	assert dep graph
time: 0.000; rss: 190MB	serialize dep graph
  time: 0.087; rss: 147MB	llvm function passes [0]
  time: 0.040; rss: 148MB	llvm module passes [0]
  time: 1.601; rss: 151MB	codegen passes [0]
  time: 0.001; rss: 151MB	codegen passes [0]
time: 1.897; rss: 151MB	LLVM passes
time: 0.000; rss: 151MB	serialize work products
time: 0.139; rss: 94MB	linking
done
