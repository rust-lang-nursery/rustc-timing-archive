commit 7660bdf70ae0c6a434dd12cfdeb8250ce77c69c7
Merge: c717cfa aaf32aa
Author: bors <bors@rust-lang.org>
Date:   Thu Sep 29 20:25:45 2016 -0700

    Auto merge of #36557 - sfackler:fix-hashdos-docs, r=alexcrichton
    
    Clean up hasher discussion on HashMap
    
    * We never want to make guarantees about protecting against attacks.
    * "True randomness" is not the right terminology to be using in this
        context.
    * There is significantly more nuance to the performance of SipHash than
        "somewhat slow".
    
    r? @steveklabnik
    
    Follow up to discussion on #35371
rustc: ./html5ever-2016-08-25
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling encoding_index_tests v0.1.4
   Compiling lazy_static v0.2.1
   Compiling phf_shared v0.7.16
   Compiling void v1.0.2
   Compiling log v0.3.6
   Compiling mac v0.0.2
   Compiling libc v0.2.16
   Compiling rustc-serialize v0.3.19
   Compiling encoding-index-simpchinese v1.20141219.5
   Compiling unreachable v0.1.1
   Compiling encoding-index-japanese v1.20141219.5
   Compiling encoding-index-tradchinese v1.20141219.5
   Compiling encoding-index-korean v1.20141219.5
   Compiling debug_unreachable v0.1.1
   Compiling phf v0.7.16
   Compiling futf v0.1.2
   Compiling matches v0.1.2
   Compiling serde v0.8.10
   Compiling utf-8 v0.6.0
   Compiling encoding-index-singlebyte v1.20141219.5
   Compiling rand v0.3.14
   Compiling encoding v0.2.33
   Compiling phf_generator v0.7.16
   Compiling string_cache v0.2.29
   Compiling phf_codegen v0.7.16
   Compiling tendril v0.2.3
   Compiling html5ever v0.5.4 (file:///root/benchmarks/html5ever-2016-08-25)
time: 0.027; rss: 51MB	parsing
Lines of code:             8210
Pre-expansion node count:  52238
time: 0.000; rss: 51MB	recursion limit
time: 0.000; rss: 51MB	crate injection
time: 0.000; rss: 51MB	plugin loading
time: 0.000; rss: 51MB	plugin registration
time: 1.246; rss: 103MB	expansion
time: 0.000; rss: 103MB	maybe building test harness
time: 0.002; rss: 103MB	maybe creating a macro crate
Post-expansion node count: 163524
time: 0.000; rss: 103MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 103MB	complete gated feature checking
time: 0.008; rss: 103MB	early lint checks
time: 0.002; rss: 103MB	AST validation
time: 0.018; rss: 108MB	name resolution
time: 0.016; rss: 123MB	lowering ast -> hir
time: 0.003; rss: 127MB	indexing hir
time: 0.002; rss: 127MB	attribute checking
time: 0.002; rss: 104MB	language item collection
time: 0.003; rss: 104MB	lifetime resolution
time: 0.000; rss: 104MB	looking for entry point
time: 0.000; rss: 104MB	looking for plugin registrar
time: 0.016; rss: 110MB	region resolution
time: 0.002; rss: 110MB	loop checking
time: 0.003; rss: 110MB	static item recursion checking
time: 0.023; rss: 111MB	compute_incremental_hashes_map
time: 0.000; rss: 111MB	load_dep_graph
time: 0.014; rss: 110MB	type collecting
time: 0.000; rss: 110MB	variance inference
time: 0.026; rss: 113MB	coherence checking
time: 0.024; rss: 114MB	wf checking
time: 0.357; rss: 121MB	item-types checking
time: 0.505; rss: 136MB	item-bodies checking
time: 0.000; rss: 136MB	drop-impl checking
time: 0.072; rss: 139MB	const checking
time: 0.009; rss: 139MB	privacy checking
time: 0.002; rss: 139MB	stability index
time: 0.004; rss: 139MB	intrinsic checking
time: 0.003; rss: 139MB	effect checking
time: 0.024; rss: 139MB	match checking
time: 0.013; rss: 134MB	liveness checking
time: 0.029; rss: 134MB	rvalue checking
time: 0.114; rss: 186MB	MIR dump
  time: 0.009; rss: 174MB	SimplifyCfg
  time: 0.015; rss: 176MB	QualifyAndPromoteConstants
  time: 0.024; rss: 176MB	TypeckMir
  time: 0.000; rss: 176MB	SimplifyBranches
  time: 0.005; rss: 176MB	SimplifyCfg
time: 0.054; rss: 176MB	MIR passes
time: 0.094; rss: 183MB	borrow checking
time: 0.003; rss: 183MB	reachability checking
time: 0.008; rss: 183MB	death checking
time: 0.009; rss: 183MB	stability checking
time: 0.000; rss: 183MB	unused lib feature checking
time: 0.067; rss: 183MB	lint checking
time: 0.000; rss: 183MB	resolving dependency formats
  time: 0.000; rss: 183MB	NoLandingPads
  time: 0.004; rss: 183MB	SimplifyCfg
  time: 0.010; rss: 183MB	EraseRegions
  time: 0.001; rss: 183MB	AddCallGuards
  time: 0.077; rss: 187MB	ElaborateDrops
  time: 0.000; rss: 187MB	NoLandingPads
  time: 0.006; rss: 187MB	SimplifyCfg
  time: 0.008; rss: 185MB	InstCombine
  time: 0.001; rss: 185MB	Deaggregator
  time: 0.000; rss: 185MB	CopyPropagation
  time: 0.001; rss: 185MB	AddCallGuards
  time: 0.000; rss: 185MB	PreTrans
time: 0.109; rss: 185MB	Prepare MIR codegen passes
  time: 0.052; rss: 185MB	write metadata
  time: 0.052; rss: 187MB	translation item collection
  time: 0.006; rss: 188MB	codegen unit partitioning
  time: 0.006; rss: 202MB	internalize symbols
time: 0.363; rss: 171MB	translation
time: 0.000; rss: 171MB	assert dep graph
time: 0.000; rss: 171MB	serialize dep graph
  time: 0.020; rss: 103MB	llvm function passes [0]
  time: 0.012; rss: 104MB	llvm module passes [0]
  time: 0.467; rss: 109MB	codegen passes [0]
  time: 0.001; rss: 109MB	codegen passes [0]
time: 0.538; rss: 109MB	LLVM passes
time: 0.000; rss: 109MB	serialize work products
time: 0.057; rss: 92MB	linking
done
