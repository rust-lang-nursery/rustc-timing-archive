commit 6e036082091bc253debeb22606a661af211610ff
Merge: 95545e7 d1180af
Author: bors <bors@rust-lang.org>
Date:   Wed Apr 20 21:25:26 2016 -0700

    Auto merge of #33030 - nagisa:mir-unrequire-end-block, r=nikomatsakis
    
    MIR: Do not require END_BLOCK to always exist
    
    Basically, all this does, is removing restriction for END_BLOCK to exist past the first invocation of RemoveDeadBlocks pass. This way for functions whose CFG does not reach the `END_BLOCK` end up not containing the block.
    
    As far as the implementation goes, I’m not entirely satisfied with the `BasicBlock::end_block`. I had hoped to make `new` a `const fn` and then just have a `const END_BLOCK` private to mir::build, but it turns out that constant functions don’t yet support conditionals nor a way to assert.
cfg: version 1.10.0-dev (6e0360820 2016-04-20)
cfg: build triple x86_64-unknown-linux-gnu
cfg: host triples x86_64-unknown-linux-gnu
cfg: target triples x86_64-unknown-linux-gnu
cfg: host for x86_64-unknown-linux-gnu is x86_64
cfg: os for x86_64-unknown-linux-gnu is unknown-linux-gnu
cfg: have good valgrind for x86_64-unknown-linux-gnu
cfg: using CC=gcc (CFG_CC)
cfg: disabling valgrind run-pass tests
make: Nothing to be done for 'all'.
