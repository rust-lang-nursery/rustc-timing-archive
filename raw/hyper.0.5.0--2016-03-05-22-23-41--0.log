commit 45f0ce71c19d8da081714dc917f11a8cc02d15be
Merge: 52e0bda d908ff1
Author: bors <bors@rust-lang.org>
Date:   Sun Mar 6 02:29:34 2016 +0000

    Auto merge of #31920 - jseyfried:fix_spurious_privacy_error, r=nikomatsakis
    
    This PR allows using methods from traits that are visible but are defined in an inaccessible module (fixes #18241). For example,
    ```rust
    mod foo {
        pub use foo::bar::Tr;
        mod bar { // This module is inaccessible from `g`
            pub trait Tr { fn f(&self) {} }
        }
    }
    fn g<T: foo::Tr>(t: T) {
        t.f(); // Currently, this is a privacy error even though `foo::Tr` is visible
    }
    ```
    
    After this PR, it will continue to be a privacy error to use a method from a trait that is not visible. This can happen when a public trait inherits from a private trait (in violation of the `public_in_private` lint) -- see @petrochenkov's example in #28504.
    r? @nikomatsakis
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling lazy_static v0.1.15
   Compiling traitobject v0.0.1
   Compiling libc v0.1.12
   Compiling pkg-config v0.3.7
   Compiling httparse v0.1.6
   Compiling unicase v0.1.0
   Compiling matches v0.1.2
   Compiling libc v0.2.7
   Compiling winapi-build v0.1.1
   Compiling winapi v0.2.5
   Compiling rustc-serialize v0.3.18
   Compiling typeable v0.1.2
   Compiling gcc v0.3.25
   Compiling bitflags v0.3.3
   Compiling kernel32-sys v0.2.1
   Compiling time v0.1.34
   Compiling log v0.3.5
   Compiling rand v0.3.14
   Compiling num_cpus v0.2.11
   Compiling mime v0.0.11
   Compiling openssl-sys v0.6.7
   Compiling openssl v0.6.7
   Compiling uuid v0.1.18
   Compiling url v0.2.38
   Compiling cookie v0.1.21
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.029; rss: 45MB	parsing
Lines of code:             9154
Pre-expansion node count:  45594
time: 0.009; rss: 45MB	configuration 1
time: 0.000; rss: 45MB	recursion limit
time: 0.000; rss: 45MB	gated macro checking
time: 0.000; rss: 45MB	crate injection
time: 0.004; rss: 50MB	macro loading
time: 0.000; rss: 50MB	plugin loading
time: 0.000; rss: 50MB	plugin registration
time: 0.189; rss: 59MB	expansion
time: 0.005; rss: 59MB	complete gated feature checking 1
time: 0.034; rss: 59MB	configuration 2
time: 0.000; rss: 59MB	gated configuration checking
time: 0.013; rss: 59MB	maybe building test harness
time: 0.010; rss: 59MB	prelude injection
time: 0.001; rss: 59MB	checking that all macro invocations are gone
time: 0.000; rss: 59MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 59MB	complete gated feature checking 2
time: 0.001; rss: 59MB	const fn bodies and arguments
Post-expansion node count: 109138
time: 0.010; rss: 59MB	assigning node ids
time: 0.010; rss: 63MB	lowering ast -> hir
time: 0.004; rss: 68MB	indexing hir
time: 0.001; rss: 68MB	attribute checking
time: 0.006; rss: 68MB	early lint checks
time: 0.004; rss: 64MB	external crate/lib resolution
time: 0.001; rss: 64MB	language item collection
time: 0.024; rss: 82MB	resolution
time: 0.002; rss: 82MB	lifetime resolution
time: 0.000; rss: 82MB	looking for entry point
time: 0.000; rss: 82MB	looking for plugin registrar
time: 0.006; rss: 85MB	region resolution
time: 0.001; rss: 85MB	loop checking
time: 0.001; rss: 85MB	static item recursion checking
time: 0.012; rss: 88MB	type collecting
time: 0.000; rss: 88MB	variance inference
time: 0.037; rss: 106MB	coherence checking
time: 0.076; rss: 106MB	wf checking
time: 0.023; rss: 108MB	item-types checking
time: 0.470; rss: 130MB	item-bodies checking
time: 0.000; rss: 130MB	drop-impl checking
time: 0.037; rss: 132MB	const checking
time: 0.008; rss: 132MB	privacy checking
time: 0.001; rss: 132MB	stability index
time: 0.004; rss: 132MB	intrinsic checking
time: 0.002; rss: 132MB	effect checking
time: 0.012; rss: 132MB	match checking
time: 0.005; rss: 132MB	liveness checking
time: 0.032; rss: 132MB	rvalue checking
time: 0.060; rss: 135MB	MIR dump
time: 0.000; rss: 135MB	MIR passes
time: 0.064; rss: 135MB	borrow checking
time: 0.003; rss: 135MB	reachability checking
time: 0.006; rss: 135MB	death checking
time: 0.005; rss: 135MB	stability checking
time: 0.000; rss: 135MB	unused lib feature checking
time: 0.045; rss: 135MB	lint checking
time: 0.000; rss: 135MB	resolving dependency formats
time: 0.006; rss: 135MB	erasing regions from MIR
  time: 0.182; rss: 157MB	translation item collection
  time: 0.134; rss: 249MB	write metadata
time: 1.296; rss: 249MB	translation
  time: 0.096; rss: 162MB	llvm function passes [0]
  time: 0.047; rss: 163MB	llvm module passes [0]
  time: 1.617; rss: 163MB	codegen passes [0]
  time: 0.001; rss: 118MB	codegen passes [0]
time: 1.957; rss: 118MB	LLVM passes
time: 0.168; rss: 116MB	linking
done
