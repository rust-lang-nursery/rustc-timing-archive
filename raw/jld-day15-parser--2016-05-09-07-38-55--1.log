commit 32683ce1930ef1390f20e4ab72650e6804fd1c1b
Merge: 50909f2 dcdf761
Author: bors <bors@rust-lang.org>
Date:   Mon May 9 04:32:39 2016 -0700

    Auto merge of #33478 - xen0n:normalize-callee-trait-ref, r=eddyb
    
    trans: callee: normalize trait_ref before use
    
    This fixes #33436 and #33461. Ran the tests and nothing else seems to be affected.
    
    P.S. How to write the regression test for this fix? Does this qualify as run-pass or run-make, as the test only needs to be successfully compiled to be considered passed? Will add the testcase (the minimal example in #33461 seems fit) after clarifying this.
rustc: ./jld-day15-parser
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling day15 v0.1.0 (file:///root/benchmarks/jld-day15-parser)
time: 0.001; rss: 42MB	parsing
Lines of code:             72
Pre-expansion node count:  673
time: 0.000; rss: 42MB	configuration 1
time: 0.000; rss: 42MB	recursion limit
time: 0.000; rss: 42MB	crate injection
time: 0.003; rss: 47MB	macro loading
time: 0.000; rss: 47MB	plugin loading
time: 0.000; rss: 47MB	plugin registration
time: 0.002; rss: 48MB	expansion
time: 0.000; rss: 48MB	configuration 2
time: 0.000; rss: 48MB	gated configuration checking
time: 0.000; rss: 48MB	maybe building test harness
time: 0.000; rss: 48MB	prelude injection
time: 0.000; rss: 48MB	checking that all macro invocations are gone
time: 0.000; rss: 48MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 48MB	complete gated feature checking
Post-expansion node count: 1176
time: 0.000; rss: 48MB	assigning node ids
time: 0.000; rss: 48MB	collecting defs
time: 0.001; rss: 48MB	external crate/lib resolution
time: 0.000; rss: 50MB	lowering ast -> hir
time: 0.000; rss: 50MB	indexing hir
time: 0.000; rss: 50MB	attribute checking
time: 0.000; rss: 50MB	early lint checks
time: 0.000; rss: 50MB	language item collection
time: 0.001; rss: 57MB	name resolution
time: 0.000; rss: 57MB	lifetime resolution
time: 0.000; rss: 57MB	looking for entry point
time: 0.000; rss: 57MB	looking for plugin registrar
time: 0.000; rss: 57MB	region resolution
time: 0.000; rss: 57MB	loop checking
time: 0.000; rss: 57MB	static item recursion checking
time: 0.000; rss: 57MB	load_dep_graph
time: 0.001; rss: 60MB	type collecting
time: 0.000; rss: 60MB	variance inference
time: 0.007; rss: 67MB	coherence checking
time: 0.007; rss: 72MB	wf checking
time: 0.000; rss: 73MB	item-types checking
time: 1.803; rss: 141MB	item-bodies checking
time: 0.000; rss: 141MB	drop-impl checking
time: 0.001; rss: 141MB	const checking
time: 0.000; rss: 141MB	privacy checking
time: 0.000; rss: 141MB	stability index
time: 0.000; rss: 141MB	intrinsic checking
time: 0.000; rss: 141MB	effect checking
time: 0.000; rss: 141MB	match checking
time: 0.000; rss: 141MB	liveness checking
time: 0.000; rss: 141MB	rvalue checking
time: 0.001; rss: 142MB	MIR dump
time: 0.001; rss: 142MB	MIR passes
time: 0.001; rss: 142MB	borrow checking
time: 0.000; rss: 142MB	reachability checking
time: 0.000; rss: 142MB	death checking
time: 0.000; rss: 142MB	stability checking
time: 0.000; rss: 142MB	unused lib feature checking
time: 0.004; rss: 143MB	lint checking
time: 0.001; rss: 143MB	resolving dependency formats
time: 0.000; rss: 143MB	Prepare MIR codegen passes
  time: 12.854; rss: 180MB	translation item collection
  time: 0.001; rss: 180MB	codegen unit partitioning
  time: 0.000; rss: 215MB	write metadata
time: 40.320; rss: 215MB	translation
time: 0.000; rss: 215MB	assert dep graph
time: 0.000; rss: 215MB	serialize dep graph
  time: 0.014; rss: 102MB	llvm function passes [0]
  time: 0.001; rss: 102MB	llvm module passes [0]
  time: 0.273; rss: 108MB	codegen passes [0]
  time: 0.000; rss: 101MB	codegen passes [0]
time: 0.296; rss: 101MB	LLVM passes
  time: 0.116; rss: 101MB	running linker
time: 0.117; rss: 101MB	linking
done
