commit 0a3180baab7c361ee85958c88d971190649c3b70
Merge: a0b4e67 63f0c4d
Author: bors <bors@rust-lang.org>
Date:   Wed Aug 3 13:24:53 2016 -0700

    Auto merge of #35261 - eddyb:llvm-autoupgrade, r=nikomatsakis
    
    Support removed LLVM intrinsics by invoking its AutoUpgrade mechanism.
    
    Turns out that LLVM sometimes renames platform intrinsics or replaces them with first-class instructions.
    For example, signed minimum became `select (icmp SLT, a, b), a, b` where `a` and `b` are vectors.
    
    This is blocking the Servo rustup ([relevant failure](http://build.servo.org/builders/windows-dev/builds/226/steps/compile/logs/stdio)), as they're using a few such intrinsics.
    The fix in this PR is to invoke LLVM's own `AutoUpgrade` mechanism to do the replacements.
rustc: ./issue-32278-big-array-of-strings
/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc big-array-of-strings.rs -Ztime-passes -Zinput-stats
time: 0.157; rss: 67MB	parsing
Lines of code:             65577
Pre-expansion node count:  65552
time: 0.012; rss: 67MB	configuration
time: 0.000; rss: 67MB	recursion limit
time: 0.000; rss: 67MB	crate injection
time: 0.000; rss: 67MB	plugin loading
time: 0.000; rss: 67MB	plugin registration
time: 0.027; rss: 103MB	expansion
time: 0.000; rss: 103MB	maybe building test harness
time: 0.006; rss: 103MB	assigning node ids
Post-expansion node count: 65565
time: 0.000; rss: 103MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 103MB	complete gated feature checking
time: 0.000; rss: 103MB	collecting defs
time: 0.003; rss: 103MB	external crate/lib resolution
time: 0.008; rss: 103MB	early lint checks
time: 0.000; rss: 103MB	AST validation
time: 0.002; rss: 103MB	name resolution
time: 0.007; rss: 122MB	lowering ast -> hir
time: 0.002; rss: 126MB	indexing hir
time: 0.001; rss: 126MB	attribute checking
time: 0.001; rss: 116MB	language item collection
time: 0.001; rss: 116MB	lifetime resolution
time: 0.000; rss: 116MB	looking for entry point
time: 0.000; rss: 116MB	looking for plugin registrar
time: 0.007; rss: 122MB	region resolution
time: 0.001; rss: 122MB	loop checking
time: 0.001; rss: 122MB	static item recursion checking
time: 0.000; rss: 122MB	load_dep_graph
time: 0.000; rss: 122MB	type collecting
time: 0.000; rss: 122MB	variance inference
time: 0.005; rss: 124MB	coherence checking
time: 0.001; rss: 124MB	wf checking
time: 0.977; rss: 140MB	item-types checking
time: 0.000; rss: 140MB	item-bodies checking
time: 0.000; rss: 140MB	drop-impl checking
time: 0.022; rss: 143MB	const checking
time: 0.002; rss: 143MB	privacy checking
time: 0.001; rss: 143MB	stability index
time: 0.001; rss: 143MB	intrinsic checking
time: 0.001; rss: 143MB	effect checking
time: 0.000; rss: 143MB	match checking
time: 0.001; rss: 143MB	liveness checking
time: 0.000; rss: 143MB	rvalue checking
time: 0.052; rss: 148MB	MIR dump
time: 0.002; rss: 148MB	MIR passes
time: 0.001; rss: 148MB	borrow checking
time: 0.000; rss: 148MB	reachability checking
time: 0.001; rss: 148MB	death checking
time: 0.001; rss: 148MB	stability checking
time: 0.000; rss: 148MB	unused lib feature checking
time: 0.029; rss: 149MB	lint checking
time: 0.001; rss: 149MB	resolving dependency formats
time: 0.001; rss: 149MB	Prepare MIR codegen passes
  time: 0.000; rss: 150MB	write metadata
  time: 0.001; rss: 150MB	translation item collection
  time: 0.000; rss: 150MB	codegen unit partitioning
  time: 0.000; rss: 165MB	internalize symbols
time: 0.088; rss: 158MB	translation
time: 0.000; rss: 158MB	assert dep graph
time: 0.000; rss: 158MB	serialize dep graph
  time: 0.003; rss: 107MB	llvm function passes [0]
  time: 0.000; rss: 107MB	llvm module passes [0]
  time: 0.157; rss: 109MB	codegen passes [0]
  time: 0.000; rss: 109MB	codegen passes [0]
time: 0.162; rss: 109MB	LLVM passes
  time: 0.188; rss: 96MB	running linker
time: 0.189; rss: 96MB	linking
done
