commit a36c41912ba91435d75ab5702ed8bc30116565fe
Merge: 6301e22 61cbd07
Author: bors <bors@rust-lang.org>
Date:   Fri May 6 03:07:00 2016 -0700

    Auto merge of #33086 - cardoe:non-blocking-rand-read, r=alexcrichton
    
    rand: don't block before random pool is initialized
    
    If we attempt a read with getrandom() on Linux the syscall can block
    before the random pool is initialized unless the GRND_NONBLOCK flag is
    passed. This flag causes getrandom() to instead return EAGAIN while the
    pool is uninitialized. To avoid downstream users of crate or std
    functionality that have no ability to avoid this blocking behavior this
    change causes Rust to read bytes from /dev/urandom while getrandom()
    would block and once getrandom() is available to use that. Fixes #32953.
    
    Signed-off-by: Doug Goldstein <cardoe@cardoe.com>
rustc: ./issue-32062-equality-relations-complexity
/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc issue-32062.rs -Ztime-passes -Zinput-stats
time: 0.000; rss: 45MB	parsing
Lines of code:             60
Pre-expansion node count:  586
time: 0.000; rss: 45MB	configuration 1
time: 0.000; rss: 45MB	recursion limit
time: 0.000; rss: 45MB	crate injection
time: 0.003; rss: 50MB	macro loading
time: 0.000; rss: 50MB	plugin loading
time: 0.000; rss: 50MB	plugin registration
time: 0.001; rss: 50MB	expansion
time: 0.000; rss: 50MB	configuration 2
time: 0.000; rss: 50MB	gated configuration checking
time: 0.000; rss: 50MB	maybe building test harness
time: 0.000; rss: 50MB	prelude injection
time: 0.000; rss: 50MB	checking that all macro invocations are gone
time: 0.000; rss: 50MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 50MB	complete gated feature checking
time: 0.000; rss: 50MB	const fn bodies and arguments
Post-expansion node count: 599
time: 0.000; rss: 50MB	assigning node ids
time: 0.000; rss: 50MB	collecting defs
time: 0.001; rss: 50MB	external crate/lib resolution
time: 0.000; rss: 50MB	lowering ast -> hir
time: 0.000; rss: 50MB	indexing hir
time: 0.000; rss: 50MB	attribute checking
time: 0.000; rss: 50MB	early lint checks
time: 0.000; rss: 50MB	language item collection
time: 0.001; rss: 54MB	name resolution
time: 0.000; rss: 54MB	lifetime resolution
time: 0.000; rss: 54MB	looking for entry point
time: 0.000; rss: 54MB	looking for plugin registrar
time: 0.000; rss: 54MB	region resolution
time: 0.000; rss: 54MB	loop checking
time: 0.000; rss: 54MB	static item recursion checking
time: 0.000; rss: 54MB	load_dep_graph
time: 0.001; rss: 58MB	type collecting
time: 0.000; rss: 58MB	variance inference
time: 0.005; rss: 70MB	coherence checking
time: 0.007; rss: 70MB	wf checking
time: 0.000; rss: 70MB	item-types checking
time: 1.762; rss: 115MB	item-bodies checking
time: 0.000; rss: 115MB	drop-impl checking
time: 0.001; rss: 115MB	const checking
time: 0.000; rss: 115MB	privacy checking
time: 0.000; rss: 115MB	stability index
time: 0.000; rss: 115MB	intrinsic checking
time: 0.000; rss: 115MB	effect checking
time: 0.000; rss: 115MB	match checking
time: 0.000; rss: 115MB	liveness checking
time: 0.002; rss: 115MB	rvalue checking
time: 0.001; rss: 115MB	MIR dump
time: 0.000; rss: 115MB	MIR passes
time: 0.001; rss: 115MB	borrow checking
time: 0.000; rss: 115MB	reachability checking
time: 0.000; rss: 115MB	death checking
time: 0.000; rss: 115MB	stability checking
time: 0.000; rss: 115MB	unused lib feature checking
time: 0.000; rss: 115MB	lint checking
time: 0.001; rss: 115MB	resolving dependency formats
time: 0.000; rss: 115MB	Prepare MIR codegen passes
  time: 0.092; rss: 121MB	translation item collection
  time: 0.000; rss: 121MB	codegen unit partitioning
  time: 0.000; rss: 130MB	write metadata
time: 0.455; rss: 130MB	translation
time: 0.000; rss: 130MB	assert dep graph
time: 0.000; rss: 130MB	serialize dep graph
  time: 0.000; rss: 84MB	llvm function passes [0]
  time: 0.000; rss: 84MB	llvm module passes [0]
  time: 0.005; rss: 89MB	codegen passes [0]
  time: 0.000; rss: 89MB	codegen passes [0]
time: 0.007; rss: 89MB	LLVM passes
  time: 0.102; rss: 89MB	running linker
time: 0.102; rss: 89MB	linking
done
