commit 91b27ec9beb8455426da3efd26dfc9155058f5bd
Merge: 4406717 6dd3f61
Author: bors <bors@rust-lang.org>
Date:   Thu Jan 7 06:32:56 2016 +0000

    Auto merge of #30724 - nikomatsakis:feature-gate-defaulted-type-parameters, r=pnkfelix
    
    It was recently realized that we accept defaulted type parameters everywhere, without feature gate, even though the only place that we really *intended* to accept them were on types. This PR adds a lint warning unless the "type-parameter-defaults" feature is enabled. This should eventually become a hard error.
    
    This is a [breaking-change] in that new feature gates are required (or simply removing the defaults, which is probably a better choice as they have little effect at this time). Results of a [crater run][crater] suggest that approximately 5-15 crates are affected. I didn't do the measurement quite right so that run cannot distinguish "true" regressions from "non-root" regressions, but even the upper bound of 15 affected crates seems relatively minimal.
    
    [crater]: https://gist.github.com/nikomatsakis/760c6a67698bd24253bf
    
    cc @rust-lang/lang
    r? @pnkfelix
rustc: ./piston-image-0.3.11
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling winapi-build v0.1.1
   Compiling gcc v0.3.21
   Compiling glob v0.2.10
   Compiling byteorder v0.3.13
   Compiling bitflags v0.3.3
   Compiling winapi v0.2.5
   Compiling color_quant v1.0.0
   Compiling lzw v0.8.0
   Compiling libc v0.2.4
   Compiling advapi32-sys v0.1.2
   Compiling rustc-serialize v0.3.16
   Compiling gif v0.5.1
   Compiling rand v0.3.12
   Compiling miniz-sys v0.1.7
   Compiling flate2 v0.2.11
   Compiling num v0.1.29
   Compiling png v0.3.1
   Compiling enum_primitive v0.0.1
   Compiling image v0.3.11 (file:///root/benchmarks/piston-image-0.3.11)
time: 0.065; rss: 35MB	parsing
Lines of code:             10676
Pre-expansion node count:  84646
time: 0.016; rss: 35MB	configuration 1
time: 0.000; rss: 35MB	recursion limit
time: 0.001; rss: 35MB	gated macro checking
time: 0.000; rss: 35MB	crate injection
time: 0.005; rss: 40MB	macro loading
time: 0.000; rss: 40MB	plugin loading
time: 0.000; rss: 40MB	plugin registration
time: 0.133; rss: 45MB	expansion
time: 0.004; rss: 45MB	complete gated feature checking 1
time: 0.027; rss: 45MB	configuration 2
time: 0.000; rss: 45MB	gated configuration checking
time: 0.013; rss: 45MB	maybe building test harness
time: 0.012; rss: 45MB	prelude injection
time: 0.001; rss: 45MB	checking that all macro invocations are gone
time: 0.000; rss: 45MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 45MB	complete gated feature checking 2
Post-expansion node count: 144338
time: 0.012; rss: 45MB	assigning node ids
time: 0.035; rss: 56MB	lowering ast -> hir
time: 0.008; rss: 59MB	indexing hir
time: 0.000; rss: 59MB	attribute checking
time: 0.008; rss: 59MB	early lint checks
time: 0.003; rss: 50MB	external crate/lib resolution
time: 0.001; rss: 50MB	language item collection
time: 0.038; rss: 66MB	resolution
time: 0.002; rss: 66MB	lifetime resolution
time: 0.000; rss: 66MB	looking for entry point
time: 0.000; rss: 66MB	looking for plugin registrar
time: 0.020; rss: 73MB	region resolution
time: 0.001; rss: 73MB	loop checking
time: 0.001; rss: 73MB	static item recursion checking
time: 0.011; rss: 77MB	type collecting
time: 0.000; rss: 77MB	variance inference
time: 0.032; rss: 94MB	coherence checking
time: 0.144; rss: 97MB	wf checking
time: 0.055; rss: 100MB	item-types checking
time: 1.733; rss: 128MB	item-bodies checking
time: 0.000; rss: 128MB	drop-impl checking
time: 0.079; rss: 129MB	const checking
time: 0.012; rss: 129MB	privacy checking
time: 0.001; rss: 129MB	stability index
time: 0.010; rss: 129MB	intrinsic checking
time: 0.003; rss: 129MB	effect checking
time: 0.027; rss: 129MB	match checking
time: 0.110; rss: 137MB	MIR dump
time: 0.015; rss: 139MB	liveness checking
time: 0.166; rss: 139MB	borrow checking
time: 0.084; rss: 139MB	rvalue checking
time: 0.003; rss: 139MB	reachability checking
time: 0.009; rss: 139MB	death checking
time: 0.011; rss: 139MB	stability checking
time: 0.000; rss: 139MB	unused lib feature checking
time: 0.089; rss: 139MB	lint checking
time: 0.000; rss: 139MB	resolving dependency formats
time: 0.009; rss: 140MB	erasing regions from MIR
  time: 0.226; rss: 259MB	write metadata
time: 3.063; rss: 255MB	translation
  time: 0.100; rss: 155MB	llvm function passes [0]
  time: 0.042; rss: 156MB	llvm module passes [0]
  time: 1.723; rss: 207MB	codegen passes [0]
  time: 0.001; rss: 174MB	codegen passes [0]
time: 2.087; rss: 174MB	LLVM passes
time: 0.154; rss: 172MB	linking
done
