commit 8b012ed142f03c9082773f5091c58c82d47cae79
Merge: 7bddce6 53ab137
Author: bors <bors@rust-lang.org>
Date:   Fri May 27 17:46:14 2016 -0700

    Auto merge of #33706 - jseyfried:refactor_cfg, r=nrc
    
    Perform `cfg` attribute processing during macro expansion and fix bugs
    
    This PR refactors `cfg` attribute processing and fixes bugs. More specifically:
     - It merges gated feature checking for stmt/expr attributes, `cfg_attr` processing, and `cfg` processing into a single fold.
      - This allows feature gated `cfg` variables to be used in `cfg_attr` on unconfigured items. All other feature gated attributes can already be used on unconfigured items.
     - It performs `cfg` attribute processing during macro expansion instead of after expansion so that macro-expanded items are configured the same as ordinary items. In particular, to match their non-expanded counterparts,
      - macro-expanded unconfigured macro invocations are no longer expanded,
      - macro-expanded unconfigured macro definitions are no longer usable, and
      - feature gated `cfg` variables on macro-expanded macro definitions/invocations are now errors.
    
    This is a [breaking-change]. For example, the following would break:
    ```rust
    macro_rules! m {
        () => {
            #[cfg(attr)]
            macro_rules! foo { () => {} }
            foo!(); // This will be an error
    
            macro_rules! bar { () => { fn f() {} } }
            #[cfg(attr)] bar!(); // This will no longer be expanded ...
            fn g() { f(); } // ... so that `f` will be unresolved.
    
            #[cfg(target_thread_local)] // This will be a gated feature error
            macro_rules! baz { () => {} }
        }
    }
    
    m!();
    ```
    
    r? @nrc
rustc: ./regex-macros.0.1.30
cd regex_macros && cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling regex_macros v0.1.17 (file:///root/benchmarks/regex-macros.0.1.30/regex_macros)
time: 0.003; rss: 46MB	parsing
Lines of code:             639
Pre-expansion node count:  2160
time: 0.000; rss: 46MB	configuration 1
time: 0.000; rss: 50MB	recursion limit
time: 0.000; rss: 50MB	crate injection
time: 0.018; rss: 80MB	macro loading
time: 0.000; rss: 80MB	plugin loading
time: 0.000; rss: 80MB	plugin registration
time: 0.051; rss: 90MB	expansion
time: 0.000; rss: 90MB	gated configuration checking
time: 0.007; rss: 90MB	maybe building test harness
time: 0.007; rss: 90MB	prelude injection
time: 0.000; rss: 90MB	checking that all macro invocations are gone
time: 0.000; rss: 90MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 90MB	complete gated feature checking
Post-expansion node count: 69731
time: 0.006; rss: 90MB	assigning node ids
time: 0.000; rss: 90MB	collecting defs
time: 0.100; rss: 172MB	external crate/lib resolution
time: 0.004; rss: 172MB	early lint checks
time: 0.010; rss: 177MB	name resolution
time: 0.007; rss: 181MB	lowering ast -> hir
time: 0.001; rss: 181MB	indexing hir
time: 0.000; rss: 181MB	attribute checking
time: 0.001; rss: 177MB	language item collection
time: 0.000; rss: 177MB	lifetime resolution
time: 0.000; rss: 177MB	looking for entry point
time: 0.000; rss: 177MB	looking for plugin registrar
time: 0.002; rss: 177MB	region resolution
time: 0.000; rss: 177MB	loop checking
time: 0.000; rss: 177MB	static item recursion checking
time: 0.000; rss: 177MB	load_dep_graph
time: 0.014; rss: 181MB	type collecting
time: 0.000; rss: 181MB	variance inference
time: 0.011; rss: 182MB	coherence checking
time: 0.008; rss: 182MB	wf checking
time: 0.001; rss: 182MB	item-types checking
time: 1.048; rss: 200MB	item-bodies checking
makefile:2: recipe for target 'all' failed
done
