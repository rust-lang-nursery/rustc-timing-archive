commit 6dc035ed911672c6a1f7afc9eed15fb08e574e5b
Merge: 98a3502 0b2746c
Author: bors <bors@rust-lang.org>
Date:   Sat Oct 15 19:49:12 2016 -0700

    Auto merge of #37098 - ollie27:rustdoc_playground, r=GuillaumeGomez
    
    rustdoc: Improve playground run buttons
    
    The main change is to stop using javascript to generate the URLs and use
    rustdoc instead.
    
    This also adds run buttons to the error index examples.
    
    You can test the changes at https://ollie27.github.io/rust_doc_test/.
    
    Fixes #36621
    Fixes #36910
rustc: ./syntex-0.42.2-incr-clean
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax -- -Ztime-passes -Zinput-stats -Z incremental-info
   Compiling syntex_syntax v0.42.0
time: 0.108; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  224033
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.275; rss: 147MB	expansion
time: 0.000; rss: 147MB	maybe building test harness
time: 0.006; rss: 147MB	maybe creating a macro crate
Post-expansion node count: 641571
time: 0.000; rss: 147MB	checking for inline asm in case the target doesn't support it
time: 0.013; rss: 147MB	complete gated feature checking
time: 0.023; rss: 147MB	early lint checks
time: 0.007; rss: 147MB	AST validation
time: 0.084; rss: 162MB	name resolution
time: 0.049; rss: 202MB	lowering ast -> hir
time: 0.009; rss: 212MB	indexing hir
time: 0.007; rss: 212MB	attribute checking
time: 0.006; rss: 163MB	language item collection
time: 0.012; rss: 163MB	lifetime resolution
time: 0.000; rss: 163MB	looking for entry point
time: 0.000; rss: 163MB	looking for plugin registrar
time: 0.044; rss: 174MB	region resolution
time: 0.006; rss: 174MB	loop checking
time: 0.006; rss: 174MB	static item recursion checking
time: 0.262; rss: 175MB	compute_incremental_hashes_map
time: 0.000; rss: 175MB	load_dep_graph
time: 0.042; rss: 180MB	type collecting
time: 0.001; rss: 180MB	variance inference
time: 0.038; rss: 185MB	coherence checking
time: 0.103; rss: 187MB	wf checking
time: 0.194; rss: 193MB	item-types checking
time: 3.934; rss: 243MB	item-bodies checking
time: 0.000; rss: 243MB	drop-impl checking
time: 0.257; rss: 247MB	const checking
time: 0.054; rss: 247MB	privacy checking
time: 0.007; rss: 247MB	stability index
time: 0.022; rss: 247MB	intrinsic checking
time: 0.018; rss: 247MB	effect checking
time: 0.058; rss: 247MB	match checking
time: 0.053; rss: 236MB	liveness checking
time: 0.219; rss: 237MB	rvalue checking
time: 0.626; rss: 417MB	MIR dump
  time: 0.064; rss: 423MB	SimplifyCfg
  time: 0.084; rss: 423MB	QualifyAndPromoteConstants
  time: 0.112; rss: 423MB	TypeckMir
  time: 0.004; rss: 423MB	SimplifyBranches
  time: 0.031; rss: 423MB	SimplifyCfg
time: 0.297; rss: 423MB	MIR passes
time: 0.573; rss: 425MB	borrow checking
time: 0.022; rss: 426MB	reachability checking
time: 0.045; rss: 426MB	death checking
time: 0.043; rss: 428MB	stability checking
time: 0.000; rss: 428MB	unused lib feature checking
time: 0.215; rss: 428MB	lint checking
time: 0.000; rss: 428MB	resolving dependency formats
  time: 0.003; rss: 428MB	NoLandingPads
  time: 0.027; rss: 428MB	SimplifyCfg
  time: 0.093; rss: 434MB	EraseRegions
  time: 0.012; rss: 434MB	AddCallGuards
  time: 0.334; rss: 454MB	ElaborateDrops
  time: 0.003; rss: 454MB	NoLandingPads
  time: 0.054; rss: 453MB	SimplifyCfg
  time: 0.031; rss: 453MB	InstCombine
  time: 0.011; rss: 453MB	Deaggregator
  time: 0.003; rss: 453MB	CopyPropagation
  time: 0.009; rss: 453MB	AddCallGuards
  time: 0.003; rss: 453MB	PreTrans
time: 0.583; rss: 453MB	Prepare MIR codegen passes
  time: 0.282; rss: 459MB	write metadata
  time: 0.470; rss: 471MB	translation item collection
  time: 0.064; rss: 475MB	codegen unit partitioning
  time: 0.054; rss: 721MB	internalize symbols
time: 5.840; rss: 602MB	translation
time: 0.000; rss: 602MB	assert dep graph
time: 0.000; rss: 602MB	serialize dep graph
incremental: re-using 0 out of 1 modules
  time: 0.517; rss: 407MB	llvm function passes [0]
  time: 0.258; rss: 416MB	llvm module passes [0]
  time: 10.147; rss: 416MB	codegen passes [0]
  time: 0.002; rss: 412MB	codegen passes [0]
time: 11.749; rss: 412MB	LLVM passes
time: 0.000; rss: 412MB	serialize work products
time: 0.666; rss: 106MB	linking
done
