commit 69e1f57dfbd32a1a342d696a3e79624da97ebe1b
Merge: d70ab2b 834fb17
Author: bors <bors@rust-lang.org>
Date:   Mon Jan 11 06:40:58 2016 +0000

    Auto merge of #30295 - jseyfried:fix_extern_crate_duplicate, r=nrc
    
    Fix a bug allowing an item and an external crate to collide so long as the external crate is declared after the item. For example,
    ```rust
    mod core { pub fn f() {} } // This would be an error if it followed the `extern crate`
    extern crate core; // This declaration is shadowed by the preceding module
    
    fn main() { core::f(); }
    ```
    This is a [breaking-change], but it looks unlikely to cause breakage in practice, and any breakage can be fixed by removing colliding `extern crate` declarations, which are shadowed and hence unused.
rustc: ./inflate-0.1.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling inflate v0.1.0 (file:///root/benchmarks/inflate-0.1.0)
time: 0.004; rss: 32MB	parsing
Lines of code:             956
Pre-expansion node count:  4761
time: 0.001; rss: 32MB	configuration 1
time: 0.000; rss: 32MB	recursion limit
time: 0.000; rss: 32MB	gated macro checking
time: 0.000; rss: 32MB	crate injection
time: 0.003; rss: 35MB	macro loading
time: 0.000; rss: 35MB	plugin loading
time: 0.000; rss: 35MB	plugin registration
time: 0.084; rss: 43MB	expansion
time: 0.001; rss: 43MB	complete gated feature checking 1
time: 0.009; rss: 43MB	configuration 2
time: 0.000; rss: 43MB	gated configuration checking
time: 0.005; rss: 43MB	maybe building test harness
time: 0.004; rss: 43MB	prelude injection
time: 0.000; rss: 43MB	checking that all macro invocations are gone
time: 0.000; rss: 43MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 43MB	complete gated feature checking 2
Post-expansion node count: 54798
time: 0.004; rss: 43MB	assigning node ids
time: 0.008; rss: 47MB	lowering ast -> hir
time: 0.002; rss: 49MB	indexing hir
time: 0.000; rss: 49MB	attribute checking
time: 0.003; rss: 49MB	early lint checks
time: 0.001; rss: 46MB	external crate/lib resolution
time: 0.001; rss: 46MB	language item collection
time: 0.009; rss: 55MB	resolution
time: 0.001; rss: 55MB	lifetime resolution
time: 0.000; rss: 55MB	looking for entry point
time: 0.000; rss: 55MB	looking for plugin registrar
time: 0.003; rss: 55MB	region resolution
time: 0.000; rss: 55MB	loop checking
time: 0.000; rss: 55MB	static item recursion checking
time: 0.001; rss: 57MB	type collecting
time: 0.000; rss: 57MB	variance inference
time: 0.010; rss: 69MB	coherence checking
time: 0.002; rss: 69MB	wf checking
time: 0.002; rss: 69MB	item-types checking
time: 28.149; rss: 98MB	item-bodies checking
time: 0.000; rss: 98MB	drop-impl checking
time: 0.014; rss: 98MB	const checking
time: 0.002; rss: 98MB	privacy checking
time: 0.000; rss: 98MB	stability index
time: 0.000; rss: 98MB	intrinsic checking
time: 0.001; rss: 98MB	effect checking
time: 0.004; rss: 98MB	match checking
time: 0.025; rss: 102MB	MIR dump
time: 0.064; rss: 101MB	liveness checking
time: 0.206; rss: 106MB	borrow checking
time: 0.010; rss: 103MB	rvalue checking
time: 0.000; rss: 103MB	reachability checking
time: 0.002; rss: 103MB	death checking
time: 0.002; rss: 103MB	stability checking
time: 0.000; rss: 103MB	unused lib feature checking
time: 0.018; rss: 105MB	lint checking
time: 0.000; rss: 105MB	resolving dependency formats
time: 0.002; rss: 105MB	erasing regions from MIR
  time: 0.002; rss: 133MB	write metadata
time: 0.378; rss: 128MB	translation
  time: 0.025; rss: 93MB	llvm function passes [0]
  time: 0.006; rss: 93MB	llvm module passes [0]
  time: 0.466; rss: 140MB	codegen passes [0]
  time: 0.000; rss: 126MB	codegen passes [0]
time: 0.540; rss: 126MB	LLVM passes
time: 0.035; rss: 124MB	linking
done
