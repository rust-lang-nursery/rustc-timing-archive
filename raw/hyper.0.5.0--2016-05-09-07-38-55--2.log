commit 32683ce1930ef1390f20e4ab72650e6804fd1c1b
Merge: 50909f2 dcdf761
Author: bors <bors@rust-lang.org>
Date:   Mon May 9 04:32:39 2016 -0700

    Auto merge of #33478 - xen0n:normalize-callee-trait-ref, r=eddyb
    
    trans: callee: normalize trait_ref before use
    
    This fixes #33436 and #33461. Ran the tests and nothing else seems to be affected.
    
    P.S. How to write the regression test for this fix? Does this qualify as run-pass or run-make, as the test only needs to be successfully compiled to be considered passed? Will add the testcase (the minimal example in #33461 seems fit) after clarifying this.
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.042; rss: 49MB	parsing
Lines of code:             9154
Pre-expansion node count:  45594
time: 0.009; rss: 50MB	configuration 1
time: 0.000; rss: 50MB	recursion limit
time: 0.000; rss: 50MB	crate injection
time: 0.005; rss: 55MB	macro loading
time: 0.000; rss: 55MB	plugin loading
time: 0.000; rss: 55MB	plugin registration
time: 0.201; rss: 64MB	expansion
time: 0.030; rss: 64MB	configuration 2
time: 0.000; rss: 64MB	gated configuration checking
time: 0.012; rss: 64MB	maybe building test harness
time: 0.009; rss: 64MB	prelude injection
time: 0.001; rss: 64MB	checking that all macro invocations are gone
time: 0.000; rss: 64MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 64MB	complete gated feature checking
Post-expansion node count: 107138
time: 0.008; rss: 64MB	assigning node ids
time: 0.005; rss: 66MB	collecting defs
time: 0.005; rss: 68MB	external crate/lib resolution
time: 0.020; rss: 74MB	lowering ast -> hir
time: 0.003; rss: 74MB	indexing hir
time: 0.002; rss: 74MB	attribute checking
time: 0.007; rss: 74MB	early lint checks
time: 0.001; rss: 68MB	language item collection
time: 0.028; rss: 85MB	name resolution
time: 0.002; rss: 85MB	lifetime resolution
time: 0.000; rss: 85MB	looking for entry point
time: 0.000; rss: 85MB	looking for plugin registrar
time: 0.008; rss: 87MB	region resolution
time: 0.001; rss: 87MB	loop checking
time: 0.001; rss: 87MB	static item recursion checking
time: 0.000; rss: 87MB	load_dep_graph
time: 0.018; rss: 98MB	type collecting
time: 0.000; rss: 98MB	variance inference
time: 0.045; rss: 113MB	coherence checking
time: 0.080; rss: 114MB	wf checking
time: 0.029; rss: 114MB	item-types checking
time: 0.510; rss: 132MB	item-bodies checking
time: 0.000; rss: 132MB	drop-impl checking
time: 0.041; rss: 134MB	const checking
time: 0.009; rss: 134MB	privacy checking
time: 0.001; rss: 134MB	stability index
time: 0.004; rss: 134MB	intrinsic checking
time: 0.002; rss: 134MB	effect checking
time: 0.013; rss: 134MB	match checking
time: 0.005; rss: 135MB	liveness checking
time: 0.025; rss: 135MB	rvalue checking
time: 0.064; rss: 142MB	MIR dump
time: 0.037; rss: 143MB	MIR passes
time: 0.065; rss: 143MB	borrow checking
time: 0.003; rss: 143MB	reachability checking
time: 0.006; rss: 143MB	death checking
time: 0.006; rss: 143MB	stability checking
time: 0.000; rss: 143MB	unused lib feature checking
time: 0.047; rss: 143MB	lint checking
time: 0.000; rss: 143MB	resolving dependency formats
time: 0.015; rss: 145MB	Prepare MIR codegen passes
  time: 0.202; rss: 157MB	translation item collection
  time: 0.009; rss: 158MB	codegen unit partitioning
  time: 0.140; rss: 278MB	write metadata
time: 1.778; rss: 278MB	translation
time: 0.001; rss: 278MB	assert dep graph
time: 0.000; rss: 278MB	serialize dep graph
  time: 0.097; rss: 165MB	llvm function passes [0]
  time: 0.048; rss: 166MB	llvm module passes [0]
  time: 1.629; rss: 171MB	codegen passes [0]
  time: 0.001; rss: 119MB	codegen passes [0]
time: 1.981; rss: 117MB	LLVM passes
time: 0.175; rss: 115MB	linking
done
