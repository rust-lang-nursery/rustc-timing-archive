commit 954873055a998a06841ac19b39b1fe18a6641731
Merge: 1d64acd a84b550
Author: bors <bors@rust-lang.org>
Date:   Fri Sep 30 07:35:04 2016 -0700

    Auto merge of #36823 - durka:discriminant_value, r=nagisa
    
    add wrapper for discriminant_value, take 2
    
    [This is #34785 reopened, since @bors apparently gave up on that thread.]
    
    add wrapper for discriminant_value intrinsic
    
    Implementation of [RFC 1696](https://github.com/rust-lang/rfcs/blob/master/text/1696-discriminant.md).
    
    Wraps the `discriminant_value` intrinsic under the name `std::mem::discriminant`. In order to avoid prematurely leaking information about the implementation of enums, the return value is an opaque type, generic over the enum type, which implements Copy, Clone, PartialEq, Eq, Hash, and Debug (notably not PartialOrd). There is currently no way to get the value out excepting printing the debug representation.
    
    The wrapper is safe and can be stabilized soon as per discussion in #24263.
    
    cc @aturon
    r? @nagisa
rustc: ./issue-32278-big-array-of-strings
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling issue-32278-big-array-of-strings v0.1.0 (file:///root/benchmarks/issue-32278-big-array-of-strings)
time: 0.108; rss: 63MB	parsing
Lines of code:             65577
Pre-expansion node count:  65552
time: 0.000; rss: 63MB	recursion limit
time: 0.000; rss: 63MB	crate injection
time: 0.000; rss: 63MB	plugin loading
time: 0.000; rss: 63MB	plugin registration
time: 0.026; rss: 81MB	expansion
time: 0.000; rss: 81MB	maybe building test harness
time: 0.001; rss: 81MB	maybe creating a macro crate
Post-expansion node count: 65565
time: 0.000; rss: 81MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 81MB	complete gated feature checking
time: 0.004; rss: 81MB	early lint checks
time: 0.000; rss: 81MB	AST validation
time: 0.003; rss: 81MB	name resolution
time: 0.007; rss: 102MB	lowering ast -> hir
time: 0.002; rss: 106MB	indexing hir
time: 0.001; rss: 106MB	attribute checking
time: 0.001; rss: 96MB	language item collection
time: 0.001; rss: 96MB	lifetime resolution
time: 0.000; rss: 96MB	looking for entry point
time: 0.000; rss: 96MB	looking for plugin registrar
time: 0.007; rss: 103MB	region resolution
time: 0.001; rss: 103MB	loop checking
time: 0.002; rss: 103MB	static item recursion checking
time: 0.022; rss: 103MB	compute_incremental_hashes_map
time: 0.000; rss: 103MB	load_dep_graph
time: 0.000; rss: 103MB	type collecting
time: 0.000; rss: 103MB	variance inference
time: 0.005; rss: 104MB	coherence checking
time: 0.001; rss: 105MB	wf checking
time: 0.671; rss: 116MB	item-types checking
time: 0.000; rss: 116MB	item-bodies checking
time: 0.000; rss: 116MB	drop-impl checking
time: 0.020; rss: 113MB	const checking
time: 0.002; rss: 113MB	privacy checking
time: 0.001; rss: 113MB	stability index
time: 0.000; rss: 113MB	intrinsic checking
time: 0.000; rss: 113MB	effect checking
time: 0.000; rss: 113MB	match checking
time: 0.001; rss: 113MB	liveness checking
time: 0.000; rss: 113MB	rvalue checking
time: 0.042; rss: 124MB	MIR dump
  time: 0.000; rss: 124MB	SimplifyCfg
  time: 0.001; rss: 124MB	QualifyAndPromoteConstants
  time: 0.000; rss: 124MB	TypeckMir
  time: 0.000; rss: 124MB	SimplifyBranches
  time: 0.000; rss: 124MB	SimplifyCfg
time: 0.002; rss: 124MB	MIR passes
time: 0.001; rss: 124MB	borrow checking
time: 0.000; rss: 124MB	reachability checking
time: 0.001; rss: 124MB	death checking
time: 0.001; rss: 124MB	stability checking
time: 0.000; rss: 124MB	unused lib feature checking
time: 0.028; rss: 124MB	lint checking
time: 0.001; rss: 125MB	resolving dependency formats
  time: 0.000; rss: 125MB	NoLandingPads
  time: 0.000; rss: 125MB	SimplifyCfg
  time: 0.001; rss: 125MB	EraseRegions
  time: 0.000; rss: 125MB	AddCallGuards
  time: 0.000; rss: 125MB	ElaborateDrops
  time: 0.000; rss: 125MB	NoLandingPads
  time: 0.000; rss: 125MB	SimplifyCfg
  time: 0.000; rss: 125MB	InstCombine
  time: 0.000; rss: 125MB	Deaggregator
  time: 0.000; rss: 125MB	CopyPropagation
  time: 0.000; rss: 125MB	AddCallGuards
  time: 0.000; rss: 125MB	PreTrans
time: 0.001; rss: 125MB	Prepare MIR codegen passes
  time: 0.000; rss: 125MB	write metadata
  time: 0.001; rss: 125MB	translation item collection
  time: 0.000; rss: 125MB	codegen unit partitioning
  time: 0.001; rss: 134MB	internalize symbols
time: 0.066; rss: 132MB	translation
time: 0.000; rss: 132MB	assert dep graph
time: 0.000; rss: 132MB	serialize dep graph
  time: 0.008; rss: 86MB	llvm function passes [0]
  time: 0.000; rss: 86MB	llvm module passes [0]
  time: 0.185; rss: 87MB	codegen passes [0]
  time: 0.000; rss: 87MB	codegen passes [0]
time: 0.195; rss: 87MB	LLVM passes
time: 0.000; rss: 87MB	serialize work products
  time: 0.151; rss: 75MB	running linker
time: 0.152; rss: 75MB	linking
done
