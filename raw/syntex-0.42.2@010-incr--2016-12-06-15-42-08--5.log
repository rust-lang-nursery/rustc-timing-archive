commit b5d0f90929ddaae89609e9bb229a9b8a27e27615
Merge: 1842efb cc6edb2
Author: bors <bors@rust-lang.org>
Date:   Tue Dec 6 17:38:26 2016 +0000

    Auto merge of #38036 - Mark-Simulacrum:polish-2, r=nagisa,eddyb
    
    Simplify calling find_implied_output_region.
    
    @nnethercote added the optimization that find_implied_output_region
    takes a closure as an optimization in #37014, but passing an iterator is
    simpler, and more ergonomic for callers.
rustc: ./syntex-0.42.2@010-incr@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.241; rss: 152MB	expansion
time: 0.000; rss: 152MB	maybe building test harness
time: 0.006; rss: 152MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 152MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 152MB	complete gated feature checking
time: 0.023; rss: 152MB	early lint checks
time: 0.007; rss: 152MB	AST validation
time: 0.076; rss: 166MB	name resolution
time: 0.059; rss: 200MB	lowering ast -> hir
time: 0.010; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.046; rss: 177MB	region resolution
time: 0.008; rss: 177MB	loop checking
time: 0.002; rss: 177MB	static item recursion checking
time: 0.383; rss: 178MB	compute_incremental_hashes_map
time: 0.020; rss: 178MB	load_dep_graph
time: 0.010; rss: 178MB	stability index
time: 0.021; rss: 182MB	stability checking
time: 0.056; rss: 190MB	type collecting
time: 0.004; rss: 190MB	variance inference
time: 0.006; rss: 194MB	impl wf inference
time: 0.026; rss: 197MB	coherence checking
time: 0.089; rss: 200MB	wf checking
time: 0.198; rss: 208MB	item-types checking
time: 3.575; rss: 266MB	item-bodies checking
time: 0.000; rss: 266MB	drop-impl checking
time: 0.219; rss: 277MB	const checking
time: 0.059; rss: 277MB	privacy checking
time: 0.019; rss: 284MB	intrinsic checking
time: 0.014; rss: 284MB	effect checking
time: 0.051; rss: 284MB	match checking
time: 0.047; rss: 290MB	liveness checking
time: 0.173; rss: 292MB	rvalue checking
time: 0.363; rss: 482MB	MIR dump
  time: 0.058; rss: 484MB	SimplifyCfg
  time: 0.075; rss: 484MB	QualifyAndPromoteConstants
  time: 0.122; rss: 500MB	TypeckMir
  time: 0.005; rss: 500MB	SimplifyBranches
  time: 0.034; rss: 500MB	SimplifyCfg
time: 0.294; rss: 500MB	MIR cleanup and validation
time: 0.481; rss: 500MB	borrow checking
time: 0.024; rss: 500MB	reachability checking
time: 0.038; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.181; rss: 500MB	lint checking
time: 0.000; rss: 500MB	resolving dependency formats
  time: 0.004; rss: 500MB	NoLandingPads
  time: 0.028; rss: 500MB	SimplifyCfg
  time: 0.065; rss: 509MB	EraseRegions
  time: 0.011; rss: 509MB	AddCallGuards
  time: 0.275; rss: 529MB	ElaborateDrops
  time: 0.004; rss: 529MB	NoLandingPads
  time: 0.055; rss: 529MB	SimplifyCfg
  time: 0.030; rss: 529MB	InstCombine
  time: 0.013; rss: 529MB	Deaggregator
  time: 0.004; rss: 529MB	CopyPropagation
  time: 0.035; rss: 529MB	SimplifyLocals
  time: 0.011; rss: 529MB	AddCallGuards
  time: 0.003; rss: 529MB	PreTrans
time: 0.537; rss: 529MB	MIR optimisations
  time: 0.068; rss: 538MB	write metadata
  time: 0.396; rss: 551MB	translation item collection
  time: 0.074; rss: 555MB	codegen unit partitioning
  time: 0.049; rss: 1457MB	internalize symbols
time: 11.953; rss: 1457MB	translation
time: 0.000; rss: 1457MB	assert dep graph
time: 1.359; rss: 1485MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1196MB	llvm function passes [4]
time: 0.000; rss: 1196MB	llvm module passes [4]
time: 0.001; rss: 1202MB	llvm function passes [0]
time: 0.000; rss: 1202MB	llvm module passes [0]
time: 0.002; rss: 1208MB	llvm function passes [2]
time: 0.000; rss: 1208MB	llvm module passes [2]
time: 0.002; rss: 1208MB	llvm function passes [1]
time: 0.000; rss: 1208MB	llvm module passes [1]
time: 0.004; rss: 1208MB	llvm function passes [3]
time: 0.007; rss: 1217MB	llvm module passes [3]
time: 0.011; rss: 1217MB	llvm function passes [6]
time: 0.004; rss: 1217MB	llvm function passes [8]
time: 0.014; rss: 1217MB	llvm function passes [5]
time: 0.001; rss: 1217MB	llvm module passes [8]
time: 0.016; rss: 1217MB	codegen passes [4]
time: 0.019; rss: 1222MB	codegen passes [0]
time: 0.010; rss: 1222MB	llvm module passes [6]
time: 0.008; rss: 1222MB	llvm module passes [5]
time: 0.032; rss: 1231MB	codegen passes [2]
time: 0.028; rss: 1239MB	llvm function passes [9]
time: 0.013; rss: 1239MB	llvm function passes [2]
time: 0.008; rss: 1241MB	llvm module passes [2]
time: 0.014; rss: 1241MB	llvm module passes [9]
time: 0.044; rss: 1245MB	codegen passes [8]
time: 0.000; rss: 1245MB	llvm function passes [8]
time: 0.000; rss: 1245MB	llvm module passes [8]
time: 0.001; rss: 1245MB	codegen passes [8]
time: 0.065; rss: 1245MB	codegen passes [1]
time: 0.057; rss: 1245MB	llvm function passes [4]
time: 0.001; rss: 1254MB	llvm function passes [16]
time: 0.000; rss: 1254MB	llvm module passes [16]
time: 0.008; rss: 1254MB	llvm module passes [4]
time: 0.001; rss: 1256MB	llvm function passes [17]
time: 0.000; rss: 1256MB	llvm module passes [17]
time: 0.066; rss: 1258MB	llvm function passes [0]
time: 0.009; rss: 1265MB	codegen passes [17]
time: 0.000; rss: 1265MB	llvm function passes [17]
time: 0.000; rss: 1265MB	llvm module passes [17]
time: 0.004; rss: 1265MB	codegen passes [17]
time: 0.028; rss: 1271MB	codegen passes [16]
time: 0.000; rss: 1271MB	llvm function passes [16]
time: 0.000; rss: 1271MB	llvm module passes [16]
time: 0.001; rss: 1271MB	codegen passes [16]
time: 0.049; rss: 1271MB	llvm function passes [8]
time: 0.001; rss: 1271MB	llvm module passes [8]
time: 0.039; rss: 1275MB	llvm module passes [0]
time: 0.132; rss: 1276MB	llvm function passes [7]
time: 0.098; rss: 1285MB	llvm function passes [13]
time: 0.133; rss: 1287MB	codegen passes [3]
time: 0.012; rss: 1295MB	llvm module passes [13]
time: 0.066; rss: 1294MB	llvm function passes [17]
time: 0.070; rss: 1300MB	llvm function passes [16]
time: 0.030; rss: 1300MB	llvm module passes [17]
time: 0.033; rss: 1300MB	llvm function passes [21]
time: 0.087; rss: 1300MB	llvm function passes [15]
time: 0.084; rss: 1302MB	llvm module passes [7]
time: 0.099; rss: 1302MB	codegen passes [8]
time: 0.037; rss: 1302MB	llvm module passes [16]
time: 0.154; rss: 1302MB	llvm function passes [1]
time: 0.024; rss: 1306MB	llvm module passes [15]
time: 0.028; rss: 1306MB	llvm module passes [21]
time: 0.010; rss: 1307MB	llvm function passes [23]
time: 0.004; rss: 1309MB	llvm module passes [23]
time: 0.085; rss: 1313MB	llvm function passes [22]
time: 0.024; rss: 1322MB	llvm function passes [25]
time: 0.140; rss: 1322MB	llvm function passes [19]
time: 0.286; rss: 1322MB	llvm function passes [10]
time: 0.012; rss: 1322MB	llvm module passes [25]
time: 0.049; rss: 1328MB	llvm module passes [22]
time: 0.288; rss: 1332MB	llvm function passes [11]
time: 0.227; rss: 1332MB	llvm function passes [14]
time: 0.098; rss: 1332MB	llvm module passes [1]
time: 0.201; rss: 1338MB	llvm function passes [18]
time: 0.042; rss: 1340MB	llvm module passes [19]
time: 0.002; rss: 1354MB	llvm function passes [27]
time: 0.001; rss: 1354MB	llvm module passes [27]
time: 0.055; rss: 1361MB	llvm module passes [18]
time: 0.068; rss: 1361MB	llvm module passes [14]
time: 0.043; rss: 1361MB	llvm function passes [26]
time: 0.248; rss: 1362MB	llvm function passes [20]
time: 0.020; rss: 1366MB	llvm module passes [26]
time: 0.164; rss: 1393MB	llvm module passes [10]
time: 0.077; rss: 1395MB	codegen passes [27]
time: 0.176; rss: 1408MB	llvm module passes [11]
time: 0.092; rss: 1408MB	llvm module passes [20]
time: 0.008; rss: 1425MB	llvm function passes [35]
time: 0.005; rss: 1424MB	llvm module passes [35]
time: 0.193; rss: 1424MB	llvm function passes [28]
time: 0.508; rss: 1424MB	llvm function passes [12]
time: 0.309; rss: 1426MB	llvm function passes [24]
time: 0.010; rss: 1425MB	codegen passes [37]
time: 0.042; rss: 1423MB	llvm function passes [36]
time: 0.199; rss: 1420MB	llvm function passes [29]
time: 0.006; rss: 1421MB	llvm module passes [36]
time: 0.076; rss: 1418MB	llvm module passes [28]
time: 0.120; rss: 1422MB	llvm function passes [34]
time: 0.025; rss: 1415MB	llvm module passes [34]
time: 0.436; rss: 1413MB	llvm function passes [8]
time: 0.197; rss: 1413MB	llvm function passes [32]
time: 0.070; rss: 1413MB	llvm module passes [29]
time: 0.103; rss: 1416MB	llvm module passes [24]
time: 0.429; rss: 1416MB	codegen passes [23]
time: 0.252; rss: 1418MB	llvm function passes [27]
time: 0.084; rss: 1420MB	codegen passes [36]
time: 0.077; rss: 1420MB	llvm module passes [8]
time: 0.589; rss: 1422MB	llvm function passes [3]
time: 0.105; rss: 1416MB	llvm module passes [32]
time: 0.360; rss: 1416MB	llvm function passes [30]
time: 0.152; rss: 1413MB	codegen passes [34]
time: 0.316; rss: 1415MB	llvm function passes [33]
time: 0.112; rss: 1416MB	llvm module passes [27]
time: 0.117; rss: 1422MB	llvm module passes [30]
time: 0.102; rss: 1431MB	llvm module passes [33]
time: 0.876; rss: 1435MB	codegen passes [6]
time: 0.872; rss: 1445MB	codegen passes [2]
time: 0.519; rss: 1451MB	llvm function passes [31]
time: 0.485; rss: 1440MB	codegen passes [35]
time: 0.717; rss: 1443MB	llvm module passes [12]
time: 0.648; rss: 1434MB	llvm module passes [3]
time: 1.169; rss: 1447MB	codegen passes [4]
time: 0.536; rss: 1445MB	llvm module passes [31]
time: 1.421; rss: 1432MB	codegen passes [5]
time: 1.393; rss: 1455MB	codegen passes [21]
time: 1.440; rss: 1454MB	codegen passes [25]
time: 1.715; rss: 1444MB	codegen passes [9]
time: 1.627; rss: 1452MB	codegen passes [15]
time: 1.316; rss: 1459MB	codegen passes [8]
time: 1.364; rss: 1473MB	codegen passes [30]
time: 1.969; rss: 1445MB	codegen passes [16]
time: 2.041; rss: 1440MB	codegen passes [13]
time: 1.925; rss: 1469MB	codegen passes [1]
time: 2.211; rss: 1462MB	codegen passes [26]
time: 1.806; rss: 1450MB	codegen passes [32]
time: 2.278; rss: 1463MB	codegen passes [22]
time: 2.535; rss: 1571MB	codegen passes [27]
time: 3.192; rss: 1624MB	codegen passes [0]
time: 3.168; rss: 1608MB	codegen passes [19]
time: 3.586; rss: 1616MB	codegen passes [17]
time: 3.454; rss: 1606MB	codegen passes [14]
time: 3.464; rss: 1609MB	codegen passes [29]
time: 3.656; rss: 1637MB	codegen passes [18]
time: 3.641; rss: 1696MB	codegen passes [3]
time: 4.204; rss: 1654MB	codegen passes [20]
time: 4.457; rss: 1604MB	codegen passes [7]
time: 4.055; rss: 1579MB	codegen passes [33]
time: 4.189; rss: 1539MB	codegen passes [28]
time: 4.606; rss: 1495MB	codegen passes [11]
time: 4.157; rss: 1477MB	codegen passes [31]
time: 5.063; rss: 1472MB	codegen passes [10]
time: 5.499; rss: 1397MB	codegen passes [24]
time: 5.222; rss: 1324MB	codegen passes [12]
time: 7.775; rss: 1321MB	LLVM passes
time: 0.000; rss: 1321MB	serialize work products
time: 1.186; rss: 289MB	linking
done
