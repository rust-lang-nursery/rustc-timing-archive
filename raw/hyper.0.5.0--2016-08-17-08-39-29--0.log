commit 6c0d66af693dc960e042631643b0d76a05a4b9a9
Merge: d6d0590 879637f
Author: bors <bors@rust-lang.org>
Date:   Wed Aug 17 03:20:13 2016 -0700

    Auto merge of #35236 - nrc:rustdoc-redirects, r=@alexcrichton
    
    rustdoc: redirect URLs
    
    cc #35020 which does this properly
    
    r? @alexcrichton
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling httparse v0.1.6
   Compiling traitobject v0.0.1
   Compiling unicase v0.1.0
   Compiling log v0.3.6
   Compiling libc v0.2.15
   Compiling gcc v0.3.32
   Compiling matches v0.1.2
   Compiling bitflags v0.3.3
   Compiling pkg-config v0.3.8
   Compiling winapi v0.2.8
   Compiling typeable v0.1.2
   Compiling winapi-build v0.1.1
   Compiling lazy_static v0.1.16
   Compiling rustc-serialize v0.3.19
   Compiling mime v0.0.11
   Compiling kernel32-sys v0.2.2
   Compiling libc v0.1.12
   Compiling num_cpus v0.2.13
   Compiling time v0.1.35
   Compiling rand v0.3.14
   Compiling openssl-sys v0.6.7
   Compiling openssl v0.6.7
   Compiling uuid v0.1.18
   Compiling url v0.2.38
   Compiling cookie v0.1.21
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.027; rss: 50MB	parsing
Lines of code:             9154
Pre-expansion node count:  44838
time: 0.003; rss: 50MB	configuration
time: 0.000; rss: 50MB	recursion limit
time: 0.000; rss: 50MB	crate injection
time: 0.000; rss: 50MB	plugin loading
time: 0.000; rss: 50MB	plugin registration
time: 0.097; rss: 92MB	expansion
time: 0.000; rss: 92MB	maybe building test harness
time: 0.005; rss: 92MB	assigning node ids
Post-expansion node count: 101581
time: 0.000; rss: 92MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 92MB	complete gated feature checking
time: 0.003; rss: 92MB	collecting defs
time: 0.011; rss: 103MB	external crate/lib resolution
time: 0.003; rss: 103MB	early lint checks
time: 0.001; rss: 103MB	AST validation
time: 0.020; rss: 109MB	name resolution
time: 0.009; rss: 116MB	lowering ast -> hir
time: 0.002; rss: 118MB	indexing hir
time: 0.001; rss: 118MB	attribute checking
time: 0.001; rss: 111MB	language item collection
time: 0.002; rss: 111MB	lifetime resolution
time: 0.000; rss: 111MB	looking for entry point
time: 0.000; rss: 111MB	looking for plugin registrar
time: 0.006; rss: 115MB	region resolution
time: 0.001; rss: 115MB	loop checking
time: 0.001; rss: 115MB	static item recursion checking
time: 0.000; rss: 115MB	load_dep_graph
time: 0.024; rss: 117MB	type collecting
time: 0.000; rss: 117MB	variance inference
time: 0.038; rss: 123MB	coherence checking
time: 0.070; rss: 124MB	wf checking
time: 0.031; rss: 124MB	item-types checking
time: 0.424; rss: 135MB	item-bodies checking
time: 0.000; rss: 135MB	drop-impl checking
time: 0.040; rss: 137MB	const checking
time: 0.006; rss: 137MB	privacy checking
time: 0.001; rss: 137MB	stability index
time: 0.006; rss: 137MB	intrinsic checking
time: 0.002; rss: 137MB	effect checking
time: 0.014; rss: 137MB	match checking
time: 0.005; rss: 138MB	liveness checking
time: 0.029; rss: 138MB	rvalue checking
time: 0.058; rss: 155MB	MIR dump
time: 0.044; rss: 156MB	MIR passes
time: 0.066; rss: 156MB	borrow checking
time: 0.003; rss: 156MB	reachability checking
time: 0.005; rss: 156MB	death checking
time: 0.005; rss: 156MB	stability checking
time: 0.000; rss: 156MB	unused lib feature checking
time: 0.046; rss: 156MB	lint checking
time: 0.000; rss: 156MB	resolving dependency formats
time: 0.087; rss: 158MB	Prepare MIR codegen passes
  time: 0.128; rss: 162MB	write metadata
  time: 0.152; rss: 170MB	translation item collection
  time: 0.020; rss: 172MB	codegen unit partitioning
  time: 0.037; rss: 301MB	internalize symbols
time: 1.754; rss: 301MB	translation
time: 0.000; rss: 301MB	assert dep graph
time: 0.000; rss: 301MB	serialize dep graph
  time: 0.103; rss: 181MB	llvm function passes [0]
  time: 0.049; rss: 182MB	llvm module passes [0]
  time: 1.845; rss: 185MB	codegen passes [0]
  time: 0.001; rss: 185MB	codegen passes [0]
time: 2.156; rss: 185MB	LLVM passes
time: 0.000; rss: 185MB	serialize work products
time: 0.156; rss: 118MB	linking
done
