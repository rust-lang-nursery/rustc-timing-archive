commit cde61ba7f786d73592743e17af93077405cc4c97
Merge: 141012d 63ded05
Author: bors <bors@rust-lang.org>
Date:   Sat Sep 17 02:51:13 2016 -0700

    Auto merge of #36485 - nnethercote:char_lit-2, r=nagisa
    
    Overhaul char_lit()
    
    This commit does the following.
    
    - Removes parsing support for '\X12', '\u123456' and '\U12345678' char
      literals. These are no longer valid Rust and rejected by the lexer.
      (This strange-sounding situation occurs because the parser rescans
      char literals to compute their value.)
    
    - Rearranges the function so that all the escaped values are handled in
      a single `match`. The error-handling strategy is based on the one used
      by byte_lit().
rustc: ./issue-32062-equality-relations-complexity
/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc issue-32062.rs -Ztime-passes -Zinput-stats
time: 0.001; rss: 42MB	parsing
Lines of code:             60
Pre-expansion node count:  582
time: 0.000; rss: 42MB	recursion limit
time: 0.000; rss: 42MB	crate injection
time: 0.000; rss: 42MB	plugin loading
time: 0.000; rss: 42MB	plugin registration
time: 0.024; rss: 66MB	expansion
time: 0.000; rss: 66MB	maybe building test harness
time: 0.000; rss: 66MB	maybe creating a macro crate
time: 0.000; rss: 66MB	assigning node ids
Post-expansion node count: 595
time: 0.000; rss: 66MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 66MB	complete gated feature checking
time: 0.000; rss: 66MB	collecting defs
time: 0.002; rss: 66MB	external crate/lib resolution
time: 0.000; rss: 66MB	early lint checks
time: 0.000; rss: 66MB	AST validation
time: 0.000; rss: 66MB	name resolution
time: 0.000; rss: 66MB	lowering ast -> hir
time: 0.000; rss: 66MB	indexing hir
time: 0.000; rss: 66MB	attribute checking
time: 0.000; rss: 66MB	language item collection
time: 0.000; rss: 66MB	lifetime resolution
time: 0.000; rss: 66MB	looking for entry point
time: 0.000; rss: 66MB	looking for plugin registrar
time: 0.000; rss: 66MB	region resolution
time: 0.000; rss: 66MB	loop checking
time: 0.000; rss: 66MB	static item recursion checking
time: 0.000; rss: 66MB	compute_incremental_hashes_map
time: 0.000; rss: 66MB	load_dep_graph
time: 0.001; rss: 70MB	type collecting
time: 0.000; rss: 70MB	variance inference
time: 0.005; rss: 70MB	coherence checking
time: 0.006; rss: 70MB	wf checking
time: 0.000; rss: 70MB	item-types checking
time: 0.025; rss: 70MB	item-bodies checking
time: 0.000; rss: 70MB	drop-impl checking
time: 0.001; rss: 70MB	const checking
time: 0.000; rss: 70MB	privacy checking
time: 0.000; rss: 70MB	stability index
time: 0.000; rss: 70MB	intrinsic checking
time: 0.000; rss: 70MB	effect checking
time: 0.000; rss: 70MB	match checking
time: 0.000; rss: 70MB	liveness checking
time: 0.001; rss: 70MB	rvalue checking
time: 0.001; rss: 70MB	MIR dump
  time: 0.000; rss: 70MB	SimplifyCfg
  time: 0.000; rss: 70MB	QualifyAndPromoteConstants
  time: 0.000; rss: 70MB	TypeckMir
  time: 0.000; rss: 70MB	SimplifyBranches
  time: 0.000; rss: 70MB	SimplifyCfg
time: 0.000; rss: 70MB	MIR passes
time: 0.001; rss: 70MB	borrow checking
time: 0.000; rss: 70MB	reachability checking
time: 0.000; rss: 70MB	death checking
time: 0.000; rss: 70MB	stability checking
time: 0.000; rss: 70MB	unused lib feature checking
time: 0.000; rss: 70MB	lint checking
time: 0.001; rss: 70MB	resolving dependency formats
  time: 0.000; rss: 70MB	NoLandingPads
  time: 0.000; rss: 70MB	SimplifyCfg
  time: 0.000; rss: 70MB	EraseRegions
  time: 0.000; rss: 70MB	AddCallGuards
  time: 0.005; rss: 70MB	ElaborateDrops
  time: 0.000; rss: 70MB	NoLandingPads
  time: 0.000; rss: 70MB	SimplifyCfg
  time: 0.000; rss: 70MB	Deaggregator
  time: 0.000; rss: 70MB	AddCallGuards
  time: 0.000; rss: 70MB	PreTrans
time: 0.005; rss: 70MB	Prepare MIR codegen passes
  time: 0.000; rss: 70MB	write metadata
  time: 0.042; rss: 70MB	translation item collection
  time: 0.000; rss: 70MB	codegen unit partitioning
  time: 0.000; rss: 74MB	internalize symbols
time: 0.122; rss: 74MB	translation
time: 0.000; rss: 74MB	assert dep graph
time: 0.000; rss: 74MB	serialize dep graph
  time: 0.000; rss: 74MB	llvm function passes [0]
  time: 0.000; rss: 74MB	llvm module passes [0]
  time: 0.008; rss: 79MB	codegen passes [0]
  time: 0.000; rss: 79MB	codegen passes [0]
time: 0.010; rss: 79MB	LLVM passes
time: 0.000; rss: 79MB	serialize work products
  time: 0.107; rss: 79MB	running linker
time: 0.107; rss: 79MB	linking
done
