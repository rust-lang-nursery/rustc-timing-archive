commit 6dc035ed911672c6a1f7afc9eed15fb08e574e5b
Merge: 98a3502 0b2746c
Author: bors <bors@rust-lang.org>
Date:   Sat Oct 15 19:49:12 2016 -0700

    Auto merge of #37098 - ollie27:rustdoc_playground, r=GuillaumeGomez
    
    rustdoc: Improve playground run buttons
    
    The main change is to stop using javascript to generate the URLs and use
    rustdoc instead.
    
    This also adds run buttons to the error index examples.
    
    You can test the changes at https://ollie27.github.io/rust_doc_test/.
    
    Fixes #36621
    Fixes #36910
rustc: ./html5ever-2016-08-25
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling html5ever v0.5.4 (file:///root/benchmarks/html5ever-2016-08-25)
time: 0.027; rss: 52MB	parsing
Lines of code:             8210
Pre-expansion node count:  52238
time: 0.000; rss: 52MB	recursion limit
time: 0.000; rss: 52MB	crate injection
time: 0.000; rss: 52MB	plugin loading
time: 0.000; rss: 52MB	plugin registration
time: 1.284; rss: 106MB	expansion
time: 0.000; rss: 106MB	maybe building test harness
time: 0.003; rss: 106MB	maybe creating a macro crate
Post-expansion node count: 163524
time: 0.000; rss: 106MB	checking for inline asm in case the target doesn't support it
time: 0.005; rss: 106MB	complete gated feature checking
time: 0.011; rss: 106MB	early lint checks
time: 0.002; rss: 106MB	AST validation
time: 0.019; rss: 109MB	name resolution
time: 0.017; rss: 125MB	lowering ast -> hir
time: 0.004; rss: 130MB	indexing hir
time: 0.002; rss: 130MB	attribute checking
time: 0.002; rss: 107MB	language item collection
time: 0.003; rss: 107MB	lifetime resolution
time: 0.000; rss: 107MB	looking for entry point
time: 0.000; rss: 107MB	looking for plugin registrar
time: 0.016; rss: 113MB	region resolution
time: 0.002; rss: 113MB	loop checking
time: 0.003; rss: 113MB	static item recursion checking
time: 0.025; rss: 114MB	compute_incremental_hashes_map
time: 0.000; rss: 114MB	load_dep_graph
time: 0.010; rss: 116MB	type collecting
time: 0.000; rss: 116MB	variance inference
time: 0.026; rss: 119MB	coherence checking
time: 0.025; rss: 119MB	wf checking
time: 0.355; rss: 130MB	item-types checking
time: 0.520; rss: 140MB	item-bodies checking
time: 0.000; rss: 140MB	drop-impl checking
time: 0.073; rss: 144MB	const checking
time: 0.009; rss: 144MB	privacy checking
time: 0.002; rss: 144MB	stability index
time: 0.003; rss: 144MB	intrinsic checking
time: 0.003; rss: 144MB	effect checking
time: 0.024; rss: 144MB	match checking
time: 0.013; rss: 137MB	liveness checking
time: 0.026; rss: 137MB	rvalue checking
time: 0.117; rss: 190MB	MIR dump
  time: 0.009; rss: 177MB	SimplifyCfg
  time: 0.014; rss: 178MB	QualifyAndPromoteConstants
  time: 0.024; rss: 178MB	TypeckMir
  time: 0.000; rss: 178MB	SimplifyBranches
  time: 0.004; rss: 178MB	SimplifyCfg
time: 0.052; rss: 178MB	MIR passes
time: 0.089; rss: 187MB	borrow checking
time: 0.003; rss: 187MB	reachability checking
time: 0.007; rss: 187MB	death checking
time: 0.008; rss: 187MB	stability checking
time: 0.000; rss: 187MB	unused lib feature checking
time: 0.065; rss: 187MB	lint checking
time: 0.000; rss: 187MB	resolving dependency formats
  time: 0.000; rss: 187MB	NoLandingPads
  time: 0.004; rss: 187MB	SimplifyCfg
  time: 0.010; rss: 187MB	EraseRegions
  time: 0.001; rss: 187MB	AddCallGuards
  time: 0.075; rss: 191MB	ElaborateDrops
  time: 0.000; rss: 191MB	NoLandingPads
  time: 0.006; rss: 190MB	SimplifyCfg
  time: 0.008; rss: 188MB	InstCombine
  time: 0.001; rss: 188MB	Deaggregator
  time: 0.000; rss: 188MB	CopyPropagation
  time: 0.001; rss: 188MB	AddCallGuards
  time: 0.000; rss: 188MB	PreTrans
time: 0.107; rss: 188MB	Prepare MIR codegen passes
  time: 0.052; rss: 189MB	write metadata
  time: 0.049; rss: 191MB	translation item collection
  time: 0.005; rss: 191MB	codegen unit partitioning
  time: 0.006; rss: 205MB	internalize symbols
time: 0.350; rss: 175MB	translation
time: 0.000; rss: 175MB	assert dep graph
time: 0.000; rss: 175MB	serialize dep graph
  time: 0.020; rss: 105MB	llvm function passes [0]
  time: 0.012; rss: 106MB	llvm module passes [0]
  time: 0.451; rss: 109MB	codegen passes [0]
  time: 0.001; rss: 109MB	codegen passes [0]
time: 0.523; rss: 109MB	LLVM passes
time: 0.000; rss: 109MB	serialize work products
time: 0.058; rss: 92MB	linking
done
