commit 772c600d4d6f39daa6d07d1a60ee0df3d3426978
Merge: 241a9d0 432eb8a
Author: bors <bors@rust-lang.org>
Date:   Tue Apr 5 18:58:24 2016 -0700

    Auto merge of #32688 - jseyfried:ast_groundwork_for_1422, r=pnkfelix
    
    [breaking-batch] Add support for `pub(restricted)` syntax in the AST
    
    This PR allows the AST to represent the `pub(restricted)` syntax from RFC 1422 (cc #32409).
    
    More specifically, it makes `ast::Visibility` non-`Copy` and adds two new variants, `Visibility::Crate` for `pub(crate)` and `Visitibility::Restricted { path: P<Path>, id: NodeId }` for `pub(path)`.
    
    plugin-[breaking-change] cc #31645
    r? @pnkfelix
rustc: ./jld-day15-parser
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling day15 v0.1.0 (file:///root/benchmarks/jld-day15-parser)
time: 0.001; rss: 37MB	parsing
Lines of code:             72
Pre-expansion node count:  673
time: 0.000; rss: 37MB	configuration 1
time: 0.000; rss: 37MB	recursion limit
time: 0.000; rss: 37MB	gated macro checking
time: 0.000; rss: 37MB	crate injection
time: 0.003; rss: 41MB	macro loading
time: 0.000; rss: 41MB	plugin loading
time: 0.000; rss: 41MB	plugin registration
time: 0.002; rss: 41MB	expansion
time: 0.000; rss: 41MB	complete gated feature checking 1
time: 0.000; rss: 41MB	configuration 2
time: 0.000; rss: 41MB	gated configuration checking
time: 0.000; rss: 41MB	maybe building test harness
time: 0.000; rss: 41MB	prelude injection
time: 0.000; rss: 41MB	checking that all macro invocations are gone
time: 0.000; rss: 41MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 41MB	complete gated feature checking 2
time: 0.000; rss: 41MB	const fn bodies and arguments
Post-expansion node count: 1176
time: 0.000; rss: 41MB	assigning node ids
time: 0.000; rss: 41MB	lowering ast -> hir
time: 0.000; rss: 41MB	indexing hir
time: 0.000; rss: 41MB	attribute checking
time: 0.000; rss: 41MB	early lint checks
time: 0.001; rss: 45MB	external crate/lib resolution
time: 0.000; rss: 45MB	language item collection
time: 0.001; rss: 49MB	resolution
time: 0.000; rss: 49MB	lifetime resolution
time: 0.000; rss: 49MB	looking for entry point
time: 0.000; rss: 49MB	looking for plugin registrar
time: 0.000; rss: 49MB	region resolution
time: 0.000; rss: 49MB	loop checking
time: 0.000; rss: 49MB	static item recursion checking
time: 0.001; rss: 53MB	type collecting
time: 0.000; rss: 53MB	variance inference
time: 0.005; rss: 58MB	coherence checking
time: 0.006; rss: 64MB	wf checking
time: 0.000; rss: 64MB	item-types checking
time: 1.511; rss: 139MB	item-bodies checking
time: 0.000; rss: 139MB	drop-impl checking
time: 0.001; rss: 139MB	const checking
time: 0.000; rss: 139MB	privacy checking
time: 0.000; rss: 139MB	stability index
time: 0.000; rss: 139MB	intrinsic checking
time: 0.000; rss: 139MB	effect checking
time: 0.000; rss: 139MB	match checking
time: 0.000; rss: 139MB	liveness checking
time: 0.002; rss: 139MB	rvalue checking
time: 0.001; rss: 140MB	MIR dump
time: 0.000; rss: 140MB	MIR passes
time: 0.001; rss: 140MB	borrow checking
time: 0.000; rss: 140MB	reachability checking
time: 0.000; rss: 140MB	death checking
time: 0.000; rss: 140MB	stability checking
time: 0.000; rss: 140MB	unused lib feature checking
time: 0.004; rss: 142MB	lint checking
time: 0.001; rss: 142MB	resolving dependency formats
time: 0.000; rss: 142MB	Prepare MIR codegen passes
  time: 12.523; rss: 184MB	translation item collection
  time: 0.000; rss: 223MB	write metadata
time: 39.398; rss: 223MB	translation
  time: 0.014; rss: 102MB	llvm function passes [0]
  time: 0.001; rss: 102MB	llvm module passes [0]
  time: 0.273; rss: 108MB	codegen passes [0]
  time: 0.000; rss: 101MB	codegen passes [0]
time: 0.296; rss: 100MB	LLVM passes
  time: 0.120; rss: 100MB	running linker
time: 0.120; rss: 100MB	linking
done
