commit 8492b6aa4545e3e86f3b144c9a3834c31c612e38
Merge: 5029a60 915fa57
Author: bors <bors@rust-lang.org>
Date:   Sat May 14 11:56:58 2016 -0700

    Auto merge of #33579 - Amanieu:atomic_bool2, r=alexcrichton
    
    Make AtomicBool the same size as bool
    
    Reopening #32365
    
    This allows `AtomicBool` to be transmuted to a `bool`, which makes it more consistent with the other atomic types. Note that this now guarantees that the atomic type will always contain a valid `bool` value, which wasn't the case before (due to `fetch_nand`).
    
    r? @alexcrichton
rustc: ./issue-32278-big-array-of-strings
/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc big-array-of-strings.rs -Ztime-passes -Zinput-stats
time: 0.152; rss: 68MB	parsing
Lines of code:             65577
Pre-expansion node count:  65552
time: 0.012; rss: 68MB	configuration 1
time: 0.000; rss: 68MB	recursion limit
time: 0.000; rss: 68MB	crate injection
time: 0.004; rss: 73MB	macro loading
time: 0.000; rss: 73MB	plugin loading
time: 0.000; rss: 73MB	plugin registration
time: 0.042; rss: 77MB	expansion
time: 0.011; rss: 77MB	configuration 2
time: 0.000; rss: 77MB	gated configuration checking
time: 0.005; rss: 77MB	maybe building test harness
time: 0.005; rss: 77MB	prelude injection
time: 0.001; rss: 77MB	checking that all macro invocations are gone
time: 0.000; rss: 77MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 77MB	complete gated feature checking
Post-expansion node count: 65565
time: 0.006; rss: 77MB	assigning node ids
time: 0.001; rss: 77MB	collecting defs
time: 0.004; rss: 78MB	external crate/lib resolution
time: 0.008; rss: 78MB	early lint checks
time: 0.002; rss: 82MB	name resolution
time: 0.009; rss: 94MB	lowering ast -> hir
time: 0.002; rss: 96MB	indexing hir
time: 0.001; rss: 96MB	attribute checking
time: 0.001; rss: 85MB	language item collection
time: 0.001; rss: 85MB	lifetime resolution
time: 0.000; rss: 85MB	looking for entry point
time: 0.000; rss: 85MB	looking for plugin registrar
time: 0.007; rss: 90MB	region resolution
time: 0.001; rss: 90MB	loop checking
time: 0.002; rss: 90MB	static item recursion checking
time: 0.000; rss: 90MB	load_dep_graph
time: 0.000; rss: 90MB	type collecting
time: 0.000; rss: 90MB	variance inference
time: 0.006; rss: 99MB	coherence checking
time: 0.001; rss: 99MB	wf checking
time: 0.861; rss: 117MB	item-types checking
time: 0.000; rss: 117MB	item-bodies checking
time: 0.000; rss: 117MB	drop-impl checking
time: 0.019; rss: 115MB	const checking
time: 0.002; rss: 115MB	privacy checking
time: 0.001; rss: 115MB	stability index
time: 0.001; rss: 115MB	intrinsic checking
time: 0.000; rss: 115MB	effect checking
time: 0.000; rss: 115MB	match checking
time: 0.001; rss: 115MB	liveness checking
time: 0.000; rss: 115MB	rvalue checking
time: 0.058; rss: 128MB	MIR dump
time: 0.002; rss: 128MB	MIR passes
time: 0.001; rss: 128MB	borrow checking
time: 0.000; rss: 128MB	reachability checking
time: 0.001; rss: 128MB	death checking
time: 0.001; rss: 128MB	stability checking
time: 0.000; rss: 128MB	unused lib feature checking
time: 0.029; rss: 128MB	lint checking
time: 0.001; rss: 128MB	resolving dependency formats
time: 0.001; rss: 128MB	Prepare MIR codegen passes
  time: 0.001; rss: 129MB	translation item collection
  time: 0.000; rss: 129MB	codegen unit partitioning
  time: 0.000; rss: 145MB	write metadata
time: 0.086; rss: 131MB	translation
time: 0.000; rss: 131MB	assert dep graph
time: 0.000; rss: 131MB	serialize dep graph
  time: 0.003; rss: 90MB	llvm function passes [0]
  time: 0.000; rss: 90MB	llvm module passes [0]
  time: 0.162; rss: 91MB	codegen passes [0]
  time: 0.000; rss: 78MB	codegen passes [0]
time: 0.177; rss: 78MB	LLVM passes
  time: 0.184; rss: 78MB	running linker
time: 0.185; rss: 78MB	linking
done
