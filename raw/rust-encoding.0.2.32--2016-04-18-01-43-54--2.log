commit 63760acf31e605c8a91bb5cbcbcb4bfb95435e48
Merge: ed7c567 6ae8027
Author: bors <bors@rust-lang.org>
Date:   Sun Apr 17 19:11:20 2016 -0700

    Auto merge of #33064 - jseyfried:improve_resolve_performance, r=eddyb
    
    resolve: Improve performance
    
    This fixes #33061 by speeding up searchs through all traits in scope, a bottleneck in `resolve`.
    
    According to my measurements, this PR improves resolution performance by a factor of 3.4x on `librustc`, which almost completely reverses the 3.75x performance regression reported in #33061.
    
    r? @eddyb
rustc: ./rust-encoding.0.2.32
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling encoding v0.2.32 (file:///root/benchmarks/rust-encoding.0.2.32)
time: 0.032; rss: 42MB	parsing
Lines of code:             6441
Pre-expansion node count:  30335
time: 0.006; rss: 43MB	configuration 1
time: 0.000; rss: 43MB	recursion limit
time: 0.000; rss: 43MB	gated macro checking
time: 0.000; rss: 43MB	crate injection
time: 0.003; rss: 45MB	macro loading
time: 0.000; rss: 45MB	plugin loading
time: 0.000; rss: 45MB	plugin registration
time: 0.045; rss: 48MB	expansion
time: 0.001; rss: 48MB	complete gated feature checking 1
time: 0.006; rss: 48MB	configuration 2
time: 0.000; rss: 48MB	gated configuration checking
time: 0.003; rss: 48MB	maybe building test harness
time: 0.003; rss: 48MB	prelude injection
time: 0.000; rss: 48MB	checking that all macro invocations are gone
time: 0.000; rss: 48MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 48MB	complete gated feature checking 2
time: 0.000; rss: 48MB	const fn bodies and arguments
Post-expansion node count: 41611
time: 0.003; rss: 48MB	assigning node ids
time: 0.006; rss: 50MB	lowering ast -> hir
time: 0.002; rss: 51MB	indexing hir
time: 0.000; rss: 51MB	attribute checking
time: 0.002; rss: 51MB	early lint checks
time: 0.001; rss: 52MB	external crate/lib resolution
time: 0.000; rss: 52MB	language item collection
time: 0.008; rss: 61MB	resolution
time: 0.001; rss: 61MB	lifetime resolution
time: 0.000; rss: 61MB	looking for entry point
time: 0.000; rss: 61MB	looking for plugin registrar
time: 0.002; rss: 62MB	region resolution
time: 0.000; rss: 62MB	loop checking
time: 0.000; rss: 62MB	static item recursion checking
time: 0.000; rss: 62MB	load_dep_graph
time: 0.005; rss: 64MB	type collecting
time: 0.000; rss: 64MB	variance inference
time: 0.022; rss: 81MB	coherence checking
time: 0.017; rss: 82MB	wf checking
time: 0.013; rss: 82MB	item-types checking
time: 0.213; rss: 92MB	item-bodies checking
time: 0.000; rss: 92MB	drop-impl checking
time: 0.011; rss: 92MB	const checking
time: 0.003; rss: 92MB	privacy checking
time: 0.000; rss: 92MB	stability index
time: 0.001; rss: 92MB	intrinsic checking
time: 0.000; rss: 92MB	effect checking
time: 0.006; rss: 92MB	match checking
time: 0.002; rss: 92MB	liveness checking
time: 0.006; rss: 92MB	rvalue checking
time: 0.030; rss: 99MB	MIR dump
time: 0.009; rss: 99MB	MIR passes
time: 0.022; rss: 99MB	borrow checking
time: 0.000; rss: 99MB	reachability checking
time: 0.002; rss: 99MB	death checking
time: 0.002; rss: 99MB	stability checking
time: 0.000; rss: 99MB	unused lib feature checking
time: 0.024; rss: 100MB	lint checking
time: 0.000; rss: 100MB	resolving dependency formats
time: 0.004; rss: 101MB	Prepare MIR codegen passes
  time: 0.031; rss: 113MB	translation item collection
  time: 0.002; rss: 114MB	codegen unit partitioning
  time: 0.059; rss: 147MB	write metadata
time: 0.404; rss: 147MB	translation
time: 0.000; rss: 147MB	assert dep graph
time: 0.000; rss: 147MB	serialize dep graph
  time: 0.026; rss: 110MB	llvm function passes [0]
  time: 0.050; rss: 114MB	llvm module passes [0]
  time: 0.582; rss: 118MB	codegen passes [0]
  time: 0.001; rss: 104MB	codegen passes [0]
time: 0.726; rss: 103MB	LLVM passes
time: 0.054; rss: 101MB	linking
done
