commit 303892ee156e5c31222b10786e661abb24dcf241
Merge: 074f49a 58f1b9c
Author: bors <bors@rust-lang.org>
Date:   Sat Jan 30 00:25:44 2016 +0000

    Auto merge of #30448 - alexcrichton:llvmup, r=nikomatsakis
    
    These commits perform a few high-level changes with the goal of enabling i686 MSVC unwinding:
    
    * LLVM is upgraded to pick up the new exception handling instructions and intrinsics for MSVC. This puts us somewhere along the 3.8 branch, but we should still be compatible with LLVM 3.7 for non-MSVC targets.
    * All unwinding for MSVC targets (both 32 and 64-bit) are implemented in terms of this new LLVM support. I would like to also extend this to Windows GNU targets to drop the runtime dependencies we have on MinGW, but I'd like to land this first.
    * Some tests were fixed up for i686 MSVC here and there where necessary. The full test suite should be passing now for that target.
    
    In terms of landing this I plan to have this go through first, then verify that i686 MSVC works, then I'll enable `make check` on the bots for that target instead of just `make` as-is today.
    
    Closes #25869
rustc: ./inflate-0.1.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling inflate v0.1.0 (file:///root/benchmarks/inflate-0.1.0)
time: 0.004; rss: 37MB	parsing
Lines of code:             956
Pre-expansion node count:  4761
time: 0.001; rss: 37MB	configuration 1
time: 0.000; rss: 37MB	recursion limit
time: 0.000; rss: 37MB	gated macro checking
time: 0.000; rss: 37MB	crate injection
time: 0.003; rss: 40MB	macro loading
time: 0.000; rss: 40MB	plugin loading
time: 0.000; rss: 40MB	plugin registration
time: 0.082; rss: 47MB	expansion
time: 0.001; rss: 47MB	complete gated feature checking 1
time: 0.009; rss: 47MB	configuration 2
time: 0.000; rss: 47MB	gated configuration checking
time: 0.004; rss: 47MB	maybe building test harness
time: 0.004; rss: 47MB	prelude injection
time: 0.000; rss: 47MB	checking that all macro invocations are gone
time: 0.000; rss: 47MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 47MB	complete gated feature checking 2
Post-expansion node count: 54798
time: 0.004; rss: 47MB	assigning node ids
time: 0.008; rss: 51MB	lowering ast -> hir
time: 0.002; rss: 53MB	indexing hir
time: 0.000; rss: 53MB	attribute checking
time: 0.003; rss: 53MB	early lint checks
time: 0.001; rss: 51MB	external crate/lib resolution
time: 0.001; rss: 51MB	language item collection
time: 0.009; rss: 59MB	resolution
time: 0.001; rss: 59MB	lifetime resolution
time: 0.000; rss: 59MB	looking for entry point
time: 0.000; rss: 59MB	looking for plugin registrar
time: 0.003; rss: 59MB	region resolution
time: 0.000; rss: 59MB	loop checking
time: 0.000; rss: 59MB	static item recursion checking
time: 0.001; rss: 59MB	type collecting
time: 0.000; rss: 59MB	variance inference
time: 0.009; rss: 73MB	coherence checking
time: 0.002; rss: 73MB	wf checking
time: 0.002; rss: 75MB	item-types checking
time: 27.704; rss: 101MB	item-bodies checking
time: 0.000; rss: 101MB	drop-impl checking
time: 0.019; rss: 101MB	const checking
time: 0.003; rss: 101MB	privacy checking
time: 0.000; rss: 101MB	stability index
time: 0.001; rss: 101MB	intrinsic checking
time: 0.001; rss: 101MB	effect checking
time: 0.005; rss: 101MB	match checking
time: 0.035; rss: 105MB	MIR dump
time: 0.075; rss: 105MB	liveness checking
time: 0.247; rss: 107MB	borrow checking
time: 0.010; rss: 107MB	rvalue checking
time: 0.000; rss: 107MB	reachability checking
time: 0.002; rss: 107MB	death checking
time: 0.002; rss: 107MB	stability checking
time: 0.000; rss: 107MB	unused lib feature checking
time: 0.017; rss: 107MB	lint checking
time: 0.000; rss: 107MB	resolving dependency formats
time: 0.002; rss: 107MB	erasing regions from MIR
  time: 0.003; rss: 136MB	write metadata
time: 0.380; rss: 130MB	translation
  time: 0.027; rss: 97MB	llvm function passes [0]
  time: 0.005; rss: 97MB	llvm module passes [0]
  time: 0.470; rss: 143MB	codegen passes [0]
  time: 0.000; rss: 145MB	codegen passes [0]
time: 0.544; rss: 145MB	LLVM passes
time: 0.034; rss: 144MB	linking
done
