commit ca76c7e0148f87876dbf8ad1f7dd13fb9f268481
Merge: e51190c 2148bdf
Author: bors <bors@rust-lang.org>
Date:   Fri Oct 7 07:58:27 2016 -0700

    Auto merge of #36945 - alexcrichton:proc-macro-rename, r=nrc
    
    rustc: Rename rustc_macro to proc_macro
    
    This commit blanket renames the `rustc_macro` infrastructure to `proc_macro`,
    which reflects the general consensus of #35900. A follow up PR to Cargo will be
    required to purge the `rustc-macro` name as well.
rustc: ./syntex-0.42.2
cargo rustc -p syntex_syntax -- -Ztime-passes -Zinput-stats
   Compiling syntex_syntax v0.42.0
time: 0.109; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  224033
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.274; rss: 145MB	expansion
time: 0.000; rss: 145MB	maybe building test harness
time: 0.006; rss: 145MB	maybe creating a macro crate
Post-expansion node count: 641571
time: 0.000; rss: 145MB	checking for inline asm in case the target doesn't support it
time: 0.013; rss: 145MB	complete gated feature checking
time: 0.024; rss: 145MB	early lint checks
time: 0.007; rss: 145MB	AST validation
time: 0.084; rss: 160MB	name resolution
time: 0.050; rss: 202MB	lowering ast -> hir
time: 0.009; rss: 210MB	indexing hir
time: 0.006; rss: 210MB	attribute checking
time: 0.006; rss: 160MB	language item collection
time: 0.012; rss: 160MB	lifetime resolution
time: 0.000; rss: 160MB	looking for entry point
time: 0.000; rss: 160MB	looking for plugin registrar
time: 0.044; rss: 172MB	region resolution
time: 0.006; rss: 172MB	loop checking
time: 0.006; rss: 172MB	static item recursion checking
time: 0.266; rss: 173MB	compute_incremental_hashes_map
time: 0.000; rss: 173MB	load_dep_graph
time: 0.081; rss: 174MB	type collecting
time: 0.001; rss: 174MB	variance inference
time: 0.040; rss: 178MB	coherence checking
time: 0.099; rss: 181MB	wf checking
time: 0.195; rss: 186MB	item-types checking
time: 3.990; rss: 240MB	item-bodies checking
time: 0.000; rss: 240MB	drop-impl checking
time: 0.315; rss: 240MB	const checking
time: 0.054; rss: 240MB	privacy checking
time: 0.007; rss: 240MB	stability index
time: 0.021; rss: 240MB	intrinsic checking
time: 0.018; rss: 240MB	effect checking
time: 0.056; rss: 240MB	match checking
time: 0.054; rss: 237MB	liveness checking
time: 0.284; rss: 237MB	rvalue checking
time: 0.426; rss: 426MB	MIR dump
  time: 0.057; rss: 427MB	SimplifyCfg
  time: 0.081; rss: 427MB	QualifyAndPromoteConstants
  time: 0.111; rss: 427MB	TypeckMir
  time: 0.004; rss: 427MB	SimplifyBranches
  time: 0.031; rss: 427MB	SimplifyCfg
time: 0.285; rss: 427MB	MIR passes
time: 0.681; rss: 427MB	borrow checking
time: 0.022; rss: 427MB	reachability checking
time: 0.045; rss: 427MB	death checking
time: 0.041; rss: 429MB	stability checking
time: 0.000; rss: 429MB	unused lib feature checking
time: 0.218; rss: 429MB	lint checking
time: 0.000; rss: 429MB	resolving dependency formats
  time: 0.003; rss: 429MB	NoLandingPads
  time: 0.027; rss: 429MB	SimplifyCfg
  time: 0.072; rss: 438MB	EraseRegions
  time: 0.011; rss: 438MB	AddCallGuards
  time: 1.039; rss: 454MB	ElaborateDrops
  time: 0.003; rss: 454MB	NoLandingPads
  time: 0.052; rss: 454MB	SimplifyCfg
  time: 0.030; rss: 454MB	InstCombine
  time: 0.012; rss: 454MB	Deaggregator
  time: 0.003; rss: 454MB	CopyPropagation
  time: 0.009; rss: 454MB	AddCallGuards
  time: 0.002; rss: 454MB	PreTrans
time: 1.263; rss: 454MB	Prepare MIR codegen passes
  time: 0.263; rss: 463MB	write metadata
  time: 0.475; rss: 473MB	translation item collection
  time: 0.068; rss: 479MB	codegen unit partitioning
  time: 0.059; rss: 723MB	internalize symbols
time: 5.232; rss: 602MB	translation
time: 0.000; rss: 602MB	assert dep graph
time: 0.000; rss: 602MB	serialize dep graph
  time: 0.510; rss: 410MB	llvm function passes [0]
  time: 0.243; rss: 418MB	llvm module passes [0]
  time: 10.004; rss: 417MB	codegen passes [0]
  time: 0.001; rss: 413MB	codegen passes [0]
time: 11.496; rss: 413MB	LLVM passes
time: 0.000; rss: 413MB	serialize work products
time: 0.656; rss: 106MB	linking
done
