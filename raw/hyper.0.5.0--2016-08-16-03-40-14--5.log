commit e25542cb02d946959517ebb68e2f7b1318817237
Merge: 197be89 f59f1f0
Author: bors <bors@rust-lang.org>
Date:   Tue Aug 16 00:12:12 2016 -0700

    Auto merge of #35162 - canndrew:bang_type_coerced, r=nikomatsakis
    
    Implement the `!` type
    
    This implements the never type (`!`) and hides it behind the feature gate `#[feature(never_type)]`. With the feature gate off, things should build as normal (although some error messages may be different). With the gate on, `!` is usable as a type and diverging type variables (ie. types that are unconstrained by anything in the code) will default to `!` instead of `()`.
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.026; rss: 50MB	parsing
Lines of code:             9154
Pre-expansion node count:  44838
time: 0.003; rss: 50MB	configuration
time: 0.000; rss: 50MB	recursion limit
time: 0.000; rss: 50MB	crate injection
time: 0.000; rss: 50MB	plugin loading
time: 0.000; rss: 50MB	plugin registration
time: 0.092; rss: 93MB	expansion
time: 0.000; rss: 93MB	maybe building test harness
time: 0.005; rss: 93MB	assigning node ids
Post-expansion node count: 101581
time: 0.000; rss: 93MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 93MB	complete gated feature checking
time: 0.003; rss: 93MB	collecting defs
time: 0.010; rss: 104MB	external crate/lib resolution
time: 0.003; rss: 104MB	early lint checks
time: 0.001; rss: 104MB	AST validation
time: 0.020; rss: 110MB	name resolution
time: 0.008; rss: 117MB	lowering ast -> hir
time: 0.002; rss: 119MB	indexing hir
time: 0.001; rss: 119MB	attribute checking
time: 0.001; rss: 112MB	language item collection
time: 0.002; rss: 112MB	lifetime resolution
time: 0.000; rss: 112MB	looking for entry point
time: 0.000; rss: 112MB	looking for plugin registrar
time: 0.006; rss: 116MB	region resolution
time: 0.001; rss: 116MB	loop checking
time: 0.001; rss: 116MB	static item recursion checking
time: 0.000; rss: 116MB	load_dep_graph
time: 0.023; rss: 117MB	type collecting
time: 0.000; rss: 117MB	variance inference
time: 0.047; rss: 125MB	coherence checking
time: 0.081; rss: 126MB	wf checking
time: 0.033; rss: 127MB	item-types checking
time: 0.488; rss: 139MB	item-bodies checking
time: 0.000; rss: 139MB	drop-impl checking
time: 0.043; rss: 141MB	const checking
time: 0.006; rss: 141MB	privacy checking
time: 0.001; rss: 141MB	stability index
time: 0.005; rss: 141MB	intrinsic checking
time: 0.002; rss: 141MB	effect checking
time: 0.013; rss: 141MB	match checking
time: 0.005; rss: 141MB	liveness checking
time: 0.030; rss: 141MB	rvalue checking
time: 0.056; rss: 158MB	MIR dump
time: 0.044; rss: 158MB	MIR passes
time: 0.068; rss: 158MB	borrow checking
time: 0.003; rss: 158MB	reachability checking
time: 0.005; rss: 158MB	death checking
time: 0.006; rss: 158MB	stability checking
time: 0.000; rss: 158MB	unused lib feature checking
time: 0.050; rss: 158MB	lint checking
time: 0.000; rss: 158MB	resolving dependency formats
time: 0.098; rss: 162MB	Prepare MIR codegen passes
  time: 0.130; rss: 172MB	write metadata
  time: 0.181; rss: 177MB	translation item collection
  time: 0.019; rss: 181MB	codegen unit partitioning
  time: 0.035; rss: 310MB	internalize symbols
time: 1.824; rss: 310MB	translation
time: 0.000; rss: 310MB	assert dep graph
time: 0.000; rss: 310MB	serialize dep graph
  time: 0.099; rss: 186MB	llvm function passes [0]
  time: 0.048; rss: 187MB	llvm module passes [0]
  time: 1.846; rss: 191MB	codegen passes [0]
  time: 0.001; rss: 191MB	codegen passes [0]
time: 2.159; rss: 191MB	LLVM passes
time: 0.000; rss: 191MB	serialize work products
time: 0.157; rss: 121MB	linking
done
