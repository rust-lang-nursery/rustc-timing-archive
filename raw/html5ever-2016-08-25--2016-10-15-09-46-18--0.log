commit 8e05e7ee3c19a5594b79d67c8390cef78970be7c
Merge: 030bc49 48b3dd1
Author: bors <bors@rust-lang.org>
Date:   Sat Oct 15 06:08:55 2016 -0700

    Auto merge of #37100 - dikaiosune:master, r=eddyb
    
    Change Substs to type alias for Slice<Kind> for interning
    
    This changes the definition of `librustc::ty::subst::Substs` to be a type alias to `Slice<Kind>`. `Substs` was already interned, but can now make use of the efficient `PartialEq` and `Hash` impls on `librustc::ty::Slice`.
    
    I'm working on collecting some timing data for this, will update when it's done.
    
    I chose to leave the impls on `Substs<'tcx>` even though it's now just a type alias to `Slice<Kind<'tcx>>` because it has the smallest footprint on other portions of the compiler which depend on its API. It turns out to be a pretty huge diff if you change where Substs's methods live :smile:. That said, I'm not necessarily sure it's the *best* implementation but it's probably the easiest/smallest to review.
    
    Many thanks to @eddyb for both suggesting this as a project for learning more about the compiler, and the tireless ~~handholding~~ mentorship he provided.
rustc: ./html5ever-2016-08-25
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling serde v0.8.9
   Compiling rustc-serialize v0.3.19
   Compiling matches v0.1.2
   Compiling phf_shared v0.7.16
   Compiling mac v0.0.2
   Compiling void v1.0.2
   Compiling log v0.3.6
   Compiling encoding_index_tests v0.1.4
   Compiling libc v0.2.16
   Compiling lazy_static v0.2.1
   Compiling unreachable v0.1.1
   Compiling encoding-index-japanese v1.20141219.5
   Compiling debug_unreachable v0.1.1
   Compiling encoding-index-korean v1.20141219.5
   Compiling encoding-index-singlebyte v1.20141219.5
   Compiling encoding-index-simpchinese v1.20141219.5
   Compiling encoding-index-tradchinese v1.20141219.5
   Compiling futf v0.1.2
   Compiling phf v0.7.16
   Compiling rand v0.3.14
   Compiling utf-8 v0.6.0
   Compiling encoding v0.2.33
   Compiling phf_generator v0.7.16
   Compiling phf_codegen v0.7.16
   Compiling string_cache v0.2.29
   Compiling tendril v0.2.3
   Compiling html5ever v0.5.4 (file:///root/benchmarks/html5ever-2016-08-25)
time: 0.027; rss: 51MB	parsing
Lines of code:             8210
Pre-expansion node count:  52238
time: 0.000; rss: 51MB	recursion limit
time: 0.000; rss: 51MB	crate injection
time: 0.000; rss: 51MB	plugin loading
time: 0.000; rss: 51MB	plugin registration
time: 1.275; rss: 104MB	expansion
time: 0.000; rss: 104MB	maybe building test harness
time: 0.002; rss: 104MB	maybe creating a macro crate
Post-expansion node count: 163524
time: 0.000; rss: 104MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 104MB	complete gated feature checking
time: 0.009; rss: 104MB	early lint checks
time: 0.002; rss: 104MB	AST validation
time: 0.018; rss: 107MB	name resolution
time: 0.016; rss: 125MB	lowering ast -> hir
time: 0.003; rss: 127MB	indexing hir
time: 0.002; rss: 127MB	attribute checking
time: 0.002; rss: 105MB	language item collection
time: 0.003; rss: 105MB	lifetime resolution
time: 0.000; rss: 105MB	looking for entry point
time: 0.000; rss: 105MB	looking for plugin registrar
time: 0.016; rss: 112MB	region resolution
time: 0.002; rss: 112MB	loop checking
time: 0.002; rss: 112MB	static item recursion checking
time: 0.022; rss: 112MB	compute_incremental_hashes_map
time: 0.000; rss: 112MB	load_dep_graph
time: 0.009; rss: 114MB	type collecting
time: 0.000; rss: 114MB	variance inference
time: 0.025; rss: 117MB	coherence checking
time: 0.024; rss: 118MB	wf checking
time: 0.347; rss: 128MB	item-types checking
time: 0.506; rss: 140MB	item-bodies checking
time: 0.000; rss: 140MB	drop-impl checking
time: 0.072; rss: 143MB	const checking
time: 0.009; rss: 143MB	privacy checking
time: 0.002; rss: 143MB	stability index
time: 0.004; rss: 143MB	intrinsic checking
time: 0.003; rss: 143MB	effect checking
time: 0.024; rss: 143MB	match checking
time: 0.013; rss: 137MB	liveness checking
time: 0.029; rss: 137MB	rvalue checking
time: 0.120; rss: 184MB	MIR dump
  time: 0.009; rss: 185MB	SimplifyCfg
  time: 0.015; rss: 185MB	QualifyAndPromoteConstants
  time: 0.024; rss: 185MB	TypeckMir
  time: 0.000; rss: 185MB	SimplifyBranches
  time: 0.004; rss: 185MB	SimplifyCfg
time: 0.051; rss: 185MB	MIR passes
time: 0.093; rss: 189MB	borrow checking
time: 0.003; rss: 189MB	reachability checking
time: 0.007; rss: 189MB	death checking
time: 0.009; rss: 189MB	stability checking
time: 0.000; rss: 189MB	unused lib feature checking
time: 0.064; rss: 189MB	lint checking
time: 0.000; rss: 189MB	resolving dependency formats
  time: 0.000; rss: 189MB	NoLandingPads
  time: 0.004; rss: 189MB	SimplifyCfg
  time: 0.010; rss: 189MB	EraseRegions
  time: 0.001; rss: 189MB	AddCallGuards
  time: 0.103; rss: 191MB	ElaborateDrops
  time: 0.000; rss: 191MB	NoLandingPads
  time: 0.006; rss: 188MB	SimplifyCfg
  time: 0.007; rss: 188MB	InstCombine
  time: 0.001; rss: 188MB	Deaggregator
  time: 0.000; rss: 188MB	CopyPropagation
  time: 0.001; rss: 188MB	AddCallGuards
  time: 0.000; rss: 188MB	PreTrans
time: 0.135; rss: 188MB	Prepare MIR codegen passes
  time: 0.052; rss: 188MB	write metadata
  time: 0.048; rss: 190MB	translation item collection
  time: 0.005; rss: 190MB	codegen unit partitioning
  time: 0.006; rss: 205MB	internalize symbols
time: 0.351; rss: 175MB	translation
time: 0.000; rss: 175MB	assert dep graph
time: 0.000; rss: 175MB	serialize dep graph
  time: 0.019; rss: 107MB	llvm function passes [0]
  time: 0.012; rss: 108MB	llvm module passes [0]
  time: 0.454; rss: 110MB	codegen passes [0]
  time: 0.001; rss: 110MB	codegen passes [0]
time: 0.525; rss: 110MB	LLVM passes
time: 0.000; rss: 110MB	serialize work products
time: 0.058; rss: 92MB	linking
done
