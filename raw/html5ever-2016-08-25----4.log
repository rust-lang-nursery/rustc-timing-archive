commit 6c9bb42ecc48ffb5a3c8b61e220b11adc3a46384
Merge: 7f2d2af a8535ce
Author: bors <bors@rust-lang.org>
Date:   Fri Dec 30 18:24:27 2016 +0000

    Auto merge of #38658 - alexcrichton:less-docs, r=nikomatsakis
    
    std: Don't build docs for misc facade crates
    
    Retain the same behavior as stable.
    
    Closes #38319
rustc 1.15.0-nightly (daf8c1dfc 2016-12-05)
-rwxr-xr-x 1 root root 9432 Dec  6 15:39 /usr/local/bin/rustc
rustc: ./html5ever-2016-08-25
cargo rustc  -- -Ztime-passes -Zinput-stats
time: 0.024; rss: 60MB	parsing
Lines of code:             8210
Pre-expansion node count:  52140
time: 0.000; rss: 64MB	recursion limit
time: 0.000; rss: 64MB	crate injection
time: 0.000; rss: 64MB	plugin loading
time: 0.000; rss: 64MB	plugin registration
time: 0.685; rss: 113MB	expansion
time: 0.000; rss: 113MB	maybe building test harness
time: 0.002; rss: 113MB	maybe creating a macro crate
Post-expansion node count: 163412
time: 0.000; rss: 113MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 113MB	complete gated feature checking
time: 0.009; rss: 113MB	early lint checks
time: 0.002; rss: 113MB	AST validation
time: 0.016; rss: 118MB	name resolution
time: 0.014; rss: 129MB	lowering ast -> hir
time: 0.003; rss: 131MB	indexing hir
time: 0.002; rss: 131MB	attribute checking
time: 0.001; rss: 112MB	language item collection
time: 0.002; rss: 112MB	lifetime resolution
time: 0.000; rss: 112MB	looking for entry point
time: 0.000; rss: 112MB	looking for plugin registrar
time: 0.013; rss: 118MB	region resolution
time: 0.001; rss: 118MB	loop checking
time: 0.001; rss: 118MB	static item recursion checking
time: 0.024; rss: 118MB	compute_incremental_hashes_map
time: 0.000; rss: 118MB	load_dep_graph
time: 0.001; rss: 118MB	stability index
time: 0.003; rss: 118MB	stability checking
time: 0.010; rss: 120MB	type collecting
time: 0.000; rss: 120MB	variance inference
time: 0.000; rss: 120MB	impl wf inference
time: 0.011; rss: 122MB	coherence checking
time: 0.019; rss: 123MB	wf checking
time: 0.265; rss: 129MB	item-types checking
time: 0.426; rss: 142MB	item-bodies checking
time: 0.000; rss: 142MB	drop-impl checking
time: 0.058; rss: 144MB	const checking
time: 0.006; rss: 144MB	privacy checking
time: 0.002; rss: 144MB	intrinsic checking
time: 0.002; rss: 144MB	effect checking
time: 0.014; rss: 144MB	match checking
time: 0.010; rss: 144MB	liveness checking
time: 0.021; rss: 144MB	rvalue checking
time: 0.100; rss: 186MB	MIR dump
  time: 0.008; rss: 187MB	SimplifyCfg
  time: 0.014; rss: 188MB	QualifyAndPromoteConstants
  time: 0.023; rss: 188MB	TypeckMir
  time: 0.000; rss: 188MB	SimplifyBranches
  time: 0.004; rss: 188MB	SimplifyCfg
time: 0.049; rss: 188MB	MIR cleanup and validation
time: 0.078; rss: 194MB	borrow checking
time: 0.002; rss: 194MB	reachability checking
time: 0.005; rss: 194MB	death checking
time: 0.000; rss: 194MB	unused lib feature checking
time: 0.056; rss: 194MB	lint checking
time: 0.000; rss: 194MB	resolving dependency formats
  time: 0.000; rss: 194MB	NoLandingPads
  time: 0.004; rss: 194MB	SimplifyCfg
  time: 0.009; rss: 194MB	EraseRegions
  time: 0.001; rss: 194MB	AddCallGuards
  time: 0.077; rss: 198MB	ElaborateDrops
  time: 0.000; rss: 198MB	NoLandingPads
  time: 0.007; rss: 195MB	SimplifyCfg
  time: 0.007; rss: 194MB	InstCombine
  time: 0.001; rss: 194MB	Deaggregator
  time: 0.000; rss: 194MB	CopyPropagation
  time: 0.007; rss: 191MB	SimplifyLocals
  time: 0.001; rss: 191MB	AddCallGuards
  time: 0.000; rss: 191MB	PreTrans
time: 0.115; rss: 191MB	MIR optimisations
  time: 0.012; rss: 192MB	write metadata
  time: 0.043; rss: 205MB	translation item collection
  time: 0.004; rss: 205MB	codegen unit partitioning
  time: 0.005; rss: 220MB	internalize symbols
time: 0.348; rss: 220MB	translation
time: 0.000; rss: 220MB	assert dep graph
time: 0.000; rss: 220MB	serialize dep graph
  time: 0.031; rss: 123MB	llvm function passes [0]
  time: 0.020; rss: 124MB	llvm module passes [0]
  time: 0.651; rss: 128MB	codegen passes [0]
  time: 0.000; rss: 128MB	codegen passes [0]
time: 0.755; rss: 127MB	LLVM passes
time: 0.000; rss: 127MB	serialize work products
time: 0.025; rss: 111MB	linking
done
