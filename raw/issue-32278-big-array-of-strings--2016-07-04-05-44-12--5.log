commit d508de6cf7c7bb9b5057ee63432dbbc899209101
Merge: d98da85 d37edef
Author: bors <bors@rust-lang.org>
Date:   Mon Jul 4 02:18:46 2016 -0700

    Auto merge of #34638 - zackmdavis:if_let_over_none_empty_block_arm, r=jseyfried
    
    prefer `if let` to match with `None => {}` arm in some places
    
    This is a spiritual succesor to #34268 / 8531d581, in which we replaced a
    number of matches of None to the unit value with `if let` conditionals
    where it was judged that this made for clearer/simpler code (as would be
    recommended by Manishearth/rust-clippy's `single_match` lint). The same
    rationale applies to matches of None to the empty block.
    
    ----
    
    r? @jseyfried
rustc: ./issue-32278-big-array-of-strings
/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc big-array-of-strings.rs -Ztime-passes -Zinput-stats
time: 0.182; rss: 101MB	parsing
Lines of code:             65577
Pre-expansion node count:  65552
time: 0.012; rss: 101MB	configuration
time: 0.000; rss: 101MB	recursion limit
time: 0.000; rss: 101MB	crate injection
time: 0.000; rss: 101MB	plugin loading
time: 0.000; rss: 101MB	plugin registration
time: 0.029; rss: 134MB	expansion
time: 0.000; rss: 134MB	maybe building test harness
time: 0.000; rss: 134MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 134MB	complete gated feature checking
Post-expansion node count: 65565
time: 0.006; rss: 134MB	assigning node ids
time: 0.001; rss: 134MB	collecting defs
time: 0.003; rss: 134MB	external crate/lib resolution
time: 0.008; rss: 134MB	early lint checks
time: 0.001; rss: 134MB	AST validation
time: 0.002; rss: 134MB	name resolution
time: 0.008; rss: 151MB	lowering ast -> hir
time: 0.002; rss: 155MB	indexing hir
time: 0.001; rss: 155MB	attribute checking
time: 0.001; rss: 149MB	language item collection
time: 0.001; rss: 149MB	lifetime resolution
time: 0.000; rss: 149MB	looking for entry point
time: 0.000; rss: 149MB	looking for plugin registrar
time: 0.008; rss: 154MB	region resolution
time: 0.001; rss: 154MB	loop checking
time: 0.001; rss: 154MB	static item recursion checking
time: 0.000; rss: 155MB	load_dep_graph
time: 0.000; rss: 155MB	type collecting
time: 0.000; rss: 155MB	variance inference
time: 0.005; rss: 157MB	coherence checking
time: 0.001; rss: 157MB	wf checking
time: 0.949; rss: 174MB	item-types checking
time: 0.000; rss: 174MB	item-bodies checking
time: 0.000; rss: 174MB	drop-impl checking
time: 0.020; rss: 177MB	const checking
time: 0.002; rss: 177MB	privacy checking
time: 0.001; rss: 177MB	stability index
time: 0.001; rss: 177MB	intrinsic checking
time: 0.000; rss: 177MB	effect checking
time: 0.000; rss: 177MB	match checking
time: 0.001; rss: 177MB	liveness checking
time: 0.000; rss: 177MB	rvalue checking
time: 0.052; rss: 183MB	MIR dump
time: 0.002; rss: 183MB	MIR passes
time: 0.001; rss: 183MB	borrow checking
time: 0.000; rss: 183MB	reachability checking
time: 0.001; rss: 183MB	death checking
time: 0.001; rss: 183MB	stability checking
time: 0.000; rss: 183MB	unused lib feature checking
time: 0.029; rss: 184MB	lint checking
time: 0.001; rss: 184MB	resolving dependency formats
time: 0.001; rss: 184MB	Prepare MIR codegen passes
  time: 0.000; rss: 185MB	write metadata
  time: 0.001; rss: 185MB	translation item collection
  time: 0.000; rss: 185MB	codegen unit partitioning
time: 0.815; rss: 193MB	translation
time: 0.000; rss: 193MB	assert dep graph
time: 0.000; rss: 193MB	serialize dep graph
  time: 0.042; rss: 140MB	llvm function passes [0]
  time: 0.001; rss: 140MB	llvm module passes [0]
  time: 1.462; rss: 142MB	codegen passes [0]
  time: 0.001; rss: 129MB	codegen passes [0]
time: 1.597; rss: 129MB	LLVM passes
  time: 0.188; rss: 129MB	running linker
time: 0.189; rss: 129MB	linking
done
