commit e8c0aeb88ba1e12d0c0a1d0ed7b4a90b44460a29
Merge: 14f61c8 894caf8
Author: bors <bors@rust-lang.org>
Date:   Tue Apr 19 01:49:13 2016 -0700

    Auto merge of #32985 - caipre:rustdoc-disambiguate-impl-anchors, r=alexcrichton
    
    rustdoc: Disambiguate anchors
    
    Closes https://github.com/rust-lang/rust/issues/32890
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling traitobject v0.0.1
   Compiling log v0.3.6
   Compiling httparse v0.1.6
   Compiling pkg-config v0.3.8
   Compiling bitflags v0.3.3
   Compiling typeable v0.1.2
   Compiling rustc-serialize v0.3.19
   Compiling winapi-build v0.1.1
   Compiling libc v0.2.10
   Compiling winapi v0.2.6
   Compiling unicase v0.1.0
   Compiling matches v0.1.2
   Compiling lazy_static v0.1.16
   Compiling libc v0.1.12
   Compiling kernel32-sys v0.2.2
   Compiling mime v0.0.11
   Compiling gcc v0.3.27
   Compiling rand v0.3.14
   Compiling time v0.1.35
   Compiling num_cpus v0.2.11
   Compiling openssl-sys v0.6.7
   Compiling openssl v0.6.7
   Compiling uuid v0.1.18
   Compiling url v0.2.38
   Compiling cookie v0.1.21
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.037; rss: 47MB	parsing
Lines of code:             9154
Pre-expansion node count:  45594
time: 0.009; rss: 48MB	configuration 1
time: 0.000; rss: 48MB	recursion limit
time: 0.000; rss: 48MB	gated macro checking
time: 0.000; rss: 48MB	crate injection
time: 0.004; rss: 53MB	macro loading
time: 0.000; rss: 53MB	plugin loading
time: 0.000; rss: 53MB	plugin registration
time: 0.198; rss: 62MB	expansion
time: 0.005; rss: 62MB	complete gated feature checking 1
time: 0.029; rss: 62MB	configuration 2
time: 0.000; rss: 62MB	gated configuration checking
time: 0.011; rss: 62MB	maybe building test harness
time: 0.008; rss: 62MB	prelude injection
time: 0.001; rss: 62MB	checking that all macro invocations are gone
time: 0.000; rss: 62MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 62MB	complete gated feature checking 2
time: 0.001; rss: 62MB	const fn bodies and arguments
Post-expansion node count: 107125
time: 0.008; rss: 62MB	assigning node ids
time: 0.019; rss: 68MB	lowering ast -> hir
time: 0.008; rss: 70MB	indexing hir
time: 0.001; rss: 70MB	attribute checking
time: 0.007; rss: 70MB	early lint checks
time: 0.004; rss: 65MB	external crate/lib resolution
time: 0.001; rss: 65MB	language item collection
time: 0.028; rss: 81MB	resolution
time: 0.002; rss: 81MB	lifetime resolution
time: 0.000; rss: 81MB	looking for entry point
time: 0.000; rss: 81MB	looking for plugin registrar
time: 0.009; rss: 85MB	region resolution
time: 0.001; rss: 85MB	loop checking
time: 0.001; rss: 85MB	static item recursion checking
time: 0.000; rss: 85MB	load_dep_graph
time: 0.018; rss: 95MB	type collecting
time: 0.000; rss: 95MB	variance inference
time: 0.048; rss: 110MB	coherence checking
time: 0.073; rss: 111MB	wf checking
time: 0.032; rss: 112MB	item-types checking
time: 0.500; rss: 129MB	item-bodies checking
time: 0.000; rss: 129MB	drop-impl checking
time: 0.042; rss: 131MB	const checking
time: 0.010; rss: 131MB	privacy checking
time: 0.001; rss: 131MB	stability index
time: 0.004; rss: 131MB	intrinsic checking
time: 0.002; rss: 131MB	effect checking
time: 0.012; rss: 131MB	match checking
time: 0.005; rss: 131MB	liveness checking
time: 0.033; rss: 131MB	rvalue checking
time: 0.063; rss: 139MB	MIR dump
time: 0.022; rss: 140MB	MIR passes
time: 0.067; rss: 140MB	borrow checking
time: 0.003; rss: 140MB	reachability checking
time: 0.006; rss: 140MB	death checking
time: 0.006; rss: 140MB	stability checking
time: 0.000; rss: 140MB	unused lib feature checking
time: 0.047; rss: 140MB	lint checking
time: 0.000; rss: 140MB	resolving dependency formats
time: 0.010; rss: 142MB	Prepare MIR codegen passes
  time: 0.218; rss: 168MB	translation item collection
  time: 0.008; rss: 169MB	codegen unit partitioning
  time: 0.140; rss: 283MB	write metadata
time: 1.802; rss: 283MB	translation
time: 0.001; rss: 283MB	assert dep graph
time: 0.000; rss: 283MB	serialize dep graph
  time: 0.099; rss: 170MB	llvm function passes [0]
  time: 0.049; rss: 172MB	llvm module passes [0]
  time: 1.633; rss: 176MB	codegen passes [0]
  time: 0.001; rss: 124MB	codegen passes [0]
time: 1.996; rss: 123MB	LLVM passes
time: 0.179; rss: 121MB	linking
done
