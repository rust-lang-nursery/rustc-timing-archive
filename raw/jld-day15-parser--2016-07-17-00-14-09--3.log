commit 34d7f7e607aec07b6db2ccd5cab42f996220e148
Merge: 103e5c9 b9a3590
Author: bors <bors@rust-lang.org>
Date:   Sat Jul 16 21:09:15 2016 -0700

    Auto merge of #34606 - mathstuf:llvm-with-ninja, r=alexcrichton
    
    llvm, rt: build using the Ninja generator if available
    
    The Ninja generator generally builds much faster than make. It may also
    be used on Windows to have a vast speed improvement over the Visual
    Studio generators.
    
    Currently hidden behind an `--enable-ninja` flag because it does not
    obey the top-level `-j` or `-l` flags given to `make`.
rustc: ./jld-day15-parser
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling day15 v0.1.0 (file:///root/benchmarks/jld-day15-parser)
time: 0.001; rss: 80MB	parsing
Lines of code:             72
Pre-expansion node count:  654
time: 0.000; rss: 84MB	configuration
time: 0.000; rss: 84MB	recursion limit
time: 0.000; rss: 84MB	crate injection
time: 0.000; rss: 84MB	plugin loading
time: 0.000; rss: 84MB	plugin registration
time: 0.020; rss: 119MB	expansion
time: 0.000; rss: 119MB	maybe building test harness
time: 0.000; rss: 119MB	assigning node ids
Post-expansion node count: 1155
time: 0.000; rss: 119MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 119MB	complete gated feature checking
time: 0.000; rss: 119MB	collecting defs
time: 0.004; rss: 124MB	external crate/lib resolution
time: 0.000; rss: 124MB	early lint checks
time: 0.000; rss: 124MB	AST validation
time: 0.001; rss: 124MB	name resolution
time: 0.000; rss: 124MB	lowering ast -> hir
time: 0.000; rss: 124MB	indexing hir
time: 0.000; rss: 124MB	attribute checking
time: 0.000; rss: 124MB	language item collection
time: 0.000; rss: 124MB	lifetime resolution
time: 0.000; rss: 124MB	looking for entry point
time: 0.000; rss: 124MB	looking for plugin registrar
time: 0.000; rss: 124MB	region resolution
time: 0.000; rss: 124MB	loop checking
time: 0.000; rss: 124MB	static item recursion checking
time: 0.000; rss: 124MB	load_dep_graph
time: 0.001; rss: 124MB	type collecting
time: 0.000; rss: 124MB	variance inference
time: 0.005; rss: 124MB	coherence checking
time: 0.007; rss: 124MB	wf checking
time: 0.000; rss: 124MB	item-types checking
time: 0.048; rss: 136MB	item-bodies checking
time: 0.000; rss: 136MB	drop-impl checking
time: 0.001; rss: 136MB	const checking
time: 0.000; rss: 136MB	privacy checking
time: 0.000; rss: 136MB	stability index
time: 0.000; rss: 136MB	intrinsic checking
time: 0.000; rss: 136MB	effect checking
time: 0.000; rss: 136MB	match checking
time: 0.000; rss: 136MB	liveness checking
time: 0.001; rss: 136MB	rvalue checking
time: 0.001; rss: 136MB	MIR dump
time: 0.001; rss: 136MB	MIR passes
time: 0.001; rss: 136MB	borrow checking
time: 0.000; rss: 136MB	reachability checking
time: 0.000; rss: 136MB	death checking
time: 0.000; rss: 136MB	stability checking
time: 0.000; rss: 136MB	unused lib feature checking
time: 0.004; rss: 136MB	lint checking
time: 0.002; rss: 136MB	resolving dependency formats
time: 0.002; rss: 136MB	Prepare MIR codegen passes
  time: 0.000; rss: 136MB	write metadata
  time: 0.624; rss: 143MB	translation item collection
  time: 0.003; rss: 143MB	codegen unit partitioning
time: 3.377; rss: 167MB	translation
time: 0.000; rss: 167MB	assert dep graph
time: 0.000; rss: 167MB	serialize dep graph
  time: 0.175; rss: 146MB	llvm function passes [0]
  time: 0.047; rss: 146MB	llvm module passes [0]
  time: 2.737; rss: 151MB	codegen passes [0]
  time: 0.001; rss: 151MB	codegen passes [0]
time: 2.967; rss: 151MB	LLVM passes
  time: 0.131; rss: 145MB	running linker
time: 0.131; rss: 144MB	linking
done
