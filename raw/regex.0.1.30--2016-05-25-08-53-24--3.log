commit 5229e0efb34f924346febcfe158973486dabdf83
Merge: 487de42 a619901
Author: bors <bors@rust-lang.org>
Date:   Wed May 25 02:33:29 2016 -0700

    Auto merge of #33602 - eddyb:no-trans--check, r=michaelwoerister
    
    Save metadata even with -Z no-trans (e.g. for multi-crate cargo check).
    
    Removes the item symbol map in metadata, as we can now generate them in a deterministic manner.
    The `-Z no-trans` change lets the LLVM passes and linking run, but with just metadata and no code.
    It fails while trying to link a binary because there's no `main` function, which is correct but not good UX.
    
    There's also no way to easily throw away all of the artifacts to rebuild with actual code generation.
    We might want `cargo check` to do that using cargo-internal information and then it would just work.
    
    cc @alexcrichton @nikomatsakis @Aatch @michaelwoerister
rustc: ./regex.0.1.30
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling regex v0.1.30 (file:///root/benchmarks/regex.0.1.30)
time: 0.063; rss: 63MB	parsing
Lines of code:             8558
Pre-expansion node count:  58331
time: 0.011; rss: 63MB	configuration 1
time: 0.000; rss: 63MB	recursion limit
time: 0.000; rss: 63MB	crate injection
time: 0.019; rss: 95MB	macro loading
time: 0.000; rss: 95MB	plugin loading
time: 0.000; rss: 95MB	plugin registration
time: 0.058; rss: 98MB	expansion
time: 0.013; rss: 98MB	configuration 2
time: 0.000; rss: 98MB	gated configuration checking
time: 0.006; rss: 98MB	maybe building test harness
time: 0.006; rss: 98MB	prelude injection
time: 0.001; rss: 98MB	checking that all macro invocations are gone
time: 0.000; rss: 98MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 98MB	complete gated feature checking
Post-expansion node count: 68487
time: 0.006; rss: 98MB	assigning node ids
time: 0.001; rss: 98MB	collecting defs
time: 0.001; rss: 98MB	external crate/lib resolution
time: 0.006; rss: 98MB	early lint checks
time: 0.008; rss: 100MB	name resolution
time: 0.009; rss: 110MB	lowering ast -> hir
time: 0.001; rss: 110MB	indexing hir
time: 0.001; rss: 110MB	attribute checking
time: 0.001; rss: 103MB	language item collection
time: 0.001; rss: 103MB	lifetime resolution
time: 0.000; rss: 103MB	looking for entry point
time: 0.000; rss: 103MB	looking for plugin registrar
time: 0.005; rss: 107MB	region resolution
time: 0.001; rss: 107MB	loop checking
time: 0.001; rss: 107MB	static item recursion checking
time: 0.000; rss: 107MB	load_dep_graph
time: 0.007; rss: 110MB	type collecting
time: 0.000; rss: 110MB	variance inference
time: 0.024; rss: 113MB	coherence checking
time: 0.013; rss: 113MB	wf checking
time: 0.314; rss: 122MB	item-types checking
time: 0.209; rss: 127MB	item-bodies checking
time: 0.000; rss: 127MB	drop-impl checking
time: 0.027; rss: 127MB	const checking
time: 0.004; rss: 127MB	privacy checking
time: 0.001; rss: 127MB	stability index
time: 0.002; rss: 127MB	intrinsic checking
time: 0.001; rss: 127MB	effect checking
time: 0.004; rss: 127MB	match checking
time: 0.002; rss: 127MB	liveness checking
time: 0.008; rss: 127MB	rvalue checking
time: 0.054; rss: 137MB	MIR dump
time: 0.020; rss: 140MB	MIR passes
time: 0.022; rss: 140MB	borrow checking
time: 0.000; rss: 140MB	reachability checking
time: 0.003; rss: 140MB	death checking
time: 0.002; rss: 140MB	stability checking
time: 0.000; rss: 140MB	unused lib feature checking
time: 0.028; rss: 140MB	lint checking
time: 0.000; rss: 140MB	resolving dependency formats
time: 0.005; rss: 140MB	Prepare MIR codegen passes
  time: 0.178; rss: 148MB	write metadata
  time: 0.088; rss: 152MB	translation item collection
  time: 0.001; rss: 152MB	codegen unit partitioning
time: 0.766; rss: 197MB	translation
time: 0.000; rss: 197MB	assert dep graph
time: 0.000; rss: 197MB	serialize dep graph
  time: 0.035; rss: 131MB	llvm function passes [0]
  time: 0.018; rss: 132MB	llvm module passes [0]
  time: 0.613; rss: 135MB	codegen passes [0]
  time: 0.001; rss: 116MB	codegen passes [0]
time: 0.742; rss: 113MB	LLVM passes
time: 0.067; rss: 113MB	linking
done
