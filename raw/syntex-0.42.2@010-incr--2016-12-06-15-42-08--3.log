commit b5d0f90929ddaae89609e9bb229a9b8a27e27615
Merge: 1842efb cc6edb2
Author: bors <bors@rust-lang.org>
Date:   Tue Dec 6 17:38:26 2016 +0000

    Auto merge of #38036 - Mark-Simulacrum:polish-2, r=nagisa,eddyb
    
    Simplify calling find_implied_output_region.
    
    @nnethercote added the optimization that find_implied_output_region
    takes a closure as an optimization in #37014, but passing an iterator is
    simpler, and more ergonomic for callers.
rustc: ./syntex-0.42.2@010-incr@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.244; rss: 151MB	expansion
time: 0.000; rss: 151MB	maybe building test harness
time: 0.006; rss: 151MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 151MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 151MB	complete gated feature checking
time: 0.023; rss: 151MB	early lint checks
time: 0.007; rss: 151MB	AST validation
time: 0.076; rss: 166MB	name resolution
time: 0.059; rss: 200MB	lowering ast -> hir
time: 0.010; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.046; rss: 177MB	region resolution
time: 0.008; rss: 177MB	loop checking
time: 0.002; rss: 177MB	static item recursion checking
time: 0.382; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.021; rss: 182MB	stability checking
time: 0.057; rss: 190MB	type collecting
time: 0.004; rss: 190MB	variance inference
time: 0.006; rss: 194MB	impl wf inference
time: 0.031; rss: 197MB	coherence checking
time: 0.128; rss: 200MB	wf checking
time: 0.297; rss: 208MB	item-types checking
time: 3.602; rss: 266MB	item-bodies checking
time: 0.000; rss: 266MB	drop-impl checking
time: 0.224; rss: 277MB	const checking
time: 0.068; rss: 277MB	privacy checking
time: 0.021; rss: 284MB	intrinsic checking
time: 0.016; rss: 284MB	effect checking
time: 0.052; rss: 284MB	match checking
time: 0.049; rss: 291MB	liveness checking
time: 0.175; rss: 293MB	rvalue checking
time: 0.374; rss: 482MB	MIR dump
  time: 0.085; rss: 483MB	SimplifyCfg
  time: 0.100; rss: 483MB	QualifyAndPromoteConstants
  time: 0.162; rss: 500MB	TypeckMir
  time: 0.006; rss: 500MB	SimplifyBranches
  time: 0.047; rss: 500MB	SimplifyCfg
time: 0.400; rss: 500MB	MIR cleanup and validation
time: 0.527; rss: 500MB	borrow checking
time: 0.024; rss: 500MB	reachability checking
time: 0.038; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.177; rss: 500MB	lint checking
time: 0.000; rss: 500MB	resolving dependency formats
  time: 0.004; rss: 500MB	NoLandingPads
  time: 0.027; rss: 500MB	SimplifyCfg
  time: 0.065; rss: 509MB	EraseRegions
  time: 0.011; rss: 509MB	AddCallGuards
  time: 0.274; rss: 529MB	ElaborateDrops
  time: 0.004; rss: 529MB	NoLandingPads
  time: 0.053; rss: 529MB	SimplifyCfg
  time: 0.029; rss: 529MB	InstCombine
  time: 0.012; rss: 529MB	Deaggregator
  time: 0.004; rss: 529MB	CopyPropagation
  time: 0.034; rss: 529MB	SimplifyLocals
  time: 0.010; rss: 529MB	AddCallGuards
  time: 0.003; rss: 529MB	PreTrans
time: 0.530; rss: 529MB	MIR optimisations
  time: 0.065; rss: 537MB	write metadata
  time: 0.399; rss: 549MB	translation item collection
  time: 0.073; rss: 554MB	codegen unit partitioning
  time: 0.048; rss: 1457MB	internalize symbols
time: 12.153; rss: 1457MB	translation
time: 0.000; rss: 1457MB	assert dep graph
time: 1.397; rss: 1485MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1197MB	llvm function passes [0]
time: 0.000; rss: 1200MB	llvm module passes [0]
time: 0.001; rss: 1208MB	llvm function passes [2]
time: 0.000; rss: 1208MB	llvm module passes [2]
time: 0.002; rss: 1208MB	llvm function passes [5]
time: 0.000; rss: 1208MB	llvm module passes [5]
time: 0.003; rss: 1210MB	llvm function passes [7]
time: 0.005; rss: 1210MB	llvm function passes [3]
time: 0.000; rss: 1210MB	llvm module passes [3]
time: 0.002; rss: 1212MB	codegen passes [0]
time: 0.001; rss: 1212MB	llvm function passes [0]
time: 0.000; rss: 1212MB	llvm module passes [0]
time: 0.005; rss: 1212MB	codegen passes [2]
time: 0.010; rss: 1219MB	llvm module passes [7]
time: 0.013; rss: 1226MB	llvm function passes [4]
time: 0.006; rss: 1228MB	llvm module passes [4]
time: 0.015; rss: 1228MB	codegen passes [3]
time: 0.018; rss: 1228MB	codegen passes [5]
time: 0.015; rss: 1228MB	codegen passes [0]
time: 0.028; rss: 1228MB	llvm function passes [1]
time: 0.025; rss: 1228MB	llvm function passes [2]
time: 0.007; rss: 1228MB	llvm module passes [1]
time: 0.013; rss: 1228MB	llvm function passes [0]
time: 0.030; rss: 1230MB	llvm function passes [9]
time: 0.008; rss: 1232MB	llvm module passes [0]
time: 0.014; rss: 1232MB	llvm module passes [2]
time: 0.008; rss: 1232MB	llvm module passes [9]
time: 0.003; rss: 1240MB	llvm function passes [44]
time: 0.001; rss: 1240MB	llvm module passes [44]
time: 0.000; rss: 1242MB	llvm function passes [47]
time: 0.000; rss: 1242MB	llvm module passes [47]
time: 0.001; rss: 1244MB	codegen passes [47]
time: 0.000; rss: 1244MB	llvm function passes [47]
time: 0.000; rss: 1244MB	llvm module passes [47]
time: 0.092; rss: 1265MB	llvm function passes [3]
time: 0.096; rss: 1267MB	codegen passes [7]
time: 0.000; rss: 1267MB	llvm function passes [7]
time: 0.000; rss: 1267MB	llvm module passes [7]
time: 0.004; rss: 1273MB	codegen passes [7]
time: 0.000; rss: 1275MB	llvm function passes [31]
time: 0.000; rss: 1275MB	llvm module passes [31]
time: 0.001; rss: 1275MB	codegen passes [31]
time: 0.053; rss: 1278MB	codegen passes [47]
time: 0.052; rss: 1278MB	codegen passes [44]
time: 0.037; rss: 1284MB	llvm module passes [3]
time: 0.035; rss: 1284MB	llvm function passes [28]
time: 0.153; rss: 1284MB	llvm function passes [6]
time: 0.064; rss: 1284MB	llvm function passes [25]
time: 0.000; rss: 1284MB	llvm module passes [25]
time: 0.109; rss: 1284MB	llvm function passes [39]
time: 0.095; rss: 1294MB	llvm function passes [41]
time: 0.054; rss: 1294MB	llvm function passes [7]
time: 0.016; rss: 1302MB	codegen passes [25]
time: 0.014; rss: 1302MB	llvm module passes [39]
time: 0.028; rss: 1302MB	llvm module passes [28]
time: 0.016; rss: 1302MB	llvm module passes [41]
time: 0.125; rss: 1304MB	llvm function passes [23]
time: 0.030; rss: 1303MB	llvm function passes [43]
time: 0.003; rss: 1303MB	llvm module passes [43]
time: 0.045; rss: 1309MB	llvm function passes [25]
time: 0.115; rss: 1312MB	llvm function passes [26]
time: 0.244; rss: 1314MB	llvm function passes [8]
time: 0.028; rss: 1314MB	llvm module passes [25]
time: 0.059; rss: 1314MB	llvm module passes [23]
time: 0.090; rss: 1358MB	llvm function passes [45]
time: 0.041; rss: 1363MB	llvm module passes [26]
time: 0.020; rss: 1363MB	llvm module passes [45]
time: 0.107; rss: 1363MB	llvm function passes [49]
time: 0.008; rss: 1369MB	llvm module passes [49]
time: 0.052; rss: 1366MB	llvm function passes [33]
time: 0.002; rss: 1366MB	llvm module passes [33]
time: 0.141; rss: 1365MB	llvm function passes [34]
time: 0.163; rss: 1365MB	llvm module passes [6]
time: 0.004; rss: 1365MB	llvm function passes [40]
time: 0.159; rss: 1370MB	llvm function passes [35]
time: 0.000; rss: 1370MB	codegen passes [12]
time: 0.018; rss: 1370MB	llvm module passes [40]
time: 0.038; rss: 1370MB	llvm module passes [34]
time: 0.024; rss: 1372MB	llvm module passes [35]
time: 0.128; rss: 1376MB	llvm function passes [20]
time: 0.266; rss: 1388MB	llvm function passes [31]
time: 0.033; rss: 1389MB	llvm module passes [20]
time: 0.232; rss: 1391MB	llvm module passes [7]
time: 0.139; rss: 1391MB	llvm function passes [29]
time: 0.017; rss: 1399MB	llvm module passes [29]
time: 0.119; rss: 1403MB	codegen passes [33]
time: 0.208; rss: 1411MB	llvm module passes [8]
time: 0.084; rss: 1413MB	llvm function passes [14]
time: 0.012; rss: 1420MB	llvm module passes [14]
time: 0.249; rss: 1424MB	llvm function passes [46]
time: 0.131; rss: 1424MB	llvm module passes [31]
time: 0.394; rss: 1424MB	llvm function passes [47]
time: 0.020; rss: 1417MB	codegen passes [14]
time: 0.056; rss: 1427MB	llvm module passes [46]
time: 0.530; rss: 1427MB	llvm function passes [10]
time: 0.293; rss: 1432MB	llvm function passes [48]
time: 0.269; rss: 1432MB	codegen passes [40]
time: 0.444; rss: 1431MB	llvm function passes [24]
time: 0.190; rss: 1431MB	llvm function passes [38]
time: 0.338; rss: 1431MB	llvm function passes [30]
time: 0.394; rss: 1428MB	codegen passes [43]
time: 0.416; rss: 1427MB	llvm function passes [42]
time: 0.037; rss: 1418MB	llvm module passes [30]
time: 0.045; rss: 1418MB	llvm module passes [38]
time: 0.408; rss: 1412MB	llvm function passes [32]
time: 0.402; rss: 1415MB	llvm function passes [17]
time: 0.079; rss: 1416MB	llvm module passes [42]
time: 0.609; rss: 1420MB	llvm function passes [44]
time: 0.140; rss: 1410MB	llvm module passes [24]
time: 0.095; rss: 1410MB	llvm module passes [17]
time: 0.749; rss: 1408MB	codegen passes [4]
time: 0.793; rss: 1410MB	llvm function passes [5]
time: 0.355; rss: 1415MB	llvm module passes [48]
time: 0.580; rss: 1432MB	llvm module passes [47]
time: 0.980; rss: 1443MB	codegen passes [0]
time: 0.410; rss: 1439MB	codegen passes [38]
time: 0.504; rss: 1443MB	llvm module passes [32]
time: 0.642; rss: 1452MB	llvm module passes [10]
time: 0.424; rss: 1458MB	llvm module passes [5]
time: 0.576; rss: 1430MB	llvm module passes [44]
time: 1.233; rss: 1450MB	codegen passes [2]
time: 1.433; rss: 1475MB	codegen passes [1]
time: 1.473; rss: 1485MB	codegen passes [9]
time: 1.252; rss: 1468MB	codegen passes [49]
time: 1.571; rss: 1464MB	codegen passes [39]
time: 1.476; rss: 1442MB	codegen passes [45]
time: 1.605; rss: 1433MB	codegen passes [41]
time: 1.712; rss: 1419MB	codegen passes [25]
time: 1.795; rss: 1467MB	codegen passes [30]
time: 1.895; rss: 1449MB	codegen passes [29]
time: 2.487; rss: 1504MB	codegen passes [28]
time: 2.406; rss: 1494MB	codegen passes [7]
time: 2.406; rss: 1487MB	codegen passes [20]
time: 2.824; rss: 1555MB	codegen passes [35]
time: 2.744; rss: 1552MB	codegen passes [34]
time: 2.802; rss: 1621MB	codegen passes [17]
time: 3.266; rss: 1603MB	codegen passes [3]
time: 3.267; rss: 1575MB	codegen passes [26]
time: 3.316; rss: 1609MB	codegen passes [23]
time: 3.200; rss: 1570MB	codegen passes [46]
time: 3.719; rss: 1623MB	codegen passes [31]
time: 3.996; rss: 1616MB	codegen passes [6]
time: 3.745; rss: 1607MB	codegen passes [48]
time: 4.060; rss: 1620MB	codegen passes [42]
time: 4.009; rss: 1592MB	codegen passes [32]
time: 3.895; rss: 1551MB	codegen passes [44]
time: 4.000; rss: 1504MB	codegen passes [47]
time: 4.575; rss: 1509MB	codegen passes [5]
time: 4.844; rss: 1444MB	codegen passes [8]
time: 5.445; rss: 1397MB	codegen passes [24]
time: 5.451; rss: 1325MB	codegen passes [10]
time: 8.056; rss: 1322MB	LLVM passes
time: 0.000; rss: 1322MB	serialize work products
time: 1.065; rss: 285MB	linking
done
