commit 191ff2d8fd57a8238d85302a8f06e2bd11b2f6d2
Merge: 99e59de add7410
Author: bors <bors@rust-lang.org>
Date:   Mon Jan 4 03:07:59 2016 +0000

    Auto merge of #30651 - nagisa:mir-fix-equality-checks, r=eddyb
    
    This is not a fix to checks themselves per se (though we still use `Eq` MIR test instead of calling `PartialEq::eq`), but rather how we handle items we encounter in pattern position.
    
    Previously we would just call `PartialEq` with the constant and the matchee, but now we essentially inline the constant instead. E.g. these two snippets are functionally equivalent at MIR level:
    
    ```
    match val { Some(42) => true, _ => false }
    ```
    and
    ```
    const SECRET: Option<u8> = Some(42);
    match val { SECRET => true, _ => false }
    ```
    
    This approach also allows for more optimizations of matches. I.e. It can now exploit `SwitchInt` to switch on number inside a `Some` regardless of whether the value being an item or not.
    
    This is based on @tsionâ€™s already approved PR so I could reuse the file for more tests.
    
    r? @eddyb
    cc @nikomatsakis @tsion
rustc: ./rust-encoding.0.2.32
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling encoding v0.2.32 (file:///root/benchmarks/rust-encoding.0.2.32)
time: 0.025; rss: 36MB	parsing
Lines of code:             6441
Pre-expansion node count:  30335
time: 0.006; rss: 36MB	configuration 1
time: 0.000; rss: 36MB	recursion limit
time: 0.000; rss: 36MB	gated macro checking
time: 0.000; rss: 36MB	crate injection
time: 0.003; rss: 39MB	macro loading
time: 0.000; rss: 39MB	plugin loading
time: 0.000; rss: 39MB	plugin registration
time: 0.050; rss: 41MB	expansion
time: 0.001; rss: 41MB	complete gated feature checking 1
time: 0.008; rss: 41MB	configuration 2
time: 0.000; rss: 41MB	gated configuration checking
time: 0.004; rss: 41MB	maybe building test harness
time: 0.004; rss: 42MB	prelude injection
time: 0.000; rss: 42MB	checking that all macro invocations are gone
time: 0.000; rss: 42MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 42MB	complete gated feature checking 2
Post-expansion node count: 41783
time: 0.004; rss: 42MB	assigning node ids
time: 0.004; rss: 45MB	lowering ast -> hir
time: 0.001; rss: 45MB	indexing hir
time: 0.000; rss: 45MB	attribute checking
time: 0.002; rss: 45MB	early lint checks
time: 0.001; rss: 44MB	external crate/lib resolution
time: 0.000; rss: 44MB	language item collection
time: 0.008; rss: 53MB	resolution
time: 0.000; rss: 53MB	lifetime resolution
time: 0.000; rss: 53MB	looking for entry point
time: 0.000; rss: 53MB	looking for plugin registrar
time: 0.002; rss: 55MB	region resolution
time: 0.000; rss: 55MB	loop checking
time: 0.000; rss: 55MB	static item recursion checking
time: 0.005; rss: 55MB	type collecting
time: 0.000; rss: 55MB	variance inference
time: 0.019; rss: 71MB	coherence checking
time: 0.014; rss: 71MB	wf checking
time: 0.012; rss: 73MB	item-types checking
time: 0.190; rss: 85MB	item-bodies checking
time: 0.000; rss: 85MB	drop-impl checking
time: 0.011; rss: 85MB	const checking
time: 0.002; rss: 85MB	privacy checking
time: 0.000; rss: 85MB	stability index
time: 0.001; rss: 85MB	intrinsic checking
time: 0.000; rss: 85MB	effect checking
time: 0.006; rss: 85MB	match checking
time: 0.018; rss: 87MB	MIR dump
time: 0.002; rss: 87MB	liveness checking
time: 0.023; rss: 87MB	borrow checking
time: 0.006; rss: 87MB	rvalue checking
time: 0.000; rss: 87MB	reachability checking
time: 0.002; rss: 87MB	death checking
time: 0.002; rss: 87MB	stability checking
time: 0.000; rss: 87MB	unused lib feature checking
time: 0.019; rss: 89MB	lint checking
time: 0.000; rss: 89MB	resolving dependency formats
time: 0.002; rss: 89MB	erasing regions from MIR
  time: 0.056; rss: 137MB	write metadata
time: 0.327; rss: 137MB	translation
  time: 0.027; rss: 102MB	llvm function passes [0]
  time: 0.062; rss: 105MB	llvm module passes [0]
  time: 0.557; rss: 126MB	codegen passes [0]
  time: 0.000; rss: 124MB	codegen passes [0]
time: 0.717; rss: 124MB	LLVM passes
time: 0.054; rss: 125MB	linking
done
