commit d6dc33907ab7d86d492eec8e79d0890bdbc8a2a8
Merge: a0843d7 50dad3f
Author: bors <bors@rust-lang.org>
Date:   Sat Sep 24 22:20:25 2016 -0700

    Auto merge of #36709 - Mark-Simulacrum:fix-wsl-tidy, r=Aatch
    
    Skip binary tidy check when on Windows Linux Subsystem
    
    While it's possible that other linux systems will include "Microsoft" in
    their /proc/version, this is deemed unlikely, and since this is a tidy
    check, will likely be caught by buildbot/travis either way.
    
    Fixes #36706.
rustc: ./regex.0.1.30
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling regex v0.1.30 (file:///root/benchmarks/regex.0.1.30)
time: 0.052; rss: 57MB	parsing
Lines of code:             8558
Pre-expansion node count:  58080
time: 0.000; rss: 57MB	recursion limit
time: 0.000; rss: 57MB	crate injection
time: 0.000; rss: 57MB	plugin loading
time: 0.000; rss: 57MB	plugin registration
time: 0.032; rss: 79MB	expansion
time: 0.000; rss: 79MB	maybe building test harness
time: 0.001; rss: 79MB	maybe creating a macro crate
time: 0.003; rss: 80MB	assigning node ids
Post-expansion node count: 68154
time: 0.000; rss: 80MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 80MB	complete gated feature checking
time: 0.001; rss: 80MB	collecting defs
time: 0.001; rss: 80MB	external crate/lib resolution
time: 0.003; rss: 80MB	early lint checks
time: 0.000; rss: 80MB	AST validation
time: 0.005; rss: 81MB	name resolution
time: 0.008; rss: 92MB	lowering ast -> hir
time: 0.002; rss: 94MB	indexing hir
time: 0.001; rss: 94MB	attribute checking
time: 0.001; rss: 84MB	language item collection
time: 0.001; rss: 84MB	lifetime resolution
time: 0.000; rss: 84MB	looking for entry point
time: 0.000; rss: 84MB	looking for plugin registrar
time: 0.007; rss: 89MB	region resolution
time: 0.001; rss: 89MB	loop checking
time: 0.002; rss: 89MB	static item recursion checking
time: 0.021; rss: 90MB	compute_incremental_hashes_map
time: 0.000; rss: 90MB	load_dep_graph
time: 0.008; rss: 90MB	type collecting
time: 0.000; rss: 90MB	variance inference
time: 0.020; rss: 93MB	coherence checking
time: 0.009; rss: 94MB	wf checking
time: 0.253; rss: 105MB	item-types checking
time: 0.145; rss: 111MB	item-bodies checking
time: 0.000; rss: 111MB	drop-impl checking
time: 0.027; rss: 111MB	const checking
time: 0.003; rss: 111MB	privacy checking
time: 0.001; rss: 111MB	stability index
time: 0.002; rss: 111MB	intrinsic checking
time: 0.001; rss: 111MB	effect checking
time: 0.004; rss: 111MB	match checking
time: 0.002; rss: 111MB	liveness checking
time: 0.008; rss: 111MB	rvalue checking
time: 0.043; rss: 124MB	MIR dump
  time: 0.003; rss: 124MB	SimplifyCfg
  time: 0.005; rss: 124MB	QualifyAndPromoteConstants
  time: 0.010; rss: 124MB	TypeckMir
  time: 0.000; rss: 124MB	SimplifyBranches
  time: 0.002; rss: 124MB	SimplifyCfg
time: 0.020; rss: 124MB	MIR passes
time: 0.021; rss: 126MB	borrow checking
time: 0.000; rss: 126MB	reachability checking
time: 0.002; rss: 126MB	death checking
time: 0.002; rss: 126MB	stability checking
time: 0.000; rss: 126MB	unused lib feature checking
time: 0.025; rss: 126MB	lint checking
time: 0.000; rss: 126MB	resolving dependency formats
  time: 0.000; rss: 126MB	NoLandingPads
  time: 0.001; rss: 126MB	SimplifyCfg
  time: 0.004; rss: 126MB	EraseRegions
  time: 0.000; rss: 126MB	AddCallGuards
  time: 0.009; rss: 126MB	ElaborateDrops
  time: 0.000; rss: 126MB	NoLandingPads
  time: 0.002; rss: 126MB	SimplifyCfg
  time: 0.000; rss: 126MB	Deaggregator
  time: 0.000; rss: 126MB	AddCallGuards
  time: 0.000; rss: 126MB	PreTrans
time: 0.018; rss: 126MB	Prepare MIR codegen passes
  time: 0.161; rss: 136MB	write metadata
  time: 0.042; rss: 137MB	translation item collection
  time: 0.007; rss: 139MB	codegen unit partitioning
  time: 0.014; rss: 165MB	internalize symbols
time: 0.649; rss: 159MB	translation
time: 0.000; rss: 159MB	assert dep graph
time: 0.000; rss: 159MB	serialize dep graph
  time: 0.036; rss: 113MB	llvm function passes [0]
  time: 0.019; rss: 113MB	llvm module passes [0]
  time: 0.676; rss: 117MB	codegen passes [0]
  time: 0.001; rss: 118MB	codegen passes [0]
time: 0.790; rss: 117MB	LLVM passes
time: 0.000; rss: 117MB	serialize work products
time: 0.066; rss: 90MB	linking
done
