commit 5938eba4e30b766751483e93776a87a4db1681f4
Merge: 02ea82d d53f82c
Author: bors <bors@rust-lang.org>
Date:   Wed Dec 7 07:15:31 2016 +0000

    Auto merge of #38149 - bluss:is-empty, r=alexcrichton
    
    Forward more ExactSizeIterator methods and `is_empty` edits
    
    - Forward ExactSizeIterator methods in more places, like `&mut I` and `Box<I>` iterator impls.
    - Improve `VecDeque::is_empty` itself (see commit 4)
    - All the collections iterators now have `len` or `is_empty` forwarded if doing so is a benefit. In the remaining cases, they already use a simple size hint (using something like a stored `usize` value), which is sufficient for the default implementation of len and is_empty.
rustc: ./syntex-0.42.2@010-incr@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.242; rss: 151MB	expansion
time: 0.000; rss: 151MB	maybe building test harness
time: 0.006; rss: 151MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 151MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 151MB	complete gated feature checking
time: 0.023; rss: 151MB	early lint checks
time: 0.007; rss: 151MB	AST validation
time: 0.075; rss: 166MB	name resolution
time: 0.058; rss: 199MB	lowering ast -> hir
time: 0.009; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.046; rss: 177MB	region resolution
time: 0.007; rss: 177MB	loop checking
time: 0.002; rss: 177MB	static item recursion checking
time: 0.381; rss: 178MB	compute_incremental_hashes_map
time: 0.014; rss: 178MB	load_dep_graph
time: 0.010; rss: 178MB	stability index
time: 0.020; rss: 182MB	stability checking
time: 0.056; rss: 189MB	type collecting
time: 0.004; rss: 189MB	variance inference
time: 0.006; rss: 193MB	impl wf inference
time: 0.026; rss: 197MB	coherence checking
time: 0.088; rss: 199MB	wf checking
time: 0.195; rss: 207MB	item-types checking
time: 3.574; rss: 266MB	item-bodies checking
time: 0.000; rss: 266MB	drop-impl checking
time: 0.219; rss: 277MB	const checking
time: 0.057; rss: 277MB	privacy checking
time: 0.019; rss: 283MB	intrinsic checking
time: 0.014; rss: 283MB	effect checking
time: 0.047; rss: 283MB	match checking
time: 0.046; rss: 291MB	liveness checking
time: 0.173; rss: 293MB	rvalue checking
time: 0.360; rss: 481MB	MIR dump
  time: 0.057; rss: 483MB	SimplifyCfg
  time: 0.074; rss: 483MB	QualifyAndPromoteConstants
  time: 0.120; rss: 499MB	TypeckMir
  time: 0.004; rss: 499MB	SimplifyBranches
  time: 0.031; rss: 499MB	SimplifyCfg
time: 0.285; rss: 499MB	MIR cleanup and validation
time: 0.471; rss: 500MB	borrow checking
time: 0.024; rss: 500MB	reachability checking
time: 0.038; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.179; rss: 500MB	lint checking
time: 0.000; rss: 500MB	resolving dependency formats
  time: 0.004; rss: 500MB	NoLandingPads
  time: 0.028; rss: 500MB	SimplifyCfg
  time: 0.064; rss: 509MB	EraseRegions
  time: 0.011; rss: 509MB	AddCallGuards
  time: 0.272; rss: 529MB	ElaborateDrops
  time: 0.004; rss: 529MB	NoLandingPads
  time: 0.052; rss: 529MB	SimplifyCfg
  time: 0.028; rss: 528MB	InstCombine
  time: 0.012; rss: 528MB	Deaggregator
  time: 0.003; rss: 528MB	CopyPropagation
  time: 0.035; rss: 528MB	SimplifyLocals
  time: 0.010; rss: 528MB	AddCallGuards
  time: 0.003; rss: 528MB	PreTrans
time: 0.526; rss: 528MB	MIR optimisations
  time: 0.064; rss: 537MB	write metadata
  time: 0.391; rss: 549MB	translation item collection
  time: 0.073; rss: 554MB	codegen unit partitioning
  time: 0.048; rss: 1457MB	internalize symbols
time: 12.018; rss: 1457MB	translation
time: 0.000; rss: 1457MB	assert dep graph
time: 1.366; rss: 1485MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.001; rss: 1195MB	llvm function passes [0]
time: 0.000; rss: 1197MB	llvm module passes [0]
time: 0.001; rss: 1207MB	llvm function passes [1]
time: 0.000; rss: 1207MB	llvm module passes [1]
time: 0.001; rss: 1208MB	llvm function passes [2]
time: 0.000; rss: 1208MB	llvm module passes [2]
time: 0.002; rss: 1208MB	llvm function passes [3]
time: 0.000; rss: 1208MB	llvm module passes [3]
time: 0.002; rss: 1208MB	codegen passes [0]
time: 0.004; rss: 1208MB	llvm function passes [6]
time: 0.001; rss: 1208MB	llvm module passes [6]
time: 0.004; rss: 1210MB	codegen passes [1]
time: 0.001; rss: 1210MB	llvm function passes [1]
time: 0.000; rss: 1210MB	llvm module passes [1]
time: 0.007; rss: 1213MB	codegen passes [2]
time: 0.012; rss: 1215MB	llvm function passes [5]
time: 0.018; rss: 1223MB	llvm function passes [4]
time: 0.007; rss: 1223MB	llvm module passes [5]
time: 0.007; rss: 1228MB	llvm module passes [4]
time: 0.025; rss: 1232MB	llvm function passes [2]
time: 0.026; rss: 1232MB	llvm function passes [15]
time: 0.005; rss: 1232MB	llvm module passes [15]
time: 0.033; rss: 1236MB	codegen passes [1]
time: 0.037; rss: 1236MB	codegen passes [3]
time: 0.014; rss: 1236MB	llvm module passes [2]
time: 0.029; rss: 1236MB	llvm function passes [7]
time: 0.000; rss: 1242MB	llvm function passes [11]
time: 0.000; rss: 1242MB	llvm module passes [11]
time: 0.008; rss: 1251MB	llvm module passes [7]
time: 0.006; rss: 1251MB	codegen passes [11]
time: 0.000; rss: 1253MB	llvm function passes [35]
time: 0.000; rss: 1253MB	llvm module passes [35]
time: 0.004; rss: 1255MB	codegen passes [35]
time: 0.000; rss: 1255MB	llvm function passes [35]
time: 0.000; rss: 1255MB	llvm module passes [35]
time: 0.001; rss: 1255MB	codegen passes [35]
time: 0.087; rss: 1267MB	llvm function passes [16]
time: 0.055; rss: 1269MB	llvm function passes [36]
time: 0.000; rss: 1269MB	llvm module passes [36]
time: 0.053; rss: 1269MB	llvm function passes [11]
time: 0.069; rss: 1269MB	llvm function passes [1]
time: 0.061; rss: 1271MB	llvm function passes [48]
time: 0.001; rss: 1271MB	llvm module passes [48]
time: 0.103; rss: 1271MB	codegen passes [6]
time: 0.085; rss: 1271MB	llvm function passes [9]
time: 0.014; rss: 1275MB	llvm module passes [11]
time: 0.016; rss: 1277MB	llvm module passes [1]
time: 0.073; rss: 1279MB	llvm function passes [12]
time: 0.000; rss: 1279MB	llvm module passes [12]
time: 0.021; rss: 1282MB	llvm module passes [9]
time: 0.142; rss: 1286MB	llvm function passes [0]
time: 0.059; rss: 1290MB	llvm module passes [16]
time: 0.053; rss: 1297MB	codegen passes [36]
time: 0.034; rss: 1297MB	llvm function passes [24]
time: 0.003; rss: 1297MB	llvm module passes [24]
time: 0.071; rss: 1342MB	codegen passes [12]
time: 0.031; rss: 1344MB	llvm function passes [36]
time: 0.138; rss: 1344MB	llvm function passes [37]
time: 0.135; rss: 1344MB	llvm function passes [35]
time: 0.071; rss: 1344MB	llvm module passes [0]
time: 0.018; rss: 1348MB	llvm module passes [36]
time: 0.105; rss: 1350MB	llvm function passes [8]
time: 0.032; rss: 1350MB	llvm module passes [37]
time: 0.030; rss: 1350MB	llvm module passes [35]
time: 0.023; rss: 1358MB	llvm module passes [8]
time: 0.141; rss: 1362MB	codegen passes [48]
time: 0.268; rss: 1362MB	llvm function passes [14]
time: 0.148; rss: 1362MB	llvm function passes [39]
time: 0.124; rss: 1364MB	llvm function passes [17]
time: 0.012; rss: 1364MB	llvm module passes [39]
time: 0.193; rss: 1370MB	llvm function passes [31]
time: 0.012; rss: 1377MB	llvm module passes [31]
time: 0.021; rss: 1383MB	llvm function passes [46]
time: 0.005; rss: 1387MB	llvm module passes [46]
time: 0.055; rss: 1385MB	llvm module passes [17]
time: 0.020; rss: 1393MB	llvm function passes [21]
time: 0.000; rss: 1393MB	llvm module passes [21]
time: 0.000; rss: 1393MB	codegen passes [49]
time: 0.387; rss: 1408MB	llvm function passes [10]
time: 0.306; rss: 1408MB	llvm function passes [23]
time: 0.227; rss: 1411MB	llvm function passes [12]
time: 0.336; rss: 1413MB	llvm function passes [13]
time: 0.175; rss: 1413MB	llvm module passes [14]
time: 0.092; rss: 1413MB	codegen passes [46]
time: 0.317; rss: 1415MB	llvm function passes [38]
time: 0.092; rss: 1414MB	codegen passes [21]
time: 0.361; rss: 1414MB	llvm function passes [6]
time: 0.070; rss: 1412MB	llvm module passes [23]
time: 0.147; rss: 1411MB	llvm function passes [41]
time: 0.005; rss: 1411MB	llvm module passes [41]
time: 0.175; rss: 1411MB	llvm function passes [20]
time: 0.016; rss: 1412MB	llvm module passes [20]
time: 0.072; rss: 1414MB	llvm module passes [13]
time: 0.071; rss: 1409MB	llvm module passes [38]
time: 0.130; rss: 1413MB	llvm function passes [47]
time: 0.145; rss: 1415MB	llvm module passes [10]
time: 0.312; rss: 1415MB	llvm function passes [40]
time: 0.013; rss: 1417MB	llvm module passes [47]
time: 0.284; rss: 1415MB	codegen passes [24]
time: 0.530; rss: 1412MB	llvm function passes [3]
time: 0.332; rss: 1406MB	llvm function passes [43]
time: 0.324; rss: 1406MB	llvm function passes [48]
time: 0.138; rss: 1405MB	llvm module passes [6]
time: 0.091; rss: 1410MB	llvm module passes [40]
time: 0.327; rss: 1411MB	llvm function passes [45]
time: 0.518; rss: 1415MB	llvm function passes [32]
time: 0.061; rss: 1415MB	llvm module passes [45]
time: 0.454; rss: 1423MB	llvm function passes [44]
time: 0.164; rss: 1422MB	llvm module passes [43]
time: 0.723; rss: 1420MB	llvm function passes [34]
time: 0.346; rss: 1423MB	llvm module passes [12]
time: 0.206; rss: 1423MB	llvm module passes [3]
time: 0.109; rss: 1413MB	llvm module passes [32]
time: 0.211; rss: 1415MB	codegen passes [41]
time: 0.295; rss: 1424MB	llvm module passes [48]
time: 0.213; rss: 1423MB	llvm module passes [44]
time: 0.774; rss: 1442MB	codegen passes [4]
time: 0.468; rss: 1453MB	codegen passes [47]
time: 1.134; rss: 1467MB	codegen passes [5]
time: 1.345; rss: 1469MB	codegen passes [7]
time: 0.843; rss: 1478MB	llvm module passes [34]
time: 1.180; rss: 1461MB	codegen passes [39]
time: 1.350; rss: 1459MB	codegen passes [31]
time: 1.499; rss: 1459MB	codegen passes [15]
time: 1.467; rss: 1457MB	codegen passes [2]
time: 1.400; rss: 1445MB	codegen passes [9]
time: 1.452; rss: 1420MB	codegen passes [17]
time: 1.705; rss: 1427MB	codegen passes [11]
time: 1.280; rss: 1422MB	codegen passes [43]
time: 1.845; rss: 1420MB	codegen passes [1]
time: 2.244; rss: 1471MB	codegen passes [36]
time: 2.311; rss: 1500MB	codegen passes [8]
time: 2.315; rss: 1489MB	codegen passes [35]
time: 2.372; rss: 1492MB	codegen passes [20]
time: 2.511; rss: 1577MB	codegen passes [48]
time: 2.754; rss: 1560MB	codegen passes [16]
time: 2.804; rss: 1534MB	codegen passes [37]
time: 2.824; rss: 1576MB	codegen passes [6]
time: 3.403; rss: 1696MB	codegen passes [23]
time: 3.774; rss: 1690MB	codegen passes [12]
time: 3.582; rss: 1659MB	codegen passes [3]
time: 4.212; rss: 1654MB	codegen passes [45]
time: 3.755; rss: 1651MB	codegen passes [38]
time: 4.407; rss: 1620MB	codegen passes [0]
time: 4.504; rss: 1597MB	codegen passes [13]
time: 4.032; rss: 1553MB	codegen passes [40]
time: 4.414; rss: 1517MB	codegen passes [10]
time: 4.892; rss: 1472MB	codegen passes [44]
time: 5.160; rss: 1443MB	codegen passes [14]
time: 5.368; rss: 1390MB	codegen passes [32]
time: 5.282; rss: 1326MB	codegen passes [34]
time: 7.939; rss: 1325MB	LLVM passes
time: 0.000; rss: 1325MB	serialize work products
time: 1.055; rss: 285MB	linking
done
