commit a29c49f5cca849cd5ac79b3cd70b934bb33cf4e6
Merge: 0b2c356 f5827d0
Author: bors <bors@rust-lang.org>
Date:   Tue Oct 11 23:36:29 2016 -0700

    Auto merge of #37095 - petrochenkov:metactor, r=alexcrichton
    
    Temporary fix for metadata decoding for struct constructors
    
    Same as https://github.com/rust-lang/rust/pull/37078, but for nightly.
    Ideally, metadata lookup functions should "just work" for constructor ids, but this fixes the issue as well.
    
    Fixes https://github.com/rust-lang/rust/issues/37026
    r? @alexcrichton
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.042; rss: 47MB	parsing
Lines of code:             9003
Pre-expansion node count:  44129
time: 0.000; rss: 47MB	recursion limit
time: 0.000; rss: 47MB	crate injection
time: 0.000; rss: 47MB	plugin loading
time: 0.000; rss: 47MB	plugin registration
time: 0.114; rss: 82MB	expansion
time: 0.000; rss: 82MB	maybe building test harness
time: 0.001; rss: 82MB	maybe creating a macro crate
Post-expansion node count: 101371
time: 0.000; rss: 82MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 82MB	complete gated feature checking
time: 0.003; rss: 82MB	early lint checks
time: 0.001; rss: 82MB	AST validation
time: 0.023; rss: 87MB	name resolution
time: 0.016; rss: 92MB	lowering ast -> hir
time: 0.005; rss: 93MB	indexing hir
time: 0.001; rss: 93MB	attribute checking
time: 0.001; rss: 87MB	language item collection
time: 0.002; rss: 87MB	lifetime resolution
time: 0.000; rss: 87MB	looking for entry point
time: 0.000; rss: 87MB	looking for plugin registrar
time: 0.013; rss: 90MB	region resolution
time: 0.001; rss: 90MB	loop checking
time: 0.001; rss: 90MB	static item recursion checking
time: 0.039; rss: 90MB	compute_incremental_hashes_map
time: 0.000; rss: 90MB	load_dep_graph
time: 0.017; rss: 92MB	type collecting
time: 0.000; rss: 92MB	variance inference
time: 0.033; rss: 95MB	coherence checking
time: 0.053; rss: 97MB	wf checking
time: 0.021; rss: 97MB	item-types checking
time: 0.371; rss: 106MB	item-bodies checking
time: 0.000; rss: 106MB	drop-impl checking
time: 0.038; rss: 108MB	const checking
time: 0.008; rss: 108MB	privacy checking
time: 0.001; rss: 108MB	stability index
time: 0.004; rss: 108MB	intrinsic checking
time: 0.002; rss: 108MB	effect checking
time: 0.009; rss: 108MB	match checking
time: 0.004; rss: 108MB	liveness checking
time: 0.025; rss: 108MB	rvalue checking
time: 0.078; rss: 126MB	MIR dump
  time: 0.007; rss: 126MB	SimplifyCfg
  time: 0.012; rss: 126MB	QualifyAndPromoteConstants
  time: 0.013; rss: 126MB	TypeckMir
  time: 0.001; rss: 126MB	SimplifyBranches
  time: 0.003; rss: 127MB	SimplifyCfg
time: 0.036; rss: 127MB	MIR passes
time: 0.063; rss: 127MB	borrow checking
time: 0.003; rss: 127MB	reachability checking
time: 0.006; rss: 127MB	death checking
time: 0.006; rss: 127MB	stability checking
time: 0.000; rss: 127MB	unused lib feature checking
time: 0.043; rss: 127MB	lint checking
time: 0.000; rss: 127MB	resolving dependency formats
  time: 0.001; rss: 127MB	NoLandingPads
  time: 0.003; rss: 127MB	SimplifyCfg
  time: 0.013; rss: 128MB	EraseRegions
  time: 0.001; rss: 128MB	AddCallGuards
  time: 0.053; rss: 130MB	ElaborateDrops
  time: 0.001; rss: 130MB	NoLandingPads
  time: 0.005; rss: 130MB	SimplifyCfg
  time: 0.003; rss: 130MB	InstCombine
  time: 0.003; rss: 130MB	Deaggregator
  time: 0.001; rss: 130MB	CopyPropagation
  time: 0.001; rss: 130MB	AddCallGuards
  time: 0.000; rss: 130MB	PreTrans
time: 0.085; rss: 130MB	Prepare MIR codegen passes
  time: 0.047; rss: 133MB	write metadata
  time: 0.154; rss: 139MB	translation item collection
  time: 0.019; rss: 142MB	codegen unit partitioning
  time: 0.017; rss: 197MB	internalize symbols
time: 1.235; rss: 185MB	translation
time: 0.000; rss: 185MB	assert dep graph
time: 0.000; rss: 185MB	serialize dep graph
  time: 0.088; rss: 143MB	llvm function passes [0]
  time: 0.041; rss: 146MB	llvm module passes [0]
  time: 1.619; rss: 150MB	codegen passes [0]
  time: 0.001; rss: 150MB	codegen passes [0]
time: 1.910; rss: 149MB	LLVM passes
time: 0.000; rss: 149MB	serialize work products
time: 0.140; rss: 92MB	linking
done
