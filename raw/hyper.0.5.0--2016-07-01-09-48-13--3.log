commit 16281888c0f319706cd07e3c569e0aeb5a66d3b6
Merge: 375fa6e 9e2bd92
Author: bors <bors@rust-lang.org>
Date:   Thu Jun 30 23:30:51 2016 -0700

    Auto merge of #34563 - alexcrichton:robust-mk, r=brson
    
    mk: Don't consider LLVM done until it's done
    
    Currently if an LLVM build is interrupted *after* it creates the llvm-config
    binary but before it's done it puts us in an inconsistent state where we think
    LLVM is compiled but it's not actually. This tweaks our logic to only consider
    LLVM done building once it's actually done building.
    
    This should hopefully alleviate problems on the bots where if we interrupt at
    the wrong time it doesn't corrupt the build directory.
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.039; rss: 88MB	parsing
Lines of code:             9154
Pre-expansion node count:  44838
time: 0.006; rss: 88MB	configuration
time: 0.000; rss: 92MB	recursion limit
time: 0.000; rss: 92MB	crate injection
time: 0.000; rss: 92MB	plugin loading
time: 0.000; rss: 92MB	plugin registration
time: 0.174; rss: 129MB	expansion
time: 0.000; rss: 129MB	maybe building test harness
time: 0.000; rss: 129MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 129MB	complete gated feature checking
Post-expansion node count: 101579
time: 0.007; rss: 129MB	assigning node ids
time: 0.003; rss: 131MB	collecting defs
time: 0.011; rss: 139MB	external crate/lib resolution
time: 0.006; rss: 139MB	early lint checks
time: 0.001; rss: 139MB	AST validation
time: 0.017; rss: 144MB	name resolution
time: 0.009; rss: 153MB	lowering ast -> hir
time: 0.001; rss: 155MB	indexing hir
time: 0.001; rss: 155MB	attribute checking
time: 0.001; rss: 149MB	language item collection
time: 0.002; rss: 149MB	lifetime resolution
time: 0.000; rss: 149MB	looking for entry point
time: 0.000; rss: 149MB	looking for plugin registrar
time: 0.005; rss: 152MB	region resolution
time: 0.001; rss: 152MB	loop checking
time: 0.001; rss: 152MB	static item recursion checking
time: 0.000; rss: 152MB	load_dep_graph
time: 0.031; rss: 154MB	type collecting
time: 0.000; rss: 154MB	variance inference
time: 0.044; rss: 162MB	coherence checking
time: 0.096; rss: 163MB	wf checking
time: 0.035; rss: 163MB	item-types checking
time: 0.515; rss: 175MB	item-bodies checking
time: 0.000; rss: 175MB	drop-impl checking
time: 0.044; rss: 177MB	const checking
time: 0.006; rss: 177MB	privacy checking
time: 0.001; rss: 177MB	stability index
time: 0.006; rss: 177MB	intrinsic checking
time: 0.002; rss: 177MB	effect checking
time: 0.015; rss: 177MB	match checking
time: 0.005; rss: 177MB	liveness checking
time: 0.031; rss: 177MB	rvalue checking
time: 0.060; rss: 187MB	MIR dump
time: 0.043; rss: 187MB	MIR passes
time: 0.071; rss: 187MB	borrow checking
time: 0.003; rss: 187MB	reachability checking
time: 0.005; rss: 187MB	death checking
time: 0.005; rss: 187MB	stability checking
time: 0.000; rss: 187MB	unused lib feature checking
time: 0.050; rss: 187MB	lint checking
time: 0.000; rss: 187MB	resolving dependency formats
time: 0.091; rss: 190MB	Prepare MIR codegen passes
  time: 0.127; rss: 197MB	write metadata
  time: 0.179; rss: 199MB	translation item collection
  time: 0.007; rss: 201MB	codegen unit partitioning
time: 3.660; rss: 321MB	translation
time: 0.001; rss: 321MB	assert dep graph
time: 0.000; rss: 321MB	serialize dep graph
  time: 1.128; rss: 211MB	llvm function passes [0]
  time: 0.431; rss: 212MB	llvm module passes [0]
  time: 16.044; rss: 213MB	codegen passes [0]
  time: 0.002; rss: 165MB	codegen passes [0]
time: 18.981; rss: 165MB	LLVM passes
time: 0.177; rss: 162MB	linking
done
