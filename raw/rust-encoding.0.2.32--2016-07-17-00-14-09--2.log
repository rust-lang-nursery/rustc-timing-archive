commit 34d7f7e607aec07b6db2ccd5cab42f996220e148
Merge: 103e5c9 b9a3590
Author: bors <bors@rust-lang.org>
Date:   Sat Jul 16 21:09:15 2016 -0700

    Auto merge of #34606 - mathstuf:llvm-with-ninja, r=alexcrichton
    
    llvm, rt: build using the Ninja generator if available
    
    The Ninja generator generally builds much faster than make. It may also
    be used on Windows to have a vast speed improvement over the Visual
    Studio generators.
    
    Currently hidden behind an `--enable-ninja` flag because it does not
    obey the top-level `-j` or `-l` flags given to `make`.
rustc: ./rust-encoding.0.2.32
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling encoding v0.2.32 (file:///root/benchmarks/rust-encoding.0.2.32)
time: 0.025; rss: 90MB	parsing
Lines of code:             6441
Pre-expansion node count:  30069
time: 0.003; rss: 90MB	configuration
time: 0.000; rss: 90MB	recursion limit
time: 0.000; rss: 90MB	crate injection
time: 0.000; rss: 90MB	plugin loading
time: 0.000; rss: 90MB	plugin registration
time: 0.047; rss: 127MB	expansion
time: 0.000; rss: 127MB	maybe building test harness
time: 0.003; rss: 127MB	assigning node ids
Post-expansion node count: 40757
time: 0.000; rss: 127MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 127MB	complete gated feature checking
time: 0.001; rss: 127MB	collecting defs
time: 0.001; rss: 129MB	external crate/lib resolution
time: 0.002; rss: 129MB	early lint checks
time: 0.000; rss: 129MB	AST validation
time: 0.006; rss: 129MB	name resolution
time: 0.004; rss: 131MB	lowering ast -> hir
time: 0.000; rss: 131MB	indexing hir
time: 0.000; rss: 131MB	attribute checking
time: 0.000; rss: 131MB	language item collection
time: 0.001; rss: 131MB	lifetime resolution
time: 0.000; rss: 131MB	looking for entry point
time: 0.000; rss: 131MB	looking for plugin registrar
time: 0.002; rss: 132MB	region resolution
time: 0.000; rss: 132MB	loop checking
time: 0.000; rss: 132MB	static item recursion checking
time: 0.000; rss: 132MB	load_dep_graph
time: 0.012; rss: 134MB	type collecting
time: 0.000; rss: 134MB	variance inference
time: 0.021; rss: 137MB	coherence checking
time: 0.025; rss: 139MB	wf checking
time: 0.016; rss: 139MB	item-types checking
time: 0.226; rss: 148MB	item-bodies checking
time: 0.000; rss: 148MB	drop-impl checking
time: 0.013; rss: 148MB	const checking
time: 0.002; rss: 148MB	privacy checking
time: 0.000; rss: 148MB	stability index
time: 0.002; rss: 148MB	intrinsic checking
time: 0.000; rss: 148MB	effect checking
time: 0.008; rss: 148MB	match checking
time: 0.002; rss: 148MB	liveness checking
time: 0.008; rss: 148MB	rvalue checking
time: 0.025; rss: 154MB	MIR dump
time: 0.016; rss: 154MB	MIR passes
time: 0.025; rss: 154MB	borrow checking
time: 0.000; rss: 154MB	reachability checking
time: 0.002; rss: 154MB	death checking
time: 0.002; rss: 154MB	stability checking
time: 0.000; rss: 154MB	unused lib feature checking
time: 0.024; rss: 156MB	lint checking
time: 0.000; rss: 156MB	resolving dependency formats
time: 0.027; rss: 157MB	Prepare MIR codegen passes
  time: 0.060; rss: 161MB	write metadata
  time: 0.033; rss: 163MB	translation item collection
  time: 0.003; rss: 163MB	codegen unit partitioning
time: 0.922; rss: 191MB	translation
time: 0.000; rss: 191MB	assert dep graph
time: 0.000; rss: 191MB	serialize dep graph
  time: 0.331; rss: 155MB	llvm function passes [0]
  time: 0.631; rss: 158MB	llvm module passes [0]
  time: 5.875; rss: 163MB	codegen passes [0]
  time: 0.001; rss: 162MB	codegen passes [0]
time: 7.221; rss: 162MB	LLVM passes
time: 0.054; rss: 145MB	linking
done
