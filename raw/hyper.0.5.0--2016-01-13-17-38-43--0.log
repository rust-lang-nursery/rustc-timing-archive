commit 1447ce78fbd65a629f228ec8731a5cddc076a15c
Merge: 6089eba 42acf89
Author: bors <bors@rust-lang.org>
Date:   Wed Jan 13 22:27:46 2016 +0000

    Auto merge of #30870 - Eljay:issue-30477, r=alexcrichton
    
    Fixes #30477, #30213.
    
    The loop over reexports used to be a closure before #30043 but it's an iterator now so it should just continue instead of exiting the loop and skipping stuff.
    
    r? @brson
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling pkg-config v0.3.6
   Compiling gcc v0.3.21
   Compiling winapi v0.2.5
   Compiling matches v0.1.2
   Compiling httparse v0.1.6
   Compiling rustc-serialize v0.3.16
   Compiling traitobject v0.0.1
   Compiling winapi-build v0.1.1
   Compiling lazy_static v0.1.15
   Compiling typeable v0.1.2
   Compiling bitflags v0.3.3
   Compiling libc v0.1.12
   Compiling unicase v0.1.0
   Compiling libc v0.2.4
   Compiling kernel32-sys v0.2.1
   Compiling advapi32-sys v0.1.2
   Compiling log v0.3.4
   Compiling num_cpus v0.2.10
   Compiling rand v0.3.13
   Compiling time v0.1.34
   Compiling mime v0.0.11
   Compiling openssl-sys v0.6.7
   Compiling openssl v0.6.7
   Compiling uuid v0.1.18
   Compiling url v0.2.38
   Compiling cookie v0.1.21
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.030; rss: 38MB	parsing
Lines of code:             9154
Pre-expansion node count:  45594
time: 0.009; rss: 38MB	configuration 1
time: 0.000; rss: 38MB	recursion limit
time: 0.000; rss: 38MB	gated macro checking
time: 0.000; rss: 38MB	crate injection
time: 0.004; rss: 44MB	macro loading
time: 0.000; rss: 44MB	plugin loading
time: 0.000; rss: 44MB	plugin registration
time: 0.201; rss: 52MB	expansion
time: 0.005; rss: 52MB	complete gated feature checking 1
time: 0.034; rss: 52MB	configuration 2
time: 0.000; rss: 52MB	gated configuration checking
time: 0.014; rss: 52MB	maybe building test harness
time: 0.011; rss: 52MB	prelude injection
time: 0.001; rss: 52MB	checking that all macro invocations are gone
time: 0.000; rss: 52MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 52MB	complete gated feature checking 2
Post-expansion node count: 109258
time: 0.010; rss: 52MB	assigning node ids
time: 0.011; rss: 57MB	lowering ast -> hir
time: 0.005; rss: 61MB	indexing hir
time: 0.000; rss: 61MB	attribute checking
time: 0.005; rss: 61MB	early lint checks
time: 0.003; rss: 58MB	external crate/lib resolution
time: 0.001; rss: 58MB	language item collection
time: 0.031; rss: 80MB	resolution
time: 0.002; rss: 80MB	lifetime resolution
time: 0.000; rss: 80MB	looking for entry point
time: 0.000; rss: 80MB	looking for plugin registrar
time: 0.006; rss: 82MB	region resolution
time: 0.001; rss: 82MB	loop checking
time: 0.001; rss: 82MB	static item recursion checking
time: 0.013; rss: 87MB	type collecting
time: 0.000; rss: 87MB	variance inference
time: 0.039; rss: 103MB	coherence checking
time: 0.070; rss: 106MB	wf checking
time: 0.026; rss: 106MB	item-types checking
time: 0.519; rss: 129MB	item-bodies checking
time: 0.000; rss: 129MB	drop-impl checking
time: 0.044; rss: 131MB	const checking
time: 0.009; rss: 131MB	privacy checking
time: 0.001; rss: 131MB	stability index
time: 0.004; rss: 131MB	intrinsic checking
time: 0.002; rss: 131MB	effect checking
time: 0.013; rss: 131MB	match checking
time: 0.051; rss: 131MB	MIR dump
time: 0.006; rss: 131MB	liveness checking
time: 0.073; rss: 131MB	borrow checking
time: 0.036; rss: 131MB	rvalue checking
time: 0.003; rss: 131MB	reachability checking
time: 0.006; rss: 131MB	death checking
time: 0.007; rss: 131MB	stability checking
time: 0.000; rss: 131MB	unused lib feature checking
time: 0.049; rss: 131MB	lint checking
time: 0.000; rss: 131MB	resolving dependency formats
time: 0.008; rss: 133MB	erasing regions from MIR
  time: 0.136; rss: 272MB	write metadata
time: 1.418; rss: 272MB	translation
  time: 0.098; rss: 167MB	llvm function passes [0]
  time: 0.050; rss: 167MB	llvm module passes [0]
  time: 1.629; rss: 212MB	codegen passes [0]
  time: 0.001; rss: 170MB	codegen passes [0]
time: 2.005; rss: 170MB	LLVM passes
time: 0.180; rss: 169MB	linking
done
