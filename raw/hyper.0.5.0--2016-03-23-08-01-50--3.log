commit d6af19b89c477708ed0f5341ab7a26f1764f1ffa
Merge: 8ba2ea5 3a790ac
Author: bors <bors@rust-lang.org>
Date:   Wed Mar 23 01:03:04 2016 -0700

    Auto merge of #32348 - brson:cargotest, r=alexcrichton
    
    Introduce 'cargotest' and the check-cargotest buildstep
    
    This is a new suite of tests that verifies that the compiler builds specific revisions of select crates from crates.io.
    
    It does not run by default. It is intended that bors runs these tests against all PRs, and gates on them. In this way we will make it harder still to break important swaths of the ecosystem, even on nightly.
    
    This is a very basic implementation intended for feedback. The biggest thing it probably should do but doesn't is use a lockfile for every project it builds.
    
    r? @alexcrichton cc @rust-lang/lang @rust-lang/libs
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.042; rss: 40MB	parsing
Lines of code:             9154
Pre-expansion node count:  45594
time: 0.010; rss: 41MB	configuration 1
time: 0.000; rss: 41MB	recursion limit
time: 0.000; rss: 41MB	gated macro checking
time: 0.000; rss: 41MB	crate injection
time: 0.005; rss: 46MB	macro loading
time: 0.000; rss: 46MB	plugin loading
time: 0.000; rss: 46MB	plugin registration
time: 0.206; rss: 55MB	expansion
time: 0.005; rss: 55MB	complete gated feature checking 1
time: 0.034; rss: 55MB	configuration 2
time: 0.000; rss: 55MB	gated configuration checking
time: 0.014; rss: 55MB	maybe building test harness
time: 0.011; rss: 55MB	prelude injection
time: 0.001; rss: 55MB	checking that all macro invocations are gone
time: 0.000; rss: 55MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 55MB	complete gated feature checking 2
time: 0.001; rss: 55MB	const fn bodies and arguments
Post-expansion node count: 106876
time: 0.010; rss: 56MB	assigning node ids
time: 0.023; rss: 62MB	lowering ast -> hir
time: 0.008; rss: 63MB	indexing hir
time: 0.002; rss: 63MB	attribute checking
time: 0.007; rss: 63MB	early lint checks
time: 0.004; rss: 59MB	external crate/lib resolution
time: 0.001; rss: 59MB	language item collection
time: 0.031; rss: 75MB	resolution
time: 0.002; rss: 75MB	lifetime resolution
time: 0.000; rss: 75MB	looking for entry point
time: 0.000; rss: 75MB	looking for plugin registrar
time: 0.008; rss: 79MB	region resolution
time: 0.001; rss: 79MB	loop checking
time: 0.001; rss: 79MB	static item recursion checking
time: 0.013; rss: 84MB	type collecting
time: 0.000; rss: 84MB	variance inference
time: 0.550; rss: 104MB	coherence checking
time: 0.081; rss: 105MB	wf checking
time: 0.034; rss: 106MB	item-types checking
time: 0.534; rss: 121MB	item-bodies checking
time: 0.000; rss: 121MB	drop-impl checking
time: 0.044; rss: 123MB	const checking
time: 0.011; rss: 123MB	privacy checking
time: 0.001; rss: 123MB	stability index
time: 0.004; rss: 123MB	intrinsic checking
time: 0.002; rss: 123MB	effect checking
time: 0.012; rss: 123MB	match checking
time: 0.006; rss: 124MB	liveness checking
time: 0.034; rss: 124MB	rvalue checking
time: 0.055; rss: 130MB	MIR dump
time: 0.028; rss: 131MB	MIR passes
time: 0.067; rss: 131MB	borrow checking
time: 0.003; rss: 132MB	reachability checking
time: 0.006; rss: 132MB	death checking
time: 0.006; rss: 132MB	stability checking
time: 0.000; rss: 132MB	unused lib feature checking
time: 0.048; rss: 132MB	lint checking
time: 0.000; rss: 132MB	resolving dependency formats
  time: 0.221; rss: 150MB	translation item collection
  time: 0.138; rss: 270MB	write metadata
time: 1.693; rss: 270MB	translation
  time: 0.098; rss: 159MB	llvm function passes [0]
  time: 0.048; rss: 161MB	llvm module passes [0]
  time: 1.642; rss: 163MB	codegen passes [0]
  time: 0.001; rss: 114MB	codegen passes [0]
time: 1.992; rss: 114MB	LLVM passes
time: 0.171; rss: 112MB	linking
done
