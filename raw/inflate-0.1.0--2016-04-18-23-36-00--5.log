commit d36ad55aa5176eeec0da6d2a7b1689c263195e8a
Merge: b324fa7 b325baf
Author: bors <bors@rust-lang.org>
Date:   Mon Apr 18 17:53:58 2016 -0700

    Auto merge of #32755 - alexcrichton:rustbuild-start-test, r=brson
    
    rustbuild: Add support for compiletest test suites
    
    This commit adds support in rustbuild for running all of the compiletest test
    suites as part of `make check`. The `compiletest` program was moved to
    `src/tools` (like `rustbook` and others) and is now just compiled like any other
    old tool. Each test suite has a pretty standard set of dependencies and just
    tweaks various parameters to the final compiletest executable.
    
    Note that full support is lacking in terms of:
    
    * Once a test suite has passed, that's not remembered. When a test suite is
      requested to be run, it's always run.
    * The arguments to compiletest probably don't work for every possible
      combination of platforms and testing environments just yet. There will likely
      need to be future updates to tweak various pieces here and there.
    * Cross compiled test suites probably don't work just yet, support for that will
      come in a follow-up patch.
rustc: ./inflate-0.1.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling inflate v0.1.0 (file:///root/benchmarks/inflate-0.1.0)
time: 0.006; rss: 34MB	parsing
Lines of code:             956
Pre-expansion node count:  4761
time: 0.001; rss: 35MB	configuration 1
time: 0.000; rss: 35MB	recursion limit
time: 0.000; rss: 35MB	gated macro checking
time: 0.000; rss: 35MB	crate injection
time: 0.003; rss: 38MB	macro loading
time: 0.000; rss: 38MB	plugin loading
time: 0.000; rss: 38MB	plugin registration
time: 0.092; rss: 46MB	expansion
time: 0.001; rss: 46MB	complete gated feature checking 1
time: 0.009; rss: 46MB	configuration 2
time: 0.000; rss: 46MB	gated configuration checking
time: 0.004; rss: 46MB	maybe building test harness
time: 0.004; rss: 46MB	prelude injection
time: 0.000; rss: 46MB	checking that all macro invocations are gone
time: 0.000; rss: 46MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 46MB	complete gated feature checking 2
time: 0.000; rss: 46MB	const fn bodies and arguments
Post-expansion node count: 54798
time: 0.004; rss: 46MB	assigning node ids
time: 0.019; rss: 51MB	lowering ast -> hir
time: 0.002; rss: 52MB	indexing hir
time: 0.000; rss: 52MB	attribute checking
time: 0.004; rss: 52MB	early lint checks
time: 0.001; rss: 49MB	external crate/lib resolution
time: 0.001; rss: 49MB	language item collection
time: 0.012; rss: 58MB	resolution
time: 0.001; rss: 58MB	lifetime resolution
time: 0.000; rss: 58MB	looking for entry point
time: 0.000; rss: 58MB	looking for plugin registrar
time: 0.004; rss: 59MB	region resolution
time: 0.000; rss: 59MB	loop checking
time: 0.000; rss: 59MB	static item recursion checking
time: 0.000; rss: 59MB	load_dep_graph
time: 0.001; rss: 60MB	type collecting
time: 0.000; rss: 60MB	variance inference
time: 0.010; rss: 75MB	coherence checking
time: 0.002; rss: 75MB	wf checking
time: 0.002; rss: 75MB	item-types checking
time: 2.879; rss: 96MB	item-bodies checking
time: 0.000; rss: 96MB	drop-impl checking
time: 0.014; rss: 96MB	const checking
time: 0.002; rss: 96MB	privacy checking
time: 0.000; rss: 96MB	stability index
time: 0.001; rss: 96MB	intrinsic checking
time: 0.001; rss: 96MB	effect checking
time: 0.004; rss: 96MB	match checking
time: 0.318; rss: 96MB	liveness checking
time: 0.009; rss: 96MB	rvalue checking
time: 0.036; rss: 109MB	MIR dump
time: 0.013; rss: 106MB	MIR passes
time: 0.207; rss: 108MB	borrow checking
time: 0.000; rss: 108MB	reachability checking
time: 0.003; rss: 108MB	death checking
time: 0.002; rss: 108MB	stability checking
time: 0.000; rss: 108MB	unused lib feature checking
time: 0.021; rss: 110MB	lint checking
time: 0.000; rss: 110MB	resolving dependency formats
time: 0.006; rss: 110MB	Prepare MIR codegen passes
  time: 0.011; rss: 123MB	translation item collection
  time: 0.000; rss: 123MB	codegen unit partitioning
  time: 0.003; rss: 140MB	write metadata
time: 0.368; rss: 132MB	translation
time: 0.000; rss: 132MB	assert dep graph
time: 0.000; rss: 132MB	serialize dep graph
  time: 0.026; rss: 98MB	llvm function passes [0]
  time: 0.004; rss: 98MB	llvm module passes [0]
  time: 0.495; rss: 104MB	codegen passes [0]
  time: 0.000; rss: 93MB	codegen passes [0]
time: 0.569; rss: 93MB	LLVM passes
time: 0.034; rss: 93MB	linking
done
