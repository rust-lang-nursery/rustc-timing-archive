commit dc91467db05ba6ee2a2a72c440e8c48008abb7a3
Merge: 3c795e0 e9c0283
Author: bors <bors@rust-lang.org>
Date:   Thu May 26 08:32:21 2016 -0700

    Auto merge of #33766 - jseyfried:cleanup_expansion, r=nrc
    
    Cleanup macro expansion and improve diagnostics
    
    Cleanup macro expansion and improve diagnostics. Fixes #33709.
    r? @nrc
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling httparse v0.1.6
   Compiling lazy_static v0.1.16
   Compiling unicase v0.1.0
   Compiling pkg-config v0.3.8
   Compiling traitobject v0.0.1
   Compiling typeable v0.1.2
   Compiling winapi v0.2.7
   Compiling rustc-serialize v0.3.19
   Compiling log v0.3.6
   Compiling libc v0.2.11
   Compiling bitflags v0.3.3
   Compiling gcc v0.3.28
   Compiling libc v0.1.12
   Compiling matches v0.1.2
   Compiling mime v0.0.11
   Compiling winapi-build v0.1.1
   Compiling kernel32-sys v0.2.2
   Compiling openssl-sys v0.6.7
   Compiling rand v0.3.14
   Compiling num_cpus v0.2.12
   Compiling time v0.1.35
   Compiling openssl v0.6.7
   Compiling uuid v0.1.18
   Compiling url v0.2.38
   Compiling cookie v0.1.21
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.048; rss: 49MB	parsing
Lines of code:             9154
Pre-expansion node count:  45851
time: 0.011; rss: 50MB	configuration 1
time: 0.000; rss: 50MB	recursion limit
time: 0.000; rss: 50MB	crate injection
time: 0.025; rss: 85MB	macro loading
time: 0.000; rss: 85MB	plugin loading
time: 0.000; rss: 85MB	plugin registration
time: 0.243; rss: 95MB	expansion
time: 0.037; rss: 95MB	configuration 2
time: 0.000; rss: 95MB	gated configuration checking
time: 0.014; rss: 95MB	maybe building test harness
time: 0.011; rss: 95MB	prelude injection
time: 0.001; rss: 95MB	checking that all macro invocations are gone
time: 0.000; rss: 95MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 95MB	complete gated feature checking
Post-expansion node count: 103616
time: 0.010; rss: 95MB	assigning node ids
time: 0.006; rss: 96MB	collecting defs
time: 0.011; rss: 106MB	external crate/lib resolution
time: 0.008; rss: 106MB	early lint checks
time: 0.029; rss: 111MB	name resolution
time: 0.023; rss: 117MB	lowering ast -> hir
time: 0.005; rss: 118MB	indexing hir
time: 0.001; rss: 118MB	attribute checking
time: 0.001; rss: 111MB	language item collection
time: 0.002; rss: 111MB	lifetime resolution
time: 0.000; rss: 111MB	looking for entry point
time: 0.000; rss: 111MB	looking for plugin registrar
time: 0.010; rss: 113MB	region resolution
time: 0.001; rss: 113MB	loop checking
time: 0.001; rss: 113MB	static item recursion checking
time: 0.000; rss: 113MB	load_dep_graph
time: 0.019; rss: 117MB	type collecting
time: 0.000; rss: 117MB	variance inference
time: 0.046; rss: 123MB	coherence checking
time: 0.107; rss: 124MB	wf checking
time: 0.038; rss: 124MB	item-types checking
time: 0.564; rss: 133MB	item-bodies checking
time: 0.000; rss: 133MB	drop-impl checking
time: 0.050; rss: 135MB	const checking
time: 0.009; rss: 135MB	privacy checking
time: 0.001; rss: 135MB	stability index
time: 0.006; rss: 135MB	intrinsic checking
time: 0.002; rss: 135MB	effect checking
time: 0.016; rss: 135MB	match checking
time: 0.005; rss: 135MB	liveness checking
time: 0.033; rss: 135MB	rvalue checking
time: 0.085; rss: 143MB	MIR dump
time: 0.047; rss: 144MB	MIR passes
time: 0.077; rss: 145MB	borrow checking
time: 0.003; rss: 145MB	reachability checking
time: 0.006; rss: 145MB	death checking
time: 0.006; rss: 145MB	stability checking
time: 0.000; rss: 145MB	unused lib feature checking
time: 0.055; rss: 145MB	lint checking
time: 0.000; rss: 145MB	resolving dependency formats
time: 0.012; rss: 146MB	Prepare MIR codegen passes
  time: 0.148; rss: 153MB	write metadata
  time: 0.317; rss: 157MB	translation item collection
  time: 0.007; rss: 159MB	codegen unit partitioning
time: 2.164; rss: 277MB	translation
time: 0.001; rss: 277MB	assert dep graph
time: 0.000; rss: 277MB	serialize dep graph
  time: 0.097; rss: 174MB	llvm function passes [0]
  time: 0.049; rss: 176MB	llvm module passes [0]
  time: 1.635; rss: 177MB	codegen passes [0]
  time: 0.001; rss: 126MB	codegen passes [0]
time: 1.983; rss: 124MB	LLVM passes
time: 0.177; rss: 122MB	linking
done
