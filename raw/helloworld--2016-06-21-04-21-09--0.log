commit 45cde975cb9b5f3ebe1261b5a962c75731e884e4
Merge: 4ba60ab 7279af8
Author: bors <bors@rust-lang.org>
Date:   Mon Jun 20 21:04:48 2016 -0700

    Auto merge of #34189 - eddyb:mir-trans-imm, r=nagisa
    
    trans: generalize immediate temporaries to all MIR locals.
    
    Added `Mir::local_index` which gives you an unified index for `Arg`, `Var`, `Temp` and `ReturnPointer`.
    Also available is `Mir::count_locals` which returns the total number of the above locals.
    This simplifies a lot of the code which can treat all of the local lvalues in the same manner.
    If we had `-> impl Iterator`, I could have added a bunch of useful `Ty` or `Lvalue` iterators for all locals.
    We could of course manually write such iterators as they are needed.
    
    The only place which currently takes advantage of unified locals is trans' alloca elision.
    Currently it's not as good as it could be, due to our usage of `llvm.dbg.declare` in debug mode.
    But passing some arguments and variables as immediates has some effect on release-mode `libsyntax`:
    
    Old trans:
    ```
    time: 11.500; rss: 710MB        translation
    time: 0.002; rss: 710MB assert dep graph
    time: 0.000; rss: 710MB serialize dep graph
      time: 4.410; rss: 628MB       llvm function passes [0]
      time: 84.485; rss: 633MB      llvm module passes [0]
      time: 23.898; rss: 634MB      codegen passes [0]
      time: 0.002; rss: 634MB       codegen passes [0]
    time: 113.408; rss: 634MB       LLVM passes
    ```
    `-Z orbit`, previously:
    ```
    time: 12.588; rss: 723MB        translation
    time: 0.002; rss: 723MB assert dep graph
    time: 0.000; rss: 723MB serialize dep graph
      time: 4.597; rss: 642MB       llvm function passes [0]
      time: 77.347; rss: 646MB      llvm module passes [0]
      time: 24.703; rss: 648MB      codegen passes [0]
      time: 0.002; rss: 615MB       codegen passes [0]
    time: 107.233; rss: 615MB       LLVM passes
    ```
    `-Z orbit`, after this PR:
    ```
    time: 13.820; rss: 672MB        translation
    time: 0.002; rss: 672MB assert dep graph
    time: 0.000; rss: 672MB serialize dep graph
      time: 3.969; rss: 591MB       llvm function passes [0]
      time: 72.294; rss: 595MB      llvm module passes [0]
      time: 24.610; rss: 597MB      codegen passes [0]
      time: 0.002; rss: 597MB       codegen passes [0]
    time: 101.439; rss: 597MB       LLVM passes
    ```
rustc: ./helloworld
/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc hello.rs -Ztime-passes -Zinput-stats
time: 0.000; rss: 44MB	parsing
Lines of code:             3
Pre-expansion node count:  8
time: 0.000; rss: 48MB	configuration
time: 0.000; rss: 48MB	recursion limit
time: 0.000; rss: 48MB	crate injection
time: 0.000; rss: 48MB	plugin loading
time: 0.000; rss: 48MB	plugin registration
time: 0.020; rss: 82MB	expansion
time: 0.000; rss: 82MB	maybe building test harness
time: 0.000; rss: 82MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 82MB	complete gated feature checking
Post-expansion node count: 68
time: 0.000; rss: 82MB	assigning node ids
time: 0.000; rss: 82MB	collecting defs
time: 0.003; rss: 82MB	external crate/lib resolution
time: 0.000; rss: 82MB	early lint checks
time: 0.000; rss: 82MB	AST validation
time: 0.000; rss: 82MB	name resolution
time: 0.000; rss: 82MB	lowering ast -> hir
time: 0.000; rss: 82MB	indexing hir
time: 0.000; rss: 82MB	attribute checking
time: 0.000; rss: 86MB	language item collection
time: 0.000; rss: 86MB	lifetime resolution
time: 0.000; rss: 86MB	looking for entry point
time: 0.000; rss: 86MB	looking for plugin registrar
time: 0.000; rss: 86MB	region resolution
time: 0.000; rss: 86MB	loop checking
time: 0.000; rss: 86MB	static item recursion checking
time: 0.000; rss: 86MB	load_dep_graph
time: 0.000; rss: 86MB	type collecting
time: 0.000; rss: 86MB	variance inference
time: 0.005; rss: 86MB	coherence checking
time: 0.000; rss: 86MB	wf checking
time: 0.000; rss: 86MB	item-types checking
time: 0.000; rss: 86MB	item-bodies checking
time: 0.000; rss: 86MB	drop-impl checking
time: 0.000; rss: 86MB	const checking
time: 0.000; rss: 86MB	privacy checking
time: 0.000; rss: 86MB	stability index
time: 0.000; rss: 86MB	intrinsic checking
time: 0.000; rss: 86MB	effect checking
time: 0.000; rss: 86MB	match checking
time: 0.000; rss: 86MB	liveness checking
time: 0.000; rss: 86MB	rvalue checking
time: 0.000; rss: 86MB	MIR dump
time: 0.000; rss: 86MB	MIR passes
time: 0.000; rss: 91MB	borrow checking
time: 0.000; rss: 91MB	reachability checking
time: 0.000; rss: 91MB	death checking
time: 0.000; rss: 91MB	stability checking
time: 0.000; rss: 91MB	unused lib feature checking
time: 0.000; rss: 91MB	lint checking
time: 0.001; rss: 91MB	resolving dependency formats
time: 0.000; rss: 91MB	Prepare MIR codegen passes
  time: 0.000; rss: 91MB	write metadata
  time: 0.000; rss: 91MB	translation item collection
  time: 0.000; rss: 91MB	codegen unit partitioning
time: 0.009; rss: 91MB	translation
time: 0.000; rss: 91MB	assert dep graph
time: 0.000; rss: 91MB	serialize dep graph
  time: 0.000; rss: 91MB	llvm function passes [0]
  time: 0.000; rss: 91MB	llvm module passes [0]
  time: 0.001; rss: 95MB	codegen passes [0]
  time: 0.000; rss: 95MB	codegen passes [0]
time: 0.002; rss: 95MB	LLVM passes
  time: 0.109; rss: 95MB	running linker
time: 0.109; rss: 95MB	linking
done
