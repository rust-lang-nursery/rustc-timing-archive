commit 0894b06283ac513bd4b6351aa9065fa515e2a71d
Merge: a09f386 a3fdde7
Author: bors <bors@rust-lang.org>
Date:   Sun Apr 3 03:12:41 2016 -0700

    Auto merge of #32168 - alexcrichton:fix-filecheck, r=aturon
    
    mk: Add configure option for disabling codegen tests
    
    Our `codegen` test suite requires the LLVM `FileCheck` utility but unfortunately
    this isn't always available in all custom LLVM roots (e.g. those specified via
    `--llvm-root`). This commit adds a `./configure` option called
    `--disable-codegen-tests` which will manually disable running these tests. In
    the case that this option is passed we can forgo the need for the `FileCheck`
    executable. Note that we still require `FileCheck` by default as we will attempt
    to run these tests.
    
    Closes #28667
rustc: ./issue-32062-equality-relations-complexity
/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc issue-32062.rs -Ztime-passes -Zinput-stats
time: 0.000; rss: 33MB	parsing
Lines of code:             60
Pre-expansion node count:  586
time: 0.000; rss: 37MB	configuration 1
time: 0.000; rss: 37MB	recursion limit
time: 0.000; rss: 37MB	gated macro checking
time: 0.000; rss: 37MB	crate injection
time: 0.003; rss: 40MB	macro loading
time: 0.000; rss: 40MB	plugin loading
time: 0.000; rss: 40MB	plugin registration
time: 0.001; rss: 40MB	expansion
time: 0.000; rss: 40MB	complete gated feature checking 1
time: 0.000; rss: 40MB	configuration 2
time: 0.000; rss: 40MB	gated configuration checking
time: 0.000; rss: 40MB	maybe building test harness
time: 0.000; rss: 40MB	prelude injection
time: 0.000; rss: 40MB	checking that all macro invocations are gone
time: 0.000; rss: 40MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 40MB	complete gated feature checking 2
time: 0.000; rss: 40MB	const fn bodies and arguments
Post-expansion node count: 599
time: 0.000; rss: 40MB	assigning node ids
time: 0.000; rss: 40MB	lowering ast -> hir
time: 0.000; rss: 40MB	indexing hir
time: 0.000; rss: 40MB	attribute checking
time: 0.000; rss: 40MB	early lint checks
time: 0.001; rss: 40MB	external crate/lib resolution
time: 0.000; rss: 40MB	language item collection
time: 0.000; rss: 45MB	resolution
time: 0.000; rss: 45MB	lifetime resolution
time: 0.000; rss: 45MB	looking for entry point
time: 0.000; rss: 45MB	looking for plugin registrar
time: 0.000; rss: 45MB	region resolution
time: 0.000; rss: 45MB	loop checking
time: 0.000; rss: 45MB	static item recursion checking
time: 0.001; rss: 49MB	type collecting
time: 0.000; rss: 49MB	variance inference
time: 0.005; rss: 58MB	coherence checking
time: 0.007; rss: 61MB	wf checking
time: 0.000; rss: 61MB	item-types checking
time: 1.934; rss: 107MB	item-bodies checking
time: 0.000; rss: 107MB	drop-impl checking
time: 0.001; rss: 107MB	const checking
time: 0.000; rss: 107MB	privacy checking
time: 0.000; rss: 107MB	stability index
time: 0.000; rss: 107MB	intrinsic checking
time: 0.000; rss: 107MB	effect checking
time: 0.000; rss: 107MB	match checking
time: 0.000; rss: 107MB	liveness checking
time: 0.002; rss: 107MB	rvalue checking
time: 0.001; rss: 107MB	MIR dump
time: 0.000; rss: 107MB	MIR passes
time: 0.001; rss: 107MB	borrow checking
time: 0.000; rss: 107MB	reachability checking
time: 0.000; rss: 107MB	death checking
time: 0.000; rss: 107MB	stability checking
time: 0.000; rss: 107MB	unused lib feature checking
time: 0.000; rss: 107MB	lint checking
time: 0.001; rss: 107MB	resolving dependency formats
  time: 0.104; rss: 120MB	translation item collection
  time: 0.000; rss: 129MB	write metadata
time: 0.515; rss: 129MB	translation
  time: 0.000; rss: 82MB	llvm function passes [0]
  time: 0.000; rss: 82MB	llvm module passes [0]
  time: 0.005; rss: 87MB	codegen passes [0]
  time: 0.000; rss: 87MB	codegen passes [0]
time: 0.006; rss: 87MB	LLVM passes
  time: 0.099; rss: 87MB	running linker
time: 0.099; rss: 87MB	linking
done
