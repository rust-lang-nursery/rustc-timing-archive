commit b5de94fba9a137a1128448f4b703250e7e8ff975
Merge: 6892277 ae79ce3
Author: bors <bors@rust-lang.org>
Date:   Sat Apr 16 23:06:29 2016 -0700

    Auto merge of #32977 - alexcrichton:ignore-panics, r=brson
    
    std: Change String::truncate to panic less
    
    The `Vec::truncate` method does not panic if the length argument is greater than
    the vector's current length, but `String::truncate` will indeed panic. This
    semantic difference can be a bit jarring (e.g. #32717), and after some
    discussion the libs team concluded that although this can technically be a
    breaking change it is almost undoubtedly not so in practice.
    
    This commit changes the semantics of `String::truncate` to be a noop if
    `new_len` is greater than the length of the current string.
    
    Closes #32717
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.029; rss: 49MB	parsing
Lines of code:             9154
Pre-expansion node count:  45594
time: 0.008; rss: 49MB	configuration 1
time: 0.000; rss: 49MB	recursion limit
time: 0.000; rss: 49MB	gated macro checking
time: 0.000; rss: 49MB	crate injection
time: 0.004; rss: 54MB	macro loading
time: 0.000; rss: 54MB	plugin loading
time: 0.000; rss: 54MB	plugin registration
time: 0.187; rss: 63MB	expansion
time: 0.005; rss: 63MB	complete gated feature checking 1
time: 0.029; rss: 63MB	configuration 2
time: 0.000; rss: 63MB	gated configuration checking
time: 0.011; rss: 63MB	maybe building test harness
time: 0.008; rss: 63MB	prelude injection
time: 0.001; rss: 63MB	checking that all macro invocations are gone
time: 0.000; rss: 63MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 63MB	complete gated feature checking 2
time: 0.001; rss: 63MB	const fn bodies and arguments
Post-expansion node count: 107125
time: 0.008; rss: 63MB	assigning node ids
time: 0.011; rss: 67MB	lowering ast -> hir
time: 0.004; rss: 71MB	indexing hir
time: 0.001; rss: 71MB	attribute checking
time: 0.006; rss: 71MB	early lint checks
time: 0.004; rss: 68MB	external crate/lib resolution
time: 0.001; rss: 68MB	language item collection
time: 0.024; rss: 86MB	resolution
time: 0.002; rss: 86MB	lifetime resolution
time: 0.000; rss: 86MB	looking for entry point
time: 0.000; rss: 86MB	looking for plugin registrar
time: 0.006; rss: 89MB	region resolution
time: 0.001; rss: 89MB	loop checking
time: 0.001; rss: 89MB	static item recursion checking
time: 0.000; rss: 89MB	load_dep_graph
time: 0.018; rss: 98MB	type collecting
time: 0.000; rss: 98MB	variance inference
time: 0.043; rss: 114MB	coherence checking
time: 0.073; rss: 115MB	wf checking
time: 0.028; rss: 117MB	item-types checking
time: 0.464; rss: 139MB	item-bodies checking
time: 0.000; rss: 139MB	drop-impl checking
time: 0.036; rss: 141MB	const checking
time: 0.007; rss: 141MB	privacy checking
time: 0.001; rss: 141MB	stability index
time: 0.004; rss: 141MB	intrinsic checking
time: 0.002; rss: 141MB	effect checking
time: 0.012; rss: 141MB	match checking
time: 0.005; rss: 142MB	liveness checking
time: 0.032; rss: 142MB	rvalue checking
time: 0.048; rss: 149MB	MIR dump
time: 0.022; rss: 149MB	MIR passes
time: 0.064; rss: 149MB	borrow checking
time: 0.003; rss: 149MB	reachability checking
time: 0.006; rss: 149MB	death checking
time: 0.006; rss: 149MB	stability checking
time: 0.000; rss: 149MB	unused lib feature checking
time: 0.046; rss: 149MB	lint checking
time: 0.000; rss: 149MB	resolving dependency formats
time: 0.010; rss: 149MB	Prepare MIR codegen passes
  time: 0.179; rss: 175MB	translation item collection
  time: 0.007; rss: 175MB	codegen unit partitioning
  time: 0.137; rss: 293MB	write metadata
time: 1.470; rss: 293MB	translation
time: 0.001; rss: 293MB	assert dep graph
time: 0.000; rss: 293MB	serialize dep graph
  time: 0.097; rss: 173MB	llvm function passes [0]
  time: 0.047; rss: 174MB	llvm module passes [0]
  time: 1.630; rss: 179MB	codegen passes [0]
  time: 0.001; rss: 127MB	codegen passes [0]
time: 1.977; rss: 125MB	LLVM passes
time: 0.174; rss: 123MB	linking
done
