commit 86995dc8c56b3c2923dff8a4bb79fed7c60a4396
Merge: 91f057d ca5dfd0
Author: bors <bors@rust-lang.org>
Date:   Sun Sep 4 18:36:42 2016 -0700

    Auto merge of #36240 - leeopop:master, r=jseyfried
    
    Allow CompilerControllers to access rustc_plugin::registry::Registry
    
    fixes #36064
    
    I chose to put ructc_plugin::registry::Registry structure
    into CompilerState structure, instead of Session structure.
    This will preserve dependencies among librustc, libructc_driver, and libructc_plugin.
    
    @jseyfried @sanxiyn
rustc: ./rust-encoding-0.3.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling encoding v0.3.0-dev (file:///root/benchmarks/rust-encoding-0.3.0)
time: 0.021; rss: 49MB	parsing
Lines of code:             6066
Pre-expansion node count:  28489
time: 0.002; rss: 50MB	configuration
time: 0.000; rss: 50MB	recursion limit
time: 0.000; rss: 50MB	crate injection
time: 0.000; rss: 50MB	plugin loading
time: 0.000; rss: 50MB	plugin registration
time: 0.037; rss: 74MB	expansion
time: 0.000; rss: 74MB	maybe building test harness
time: 0.000; rss: 74MB	maybe creating a macro crate
time: 0.002; rss: 74MB	assigning node ids
Post-expansion node count: 39145
time: 0.000; rss: 74MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 74MB	complete gated feature checking
time: 0.001; rss: 74MB	collecting defs
time: 0.001; rss: 75MB	external crate/lib resolution
time: 0.001; rss: 75MB	early lint checks
time: 0.000; rss: 75MB	AST validation
time: 0.004; rss: 78MB	name resolution
time: 0.004; rss: 82MB	lowering ast -> hir
time: 0.001; rss: 82MB	indexing hir
time: 0.000; rss: 82MB	attribute checking
time: 0.000; rss: 81MB	language item collection
time: 0.001; rss: 81MB	lifetime resolution
time: 0.000; rss: 81MB	looking for entry point
time: 0.000; rss: 81MB	looking for plugin registrar
time: 0.002; rss: 82MB	region resolution
time: 0.000; rss: 82MB	loop checking
time: 0.000; rss: 82MB	static item recursion checking
time: 0.005; rss: 83MB	compute_incremental_hashes_map
time: 0.000; rss: 83MB	load_dep_graph
time: 0.010; rss: 84MB	type collecting
time: 0.000; rss: 84MB	variance inference
time: 0.016; rss: 85MB	coherence checking
time: 0.013; rss: 87MB	wf checking
time: 0.011; rss: 87MB	item-types checking
time: 0.148; rss: 93MB	item-bodies checking
time: 0.000; rss: 93MB	drop-impl checking
time: 0.011; rss: 93MB	const checking
time: 0.001; rss: 93MB	privacy checking
time: 0.000; rss: 93MB	stability index
time: 0.002; rss: 93MB	intrinsic checking
time: 0.000; rss: 93MB	effect checking
time: 0.007; rss: 93MB	match checking
time: 0.001; rss: 93MB	liveness checking
time: 0.007; rss: 93MB	rvalue checking
time: 0.021; rss: 103MB	MIR dump
time: 0.013; rss: 104MB	MIR passes
time: 0.021; rss: 104MB	borrow checking
time: 0.000; rss: 104MB	reachability checking
time: 0.001; rss: 104MB	death checking
time: 0.002; rss: 104MB	stability checking
time: 0.000; rss: 104MB	unused lib feature checking
time: 0.017; rss: 104MB	lint checking
time: 0.000; rss: 104MB	resolving dependency formats
time: 0.026; rss: 104MB	Prepare MIR codegen passes
  time: 0.021; rss: 107MB	write metadata
  time: 0.248; rss: 231MB	translation item collection
  time: 0.002; rss: 231MB	codegen unit partitioning
  time: 0.005; rss: 256MB	internalize symbols
time: 0.589; rss: 248MB	translation
time: 0.000; rss: 248MB	assert dep graph
time: 0.000; rss: 248MB	serialize dep graph
  time: 0.026; rss: 123MB	llvm function passes [0]
  time: 0.057; rss: 127MB	llvm module passes [0]
  time: 0.643; rss: 134MB	codegen passes [0]
  time: 0.001; rss: 133MB	codegen passes [0]
time: 0.783; rss: 133MB	LLVM passes
time: 0.000; rss: 133MB	serialize work products
time: 0.083; rss: 102MB	linking
done
