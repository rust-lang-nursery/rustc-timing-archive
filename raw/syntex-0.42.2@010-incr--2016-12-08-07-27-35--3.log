commit 816a34aca23f3ebd0fddf79ebdf96c9fae976f58
Merge: d9aae63 a1882ca
Author: bors <bors@rust-lang.org>
Date:   Thu Dec 8 07:05:19 2016 +0000

    Auto merge of #38146 - kali:master, r=alexcrichton
    
    fix objc ABI in std::env::args
    
    iOS use different calling convention for `objc_msgSend` depending on the platform. armv7 expect good old variadic arguments, but aarch64 wants "normal" convention: `objc_msgSend` has to be called mimicking the actual callee prototype.
    
    https://developer.apple.com/library/content/documentation/General/Conceptual/CocoaTouch64BitGuide/ConvertingYourAppto64-Bit/ConvertingYourAppto64-Bit.html#//apple_ref/doc/uid/TP40013501-CH3-SW26
    
    This currently breaks std::env:args() on aarch64 iOS devices. As far as I can tell, in the standard library, this is the only occurrence of ObjectiveC dispatching.
rustc: ./syntex-0.42.2@010-incr@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.242; rss: 152MB	expansion
time: 0.000; rss: 152MB	maybe building test harness
time: 0.006; rss: 152MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 152MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 152MB	complete gated feature checking
time: 0.023; rss: 152MB	early lint checks
time: 0.007; rss: 152MB	AST validation
time: 0.075; rss: 166MB	name resolution
time: 0.059; rss: 200MB	lowering ast -> hir
time: 0.010; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.046; rss: 177MB	region resolution
time: 0.008; rss: 177MB	loop checking
time: 0.002; rss: 177MB	static item recursion checking
time: 0.381; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.021; rss: 182MB	stability checking
time: 0.056; rss: 190MB	type collecting
time: 0.004; rss: 190MB	variance inference
time: 0.006; rss: 193MB	impl wf inference
time: 0.026; rss: 197MB	coherence checking
time: 0.089; rss: 200MB	wf checking
time: 0.197; rss: 208MB	item-types checking
time: 3.618; rss: 266MB	item-bodies checking
time: 0.000; rss: 266MB	drop-impl checking
time: 0.216; rss: 277MB	const checking
time: 0.060; rss: 277MB	privacy checking
time: 0.021; rss: 284MB	intrinsic checking
time: 0.017; rss: 284MB	effect checking
time: 0.052; rss: 284MB	match checking
time: 0.051; rss: 291MB	liveness checking
time: 0.180; rss: 293MB	rvalue checking
time: 0.372; rss: 482MB	MIR dump
  time: 0.061; rss: 483MB	SimplifyCfg
  time: 0.082; rss: 484MB	QualifyAndPromoteConstants
  time: 0.128; rss: 500MB	TypeckMir
  time: 0.005; rss: 500MB	SimplifyBranches
  time: 0.034; rss: 500MB	SimplifyCfg
time: 0.310; rss: 500MB	MIR cleanup and validation
time: 0.478; rss: 500MB	borrow checking
time: 0.026; rss: 500MB	reachability checking
time: 0.044; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.181; rss: 500MB	lint checking
time: 0.000; rss: 500MB	resolving dependency formats
  time: 0.004; rss: 500MB	NoLandingPads
  time: 0.030; rss: 500MB	SimplifyCfg
  time: 0.073; rss: 509MB	EraseRegions
  time: 0.013; rss: 509MB	AddCallGuards
  time: 0.280; rss: 531MB	ElaborateDrops
  time: 0.004; rss: 531MB	NoLandingPads
  time: 0.057; rss: 531MB	SimplifyCfg
  time: 0.033; rss: 531MB	InstCombine
  time: 0.013; rss: 531MB	Deaggregator
  time: 0.004; rss: 531MB	CopyPropagation
  time: 0.042; rss: 531MB	SimplifyLocals
  time: 0.011; rss: 531MB	AddCallGuards
  time: 0.003; rss: 531MB	PreTrans
time: 0.567; rss: 531MB	MIR optimisations
  time: 0.079; rss: 537MB	write metadata
  time: 0.411; rss: 552MB	translation item collection
  time: 0.073; rss: 555MB	codegen unit partitioning
  time: 0.049; rss: 1457MB	internalize symbols
time: 11.895; rss: 1457MB	translation
time: 0.000; rss: 1457MB	assert dep graph
time: 1.448; rss: 1485MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1195MB	llvm function passes [0]
time: 0.000; rss: 1195MB	llvm module passes [0]
time: 0.001; rss: 1203MB	llvm function passes [1]
time: 0.000; rss: 1203MB	llvm module passes [1]
time: 0.001; rss: 1208MB	llvm function passes [3]
time: 0.000; rss: 1208MB	llvm module passes [3]
time: 0.001; rss: 1208MB	llvm function passes [2]
time: 0.000; rss: 1208MB	llvm module passes [2]
time: 0.004; rss: 1214MB	llvm function passes [4]
time: 0.001; rss: 1216MB	llvm function passes [8]
time: 0.003; rss: 1216MB	llvm module passes [4]
time: 0.000; rss: 1216MB	llvm module passes [8]
time: 0.008; rss: 1216MB	llvm function passes [6]
time: 0.006; rss: 1218MB	llvm module passes [6]
time: 0.015; rss: 1218MB	llvm function passes [5]
time: 0.016; rss: 1218MB	codegen passes [1]
time: 0.008; rss: 1223MB	llvm module passes [5]
time: 0.020; rss: 1223MB	codegen passes [3]
time: 0.026; rss: 1225MB	codegen passes [0]
time: 0.020; rss: 1225MB	codegen passes [8]
time: 0.033; rss: 1228MB	codegen passes [2]
time: 0.023; rss: 1228MB	llvm function passes [1]
time: 0.018; rss: 1228MB	llvm function passes [3]
time: 0.009; rss: 1238MB	llvm module passes [3]
time: 0.015; rss: 1238MB	llvm module passes [1]
time: 0.026; rss: 1240MB	llvm function passes [2]
time: 0.010; rss: 1240MB	llvm module passes [2]
time: 0.040; rss: 1249MB	llvm function passes [10]
time: 0.067; rss: 1252MB	llvm function passes [0]
time: 0.011; rss: 1252MB	llvm module passes [10]
time: 0.000; rss: 1256MB	llvm function passes [11]
time: 0.000; rss: 1256MB	llvm module passes [11]
time: 0.001; rss: 1256MB	codegen passes [11]
time: 0.003; rss: 1256MB	llvm function passes [11]
time: 0.001; rss: 1256MB	llvm module passes [11]
time: 0.102; rss: 1264MB	codegen passes [4]
time: 0.036; rss: 1270MB	llvm module passes [0]
time: 0.000; rss: 1276MB	llvm function passes [18]
time: 0.001; rss: 1280MB	llvm module passes [18]
time: 0.021; rss: 1282MB	llvm function passes [4]
time: 0.000; rss: 1282MB	llvm module passes [4]
time: 0.004; rss: 1282MB	codegen passes [18]
time: 0.000; rss: 1284MB	llvm function passes [19]
time: 0.000; rss: 1284MB	llvm module passes [19]
time: 0.001; rss: 1284MB	codegen passes [19]
time: 0.036; rss: 1286MB	llvm function passes [16]
time: 0.021; rss: 1286MB	codegen passes [4]
time: 0.161; rss: 1288MB	llvm function passes [7]
time: 0.045; rss: 1293MB	llvm function passes [15]
time: 0.000; rss: 1293MB	llvm module passes [15]
time: 0.016; rss: 1293MB	llvm module passes [16]
time: 0.066; rss: 1307MB	llvm function passes [22]
time: 0.087; rss: 1307MB	codegen passes [11]
time: 0.198; rss: 1307MB	llvm function passes [9]
time: 0.015; rss: 1307MB	llvm module passes [22]
time: 0.184; rss: 1307MB	llvm function passes [8]
time: 0.022; rss: 1311MB	llvm function passes [28]
time: 0.004; rss: 1311MB	llvm module passes [28]
time: 0.068; rss: 1311MB	llvm module passes [7]
time: 0.064; rss: 1313MB	codegen passes [15]
time: 0.014; rss: 1313MB	llvm function passes [15]
time: 0.002; rss: 1313MB	llvm module passes [15]
time: 0.103; rss: 1313MB	llvm function passes [21]
time: 0.019; rss: 1315MB	llvm module passes [21]
time: 0.150; rss: 1315MB	llvm function passes [20]
time: 0.109; rss: 1320MB	llvm function passes [26]
time: 0.035; rss: 1320MB	codegen passes [15]
time: 0.012; rss: 1324MB	llvm module passes [26]
time: 0.119; rss: 1328MB	llvm function passes [24]
time: 0.032; rss: 1330MB	llvm module passes [20]
time: 0.008; rss: 1332MB	llvm module passes [24]
time: 0.121; rss: 1336MB	llvm module passes [8]
time: 0.153; rss: 1340MB	llvm module passes [9]
time: 0.239; rss: 1338MB	llvm function passes [13]
time: 0.178; rss: 1338MB	llvm function passes [27]
time: 0.028; rss: 1351MB	llvm module passes [27]
time: 0.274; rss: 1358MB	llvm function passes [18]
time: 0.266; rss: 1372MB	llvm function passes [19]
time: 0.142; rss: 1371MB	llvm function passes [29]
time: 0.083; rss: 1376MB	llvm module passes [13]
time: 0.285; rss: 1376MB	llvm function passes [23]
time: 0.032; rss: 1376MB	llvm module passes [29]
time: 0.049; rss: 1378MB	llvm module passes [18]
time: 0.096; rss: 1387MB	codegen passes [40]
time: 0.068; rss: 1386MB	llvm module passes [19]
time: 0.053; rss: 1388MB	llvm function passes [39]
time: 0.338; rss: 1388MB	llvm function passes [4]
time: 0.012; rss: 1396MB	llvm module passes [39]
time: 0.060; rss: 1396MB	llvm module passes [23]
time: 0.164; rss: 1388MB	llvm function passes [37]
time: 0.170; rss: 1388MB	llvm function passes [38]
time: 0.034; rss: 1392MB	llvm module passes [38]
time: 0.365; rss: 1396MB	llvm function passes [25]
time: 0.066; rss: 1396MB	codegen passes [39]
time: 0.340; rss: 1394MB	llvm function passes [30]
time: 0.382; rss: 1396MB	llvm function passes [11]
time: 0.012; rss: 1392MB	llvm module passes [11]
time: 0.084; rss: 1393MB	llvm module passes [37]
time: 0.132; rss: 1395MB	llvm module passes [4]
time: 0.079; rss: 1405MB	llvm module passes [30]
time: 0.114; rss: 1407MB	llvm module passes [25]
time: 0.377; rss: 1406MB	llvm function passes [35]
time: 0.612; rss: 1405MB	llvm function passes [12]
time: 0.701; rss: 1406MB	codegen passes [6]
time: 0.545; rss: 1412MB	llvm function passes [32]
time: 0.419; rss: 1416MB	llvm function passes [36]
time: 0.501; rss: 1415MB	codegen passes [28]
time: 0.542; rss: 1418MB	llvm function passes [34]
time: 0.462; rss: 1418MB	llvm function passes [33]
time: 0.207; rss: 1409MB	llvm module passes [35]
time: 0.588; rss: 1409MB	llvm function passes [15]
time: 0.137; rss: 1408MB	llvm module passes [32]
time: 0.133; rss: 1408MB	llvm module passes [36]
time: 0.119; rss: 1418MB	llvm module passes [15]
time: 0.378; rss: 1416MB	codegen passes [38]
time: 0.205; rss: 1416MB	llvm module passes [33]
time: 0.338; rss: 1407MB	codegen passes [37]
time: 0.868; rss: 1451MB	codegen passes [2]
time: 0.493; rss: 1443MB	llvm module passes [34]
time: 0.640; rss: 1448MB	llvm module passes [12]
time: 1.236; rss: 1474MB	codegen passes [5]
time: 1.329; rss: 1496MB	codegen passes [10]
time: 1.493; rss: 1494MB	codegen passes [3]
time: 1.396; rss: 1489MB	codegen passes [24]
time: 1.479; rss: 1451MB	codegen passes [1]
time: 1.715; rss: 1439MB	codegen passes [29]
time: 1.634; rss: 1434MB	codegen passes [26]
time: 1.777; rss: 1455MB	codegen passes [16]
time: 1.929; rss: 1468MB	codegen passes [21]
time: 1.872; rss: 1447MB	codegen passes [11]
time: 2.230; rss: 1467MB	codegen passes [22]
time: 1.852; rss: 1493MB	codegen passes [36]
time: 2.442; rss: 1513MB	codegen passes [27]
time: 2.088; rss: 1506MB	codegen passes [32]
time: 2.492; rss: 1582MB	codegen passes [35]
time: 3.016; rss: 1584MB	codegen passes [0]
time: 3.110; rss: 1576MB	codegen passes [4]
time: 3.023; rss: 1563MB	codegen passes [20]
time: 3.740; rss: 1731MB	codegen passes [18]
time: 3.917; rss: 1710MB	codegen passes [13]
time: 3.911; rss: 1704MB	codegen passes [23]
time: 3.842; rss: 1699MB	codegen passes [33]
time: 3.907; rss: 1647MB	codegen passes [7]
time: 4.005; rss: 1594MB	codegen passes [19]
time: 3.723; rss: 1564MB	codegen passes [15]
time: 4.012; rss: 1575MB	codegen passes [30]
time: 4.222; rss: 1554MB	codegen passes [34]
time: 4.607; rss: 1504MB	codegen passes [8]
time: 4.640; rss: 1474MB	codegen passes [12]
time: 5.382; rss: 1415MB	codegen passes [9]
time: 5.598; rss: 1342MB	codegen passes [25]
time: 7.603; rss: 1340MB	LLVM passes
time: 0.000; rss: 1340MB	serialize work products
time: 1.063; rss: 304MB	linking
done
