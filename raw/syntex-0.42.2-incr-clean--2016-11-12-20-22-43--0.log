commit a277f9deb0bcccc096334447b0e57765110707c7
Merge: fd983d0 d394e75
Author: bors <bors@rust-lang.org>
Date:   Sat Nov 12 15:29:13 2016 -0800

    Auto merge of #37675 - arielb1:trans-closure, r=eddyb
    
    Translate closures through the collector
    
    Now that old trans is gone, there is no need for the hack of translating closures when they are instantiated. We can translate them like regular items.
    
    r? @eddyb
rustc: ./syntex-0.42.2-incr-clean
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
   Compiling log v0.3.6
   Compiling libc v0.2.15
   Compiling rustc-serialize v0.3.19
   Compiling unicode-xid v0.0.3
   Compiling winapi v0.2.8
   Compiling winapi-build v0.1.1
   Compiling bitflags v0.5.0
   Compiling kernel32-sys v0.2.2
   Compiling term v0.4.4
   Compiling syntex_pos v0.42.0
   Compiling syntex_errors v0.42.0
   Compiling syntex_syntax v0.42.0
time: 0.092; rss: 71MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 71MB	recursion limit
time: 0.000; rss: 71MB	crate injection
time: 0.000; rss: 71MB	plugin loading
time: 0.000; rss: 71MB	plugin registration
time: 0.234; rss: 144MB	expansion
time: 0.000; rss: 144MB	maybe building test harness
time: 0.006; rss: 144MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 144MB	checking for inline asm in case the target doesn't support it
time: 0.013; rss: 144MB	complete gated feature checking
time: 0.023; rss: 144MB	early lint checks
time: 0.007; rss: 144MB	AST validation
time: 0.076; rss: 159MB	name resolution
time: 0.044; rss: 184MB	lowering ast -> hir
time: 0.008; rss: 194MB	indexing hir
time: 0.006; rss: 194MB	attribute checking
time: 0.005; rss: 151MB	language item collection
time: 0.010; rss: 151MB	lifetime resolution
time: 0.000; rss: 151MB	looking for entry point
time: 0.000; rss: 151MB	looking for plugin registrar
time: 0.041; rss: 172MB	region resolution
time: 0.005; rss: 172MB	loop checking
time: 0.005; rss: 172MB	static item recursion checking
time: 0.326; rss: 172MB	compute_incremental_hashes_map
time: 0.000; rss: 172MB	load_dep_graph
time: 0.050; rss: 171MB	type collecting
time: 0.001; rss: 171MB	variance inference
time: 0.018; rss: 175MB	coherence checking
time: 0.091; rss: 178MB	wf checking
time: 0.179; rss: 184MB	item-types checking
time: 3.300; rss: 234MB	item-bodies checking
time: 0.000; rss: 234MB	drop-impl checking
time: 0.218; rss: 254MB	const checking
time: 0.046; rss: 254MB	privacy checking
time: 0.006; rss: 254MB	stability index
time: 0.018; rss: 254MB	intrinsic checking
time: 0.014; rss: 254MB	effect checking
time: 0.047; rss: 254MB	match checking
time: 0.050; rss: 245MB	liveness checking
time: 0.182; rss: 245MB	rvalue checking
time: 0.378; rss: 437MB	MIR dump
  time: 0.057; rss: 439MB	SimplifyCfg
  time: 0.075; rss: 439MB	QualifyAndPromoteConstants
  time: 0.098; rss: 439MB	TypeckMir
  time: 0.004; rss: 439MB	SimplifyBranches
  time: 0.030; rss: 439MB	SimplifyCfg
time: 0.264; rss: 439MB	MIR cleanup and validation
time: 0.481; rss: 439MB	borrow checking
time: 0.020; rss: 439MB	reachability checking
time: 0.040; rss: 439MB	death checking
time: 0.032; rss: 441MB	stability checking
time: 0.000; rss: 441MB	unused lib feature checking
time: 0.195; rss: 441MB	lint checking
time: 0.000; rss: 441MB	resolving dependency formats
  time: 0.003; rss: 441MB	NoLandingPads
  time: 0.026; rss: 441MB	SimplifyCfg
  time: 0.060; rss: 448MB	EraseRegions
  time: 0.011; rss: 448MB	AddCallGuards
  time: 0.265; rss: 462MB	ElaborateDrops
  time: 0.003; rss: 462MB	NoLandingPads
  time: 0.052; rss: 463MB	SimplifyCfg
  time: 0.028; rss: 463MB	InstCombine
  time: 0.013; rss: 463MB	Deaggregator
  time: 0.002; rss: 463MB	CopyPropagation
  time: 0.034; rss: 463MB	SimplifyLocals
  time: 0.010; rss: 463MB	AddCallGuards
  time: 0.003; rss: 463MB	PreTrans
time: 0.511; rss: 463MB	MIR optimisations
  time: 0.060; rss: 475MB	write metadata
  time: 0.385; rss: 488MB	translation item collection
  time: 0.066; rss: 501MB	codegen unit partitioning
  time: 0.047; rss: 739MB	internalize symbols
time: 4.551; rss: 739MB	translation
time: 0.000; rss: 739MB	assert dep graph
time: 0.000; rss: 739MB	serialize dep graph
incremental: re-using 0 out of 1 modules
  time: 0.520; rss: 419MB	llvm function passes [0]
  time: 0.256; rss: 428MB	llvm module passes [0]
  time: 10.322; rss: 427MB	codegen passes [0]
  time: 0.000; rss: 427MB	codegen passes [0]
time: 11.857; rss: 427MB	LLVM passes
time: 0.000; rss: 427MB	serialize work products
time: 0.340; rss: 106MB	linking
done
