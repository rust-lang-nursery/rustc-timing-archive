commit d508de6cf7c7bb9b5057ee63432dbbc899209101
Merge: d98da85 d37edef
Author: bors <bors@rust-lang.org>
Date:   Mon Jul 4 02:18:46 2016 -0700

    Auto merge of #34638 - zackmdavis:if_let_over_none_empty_block_arm, r=jseyfried
    
    prefer `if let` to match with `None => {}` arm in some places
    
    This is a spiritual succesor to #34268 / 8531d581, in which we replaced a
    number of matches of None to the unit value with `if let` conditionals
    where it was judged that this made for clearer/simpler code (as would be
    recommended by Manishearth/rust-clippy's `single_match` lint). The same
    rationale applies to matches of None to the empty block.
    
    ----
    
    r? @jseyfried
rustc: ./jld-day15-parser
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling day15 v0.1.0 (file:///root/benchmarks/jld-day15-parser)
time: 0.001; rss: 77MB	parsing
Lines of code:             72
Pre-expansion node count:  654
time: 0.000; rss: 77MB	configuration
time: 0.000; rss: 77MB	recursion limit
time: 0.000; rss: 77MB	crate injection
time: 0.000; rss: 77MB	plugin loading
time: 0.000; rss: 77MB	plugin registration
time: 0.021; rss: 115MB	expansion
time: 0.000; rss: 115MB	maybe building test harness
time: 0.000; rss: 115MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 115MB	complete gated feature checking
Post-expansion node count: 1155
time: 0.000; rss: 115MB	assigning node ids
time: 0.000; rss: 115MB	collecting defs
time: 0.004; rss: 119MB	external crate/lib resolution
time: 0.000; rss: 119MB	early lint checks
time: 0.000; rss: 119MB	AST validation
time: 0.001; rss: 119MB	name resolution
time: 0.000; rss: 119MB	lowering ast -> hir
time: 0.000; rss: 119MB	indexing hir
time: 0.000; rss: 119MB	attribute checking
time: 0.000; rss: 119MB	language item collection
time: 0.000; rss: 119MB	lifetime resolution
time: 0.000; rss: 119MB	looking for entry point
time: 0.000; rss: 119MB	looking for plugin registrar
time: 0.000; rss: 119MB	region resolution
time: 0.000; rss: 119MB	loop checking
time: 0.000; rss: 119MB	static item recursion checking
time: 0.000; rss: 119MB	load_dep_graph
time: 0.001; rss: 119MB	type collecting
time: 0.000; rss: 119MB	variance inference
time: 0.005; rss: 119MB	coherence checking
time: 0.006; rss: 123MB	wf checking
time: 0.000; rss: 123MB	item-types checking
time: 0.047; rss: 132MB	item-bodies checking
time: 0.000; rss: 132MB	drop-impl checking
time: 0.001; rss: 132MB	const checking
time: 0.000; rss: 132MB	privacy checking
time: 0.000; rss: 132MB	stability index
time: 0.000; rss: 132MB	intrinsic checking
time: 0.000; rss: 132MB	effect checking
time: 0.000; rss: 132MB	match checking
time: 0.000; rss: 132MB	liveness checking
time: 0.000; rss: 132MB	rvalue checking
time: 0.001; rss: 132MB	MIR dump
time: 0.001; rss: 132MB	MIR passes
time: 0.001; rss: 132MB	borrow checking
time: 0.000; rss: 132MB	reachability checking
time: 0.000; rss: 132MB	death checking
time: 0.000; rss: 132MB	stability checking
time: 0.000; rss: 132MB	unused lib feature checking
time: 0.004; rss: 132MB	lint checking
time: 0.002; rss: 132MB	resolving dependency formats
time: 0.002; rss: 132MB	Prepare MIR codegen passes
  time: 0.000; rss: 132MB	write metadata
  time: 0.613; rss: 138MB	translation item collection
  time: 0.000; rss: 138MB	codegen unit partitioning
time: 3.218; rss: 165MB	translation
time: 0.000; rss: 165MB	assert dep graph
time: 0.000; rss: 165MB	serialize dep graph
  time: 0.176; rss: 144MB	llvm function passes [0]
  time: 0.014; rss: 144MB	llvm module passes [0]
  time: 2.745; rss: 149MB	codegen passes [0]
  time: 0.001; rss: 143MB	codegen passes [0]
time: 2.984; rss: 143MB	LLVM passes
  time: 0.125; rss: 143MB	running linker
time: 0.126; rss: 143MB	linking
done
