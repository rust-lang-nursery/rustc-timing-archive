commit 14f33a5996054c817349c8ae95abbbe17347a6be
Merge: 449e8bf 526965a
Author: bors <bors@rust-lang.org>
Date:   Sat Jan 30 18:51:13 2016 +0000

    Auto merge of #30778 - fhahn:issue-21195-expect-help, r=nikomatsakis
    
    This is a PR for #21195. It changes the way unspecified `help` and `Ç¹ote` messages are handled in compile-fail tests as suggested by @oli-obk in the issue: if there are some `note` or `help` annotations, there must be annotations for all `help` or `note` messages of this test. Maybe it makes also sense to add an option to specify that the this test should fail if there are unspecified `help` or `note` messages.
    
    With this change, the following tests fail:
    
        [compile-fail] compile-fail/changing-crates.rs
        [compile-fail] compile-fail/default_ty_param_conflict_cross_crate.rs
        [compile-fail] compile-fail/lifetime-inference-give-expl-lifetime-param.rs
        [compile-fail] compile-fail/privacy1.rs
        [compile-fail] compile-fail/svh-change-lit.rs
        [compile-fail] compile-fail/svh-change-significant-cfg.rs
        [compile-fail] compile-fail/svh-change-trait-bound.rs
        [compile-fail] compile-fail/svh-change-type-arg.rs
        [compile-fail] compile-fail/svh-change-type-ret.rs
        [compile-fail] compile-fail/svh-change-type-static.rs
        [compile-fail] compile-fail/svh-use-trait.rs
    
    I'll add the missing annotations if we decide to accept this change.
rustc: ./inflate-0.1.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling inflate v0.1.0 (file:///root/benchmarks/inflate-0.1.0)
time: 0.004; rss: 36MB	parsing
Lines of code:             956
Pre-expansion node count:  4761
time: 0.001; rss: 36MB	configuration 1
time: 0.000; rss: 36MB	recursion limit
time: 0.000; rss: 36MB	gated macro checking
time: 0.000; rss: 36MB	crate injection
time: 0.003; rss: 40MB	macro loading
time: 0.000; rss: 40MB	plugin loading
time: 0.000; rss: 40MB	plugin registration
time: 0.081; rss: 47MB	expansion
time: 0.001; rss: 47MB	complete gated feature checking 1
time: 0.009; rss: 47MB	configuration 2
time: 0.000; rss: 47MB	gated configuration checking
time: 0.004; rss: 47MB	maybe building test harness
time: 0.004; rss: 47MB	prelude injection
time: 0.000; rss: 47MB	checking that all macro invocations are gone
time: 0.000; rss: 47MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 47MB	complete gated feature checking 2
Post-expansion node count: 54798
time: 0.004; rss: 47MB	assigning node ids
time: 0.008; rss: 52MB	lowering ast -> hir
time: 0.002; rss: 54MB	indexing hir
time: 0.000; rss: 54MB	attribute checking
time: 0.003; rss: 54MB	early lint checks
time: 0.001; rss: 51MB	external crate/lib resolution
time: 0.001; rss: 51MB	language item collection
time: 0.009; rss: 59MB	resolution
time: 0.001; rss: 59MB	lifetime resolution
time: 0.000; rss: 59MB	looking for entry point
time: 0.000; rss: 59MB	looking for plugin registrar
time: 0.003; rss: 60MB	region resolution
time: 0.000; rss: 60MB	loop checking
time: 0.000; rss: 60MB	static item recursion checking
time: 0.001; rss: 60MB	type collecting
time: 0.000; rss: 60MB	variance inference
time: 0.009; rss: 74MB	coherence checking
time: 0.002; rss: 74MB	wf checking
time: 0.002; rss: 74MB	item-types checking
time: 26.909; rss: 101MB	item-bodies checking
time: 0.000; rss: 101MB	drop-impl checking
time: 0.014; rss: 100MB	const checking
time: 0.002; rss: 101MB	privacy checking
time: 0.000; rss: 101MB	stability index
time: 0.000; rss: 101MB	intrinsic checking
time: 0.001; rss: 101MB	effect checking
time: 0.003; rss: 101MB	match checking
time: 0.025; rss: 106MB	MIR dump
time: 0.064; rss: 104MB	liveness checking
time: 0.236; rss: 104MB	borrow checking
time: 0.010; rss: 104MB	rvalue checking
time: 0.000; rss: 104MB	reachability checking
time: 0.003; rss: 104MB	death checking
time: 0.002; rss: 104MB	stability checking
time: 0.000; rss: 104MB	unused lib feature checking
time: 0.017; rss: 108MB	lint checking
time: 0.000; rss: 108MB	resolving dependency formats
time: 0.002; rss: 108MB	erasing regions from MIR
  time: 0.003; rss: 135MB	write metadata
time: 0.385; rss: 129MB	translation
  time: 0.027; rss: 96MB	llvm function passes [0]
  time: 0.005; rss: 97MB	llvm module passes [0]
  time: 0.469; rss: 143MB	codegen passes [0]
  time: 0.000; rss: 128MB	codegen passes [0]
time: 0.543; rss: 128MB	LLVM passes
time: 0.034; rss: 129MB	linking
done
