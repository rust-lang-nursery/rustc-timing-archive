commit a29c49f5cca849cd5ac79b3cd70b934bb33cf4e6
Merge: 0b2c356 f5827d0
Author: bors <bors@rust-lang.org>
Date:   Tue Oct 11 23:36:29 2016 -0700

    Auto merge of #37095 - petrochenkov:metactor, r=alexcrichton
    
    Temporary fix for metadata decoding for struct constructors
    
    Same as https://github.com/rust-lang/rust/pull/37078, but for nightly.
    Ideally, metadata lookup functions should "just work" for constructor ids, but this fixes the issue as well.
    
    Fixes https://github.com/rust-lang/rust/issues/37026
    r? @alexcrichton
rustc: ./syntex-0.42.2
cargo rustc -p syntex_syntax -- -Ztime-passes -Zinput-stats
   Compiling syntex_syntax v0.42.0
time: 0.157; rss: 68MB	parsing
Lines of code:             33687
Pre-expansion node count:  224033
time: 0.000; rss: 68MB	recursion limit
time: 0.000; rss: 68MB	crate injection
time: 0.000; rss: 68MB	plugin loading
time: 0.000; rss: 68MB	plugin registration
time: 0.358; rss: 136MB	expansion
time: 0.000; rss: 136MB	maybe building test harness
time: 0.007; rss: 136MB	maybe creating a macro crate
Post-expansion node count: 641571
time: 0.000; rss: 136MB	checking for inline asm in case the target doesn't support it
time: 0.014; rss: 136MB	complete gated feature checking
time: 0.025; rss: 136MB	early lint checks
time: 0.008; rss: 136MB	AST validation
time: 0.111; rss: 150MB	name resolution
time: 0.128; rss: 191MB	lowering ast -> hir
time: 0.024; rss: 199MB	indexing hir
time: 0.007; rss: 199MB	attribute checking
time: 0.006; rss: 151MB	language item collection
time: 0.012; rss: 151MB	lifetime resolution
time: 0.000; rss: 151MB	looking for entry point
time: 0.000; rss: 151MB	looking for plugin registrar
time: 0.067; rss: 159MB	region resolution
time: 0.006; rss: 159MB	loop checking
time: 0.006; rss: 159MB	static item recursion checking
time: 0.266; rss: 162MB	compute_incremental_hashes_map
time: 0.000; rss: 162MB	load_dep_graph
time: 0.045; rss: 167MB	type collecting
time: 0.001; rss: 167MB	variance inference
time: 0.039; rss: 171MB	coherence checking
time: 0.099; rss: 173MB	wf checking
time: 0.205; rss: 178MB	item-types checking
time: 4.163; rss: 217MB	item-bodies checking
time: 0.000; rss: 217MB	drop-impl checking
time: 0.335; rss: 220MB	const checking
time: 0.057; rss: 220MB	privacy checking
time: 0.007; rss: 220MB	stability index
time: 0.023; rss: 220MB	intrinsic checking
time: 0.020; rss: 220MB	effect checking
time: 0.059; rss: 220MB	match checking
time: 0.091; rss: 216MB	liveness checking
time: 0.297; rss: 216MB	rvalue checking
time: 0.674; rss: 392MB	MIR dump
  time: 0.065; rss: 399MB	SimplifyCfg
  time: 0.086; rss: 399MB	QualifyAndPromoteConstants
  time: 0.114; rss: 399MB	TypeckMir
  time: 0.005; rss: 399MB	SimplifyBranches
  time: 0.032; rss: 399MB	SimplifyCfg
time: 0.301; rss: 399MB	MIR passes
time: 0.721; rss: 402MB	borrow checking
time: 0.023; rss: 402MB	reachability checking
time: 0.048; rss: 402MB	death checking
time: 0.045; rss: 403MB	stability checking
time: 0.000; rss: 403MB	unused lib feature checking
time: 0.235; rss: 403MB	lint checking
time: 0.000; rss: 403MB	resolving dependency formats
  time: 0.003; rss: 403MB	NoLandingPads
  time: 0.027; rss: 403MB	SimplifyCfg
  time: 0.097; rss: 411MB	EraseRegions
  time: 0.012; rss: 411MB	AddCallGuards
  time: 1.086; rss: 431MB	ElaborateDrops
  time: 0.003; rss: 431MB	NoLandingPads
  time: 0.054; rss: 431MB	SimplifyCfg
  time: 0.032; rss: 431MB	InstCombine
  time: 0.012; rss: 431MB	Deaggregator
  time: 0.003; rss: 431MB	CopyPropagation
  time: 0.010; rss: 431MB	AddCallGuards
  time: 0.003; rss: 431MB	PreTrans
time: 1.342; rss: 431MB	Prepare MIR codegen passes
  time: 0.283; rss: 437MB	write metadata
  time: 0.498; rss: 447MB	translation item collection
  time: 0.071; rss: 453MB	codegen unit partitioning
  time: 0.061; rss: 700MB	internalize symbols
time: 5.977; rss: 580MB	translation
time: 0.000; rss: 580MB	assert dep graph
time: 0.000; rss: 580MB	serialize dep graph
  time: 0.515; rss: 402MB	llvm function passes [0]
  time: 0.260; rss: 410MB	llvm module passes [0]
  time: 10.125; rss: 409MB	codegen passes [0]
  time: 0.002; rss: 405MB	codegen passes [0]
time: 11.798; rss: 405MB	LLVM passes
time: 0.000; rss: 405MB	serialize work products
time: 0.661; rss: 101MB	linking
done
