commit 47e6da2a01c284f383ad9658e33735f78e262ade
Merge: 13ff307 5f606f0
Author: bors <bors@rust-lang.org>
Date:   Sun Aug 14 18:36:33 2016 -0700

    Auto merge of #35427 - cardoe:arm-musl-targets, r=alexcrichton
    
    add GNU make files for arm-unknown-linux-musleabi
    
    For Yocto (Embedded Linux meta distro) Rust is provided via the [meta-rust layer](https://github.com/meta-rust/meta-rust). In this project there have been patches to add `arm-unknown-linux-musleabi`. Rust recently acquired that support via #35060 but only for rustbuild. meta-rust is currently only able to build Rust support with the existing GNU Makefiles. This adds `arm-unknown-linux-musleabi` support to Rust for the GNU Makefiles until meta-rust is able to sort out why using rustbuild does not work for it.
    
    /cc @srwalter @derekstraka @jmesmon @japaric
rustc: ./helloworld
/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc hello.rs -Ztime-passes -Zinput-stats
time: 0.000; rss: 42MB	parsing
Lines of code:             3
Pre-expansion node count:  8
time: 0.000; rss: 42MB	configuration
time: 0.000; rss: 42MB	recursion limit
time: 0.000; rss: 42MB	crate injection
time: 0.000; rss: 42MB	plugin loading
time: 0.000; rss: 42MB	plugin registration
time: 0.017; rss: 78MB	expansion
time: 0.000; rss: 78MB	maybe building test harness
time: 0.000; rss: 78MB	assigning node ids
Post-expansion node count: 68
time: 0.000; rss: 78MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 78MB	complete gated feature checking
time: 0.000; rss: 78MB	collecting defs
time: 0.002; rss: 78MB	external crate/lib resolution
time: 0.000; rss: 78MB	early lint checks
time: 0.000; rss: 78MB	AST validation
time: 0.000; rss: 78MB	name resolution
time: 0.000; rss: 78MB	lowering ast -> hir
time: 0.000; rss: 78MB	indexing hir
time: 0.000; rss: 78MB	attribute checking
time: 0.000; rss: 78MB	language item collection
time: 0.000; rss: 78MB	lifetime resolution
time: 0.000; rss: 78MB	looking for entry point
time: 0.000; rss: 78MB	looking for plugin registrar
time: 0.000; rss: 78MB	region resolution
time: 0.000; rss: 78MB	loop checking
time: 0.000; rss: 78MB	static item recursion checking
time: 0.000; rss: 78MB	load_dep_graph
time: 0.000; rss: 78MB	type collecting
time: 0.000; rss: 78MB	variance inference
time: 0.005; rss: 78MB	coherence checking
time: 0.000; rss: 82MB	wf checking
time: 0.000; rss: 85MB	item-types checking
time: 0.000; rss: 85MB	item-bodies checking
time: 0.000; rss: 85MB	drop-impl checking
time: 0.000; rss: 85MB	const checking
time: 0.000; rss: 85MB	privacy checking
time: 0.000; rss: 85MB	stability index
time: 0.000; rss: 85MB	intrinsic checking
time: 0.000; rss: 85MB	effect checking
time: 0.000; rss: 85MB	match checking
time: 0.000; rss: 85MB	liveness checking
time: 0.000; rss: 85MB	rvalue checking
time: 0.000; rss: 85MB	MIR dump
time: 0.001; rss: 85MB	MIR passes
time: 0.000; rss: 85MB	borrow checking
time: 0.000; rss: 85MB	reachability checking
time: 0.000; rss: 85MB	death checking
time: 0.000; rss: 85MB	stability checking
time: 0.000; rss: 85MB	unused lib feature checking
time: 0.000; rss: 85MB	lint checking
time: 0.001; rss: 85MB	resolving dependency formats
time: 0.000; rss: 85MB	Prepare MIR codegen passes
  time: 0.000; rss: 85MB	write metadata
  time: 0.001; rss: 85MB	translation item collection
  time: 0.000; rss: 85MB	codegen unit partitioning
  time: 0.000; rss: 85MB	internalize symbols
time: 0.009; rss: 85MB	translation
time: 0.000; rss: 85MB	assert dep graph
time: 0.000; rss: 85MB	serialize dep graph
  time: 0.000; rss: 89MB	llvm function passes [0]
  time: 0.000; rss: 89MB	llvm module passes [0]
  time: 0.001; rss: 89MB	codegen passes [0]
  time: 0.000; rss: 89MB	codegen passes [0]
time: 0.002; rss: 89MB	LLVM passes
time: 0.000; rss: 89MB	serialize work products
  time: 0.105; rss: 89MB	running linker
time: 0.106; rss: 89MB	linking
done
