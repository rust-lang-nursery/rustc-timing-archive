commit 98a3502da1456b209ff031604cabbbcb9d0eddf1
Merge: 5bfe107 a61d85b
Author: bors <bors@rust-lang.org>
Date:   Sat Oct 15 15:38:52 2016 -0700

    Auto merge of #37152 - arielb1:drop-cache, r=pnkfelix
    
    add a per-param-env cache to `impls_bound`
    
    There used to be only a global cache, which led to uncached calls to
    trait selection when there were type parameters.
    
    This causes a 20% decrease in borrow-checking time and an overall 0.5% performance increase during bootstrapping (as borrow-checking tends to be a tiny part of compilation time).
    
    Fixes #37106 (drop elaboration times are now ~half of borrow checking,
    so might still be worthy of optimization, but not critical).
    
    r? @pnkfelix
rustc: ./syntex-0.42.2
cargo rustc -p syntex_syntax -- -Ztime-passes -Zinput-stats
   Compiling syntex_syntax v0.42.0
time: 0.153; rss: 68MB	parsing
Lines of code:             33687
Pre-expansion node count:  224033
time: 0.000; rss: 68MB	recursion limit
time: 0.000; rss: 68MB	crate injection
time: 0.000; rss: 68MB	plugin loading
time: 0.000; rss: 68MB	plugin registration
time: 0.363; rss: 138MB	expansion
time: 0.000; rss: 138MB	maybe building test harness
time: 0.007; rss: 138MB	maybe creating a macro crate
Post-expansion node count: 641571
time: 0.000; rss: 138MB	checking for inline asm in case the target doesn't support it
time: 0.013; rss: 138MB	complete gated feature checking
time: 0.023; rss: 138MB	early lint checks
time: 0.008; rss: 138MB	AST validation
time: 0.116; rss: 154MB	name resolution
time: 0.120; rss: 194MB	lowering ast -> hir
time: 0.022; rss: 201MB	indexing hir
time: 0.007; rss: 201MB	attribute checking
time: 0.006; rss: 154MB	language item collection
time: 0.012; rss: 154MB	lifetime resolution
time: 0.000; rss: 154MB	looking for entry point
time: 0.000; rss: 154MB	looking for plugin registrar
time: 0.061; rss: 164MB	region resolution
time: 0.006; rss: 164MB	loop checking
time: 0.006; rss: 164MB	static item recursion checking
time: 0.266; rss: 166MB	compute_incremental_hashes_map
time: 0.000; rss: 166MB	load_dep_graph
time: 0.044; rss: 171MB	type collecting
time: 0.001; rss: 171MB	variance inference
time: 0.038; rss: 174MB	coherence checking
time: 0.112; rss: 176MB	wf checking
time: 0.207; rss: 182MB	item-types checking
time: 4.120; rss: 227MB	item-bodies checking
time: 0.000; rss: 227MB	drop-impl checking
time: 0.275; rss: 229MB	const checking
time: 0.055; rss: 229MB	privacy checking
time: 0.007; rss: 229MB	stability index
time: 0.022; rss: 229MB	intrinsic checking
time: 0.019; rss: 229MB	effect checking
time: 0.059; rss: 229MB	match checking
time: 0.092; rss: 225MB	liveness checking
time: 0.234; rss: 225MB	rvalue checking
time: 0.660; rss: 400MB	MIR dump
  time: 0.060; rss: 407MB	SimplifyCfg
  time: 0.083; rss: 408MB	QualifyAndPromoteConstants
  time: 0.114; rss: 408MB	TypeckMir
  time: 0.005; rss: 408MB	SimplifyBranches
  time: 0.032; rss: 408MB	SimplifyCfg
time: 0.294; rss: 408MB	MIR passes
time: 0.596; rss: 410MB	borrow checking
time: 0.022; rss: 410MB	reachability checking
time: 0.046; rss: 410MB	death checking
time: 0.046; rss: 413MB	stability checking
time: 0.000; rss: 413MB	unused lib feature checking
time: 0.223; rss: 413MB	lint checking
time: 0.000; rss: 413MB	resolving dependency formats
  time: 0.003; rss: 413MB	NoLandingPads
  time: 0.028; rss: 413MB	SimplifyCfg
  time: 0.091; rss: 420MB	EraseRegions
  time: 0.012; rss: 420MB	AddCallGuards
  time: 0.333; rss: 439MB	ElaborateDrops
  time: 0.003; rss: 439MB	NoLandingPads
  time: 0.054; rss: 439MB	SimplifyCfg
  time: 0.031; rss: 439MB	InstCombine
  time: 0.012; rss: 439MB	Deaggregator
  time: 0.003; rss: 439MB	CopyPropagation
  time: 0.009; rss: 439MB	AddCallGuards
  time: 0.003; rss: 439MB	PreTrans
time: 0.582; rss: 439MB	Prepare MIR codegen passes
  time: 0.281; rss: 447MB	write metadata
  time: 0.479; rss: 458MB	translation item collection
  time: 0.064; rss: 463MB	codegen unit partitioning
  time: 0.054; rss: 710MB	internalize symbols
time: 5.631; rss: 591MB	translation
time: 0.000; rss: 591MB	assert dep graph
time: 0.000; rss: 591MB	serialize dep graph
  time: 0.517; rss: 401MB	llvm function passes [0]
  time: 0.246; rss: 407MB	llvm module passes [0]
  time: 10.105; rss: 407MB	codegen passes [0]
  time: 0.001; rss: 407MB	codegen passes [0]
time: 11.769; rss: 407MB	LLVM passes
time: 0.000; rss: 407MB	serialize work products
time: 0.676; rss: 101MB	linking
done
