commit b1363a73ede57ae595f3a1be2bb75d308ba4f7f6
Merge: 2fd0608 848cfe2
Author: bors <bors@rust-lang.org>
Date:   Tue Sep 13 15:08:12 2016 -0700

    Auto merge of #35021 - japaric:rustc-builtins, r=alexcrichton
    
    crate-ify compiler-rt into compiler-builtins
    
    libcompiler-rt.a is dead, long live libcompiler-builtins.rlib
    
    This commit moves the logic that used to build libcompiler-rt.a into a
    compiler-builtins crate on top of the core crate and below the std crate.
    This new crate still compiles the compiler-rt instrinsics using gcc-rs
    but produces an .rlib instead of a static library.
    
    Also, with this commit rustc no longer passes -lcompiler-rt to the
    linker. This effectively makes the "no-compiler-rt" field of target
    specifications a no-op. Users of `no_std` will have to explicitly add
    the compiler-builtins crate to their crate dependency graph *if* they
    need the compiler-rt intrinsics - this is a [breaking-change]. Users
    of the `std` have to do nothing extra as the std crate depends
    on compiler-builtins.
    
    Finally, this a step towards lazy compilation of std with Cargo as the
    compiler-rt intrinsics can now be built by Cargo instead of having to
    be supplied by the user by some other method.
    
    closes #34400
    
    ---
    
    r? @alexcrichton
rustc: ./piston-image-0.10.3
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling image v0.10.3 (file:///root/benchmarks/piston-image-0.10.3)
time: 0.046; rss: 57MB	parsing
Lines of code:             12000
Pre-expansion node count:  90272
time: 0.000; rss: 57MB	recursion limit
time: 0.000; rss: 57MB	crate injection
time: 0.000; rss: 57MB	plugin loading
time: 0.000; rss: 57MB	plugin registration
time: 0.068; rss: 87MB	expansion
time: 0.000; rss: 87MB	maybe building test harness
time: 0.002; rss: 87MB	maybe creating a macro crate
time: 0.007; rss: 87MB	assigning node ids
Post-expansion node count: 149551
time: 0.000; rss: 87MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 87MB	complete gated feature checking
time: 0.004; rss: 87MB	collecting defs
time: 0.011; rss: 96MB	external crate/lib resolution
time: 0.006; rss: 96MB	early lint checks
time: 0.002; rss: 96MB	AST validation
time: 0.022; rss: 100MB	name resolution
time: 0.014; rss: 111MB	lowering ast -> hir
time: 0.003; rss: 115MB	indexing hir
time: 0.002; rss: 115MB	attribute checking
time: 0.002; rss: 105MB	language item collection
time: 0.003; rss: 105MB	lifetime resolution
time: 0.000; rss: 105MB	looking for entry point
time: 0.000; rss: 105MB	looking for plugin registrar
time: 0.011; rss: 111MB	region resolution
time: 0.002; rss: 111MB	loop checking
time: 0.001; rss: 111MB	static item recursion checking
time: 0.058; rss: 111MB	compute_incremental_hashes_map
time: 0.000; rss: 111MB	load_dep_graph
time: 0.024; rss: 113MB	type collecting
time: 0.000; rss: 113MB	variance inference
time: 0.031; rss: 116MB	coherence checking
time: 0.096; rss: 117MB	wf checking
time: 0.219; rss: 125MB	item-types checking
time: 0.933; rss: 137MB	item-bodies checking
time: 0.000; rss: 137MB	drop-impl checking
time: 0.070; rss: 138MB	const checking
time: 0.011; rss: 138MB	privacy checking
time: 0.001; rss: 138MB	stability index
time: 0.009; rss: 138MB	intrinsic checking
time: 0.003; rss: 138MB	effect checking
time: 0.024; rss: 138MB	match checking
time: 0.011; rss: 138MB	liveness checking
time: 0.067; rss: 138MB	rvalue checking
time: 0.113; rss: 180MB	MIR dump
  time: 0.012; rss: 180MB	SimplifyCfg
  time: 0.025; rss: 180MB	QualifyAndPromoteConstants
  time: 0.028; rss: 180MB	TypeckMir
  time: 0.001; rss: 180MB	SimplifyBranches
  time: 0.007; rss: 180MB	SimplifyCfg
time: 0.072; rss: 180MB	MIR passes
time: 0.143; rss: 180MB	borrow checking
time: 0.004; rss: 180MB	reachability checking
time: 0.008; rss: 180MB	death checking
time: 0.010; rss: 180MB	stability checking
time: 0.000; rss: 180MB	unused lib feature checking
time: 0.074; rss: 180MB	lint checking
time: 0.000; rss: 180MB	resolving dependency formats
  time: 0.001; rss: 180MB	NoLandingPads
  time: 0.005; rss: 180MB	SimplifyCfg
  time: 0.012; rss: 182MB	EraseRegions
  time: 0.002; rss: 182MB	AddCallGuards
  time: 0.131; rss: 187MB	ElaborateDrops
  time: 0.001; rss: 187MB	NoLandingPads
  time: 0.009; rss: 187MB	SimplifyCfg
  time: 0.002; rss: 187MB	Deaggregator
  time: 0.001; rss: 187MB	AddCallGuards
  time: 0.000; rss: 187MB	PreTrans
time: 0.165; rss: 187MB	Prepare MIR codegen passes
  time: 0.081; rss: 188MB	write metadata
  time: 0.533; rss: 199MB	translation item collection
  time: 0.029; rss: 203MB	codegen unit partitioning
  time: 0.053; rss: 325MB	internalize symbols
time: 3.521; rss: 299MB	translation
time: 0.000; rss: 299MB	assert dep graph
time: 0.000; rss: 299MB	serialize dep graph
  time: 0.206; rss: 228MB	llvm function passes [0]
  time: 0.083; rss: 232MB	llvm module passes [0]
  time: 4.045; rss: 233MB	codegen passes [0]
  time: 0.001; rss: 233MB	codegen passes [0]
time: 4.634; rss: 233MB	LLVM passes
time: 0.000; rss: 233MB	serialize work products
time: 0.264; rss: 105MB	linking
done
