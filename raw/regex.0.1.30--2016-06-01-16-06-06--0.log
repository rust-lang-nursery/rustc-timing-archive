commit 12d16599d84c25899f02a6e53110d1e70cdcbd8a
Merge: c2cab1f 696a570
Author: bors <bors@rust-lang.org>
Date:   Wed Jun 1 10:21:55 2016 -0700

    Auto merge of #33814 - lambda:rtabort-use-platform-abort, r=alexcrichton
    
    Open code the __fastfail intrinsic for rtabort! on windows
    
    As described https://msdn.microsoft.com/en-us/library/dn774154.aspx
    
    This is a Windows 8+ mechanism for terminating the process quickly,
    which degrades to either an access violation or bugcheck in older versions.
    
    I'm not sure this is better the the current mechanism of terminating
    with an illegal instruction, but we recently converted unix to
    terminate more correctly with SIGABORT, and this *seems* more correct
    for windows.
    
    [breaking-change]
rustc: ./regex.0.1.30
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling regex v0.1.30 (file:///root/benchmarks/regex.0.1.30)
time: 0.076; rss: 63MB	parsing
Lines of code:             8558
Pre-expansion node count:  57894
time: 0.012; rss: 63MB	configuration 1
time: 0.000; rss: 63MB	recursion limit
time: 0.000; rss: 63MB	crate injection
time: 0.018; rss: 93MB	macro loading
time: 0.000; rss: 93MB	plugin loading
time: 0.000; rss: 93MB	plugin registration
time: 0.073; rss: 98MB	expansion
time: 0.000; rss: 98MB	gated configuration checking
time: 0.008; rss: 98MB	maybe building test harness
time: 0.007; rss: 98MB	prelude injection
time: 0.001; rss: 98MB	checking that all macro invocations are gone
time: 0.000; rss: 98MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 98MB	complete gated feature checking
Post-expansion node count: 68033
time: 0.009; rss: 98MB	assigning node ids
time: 0.001; rss: 98MB	collecting defs
time: 0.001; rss: 98MB	external crate/lib resolution
time: 0.008; rss: 98MB	early lint checks
time: 0.001; rss: 98MB	AST validation
time: 0.008; rss: 100MB	name resolution
time: 0.011; rss: 110MB	lowering ast -> hir
time: 0.001; rss: 110MB	indexing hir
time: 0.001; rss: 110MB	attribute checking
time: 0.001; rss: 103MB	language item collection
time: 0.001; rss: 103MB	lifetime resolution
time: 0.000; rss: 103MB	looking for entry point
time: 0.000; rss: 103MB	looking for plugin registrar
time: 0.006; rss: 107MB	region resolution
time: 0.001; rss: 107MB	loop checking
time: 0.001; rss: 107MB	static item recursion checking
time: 0.000; rss: 107MB	load_dep_graph
time: 0.014; rss: 109MB	type collecting
time: 0.000; rss: 109MB	variance inference
time: 0.026; rss: 115MB	coherence checking
time: 0.015; rss: 115MB	wf checking
time: 0.357; rss: 122MB	item-types checking
time: 0.231; rss: 128MB	item-bodies checking
time: 0.000; rss: 128MB	drop-impl checking
time: 0.029; rss: 128MB	const checking
time: 0.003; rss: 128MB	privacy checking
time: 0.001; rss: 128MB	stability index
time: 0.002; rss: 128MB	intrinsic checking
time: 0.001; rss: 128MB	effect checking
time: 0.004; rss: 128MB	match checking
time: 0.002; rss: 128MB	liveness checking
time: 0.008; rss: 128MB	rvalue checking
time: 0.064; rss: 138MB	MIR dump
time: 0.022; rss: 138MB	MIR passes
time: 0.023; rss: 138MB	borrow checking
time: 0.000; rss: 138MB	reachability checking
time: 0.003; rss: 138MB	death checking
time: 0.002; rss: 138MB	stability checking
time: 0.000; rss: 138MB	unused lib feature checking
time: 0.030; rss: 138MB	lint checking
time: 0.000; rss: 138MB	resolving dependency formats
time: 0.005; rss: 140MB	Prepare MIR codegen passes
  time: 0.183; rss: 149MB	write metadata
  time: 0.097; rss: 151MB	translation item collection
  time: 0.001; rss: 151MB	codegen unit partitioning
time: 0.802; rss: 198MB	translation
time: 0.000; rss: 198MB	assert dep graph
time: 0.000; rss: 198MB	serialize dep graph
  time: 0.036; rss: 131MB	llvm function passes [0]
  time: 0.017; rss: 132MB	llvm module passes [0]
  time: 0.614; rss: 136MB	codegen passes [0]
  time: 0.001; rss: 118MB	codegen passes [0]
time: 0.745; rss: 115MB	LLVM passes
time: 0.067; rss: 115MB	linking
done
