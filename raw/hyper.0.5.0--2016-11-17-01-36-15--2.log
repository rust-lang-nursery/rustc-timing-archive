commit 6cd5be81cc3a6f972eb00541224037a95a08cc7b
Merge: f22fdb0 0e1828a
Author: bors <bors@rust-lang.org>
Date:   Wed Nov 16 21:02:55 2016 -0800

    Auto merge of #37607 - dns2utf8:doc_grammar, r=alexcrichton
    
    Fix grammar verification
    
     * Use make check-lexer to verify the grammar.
     * Extend grammar/README
     * Add make clean-grammar rule
     * Add target check-build-lexer-verifier to make tidy, so it will build the verifier with every build and catch future errors
    
    This is the continuation of #34994
    
    r? @steveklabnik @jonathandturner @alexcrichton
rustc: ./hyper.0.5.0
cargo rustc  -- -Ztime-passes -Zinput-stats
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.023; rss: 47MB	parsing
Lines of code:             9003
Pre-expansion node count:  44055
time: 0.000; rss: 47MB	recursion limit
time: 0.000; rss: 47MB	crate injection
time: 0.000; rss: 47MB	plugin loading
time: 0.000; rss: 47MB	plugin registration
time: 0.077; rss: 87MB	expansion
time: 0.000; rss: 87MB	maybe building test harness
time: 0.001; rss: 87MB	maybe creating a macro crate
Post-expansion node count: 101769
time: 0.000; rss: 87MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 87MB	complete gated feature checking
time: 0.003; rss: 87MB	early lint checks
time: 0.001; rss: 87MB	AST validation
time: 0.020; rss: 91MB	name resolution
time: 0.014; rss: 94MB	lowering ast -> hir
time: 0.001; rss: 94MB	indexing hir
time: 0.001; rss: 94MB	attribute checking
time: 0.001; rss: 90MB	language item collection
time: 0.002; rss: 90MB	lifetime resolution
time: 0.000; rss: 90MB	looking for entry point
time: 0.000; rss: 90MB	looking for plugin registrar
time: 0.007; rss: 92MB	region resolution
time: 0.001; rss: 92MB	loop checking
time: 0.001; rss: 92MB	static item recursion checking
time: 0.037; rss: 93MB	compute_incremental_hashes_map
time: 0.000; rss: 93MB	load_dep_graph
time: 0.015; rss: 95MB	type collecting
time: 0.000; rss: 95MB	variance inference
time: 0.015; rss: 97MB	coherence checking
time: 0.043; rss: 98MB	wf checking
time: 0.024; rss: 98MB	item-types checking
time: 0.306; rss: 106MB	item-bodies checking
time: 0.000; rss: 106MB	drop-impl checking
time: 0.049; rss: 108MB	const checking
time: 0.007; rss: 108MB	privacy checking
time: 0.001; rss: 108MB	stability index
time: 0.003; rss: 108MB	intrinsic checking
time: 0.001; rss: 108MB	effect checking
time: 0.008; rss: 108MB	match checking
time: 0.004; rss: 109MB	liveness checking
time: 0.020; rss: 109MB	rvalue checking
time: 0.063; rss: 128MB	MIR dump
  time: 0.007; rss: 129MB	SimplifyCfg
  time: 0.015; rss: 131MB	QualifyAndPromoteConstants
  time: 0.012; rss: 131MB	TypeckMir
  time: 0.001; rss: 131MB	SimplifyBranches
  time: 0.003; rss: 131MB	SimplifyCfg
time: 0.038; rss: 131MB	MIR cleanup and validation
time: 0.052; rss: 131MB	borrow checking
time: 0.003; rss: 131MB	reachability checking
time: 0.005; rss: 131MB	death checking
time: 0.004; rss: 132MB	stability checking
time: 0.000; rss: 132MB	unused lib feature checking
time: 0.038; rss: 132MB	lint checking
time: 0.000; rss: 132MB	resolving dependency formats
  time: 0.001; rss: 132MB	NoLandingPads
  time: 0.003; rss: 132MB	SimplifyCfg
  time: 0.008; rss: 133MB	EraseRegions
  time: 0.001; rss: 133MB	AddCallGuards
  time: 0.025; rss: 134MB	ElaborateDrops
  time: 0.001; rss: 134MB	NoLandingPads
  time: 0.005; rss: 134MB	SimplifyCfg
  time: 0.003; rss: 134MB	InstCombine
  time: 0.003; rss: 134MB	Deaggregator
  time: 0.001; rss: 134MB	CopyPropagation
  time: 0.004; rss: 134MB	SimplifyLocals
  time: 0.001; rss: 134MB	AddCallGuards
  time: 0.000; rss: 134MB	PreTrans
time: 0.055; rss: 134MB	MIR optimisations
  time: 0.018; rss: 137MB	write metadata
  time: 0.131; rss: 142MB	translation item collection
  time: 0.015; rss: 145MB	codegen unit partitioning
  time: 0.014; rss: 199MB	internalize symbols
time: 1.074; rss: 199MB	translation
time: 0.000; rss: 199MB	assert dep graph
time: 0.000; rss: 199MB	serialize dep graph
  time: 0.087; rss: 147MB	llvm function passes [0]
  time: 0.042; rss: 149MB	llvm module passes [0]
  time: 1.646; rss: 152MB	codegen passes [0]
  time: 0.000; rss: 151MB	codegen passes [0]
time: 1.936; rss: 151MB	LLVM passes
time: 0.000; rss: 151MB	serialize work products
time: 0.070; rss: 94MB	linking
done
