commit d64b7030658c839c60d7c7165e8be19283c3f28c
Merge: 2217bd7 49c6b3c
Author: bors <bors@rust-lang.org>
Date:   Fri Nov 25 20:19:47 2016 -0600

    Auto merge of #37960 - samestep:five, r=frewsxcv
    
    Use literal 5 instead of five in book section 4.1
    
    The other two code snippets in this sentence are valid code, so it makes more sense to use the literal `5` rather than the invalid symbol `five`.
rustc: ./issue-32278-big-array-of-strings
cargo rustc  -- -Ztime-passes -Zinput-stats
   Compiling issue-32278-big-array-of-strings v0.1.0 (file:///root/benchmarks/issue-32278-big-array-of-strings)
time: 0.145; rss: 54MB	parsing
Lines of code:             65577
Pre-expansion node count:  65552
time: 0.000; rss: 54MB	recursion limit
time: 0.000; rss: 54MB	crate injection
time: 0.000; rss: 54MB	plugin loading
time: 0.000; rss: 54MB	plugin registration
time: 0.026; rss: 78MB	expansion
time: 0.000; rss: 78MB	maybe building test harness
time: 0.001; rss: 78MB	maybe creating a macro crate
Post-expansion node count: 65565
time: 0.000; rss: 78MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 78MB	complete gated feature checking
time: 0.004; rss: 78MB	early lint checks
time: 0.000; rss: 78MB	AST validation
time: 0.003; rss: 80MB	name resolution
time: 0.012; rss: 87MB	lowering ast -> hir
time: 0.007; rss: 90MB	indexing hir
time: 0.000; rss: 90MB	attribute checking
time: 0.000; rss: 79MB	language item collection
time: 0.000; rss: 79MB	lifetime resolution
time: 0.000; rss: 79MB	looking for entry point
time: 0.000; rss: 79MB	looking for plugin registrar
time: 0.013; rss: 84MB	region resolution
time: 0.000; rss: 84MB	loop checking
time: 0.001; rss: 84MB	static item recursion checking
time: 0.019; rss: 84MB	compute_incremental_hashes_map
time: 0.000; rss: 84MB	load_dep_graph
time: 0.000; rss: 84MB	type collecting
time: 0.000; rss: 84MB	variance inference
time: 0.000; rss: 84MB	impl wf inference
time: 0.004; rss: 86MB	coherence checking
time: 0.000; rss: 86MB	wf checking
time: 0.900; rss: 98MB	item-types checking
time: 0.000; rss: 98MB	item-bodies checking
time: 0.000; rss: 98MB	drop-impl checking
time: 0.022; rss: 98MB	const checking
time: 0.001; rss: 98MB	privacy checking
time: 0.000; rss: 98MB	stability index
time: 0.000; rss: 98MB	intrinsic checking
time: 0.000; rss: 98MB	effect checking
time: 0.000; rss: 98MB	match checking
time: 0.000; rss: 98MB	liveness checking
time: 0.000; rss: 98MB	rvalue checking
time: 0.037; rss: 104MB	MIR dump
  time: 0.000; rss: 104MB	SimplifyCfg
  time: 0.001; rss: 104MB	QualifyAndPromoteConstants
  time: 0.001; rss: 104MB	TypeckMir
  time: 0.000; rss: 104MB	SimplifyBranches
  time: 0.000; rss: 104MB	SimplifyCfg
time: 0.001; rss: 104MB	MIR cleanup and validation
time: 0.001; rss: 104MB	borrow checking
time: 0.000; rss: 104MB	reachability checking
time: 0.001; rss: 104MB	death checking
time: 0.000; rss: 104MB	stability checking
time: 0.000; rss: 104MB	unused lib feature checking
time: 0.024; rss: 104MB	lint checking
time: 0.001; rss: 104MB	resolving dependency formats
  time: 0.000; rss: 104MB	NoLandingPads
  time: 0.000; rss: 104MB	SimplifyCfg
  time: 0.001; rss: 104MB	EraseRegions
  time: 0.000; rss: 104MB	AddCallGuards
  time: 0.000; rss: 104MB	ElaborateDrops
  time: 0.000; rss: 104MB	NoLandingPads
  time: 0.000; rss: 104MB	SimplifyCfg
  time: 0.000; rss: 104MB	InstCombine
  time: 0.000; rss: 104MB	Deaggregator
  time: 0.000; rss: 104MB	CopyPropagation
  time: 0.000; rss: 104MB	SimplifyLocals
  time: 0.000; rss: 104MB	AddCallGuards
  time: 0.000; rss: 104MB	PreTrans
time: 0.001; rss: 104MB	MIR optimisations
  time: 0.000; rss: 104MB	write metadata
  time: 0.000; rss: 104MB	translation item collection
  time: 0.000; rss: 106MB	codegen unit partitioning
  time: 0.001; rss: 116MB	internalize symbols
time: 0.058; rss: 116MB	translation
time: 0.000; rss: 116MB	assert dep graph
time: 0.000; rss: 116MB	serialize dep graph
  time: 0.008; rss: 86MB	llvm function passes [0]
  time: 0.000; rss: 86MB	llvm module passes [0]
  time: 0.204; rss: 85MB	codegen passes [0]
  time: 0.000; rss: 85MB	codegen passes [0]
time: 0.213; rss: 85MB	LLVM passes
time: 0.000; rss: 85MB	serialize work products
  time: 0.155; rss: 76MB	running linker
time: 0.156; rss: 76MB	linking
done
