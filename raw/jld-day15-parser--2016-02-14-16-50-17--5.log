commit a888333ea6acad7e289fa3f0f9e6c1058aa2a011
Merge: 9b367d9 e3b414d
Author: bors <bors@rust-lang.org>
Date:   Sun Feb 14 21:24:45 2016 +0000

    Auto merge of #31460 - alexcrichton:supafast-rustc, r=brson
    
    Looking at some profiles of rustc recently, these seemed like two pretty easy wins we could get in terms of performance on the table.
rustc: ./jld-day15-parser
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling day15 v0.1.0 (file:///root/benchmarks/jld-day15-parser)
time: 0.001; rss: 33MB	parsing
Lines of code:             72
Pre-expansion node count:  673
time: 0.000; rss: 33MB	configuration 1
time: 0.000; rss: 33MB	recursion limit
time: 0.000; rss: 33MB	gated macro checking
time: 0.000; rss: 33MB	crate injection
time: 0.003; rss: 39MB	macro loading
time: 0.000; rss: 39MB	plugin loading
time: 0.000; rss: 39MB	plugin registration
time: 0.002; rss: 40MB	expansion
time: 0.000; rss: 40MB	complete gated feature checking 1
time: 0.000; rss: 40MB	configuration 2
time: 0.000; rss: 40MB	gated configuration checking
time: 0.000; rss: 40MB	maybe building test harness
time: 0.000; rss: 40MB	prelude injection
time: 0.000; rss: 40MB	checking that all macro invocations are gone
time: 0.000; rss: 40MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 40MB	complete gated feature checking 2
time: 0.000; rss: 40MB	const fn bodies and arguments
Post-expansion node count: 1176
time: 0.000; rss: 40MB	assigning node ids
time: 0.000; rss: 40MB	lowering ast -> hir
time: 0.000; rss: 40MB	indexing hir
time: 0.000; rss: 40MB	attribute checking
time: 0.000; rss: 40MB	early lint checks
time: 0.002; rss: 40MB	external crate/lib resolution
time: 0.000; rss: 40MB	language item collection
time: 0.001; rss: 49MB	resolution
time: 0.000; rss: 49MB	lifetime resolution
time: 0.000; rss: 49MB	looking for entry point
time: 0.000; rss: 49MB	looking for plugin registrar
time: 0.000; rss: 49MB	region resolution
time: 0.000; rss: 49MB	loop checking
time: 0.000; rss: 49MB	static item recursion checking
time: 0.001; rss: 52MB	type collecting
time: 0.000; rss: 52MB	variance inference
time: 0.005; rss: 57MB	coherence checking
time: 0.010; rss: 63MB	wf checking
time: 0.000; rss: 63MB	item-types checking
time: 3.632; rss: 141MB	item-bodies checking
time: 0.000; rss: 141MB	drop-impl checking
time: 0.001; rss: 141MB	const checking
time: 0.000; rss: 141MB	privacy checking
time: 0.000; rss: 141MB	stability index
time: 0.000; rss: 141MB	intrinsic checking
time: 0.000; rss: 141MB	effect checking
time: 0.000; rss: 141MB	match checking
time: 0.001; rss: 141MB	MIR dump
time: 0.000; rss: 141MB	MIR passes
time: 0.000; rss: 141MB	liveness checking
time: 0.001; rss: 141MB	borrow checking
time: 0.002; rss: 141MB	rvalue checking
time: 0.000; rss: 141MB	reachability checking
time: 0.000; rss: 141MB	death checking
time: 0.000; rss: 141MB	stability checking
time: 0.000; rss: 141MB	unused lib feature checking
time: 0.003; rss: 142MB	lint checking
time: 0.001; rss: 142MB	resolving dependency formats
time: 0.000; rss: 142MB	erasing regions from MIR
  time: 12.133; rss: 178MB	translation item collection
  time: 0.000; rss: 194MB	write metadata
time: 33.619; rss: 194MB	translation
  time: 0.014; rss: 99MB	llvm function passes [0]
  time: 0.002; rss: 99MB	llvm module passes [0]
  time: 0.272; rss: 106MB	codegen passes [0]
  time: 0.000; rss: 99MB	codegen passes [0]
time: 0.297; rss: 98MB	LLVM passes
  time: 0.111; rss: 98MB	running linker
time: 0.111; rss: 98MB	linking
done
