commit 54664f188403a5bb72634b5e3ba9b2f7b60b4d9f
Merge: 50df6b9 ca6f920
Author: bors <bors@rust-lang.org>
Date:   Wed Feb 3 06:38:01 2016 +0000

    Auto merge of #31263 - dhuseby:fixing_bsd_builds, r=alexcrichton
    
    Something went haywire with github last night and the old PR https://github.com/rust-lang/rust/pull/31230 got closed somehow.  This new PR is to replace the old one.  This incorporates all of the feedback from the other PR.
    
    @alexcrichton I incorporated the suggestion from @semarie and the result is cleaner and clearer.  I think this is ready to go.
rustc: ./piston-image-0.3.11
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling libc v0.2.6
   Compiling bitflags v0.4.0
   Compiling glob v0.2.10
   Compiling color_quant v1.0.0
   Compiling lzw v0.8.0
   Compiling winapi-build v0.1.1
   Compiling gcc v0.3.21
   Compiling rustc-serialize v0.3.16
   Compiling byteorder v0.3.13
   Compiling advapi32-sys v0.1.2
   Compiling winapi v0.2.5
   Compiling gif v0.5.1
   Compiling rand v0.3.13
   Compiling miniz-sys v0.1.7
   Compiling flate2 v0.2.13
   Compiling num v0.1.30
   Compiling png v0.3.1
   Compiling enum_primitive v0.0.1
   Compiling image v0.3.11 (file:///root/benchmarks/piston-image-0.3.11)
time: 0.044; rss: 47MB	parsing
Lines of code:             10676
Pre-expansion node count:  84646
time: 0.017; rss: 47MB	configuration 1
time: 0.000; rss: 47MB	recursion limit
time: 0.001; rss: 47MB	gated macro checking
time: 0.000; rss: 47MB	crate injection
time: 0.005; rss: 53MB	macro loading
time: 0.000; rss: 53MB	plugin loading
time: 0.000; rss: 53MB	plugin registration
time: 0.126; rss: 57MB	expansion
time: 0.004; rss: 57MB	complete gated feature checking 1
time: 0.027; rss: 57MB	configuration 2
time: 0.000; rss: 57MB	gated configuration checking
time: 0.013; rss: 57MB	maybe building test harness
time: 0.012; rss: 57MB	prelude injection
time: 0.001; rss: 57MB	checking that all macro invocations are gone
time: 0.000; rss: 57MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 57MB	complete gated feature checking 2
Post-expansion node count: 144338
time: 0.013; rss: 57MB	assigning node ids
time: 0.022; rss: 70MB	lowering ast -> hir
time: 0.007; rss: 71MB	indexing hir
time: 0.000; rss: 71MB	attribute checking
time: 0.009; rss: 71MB	early lint checks
time: 0.003; rss: 62MB	external crate/lib resolution
time: 0.002; rss: 62MB	language item collection
time: 0.031; rss: 80MB	resolution
time: 0.003; rss: 80MB	lifetime resolution
time: 0.000; rss: 80MB	looking for entry point
time: 0.000; rss: 80MB	looking for plugin registrar
time: 0.012; rss: 88MB	region resolution
time: 0.002; rss: 88MB	loop checking
time: 0.001; rss: 88MB	static item recursion checking
time: 0.011; rss: 91MB	type collecting
time: 0.000; rss: 91MB	variance inference
time: 0.031; rss: 108MB	coherence checking
time: 0.142; rss: 111MB	wf checking
time: 0.050; rss: 114MB	item-types checking
time: 1.647; rss: 144MB	item-bodies checking
time: 0.000; rss: 144MB	drop-impl checking
time: 0.074; rss: 146MB	const checking
time: 0.012; rss: 146MB	privacy checking
time: 0.001; rss: 146MB	stability index
time: 0.010; rss: 146MB	intrinsic checking
time: 0.003; rss: 146MB	effect checking
time: 0.025; rss: 146MB	match checking
time: 0.095; rss: 154MB	MIR dump
time: 0.011; rss: 156MB	liveness checking
time: 0.153; rss: 156MB	borrow checking
time: 0.079; rss: 156MB	rvalue checking
time: 0.003; rss: 156MB	reachability checking
time: 0.008; rss: 156MB	death checking
time: 0.010; rss: 156MB	stability checking
time: 0.000; rss: 156MB	unused lib feature checking
time: 0.085; rss: 156MB	lint checking
time: 0.000; rss: 156MB	resolving dependency formats
time: 0.008; rss: 158MB	erasing regions from MIR
  time: 0.214; rss: 281MB	write metadata
time: 2.871; rss: 275MB	translation
  time: 0.100; rss: 165MB	llvm function passes [0]
  time: 0.043; rss: 166MB	llvm module passes [0]
  time: 1.732; rss: 214MB	codegen passes [0]
  time: 0.001; rss: 181MB	codegen passes [0]
time: 2.079; rss: 181MB	LLVM passes
time: 0.150; rss: 180MB	linking
done
