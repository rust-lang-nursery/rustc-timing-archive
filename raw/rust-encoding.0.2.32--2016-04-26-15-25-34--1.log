commit 897199a0fbe01ab6f7e7f8096656603e238e85a2
Merge: 01a0207 36d9ee3
Author: bors <bors@rust-lang.org>
Date:   Tue Apr 26 12:00:35 2016 -0700

    Auto merge of #33191 - alexcrichton:rustdoc-create-dir-all-racy, r=steveklabnik
    
    rustdoc: Handle concurrent mkdir requests
    
    It's likely that `rustdoc` as a tool is run concurrently in the same output
    (e.g. documenting multiple crates as Cargo does), in which case it needs to
    handle concurrent calls to `fs::create_dir`.
rustc: ./rust-encoding.0.2.32
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling encoding v0.2.32 (file:///root/benchmarks/rust-encoding.0.2.32)
time: 0.030; rss: 52MB	parsing
Lines of code:             6441
Pre-expansion node count:  30335
time: 0.006; rss: 53MB	configuration 1
time: 0.000; rss: 53MB	recursion limit
time: 0.000; rss: 53MB	gated macro checking
time: 0.000; rss: 53MB	crate injection
time: 0.003; rss: 55MB	macro loading
time: 0.000; rss: 55MB	plugin loading
time: 0.000; rss: 55MB	plugin registration
time: 0.044; rss: 58MB	expansion
time: 0.001; rss: 58MB	complete gated feature checking 1
time: 0.006; rss: 58MB	configuration 2
time: 0.000; rss: 58MB	gated configuration checking
time: 0.003; rss: 58MB	maybe building test harness
time: 0.003; rss: 58MB	prelude injection
time: 0.000; rss: 58MB	checking that all macro invocations are gone
time: 0.000; rss: 58MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 58MB	complete gated feature checking 2
time: 0.000; rss: 58MB	const fn bodies and arguments
Post-expansion node count: 41611
time: 0.003; rss: 58MB	assigning node ids
time: 0.001; rss: 60MB	collecting defs
time: 0.001; rss: 60MB	external crate/lib resolution
time: 0.005; rss: 62MB	lowering ast -> hir
time: 0.002; rss: 62MB	indexing hir
time: 0.000; rss: 62MB	attribute checking
time: 0.002; rss: 62MB	early lint checks
time: 0.000; rss: 62MB	language item collection
time: 0.008; rss: 71MB	name resolution
time: 0.000; rss: 71MB	lifetime resolution
time: 0.000; rss: 71MB	looking for entry point
time: 0.000; rss: 71MB	looking for plugin registrar
time: 0.003; rss: 72MB	region resolution
time: 0.000; rss: 72MB	loop checking
time: 0.000; rss: 72MB	static item recursion checking
time: 0.000; rss: 72MB	load_dep_graph
time: 0.005; rss: 74MB	type collecting
time: 0.000; rss: 74MB	variance inference
time: 0.022; rss: 91MB	coherence checking
time: 0.017; rss: 92MB	wf checking
time: 0.014; rss: 92MB	item-types checking
time: 0.211; rss: 103MB	item-bodies checking
time: 0.000; rss: 103MB	drop-impl checking
time: 0.011; rss: 103MB	const checking
time: 0.003; rss: 103MB	privacy checking
time: 0.000; rss: 103MB	stability index
time: 0.001; rss: 103MB	intrinsic checking
time: 0.000; rss: 103MB	effect checking
time: 0.006; rss: 103MB	match checking
time: 0.002; rss: 103MB	liveness checking
time: 0.006; rss: 103MB	rvalue checking
time: 0.033; rss: 110MB	MIR dump
time: 0.008; rss: 109MB	MIR passes
time: 0.022; rss: 109MB	borrow checking
time: 0.000; rss: 109MB	reachability checking
time: 0.002; rss: 109MB	death checking
time: 0.002; rss: 109MB	stability checking
time: 0.000; rss: 109MB	unused lib feature checking
time: 0.025; rss: 110MB	lint checking
time: 0.000; rss: 110MB	resolving dependency formats
time: 0.004; rss: 111MB	Prepare MIR codegen passes
  time: 0.029; rss: 116MB	translation item collection
  time: 0.002; rss: 116MB	codegen unit partitioning
  time: 0.059; rss: 149MB	write metadata
time: 0.395; rss: 149MB	translation
time: 0.000; rss: 149MB	assert dep graph
time: 0.000; rss: 149MB	serialize dep graph
  time: 0.027; rss: 112MB	llvm function passes [0]
  time: 0.050; rss: 116MB	llvm module passes [0]
  time: 0.579; rss: 121MB	codegen passes [0]
  time: 0.000; rss: 106MB	codegen passes [0]
time: 0.721; rss: 105MB	LLVM passes
time: 0.054; rss: 103MB	linking
done
