commit bf9c60c9a6d27762594c1c5c067194f4c9109f67
Merge: 6e00b55 ae999e9
Author: bors <bors@rust-lang.org>
Date:   Sun May 29 21:28:50 2016 -0700

    Auto merge of #33929 - petrochenkov:pathir, r=eddyb
    
    Separate bindings from other patterns in HIR
    
    Now when name resolution is done on AST, we can avoid dumping everything that looks like an identifier into `PatKind::Ident` in HIR.
    `hir::PatKind::Ident` is removed, fresh bindings are now called `hir::PatKind::Binding`, everything else goes to `hir::PatKind::Path`.
    
    I intend to do something with `PatKind::Path`/`PatKind::QPath` as well using resolution results, but it requires some audit and maybe some deeper refactoring of relevant resolution/type checking code to do it properly.
    I'm submitting this part of the patch earlier to notify interested parties that I'm working on this.
    
    cc @jseyfried
    r? @eddyb
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.036; rss: 53MB	parsing
Lines of code:             9154
Pre-expansion node count:  44646
time: 0.007; rss: 53MB	configuration 1
time: 0.000; rss: 57MB	recursion limit
time: 0.000; rss: 57MB	crate injection
time: 0.021; rss: 91MB	macro loading
time: 0.000; rss: 91MB	plugin loading
time: 0.000; rss: 91MB	plugin registration
time: 0.240; rss: 101MB	expansion
time: 0.000; rss: 101MB	gated configuration checking
time: 0.015; rss: 101MB	maybe building test harness
time: 0.011; rss: 101MB	prelude injection
time: 0.001; rss: 101MB	checking that all macro invocations are gone
time: 0.000; rss: 101MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 101MB	complete gated feature checking
Post-expansion node count: 101566
time: 0.010; rss: 101MB	assigning node ids
time: 0.003; rss: 101MB	collecting defs
time: 0.011; rss: 114MB	external crate/lib resolution
time: 0.008; rss: 114MB	early lint checks
time: 0.023; rss: 118MB	name resolution
time: 0.013; rss: 124MB	lowering ast -> hir
time: 0.002; rss: 126MB	indexing hir
time: 0.001; rss: 126MB	attribute checking
time: 0.001; rss: 117MB	language item collection
time: 0.002; rss: 117MB	lifetime resolution
time: 0.000; rss: 117MB	looking for entry point
time: 0.000; rss: 117MB	looking for plugin registrar
time: 0.006; rss: 121MB	region resolution
time: 0.001; rss: 121MB	loop checking
time: 0.001; rss: 121MB	static item recursion checking
time: 0.000; rss: 121MB	load_dep_graph
time: 0.045; rss: 125MB	type collecting
time: 0.000; rss: 125MB	variance inference
time: 0.048; rss: 131MB	coherence checking
time: 0.107; rss: 132MB	wf checking
time: 0.037; rss: 132MB	item-types checking
time: 0.550; rss: 143MB	item-bodies checking
time: 0.000; rss: 143MB	drop-impl checking
time: 0.045; rss: 143MB	const checking
time: 0.007; rss: 143MB	privacy checking
time: 0.001; rss: 143MB	stability index
time: 0.006; rss: 143MB	intrinsic checking
time: 0.002; rss: 143MB	effect checking
time: 0.015; rss: 143MB	match checking
time: 0.004; rss: 143MB	liveness checking
time: 0.033; rss: 145MB	rvalue checking
time: 0.070; rss: 154MB	MIR dump
time: 0.044; rss: 154MB	MIR passes
time: 0.074; rss: 154MB	borrow checking
time: 0.003; rss: 154MB	reachability checking
time: 0.005; rss: 154MB	death checking
time: 0.005; rss: 154MB	stability checking
time: 0.000; rss: 154MB	unused lib feature checking
time: 0.052; rss: 154MB	lint checking
time: 0.000; rss: 154MB	resolving dependency formats
time: 0.011; rss: 156MB	Prepare MIR codegen passes
  time: 0.131; rss: 160MB	write metadata
  time: 0.300; rss: 168MB	translation item collection
  time: 0.007; rss: 170MB	codegen unit partitioning
time: 1.822; rss: 289MB	translation
time: 0.001; rss: 289MB	assert dep graph
time: 0.000; rss: 289MB	serialize dep graph
  time: 0.097; rss: 179MB	llvm function passes [0]
  time: 0.048; rss: 181MB	llvm module passes [0]
  time: 1.622; rss: 183MB	codegen passes [0]
  time: 0.001; rss: 134MB	codegen passes [0]
time: 1.967; rss: 133MB	LLVM passes
time: 0.178; rss: 130MB	linking
done
