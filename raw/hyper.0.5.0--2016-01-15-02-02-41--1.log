commit a70a60a02bca4c1fb75a0eb0ecf80acb73972f66
Merge: d8869d3 acc9428
Author: bors <bors@rust-lang.org>
Date:   Fri Jan 15 06:38:26 2016 +0000

    Auto merge of #30763 - gchp:issue/30033, r=nagisa
    
    This is achieved by adding the scan_back method. This method looks back
    through the source_text of the StringReader until it finds the target
    char, returning it's offset in the source. We use this method to find
    the offset of the opening single quote, and use that offset as the start
    of the error.
    
    Given this code:
    
    ```rust
    fn main() {
        let _ = 'abcd';
    }
    ```
    
    The compiler would give a message like:
    
    ```
    error: character literal may only contain one codepoint: ';
    let _ = 'abcd';
                 ^~
    ```
    With this change, the message now displays:
    
    ```
    error: character literal may only contain one codepoint: 'abcd';
    let _ = 'abcd';
            ^~~~~~~
    ```
    
    Fixes #30033
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.031; rss: 43MB	parsing
Lines of code:             9154
Pre-expansion node count:  45594
time: 0.010; rss: 43MB	configuration 1
time: 0.000; rss: 43MB	recursion limit
time: 0.000; rss: 43MB	gated macro checking
time: 0.000; rss: 43MB	crate injection
time: 0.005; rss: 49MB	macro loading
time: 0.000; rss: 49MB	plugin loading
time: 0.000; rss: 49MB	plugin registration
time: 0.197; rss: 58MB	expansion
time: 0.005; rss: 58MB	complete gated feature checking 1
time: 0.034; rss: 58MB	configuration 2
time: 0.000; rss: 58MB	gated configuration checking
time: 0.014; rss: 58MB	maybe building test harness
time: 0.011; rss: 58MB	prelude injection
time: 0.001; rss: 58MB	checking that all macro invocations are gone
time: 0.000; rss: 58MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 58MB	complete gated feature checking 2
Post-expansion node count: 109258
time: 0.011; rss: 58MB	assigning node ids
time: 0.011; rss: 62MB	lowering ast -> hir
time: 0.005; rss: 66MB	indexing hir
time: 0.000; rss: 66MB	attribute checking
time: 0.005; rss: 66MB	early lint checks
time: 0.004; rss: 62MB	external crate/lib resolution
time: 0.001; rss: 62MB	language item collection
time: 0.029; rss: 81MB	resolution
time: 0.002; rss: 81MB	lifetime resolution
time: 0.000; rss: 81MB	looking for entry point
time: 0.000; rss: 81MB	looking for plugin registrar
time: 0.006; rss: 84MB	region resolution
time: 0.001; rss: 84MB	loop checking
time: 0.001; rss: 84MB	static item recursion checking
time: 0.014; rss: 87MB	type collecting
time: 0.000; rss: 87MB	variance inference
time: 0.039; rss: 105MB	coherence checking
time: 0.071; rss: 108MB	wf checking
time: 0.027; rss: 108MB	item-types checking
time: 0.531; rss: 131MB	item-bodies checking
time: 0.000; rss: 131MB	drop-impl checking
time: 0.043; rss: 133MB	const checking
time: 0.008; rss: 133MB	privacy checking
time: 0.001; rss: 133MB	stability index
time: 0.004; rss: 133MB	intrinsic checking
time: 0.002; rss: 133MB	effect checking
time: 0.013; rss: 133MB	match checking
time: 0.050; rss: 136MB	MIR dump
time: 0.006; rss: 136MB	liveness checking
time: 0.071; rss: 136MB	borrow checking
time: 0.036; rss: 136MB	rvalue checking
time: 0.003; rss: 136MB	reachability checking
time: 0.006; rss: 136MB	death checking
time: 0.006; rss: 136MB	stability checking
time: 0.000; rss: 136MB	unused lib feature checking
time: 0.045; rss: 136MB	lint checking
time: 0.000; rss: 136MB	resolving dependency formats
time: 0.007; rss: 136MB	erasing regions from MIR
  time: 0.135; rss: 272MB	write metadata
time: 1.456; rss: 272MB	translation
  time: 0.100; rss: 168MB	llvm function passes [0]
  time: 0.052; rss: 168MB	llvm module passes [0]
  time: 1.684; rss: 213MB	codegen passes [0]
  time: 0.001; rss: 174MB	codegen passes [0]
time: 2.061; rss: 174MB	LLVM passes
time: 0.179; rss: 174MB	linking
done
