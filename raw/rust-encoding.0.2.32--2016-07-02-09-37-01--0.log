commit 7a262d303489fcbd8410b4e4cecc563b06799e16
Merge: 8a50e29 42b7c32
Author: bors <bors@rust-lang.org>
Date:   Sat Jul 2 06:50:59 2016 -0700

    Auto merge of #34539 - arielb1:metadata-hash, r=alexcrichton
    
    Make the metadata lock more robust
    
    Fixes #33778 and friends.
    
    I also needed to add a metadata encoding version to rlibs, as they did not have it before. To keep it backwards-compatible, I added 4 zeroes to the start of the metadata, which are treated as an empty length field by older rustcs.
    
    r? @alexcrichton
rustc: ./rust-encoding.0.2.32
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling encoding_index_tests v0.1.4 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-simpchinese v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-tradchinese v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-korean v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-singlebyte v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-japanese v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding v0.2.32 (file:///root/benchmarks/rust-encoding.0.2.32)
time: 0.031; rss: 85MB	parsing
Lines of code:             6441
Pre-expansion node count:  30069
time: 0.004; rss: 88MB	configuration
time: 0.000; rss: 88MB	recursion limit
time: 0.000; rss: 88MB	crate injection
time: 0.000; rss: 88MB	plugin loading
time: 0.000; rss: 88MB	plugin registration
time: 0.069; rss: 123MB	expansion
time: 0.000; rss: 123MB	maybe building test harness
time: 0.000; rss: 123MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 123MB	complete gated feature checking
Post-expansion node count: 40757
time: 0.003; rss: 123MB	assigning node ids
time: 0.001; rss: 123MB	collecting defs
time: 0.001; rss: 123MB	external crate/lib resolution
time: 0.002; rss: 123MB	early lint checks
time: 0.000; rss: 123MB	AST validation
time: 0.005; rss: 127MB	name resolution
time: 0.004; rss: 128MB	lowering ast -> hir
time: 0.000; rss: 128MB	indexing hir
time: 0.000; rss: 128MB	attribute checking
time: 0.000; rss: 127MB	language item collection
time: 0.001; rss: 127MB	lifetime resolution
time: 0.000; rss: 127MB	looking for entry point
time: 0.000; rss: 127MB	looking for plugin registrar
time: 0.002; rss: 129MB	region resolution
time: 0.000; rss: 129MB	loop checking
time: 0.000; rss: 129MB	static item recursion checking
time: 0.000; rss: 129MB	load_dep_graph
time: 0.012; rss: 132MB	type collecting
time: 0.000; rss: 132MB	variance inference
time: 0.021; rss: 135MB	coherence checking
time: 0.024; rss: 135MB	wf checking
time: 0.015; rss: 135MB	item-types checking
time: 0.219; rss: 144MB	item-bodies checking
time: 0.000; rss: 144MB	drop-impl checking
time: 0.013; rss: 144MB	const checking
time: 0.002; rss: 144MB	privacy checking
time: 0.000; rss: 144MB	stability index
time: 0.002; rss: 144MB	intrinsic checking
time: 0.000; rss: 144MB	effect checking
time: 0.008; rss: 144MB	match checking
time: 0.001; rss: 144MB	liveness checking
time: 0.008; rss: 144MB	rvalue checking
time: 0.023; rss: 150MB	MIR dump
time: 0.016; rss: 150MB	MIR passes
time: 0.024; rss: 150MB	borrow checking
time: 0.000; rss: 150MB	reachability checking
time: 0.002; rss: 150MB	death checking
time: 0.002; rss: 150MB	stability checking
time: 0.000; rss: 150MB	unused lib feature checking
time: 0.023; rss: 150MB	lint checking
time: 0.000; rss: 150MB	resolving dependency formats
time: 0.027; rss: 152MB	Prepare MIR codegen passes
  time: 0.057; rss: 156MB	write metadata
  time: 0.029; rss: 159MB	translation item collection
  time: 0.001; rss: 159MB	codegen unit partitioning
time: 0.930; rss: 187MB	translation
time: 0.000; rss: 187MB	assert dep graph
time: 0.000; rss: 187MB	serialize dep graph
  time: 0.335; rss: 152MB	llvm function passes [0]
  time: 0.625; rss: 156MB	llvm module passes [0]
  time: 5.866; rss: 159MB	codegen passes [0]
  time: 0.002; rss: 143MB	codegen passes [0]
time: 7.330; rss: 142MB	LLVM passes
time: 0.055; rss: 140MB	linking
done
