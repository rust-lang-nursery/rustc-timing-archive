commit 98422e8c156d9cf343c93da30f71d9a4cabda25f
Merge: 38dfb96 45e716e
Author: bors <bors@rust-lang.org>
Date:   Fri Feb 5 15:11:45 2016 +0000

    Auto merge of #31400 - durka:civilized-deriving, r=alexcrichton
    
    You can `#[derive(FromPrimitive)]`, but it [fails later in the compile](https://play.rust-lang.org/?gist=82cb8ad2fac49e3fe472&version=stable) due to hardcoding `std::num::FromPrimitive` which [was removed](https://github.com/rust-lang/rust/commit/eeb94886adccb3f13003f92f117115d17846ce1f) (for some reason Github doesn't show `FromPrimitive` in the diff, but `git show` does).
    
    Anyway, this PR removes the code. I didn't mark it as a breaking change, even though [this extremely contrived code using highly unstable features](https://play.rust-lang.org/?gist=1e1b1bbff962837b228a&version=nightly) is broken by it -- should I?
rustc: ./piston-image-0.3.11
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling image v0.3.11 (file:///root/benchmarks/piston-image-0.3.11)
time: 0.045; rss: 47MB	parsing
Lines of code:             10676
Pre-expansion node count:  84646
time: 0.017; rss: 47MB	configuration 1
time: 0.000; rss: 47MB	recursion limit
time: 0.001; rss: 47MB	gated macro checking
time: 0.000; rss: 47MB	crate injection
time: 0.005; rss: 52MB	macro loading
time: 0.000; rss: 52MB	plugin loading
time: 0.000; rss: 52MB	plugin registration
time: 0.126; rss: 56MB	expansion
time: 0.004; rss: 56MB	complete gated feature checking 1
time: 0.028; rss: 56MB	configuration 2
time: 0.000; rss: 56MB	gated configuration checking
time: 0.013; rss: 56MB	maybe building test harness
time: 0.012; rss: 56MB	prelude injection
time: 0.001; rss: 56MB	checking that all macro invocations are gone
time: 0.000; rss: 56MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 56MB	complete gated feature checking 2
Post-expansion node count: 144338
time: 0.013; rss: 56MB	assigning node ids
time: 0.022; rss: 69MB	lowering ast -> hir
time: 0.007; rss: 71MB	indexing hir
time: 0.000; rss: 71MB	attribute checking
time: 0.009; rss: 71MB	early lint checks
time: 0.003; rss: 62MB	external crate/lib resolution
time: 0.002; rss: 62MB	language item collection
time: 0.031; rss: 79MB	resolution
time: 0.003; rss: 79MB	lifetime resolution
time: 0.000; rss: 79MB	looking for entry point
time: 0.000; rss: 79MB	looking for plugin registrar
time: 0.012; rss: 87MB	region resolution
time: 0.002; rss: 87MB	loop checking
time: 0.001; rss: 87MB	static item recursion checking
time: 0.011; rss: 91MB	type collecting
time: 0.000; rss: 91MB	variance inference
time: 0.032; rss: 108MB	coherence checking
time: 0.144; rss: 111MB	wf checking
time: 0.050; rss: 114MB	item-types checking
time: 1.657; rss: 148MB	item-bodies checking
time: 0.000; rss: 148MB	drop-impl checking
time: 0.074; rss: 148MB	const checking
time: 0.012; rss: 148MB	privacy checking
time: 0.001; rss: 148MB	stability index
time: 0.011; rss: 148MB	intrinsic checking
time: 0.004; rss: 148MB	effect checking
time: 0.026; rss: 148MB	match checking
time: 0.094; rss: 154MB	MIR dump
time: 0.011; rss: 156MB	liveness checking
time: 0.155; rss: 156MB	borrow checking
time: 0.079; rss: 156MB	rvalue checking
time: 0.003; rss: 156MB	reachability checking
time: 0.008; rss: 156MB	death checking
time: 0.010; rss: 156MB	stability checking
time: 0.000; rss: 156MB	unused lib feature checking
time: 0.083; rss: 156MB	lint checking
time: 0.000; rss: 156MB	resolving dependency formats
time: 0.008; rss: 156MB	erasing regions from MIR
  time: 0.214; rss: 281MB	write metadata
time: 2.854; rss: 273MB	translation
  time: 0.100; rss: 166MB	llvm function passes [0]
  time: 0.043; rss: 166MB	llvm module passes [0]
  time: 1.730; rss: 217MB	codegen passes [0]
  time: 0.001; rss: 184MB	codegen passes [0]
time: 2.071; rss: 184MB	LLVM passes
time: 0.149; rss: 183MB	linking
done
