commit d5759a3417fa395d439f4283825504dd4f78dc87
Merge: 267cde2 cae91d7
Author: bors <bors@rust-lang.org>
Date:   Wed May 25 20:36:09 2016 -0700

    Auto merge of #33699 - alexcrichton:stabilize-1.10, r=aturon
    
    std: Stabilize APIs for the 1.10 release
    
    This commit applies the FCP decisions made by the libs team for the 1.10 cycle,
    including both new stabilizations and deprecations. Specifically, the list of
    APIs is:
    
    Stabilized:
    
    * `os::windows::fs::OpenOptionsExt::access_mode`
    * `os::windows::fs::OpenOptionsExt::share_mode`
    * `os::windows::fs::OpenOptionsExt::custom_flags`
    * `os::windows::fs::OpenOptionsExt::attributes`
    * `os::windows::fs::OpenOptionsExt::security_qos_flags`
    * `os::unix::fs::OpenOptionsExt::custom_flags`
    * `sync::Weak::new`
    * `Default for sync::Weak`
    * `panic::set_hook`
    * `panic::take_hook`
    * `panic::PanicInfo`
    * `panic::PanicInfo::payload`
    * `panic::PanicInfo::location`
    * `panic::Location`
    * `panic::Location::file`
    * `panic::Location::line`
    * `ffi::CStr::from_bytes_with_nul`
    * `ffi::CStr::from_bytes_with_nul_unchecked`
    * `ffi::FromBytesWithNulError`
    * `fs::Metadata::modified`
    * `fs::Metadata::accessed`
    * `fs::Metadata::created`
    * `sync::atomic::Atomic{Usize,Isize,Bool,Ptr}::compare_exchange`
    * `sync::atomic::Atomic{Usize,Isize,Bool,Ptr}::compare_exchange_weak`
    * `collections::{btree,hash}_map::{Occupied,Vacant,}Entry::key`
    * `os::unix::net::{UnixStream, UnixListener, UnixDatagram, SocketAddr}`
    * `SocketAddr::is_unnamed`
    * `SocketAddr::as_pathname`
    * `UnixStream::connect`
    * `UnixStream::pair`
    * `UnixStream::try_clone`
    * `UnixStream::local_addr`
    * `UnixStream::peer_addr`
    * `UnixStream::set_read_timeout`
    * `UnixStream::set_write_timeout`
    * `UnixStream::read_timeout`
    * `UnixStream::write_Timeout`
    * `UnixStream::set_nonblocking`
    * `UnixStream::take_error`
    * `UnixStream::shutdown`
    * Read/Write/RawFd impls for `UnixStream`
    * `UnixListener::bind`
    * `UnixListener::accept`
    * `UnixListener::try_clone`
    * `UnixListener::local_addr`
    * `UnixListener::set_nonblocking`
    * `UnixListener::take_error`
    * `UnixListener::incoming`
    * RawFd impls for `UnixListener`
    * `UnixDatagram::bind`
    * `UnixDatagram::unbound`
    * `UnixDatagram::pair`
    * `UnixDatagram::connect`
    * `UnixDatagram::try_clone`
    * `UnixDatagram::local_addr`
    * `UnixDatagram::peer_addr`
    * `UnixDatagram::recv_from`
    * `UnixDatagram::recv`
    * `UnixDatagram::send_to`
    * `UnixDatagram::send`
    * `UnixDatagram::set_read_timeout`
    * `UnixDatagram::set_write_timeout`
    * `UnixDatagram::read_timeout`
    * `UnixDatagram::write_timeout`
    * `UnixDatagram::set_nonblocking`
    * `UnixDatagram::take_error`
    * `UnixDatagram::shutdown`
    * RawFd impls for `UnixDatagram`
    * `{BTree,Hash}Map::values_mut`
    * `<[_]>::binary_search_by_key`
    
    Deprecated:
    
    * `StaticCondvar` - this, and all other static synchronization primitives
                        below, are usable today through the lazy-static crate on
                        stable Rust today. Additionally, we'd like the non-static
                        versions to be directly usable in a static context one day,
                        so they're unlikely to be the final forms of the APIs in any
                        case.
    * `CONDVAR_INIT`
    * `StaticMutex`
    * `MUTEX_INIT`
    * `StaticRwLock`
    * `RWLOCK_INIT`
    * `iter::Peekable::is_empty`
    
    Closes #27717
    Closes #27720
    Closes #30014
    Closes #30425
    Closes #30449
    Closes #31190
    Closes #31399
    Closes #31767
    Closes #32111
    Closes #32281
    Closes #32312
    Closes #32551
    Closes #33018
rustc: ./piston-image-0.3.11
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling png v0.3.1
makefile:2: recipe for target 'all' failed
done
