commit 304d0c8d8544ed0afcb57b32572b948fb5072f59
Merge: e335620 b3cb8f6
Author: bors <bors@rust-lang.org>
Date:   Tue Oct 11 07:39:09 2016 -0700

    Auto merge of #36871 - petrochenkov:pdderr, r=nikomatsakis
    
    Turn compatibility lint `match_of_unit_variant_via_paren_dotdot` into a hard error
    
    The lint was introduced 10 months ago and made deny-by-default 7 months ago.
    In case someone is still using it, https://github.com/rust-lang/rust/pull/36868 contains a stable replacement.
    
    r? @nikomatsakis
rustc: ./rust-encoding-0.3.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling encoding-types v0.2.0 (file:///root/benchmarks/rust-encoding-0.3.0)
   Compiling encoding_index_tests v0.1.5 (file:///root/benchmarks/rust-encoding-0.3.0)
   Compiling encoding-index-korean v1.20141219.6 (file:///root/benchmarks/rust-encoding-0.3.0)
   Compiling encoding-index-simpchinese v1.20160120.0 (file:///root/benchmarks/rust-encoding-0.3.0)
   Compiling encoding-index-japanese v1.20141219.6 (file:///root/benchmarks/rust-encoding-0.3.0)
   Compiling encoding-index-tradchinese v1.20141219.6 (file:///root/benchmarks/rust-encoding-0.3.0)
   Compiling encoding-index-singlebyte v1.20160120.0 (file:///root/benchmarks/rust-encoding-0.3.0)
   Compiling encoding v0.3.0-dev (file:///root/benchmarks/rust-encoding-0.3.0)
time: 0.019; rss: 48MB	parsing
Lines of code:             5757
Pre-expansion node count:  26615
time: 0.000; rss: 48MB	recursion limit
time: 0.000; rss: 48MB	crate injection
time: 0.000; rss: 48MB	plugin loading
time: 0.000; rss: 48MB	plugin registration
time: 0.038; rss: 74MB	expansion
time: 0.000; rss: 74MB	maybe building test harness
time: 0.000; rss: 74MB	maybe creating a macro crate
Post-expansion node count: 37904
time: 0.000; rss: 74MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 74MB	complete gated feature checking
time: 0.001; rss: 74MB	early lint checks
time: 0.000; rss: 74MB	AST validation
time: 0.005; rss: 75MB	name resolution
time: 0.003; rss: 77MB	lowering ast -> hir
time: 0.001; rss: 77MB	indexing hir
time: 0.000; rss: 77MB	attribute checking
time: 0.000; rss: 76MB	language item collection
time: 0.000; rss: 76MB	lifetime resolution
time: 0.000; rss: 76MB	looking for entry point
time: 0.000; rss: 76MB	looking for plugin registrar
time: 0.002; rss: 78MB	region resolution
time: 0.000; rss: 78MB	loop checking
time: 0.000; rss: 78MB	static item recursion checking
time: 0.013; rss: 78MB	compute_incremental_hashes_map
time: 0.000; rss: 78MB	load_dep_graph
time: 0.008; rss: 79MB	type collecting
time: 0.000; rss: 79MB	variance inference
time: 0.017; rss: 80MB	coherence checking
time: 0.011; rss: 80MB	wf checking
time: 0.009; rss: 83MB	item-types checking
time: 0.134; rss: 88MB	item-bodies checking
time: 0.000; rss: 88MB	drop-impl checking
time: 0.009; rss: 88MB	const checking
time: 0.001; rss: 88MB	privacy checking
time: 0.000; rss: 88MB	stability index
time: 0.001; rss: 88MB	intrinsic checking
time: 0.000; rss: 88MB	effect checking
time: 0.005; rss: 88MB	match checking
time: 0.001; rss: 88MB	liveness checking
time: 0.006; rss: 88MB	rvalue checking
time: 0.018; rss: 98MB	MIR dump
  time: 0.002; rss: 98MB	SimplifyCfg
  time: 0.003; rss: 98MB	QualifyAndPromoteConstants
  time: 0.004; rss: 98MB	TypeckMir
  time: 0.000; rss: 98MB	SimplifyBranches
  time: 0.001; rss: 98MB	SimplifyCfg
time: 0.011; rss: 98MB	MIR passes
time: 0.019; rss: 98MB	borrow checking
time: 0.000; rss: 98MB	reachability checking
time: 0.001; rss: 98MB	death checking
time: 0.002; rss: 98MB	stability checking
time: 0.000; rss: 98MB	unused lib feature checking
time: 0.016; rss: 98MB	lint checking
time: 0.000; rss: 98MB	resolving dependency formats
  time: 0.000; rss: 98MB	NoLandingPads
  time: 0.001; rss: 98MB	SimplifyCfg
  time: 0.003; rss: 98MB	EraseRegions
  time: 0.000; rss: 98MB	AddCallGuards
  time: 0.016; rss: 100MB	ElaborateDrops
  time: 0.000; rss: 100MB	NoLandingPads
  time: 0.001; rss: 100MB	SimplifyCfg
  time: 0.001; rss: 100MB	InstCombine
  time: 0.001; rss: 100MB	Deaggregator
  time: 0.000; rss: 100MB	CopyPropagation
  time: 0.000; rss: 100MB	AddCallGuards
  time: 0.000; rss: 100MB	PreTrans
time: 0.025; rss: 100MB	Prepare MIR codegen passes
  time: 0.015; rss: 100MB	write metadata
  time: 0.186; rss: 206MB	translation item collection
  time: 0.003; rss: 206MB	codegen unit partitioning
  time: 0.003; rss: 227MB	internalize symbols
time: 0.480; rss: 217MB	translation
time: 0.000; rss: 217MB	assert dep graph
time: 0.000; rss: 217MB	serialize dep graph
  time: 0.025; rss: 112MB	llvm function passes [0]
  time: 0.056; rss: 117MB	llvm module passes [0]
  time: 0.624; rss: 123MB	codegen passes [0]
  time: 0.000; rss: 123MB	codegen passes [0]
time: 0.760; rss: 123MB	LLVM passes
time: 0.000; rss: 123MB	serialize work products
time: 0.077; rss: 93MB	linking
done
