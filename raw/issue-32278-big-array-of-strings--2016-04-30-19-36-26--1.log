commit a4b0481d1c21be290f587a85e8bb342b6d0b7093
Merge: 2a815a2 a4128e5
Author: bors <bors@rust-lang.org>
Date:   Sun May 1 12:59:25 2016 -0700

    Auto merge of #33317 - michaelwoerister:fix-partitioning-tests-race, r=alexcrichton
    
    Fix a race condition caused by concurrently executed codegen unit tests.
    
    This hopefully fixes issue #33315.
    
    This short-term solution just makes sure that every test uses its own directory so they can't get into conflict with each other.
    
    As a more long-term solution, I'd probably prefer to make the partitioning scheme specifiable via `-Ccodegen-units` (e.g. like `-Ccodegen-units=per-module`) so that we don't have to rely on `-Zincremental` in these test cases.
    
    r? @alexcrichton
rustc: ./issue-32278-big-array-of-strings
/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc big-array-of-strings.rs -Ztime-passes -Zinput-stats
time: 0.153; rss: 68MB	parsing
Lines of code:             65577
Pre-expansion node count:  65552
time: 0.011; rss: 68MB	configuration 1
time: 0.000; rss: 68MB	recursion limit
time: 0.000; rss: 68MB	crate injection
time: 0.004; rss: 73MB	macro loading
time: 0.000; rss: 73MB	plugin loading
time: 0.000; rss: 73MB	plugin registration
time: 0.042; rss: 78MB	expansion
time: 0.011; rss: 78MB	configuration 2
time: 0.000; rss: 78MB	gated configuration checking
time: 0.005; rss: 78MB	maybe building test harness
time: 0.005; rss: 78MB	prelude injection
time: 0.000; rss: 78MB	checking that all macro invocations are gone
time: 0.000; rss: 78MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 78MB	complete gated feature checking
time: 0.001; rss: 78MB	const fn bodies and arguments
Post-expansion node count: 65565
time: 0.007; rss: 78MB	assigning node ids
time: 0.001; rss: 78MB	collecting defs
time: 0.002; rss: 78MB	external crate/lib resolution
time: 0.009; rss: 91MB	lowering ast -> hir
time: 0.002; rss: 93MB	indexing hir
time: 0.001; rss: 93MB	attribute checking
time: 0.008; rss: 93MB	early lint checks
time: 0.001; rss: 81MB	language item collection
time: 0.002; rss: 84MB	name resolution
time: 0.001; rss: 84MB	lifetime resolution
time: 0.000; rss: 84MB	looking for entry point
time: 0.000; rss: 84MB	looking for plugin registrar
time: 0.008; rss: 90MB	region resolution
time: 0.001; rss: 90MB	loop checking
time: 0.002; rss: 90MB	static item recursion checking
time: 0.000; rss: 90MB	load_dep_graph
time: 0.000; rss: 90MB	type collecting
time: 0.000; rss: 90MB	variance inference
time: 0.006; rss: 100MB	coherence checking
time: 0.001; rss: 100MB	wf checking
time: 0.743; rss: 203MB	item-types checking
time: 0.000; rss: 203MB	item-bodies checking
time: 0.000; rss: 203MB	drop-impl checking
time: 0.020; rss: 205MB	const checking
time: 0.003; rss: 205MB	privacy checking
time: 0.000; rss: 205MB	stability index
time: 0.000; rss: 205MB	intrinsic checking
time: 0.000; rss: 205MB	effect checking
time: 0.000; rss: 205MB	match checking
time: 0.001; rss: 205MB	liveness checking
time: 0.000; rss: 205MB	rvalue checking
time: 0.001; rss: 205MB	MIR dump
time: 0.000; rss: 205MB	MIR passes
time: 0.001; rss: 205MB	borrow checking
time: 0.000; rss: 205MB	reachability checking
time: 0.001; rss: 205MB	death checking
time: 0.001; rss: 205MB	stability checking
time: 0.000; rss: 205MB	unused lib feature checking
time: 0.030; rss: 205MB	lint checking
time: 0.001; rss: 205MB	resolving dependency formats
time: 0.000; rss: 205MB	Prepare MIR codegen passes
  time: 0.001; rss: 206MB	translation item collection
  time: 0.000; rss: 206MB	codegen unit partitioning
  time: 0.000; rss: 213MB	write metadata
time: 0.084; rss: 213MB	translation
time: 0.000; rss: 213MB	assert dep graph
time: 0.000; rss: 213MB	serialize dep graph
  time: 0.003; rss: 88MB	llvm function passes [0]
  time: 0.000; rss: 88MB	llvm module passes [0]
  time: 0.161; rss: 89MB	codegen passes [0]
  time: 0.000; rss: 78MB	codegen passes [0]
time: 0.176; rss: 78MB	LLVM passes
  time: 0.180; rss: 78MB	running linker
time: 0.181; rss: 78MB	linking
done
