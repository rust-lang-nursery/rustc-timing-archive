commit a4b0481d1c21be290f587a85e8bb342b6d0b7093
Merge: 2a815a2 a4128e5
Author: bors <bors@rust-lang.org>
Date:   Sun May 1 12:59:25 2016 -0700

    Auto merge of #33317 - michaelwoerister:fix-partitioning-tests-race, r=alexcrichton
    
    Fix a race condition caused by concurrently executed codegen unit tests.
    
    This hopefully fixes issue #33315.
    
    This short-term solution just makes sure that every test uses its own directory so they can't get into conflict with each other.
    
    As a more long-term solution, I'd probably prefer to make the partitioning scheme specifiable via `-Ccodegen-units` (e.g. like `-Ccodegen-units=per-module`) so that we don't have to rely on `-Zincremental` in these test cases.
    
    r? @alexcrichton
rustc: ./helloworld
/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc hello.rs -Ztime-passes -Zinput-stats
time: 0.000; rss: 44MB	parsing
Lines of code:             3
Pre-expansion node count:  8
time: 0.000; rss: 44MB	configuration 1
time: 0.000; rss: 44MB	recursion limit
time: 0.000; rss: 44MB	crate injection
time: 0.003; rss: 51MB	macro loading
time: 0.000; rss: 51MB	plugin loading
time: 0.000; rss: 51MB	plugin registration
time: 0.001; rss: 51MB	expansion
time: 0.000; rss: 51MB	configuration 2
time: 0.000; rss: 51MB	gated configuration checking
time: 0.000; rss: 51MB	maybe building test harness
time: 0.000; rss: 51MB	prelude injection
time: 0.000; rss: 51MB	checking that all macro invocations are gone
time: 0.000; rss: 51MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 51MB	complete gated feature checking
time: 0.000; rss: 51MB	const fn bodies and arguments
Post-expansion node count: 68
time: 0.000; rss: 51MB	assigning node ids
time: 0.000; rss: 51MB	collecting defs
time: 0.001; rss: 51MB	external crate/lib resolution
time: 0.000; rss: 55MB	lowering ast -> hir
time: 0.000; rss: 55MB	indexing hir
time: 0.000; rss: 55MB	attribute checking
time: 0.000; rss: 55MB	early lint checks
time: 0.000; rss: 55MB	language item collection
time: 0.001; rss: 59MB	name resolution
time: 0.000; rss: 59MB	lifetime resolution
time: 0.000; rss: 59MB	looking for entry point
time: 0.000; rss: 59MB	looking for plugin registrar
time: 0.000; rss: 59MB	region resolution
time: 0.000; rss: 59MB	loop checking
time: 0.000; rss: 59MB	static item recursion checking
time: 0.000; rss: 59MB	load_dep_graph
time: 0.000; rss: 59MB	type collecting
time: 0.000; rss: 59MB	variance inference
time: 0.005; rss: 67MB	coherence checking
time: 0.000; rss: 67MB	wf checking
time: 0.000; rss: 67MB	item-types checking
time: 0.000; rss: 71MB	item-bodies checking
time: 0.000; rss: 71MB	drop-impl checking
time: 0.000; rss: 71MB	const checking
time: 0.000; rss: 71MB	privacy checking
time: 0.000; rss: 71MB	stability index
time: 0.000; rss: 71MB	intrinsic checking
time: 0.000; rss: 71MB	effect checking
time: 0.000; rss: 71MB	match checking
time: 0.000; rss: 71MB	liveness checking
time: 0.000; rss: 71MB	rvalue checking
time: 0.000; rss: 71MB	MIR dump
time: 0.000; rss: 71MB	MIR passes
time: 0.000; rss: 71MB	borrow checking
time: 0.000; rss: 71MB	reachability checking
time: 0.000; rss: 71MB	death checking
time: 0.000; rss: 71MB	stability checking
time: 0.000; rss: 71MB	unused lib feature checking
time: 0.000; rss: 71MB	lint checking
time: 0.001; rss: 71MB	resolving dependency formats
time: 0.000; rss: 71MB	Prepare MIR codegen passes
  time: 0.000; rss: 71MB	translation item collection
  time: 0.000; rss: 71MB	codegen unit partitioning
  time: 0.000; rss: 79MB	write metadata
time: 0.006; rss: 79MB	translation
time: 0.000; rss: 79MB	assert dep graph
time: 0.000; rss: 79MB	serialize dep graph
  time: 0.000; rss: 79MB	llvm function passes [0]
  time: 0.000; rss: 79MB	llvm module passes [0]
  time: 0.001; rss: 84MB	codegen passes [0]
  time: 0.000; rss: 84MB	codegen passes [0]
time: 0.002; rss: 84MB	LLVM passes
  time: 0.103; rss: 84MB	running linker
time: 0.104; rss: 84MB	linking
done
