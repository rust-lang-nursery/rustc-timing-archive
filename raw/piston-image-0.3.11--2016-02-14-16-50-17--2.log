commit a888333ea6acad7e289fa3f0f9e6c1058aa2a011
Merge: 9b367d9 e3b414d
Author: bors <bors@rust-lang.org>
Date:   Sun Feb 14 21:24:45 2016 +0000

    Auto merge of #31460 - alexcrichton:supafast-rustc, r=brson
    
    Looking at some profiles of rustc recently, these seemed like two pretty easy wins we could get in terms of performance on the table.
rustc: ./piston-image-0.3.11
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling image v0.3.11 (file:///root/benchmarks/piston-image-0.3.11)
time: 0.064; rss: 43MB	parsing
Lines of code:             10676
Pre-expansion node count:  84646
time: 0.017; rss: 44MB	configuration 1
time: 0.000; rss: 44MB	recursion limit
time: 0.001; rss: 44MB	gated macro checking
time: 0.000; rss: 44MB	crate injection
time: 0.005; rss: 49MB	macro loading
time: 0.000; rss: 49MB	plugin loading
time: 0.000; rss: 49MB	plugin registration
time: 0.135; rss: 53MB	expansion
time: 0.004; rss: 53MB	complete gated feature checking 1
time: 0.027; rss: 53MB	configuration 2
time: 0.000; rss: 53MB	gated configuration checking
time: 0.013; rss: 53MB	maybe building test harness
time: 0.012; rss: 53MB	prelude injection
time: 0.001; rss: 53MB	checking that all macro invocations are gone
time: 0.000; rss: 53MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 53MB	complete gated feature checking 2
time: 0.001; rss: 53MB	const fn bodies and arguments
Post-expansion node count: 144338
time: 0.012; rss: 53MB	assigning node ids
time: 0.030; rss: 65MB	lowering ast -> hir
time: 0.008; rss: 67MB	indexing hir
time: 0.000; rss: 67MB	attribute checking
time: 0.012; rss: 67MB	early lint checks
time: 0.003; rss: 59MB	external crate/lib resolution
time: 0.001; rss: 59MB	language item collection
time: 0.033; rss: 75MB	resolution
time: 0.002; rss: 75MB	lifetime resolution
time: 0.000; rss: 75MB	looking for entry point
time: 0.000; rss: 75MB	looking for plugin registrar
time: 0.017; rss: 80MB	region resolution
time: 0.001; rss: 80MB	loop checking
time: 0.001; rss: 80MB	static item recursion checking
time: 0.010; rss: 84MB	type collecting
time: 0.000; rss: 84MB	variance inference
time: 0.030; rss: 101MB	coherence checking
time: 0.149; rss: 105MB	wf checking
time: 0.049; rss: 107MB	item-types checking
time: 1.621; rss: 136MB	item-bodies checking
time: 0.000; rss: 136MB	drop-impl checking
time: 0.070; rss: 137MB	const checking
time: 0.012; rss: 137MB	privacy checking
time: 0.001; rss: 137MB	stability index
time: 0.010; rss: 137MB	intrinsic checking
time: 0.003; rss: 137MB	effect checking
time: 0.024; rss: 137MB	match checking
time: 0.110; rss: 145MB	MIR dump
time: 0.000; rss: 145MB	MIR passes
time: 0.011; rss: 146MB	liveness checking
time: 0.149; rss: 146MB	borrow checking
time: 0.074; rss: 146MB	rvalue checking
time: 0.003; rss: 146MB	reachability checking
time: 0.009; rss: 146MB	death checking
time: 0.009; rss: 146MB	stability checking
time: 0.000; rss: 146MB	unused lib feature checking
time: 0.085; rss: 146MB	lint checking
time: 0.000; rss: 146MB	resolving dependency formats
time: 0.011; rss: 147MB	erasing regions from MIR
  time: 1.269; rss: 164MB	translation item collection
  time: 0.231; rss: 248MB	write metadata
time: 3.810; rss: 248MB	translation
  time: 0.094; rss: 157MB	llvm function passes [0]
  time: 0.041; rss: 159MB	llvm module passes [0]
  time: 1.688; rss: 163MB	codegen passes [0]
  time: 0.001; rss: 114MB	codegen passes [0]
time: 2.014; rss: 113MB	LLVM passes
time: 0.151; rss: 114MB	linking
done
