commit ec872dc8a3f008299ca1508105ee064d1f0f0367
Merge: 39a523b e252865
Author: bors <bors@rust-lang.org>
Date:   Tue Jun 7 14:45:39 2016 -0700

    Auto merge of #34141 - eddyb:trans-abi-memcpy, r=nikomatsakis
    
    trans: always use a memcpy for ABI argument/return casts.
    
    When storing incoming arguments or values returned by call/invoke, always do a `memcpy` from a temporary of the cast type, if there is an ABI cast.
    While Clang has gotten smarter ([store](https://godbolt.org/g/EphFuK) vs [memcpy](https://godbolt.org/g/5dikH9)), a `memcpy` will always work.
    This is what @dotdash has wanted to do all along, and it fixes #32049.
rustc: ./rust-encoding.0.2.32
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling encoding v0.2.32 (file:///root/benchmarks/rust-encoding.0.2.32)
time: 0.025; rss: 50MB	parsing
Lines of code:             6441
Pre-expansion node count:  30015
time: 0.003; rss: 50MB	configuration 1
time: 0.000; rss: 55MB	recursion limit
time: 0.000; rss: 55MB	crate injection
time: 0.018; rss: 88MB	macro loading
time: 0.000; rss: 88MB	plugin loading
time: 0.000; rss: 88MB	plugin registration
time: 0.046; rss: 91MB	expansion
time: 0.000; rss: 91MB	gated configuration checking
time: 0.003; rss: 91MB	maybe building test harness
time: 0.003; rss: 91MB	prelude injection
time: 0.000; rss: 91MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 91MB	complete gated feature checking
Post-expansion node count: 40773
time: 0.003; rss: 91MB	assigning node ids
time: 0.001; rss: 92MB	collecting defs
time: 0.001; rss: 92MB	external crate/lib resolution
time: 0.002; rss: 92MB	early lint checks
time: 0.000; rss: 92MB	AST validation
time: 0.007; rss: 94MB	name resolution
time: 0.005; rss: 97MB	lowering ast -> hir
time: 0.000; rss: 97MB	indexing hir
time: 0.000; rss: 97MB	attribute checking
time: 0.000; rss: 95MB	language item collection
time: 0.001; rss: 95MB	lifetime resolution
time: 0.000; rss: 95MB	looking for entry point
time: 0.000; rss: 95MB	looking for plugin registrar
time: 0.002; rss: 97MB	region resolution
time: 0.000; rss: 97MB	loop checking
time: 0.000; rss: 97MB	static item recursion checking
time: 0.000; rss: 97MB	load_dep_graph
time: 0.012; rss: 100MB	type collecting
time: 0.000; rss: 100MB	variance inference
time: 0.022; rss: 102MB	coherence checking
time: 0.024; rss: 104MB	wf checking
time: 0.015; rss: 104MB	item-types checking
time: 0.219; rss: 113MB	item-bodies checking
time: 0.000; rss: 113MB	drop-impl checking
time: 0.013; rss: 113MB	const checking
time: 0.002; rss: 113MB	privacy checking
time: 0.000; rss: 113MB	stability index
time: 0.002; rss: 113MB	intrinsic checking
time: 0.000; rss: 113MB	effect checking
time: 0.007; rss: 113MB	match checking
time: 0.001; rss: 113MB	liveness checking
time: 0.008; rss: 113MB	rvalue checking
time: 0.023; rss: 119MB	MIR dump
time: 0.015; rss: 119MB	MIR passes
time: 0.025; rss: 119MB	borrow checking
time: 0.000; rss: 119MB	reachability checking
time: 0.002; rss: 119MB	death checking
time: 0.002; rss: 119MB	stability checking
time: 0.000; rss: 119MB	unused lib feature checking
time: 0.024; rss: 119MB	lint checking
time: 0.000; rss: 119MB	resolving dependency formats
time: 0.026; rss: 119MB	Prepare MIR codegen passes
  time: 0.058; rss: 123MB	write metadata
  time: 0.028; rss: 125MB	translation item collection
  time: 0.001; rss: 125MB	codegen unit partitioning
time: 0.363; rss: 159MB	translation
time: 0.000; rss: 159MB	assert dep graph
time: 0.000; rss: 159MB	serialize dep graph
  time: 0.027; rss: 120MB	llvm function passes [0]
  time: 0.050; rss: 124MB	llvm module passes [0]
  time: 0.583; rss: 128MB	codegen passes [0]
  time: 0.001; rss: 113MB	codegen passes [0]
time: 0.726; rss: 112MB	LLVM passes
time: 0.053; rss: 110MB	linking
done
