commit 0a3180baab7c361ee85958c88d971190649c3b70
Merge: a0b4e67 63f0c4d
Author: bors <bors@rust-lang.org>
Date:   Wed Aug 3 13:24:53 2016 -0700

    Auto merge of #35261 - eddyb:llvm-autoupgrade, r=nikomatsakis
    
    Support removed LLVM intrinsics by invoking its AutoUpgrade mechanism.
    
    Turns out that LLVM sometimes renames platform intrinsics or replaces them with first-class instructions.
    For example, signed minimum became `select (icmp SLT, a, b), a, b` where `a` and `b` are vectors.
    
    This is blocking the Servo rustup ([relevant failure](http://build.servo.org/builders/windows-dev/builds/226/steps/compile/logs/stdio)), as they're using a few such intrinsics.
    The fix in this PR is to invoke LLVM's own `AutoUpgrade` mechanism to do the replacements.
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.031; rss: 52MB	parsing
Lines of code:             9154
Pre-expansion node count:  44838
time: 0.005; rss: 56MB	configuration
time: 0.000; rss: 56MB	recursion limit
time: 0.000; rss: 56MB	crate injection
time: 0.000; rss: 56MB	plugin loading
time: 0.000; rss: 56MB	plugin registration
time: 0.115; rss: 96MB	expansion
time: 0.000; rss: 96MB	maybe building test harness
time: 0.008; rss: 96MB	assigning node ids
Post-expansion node count: 101581
time: 0.000; rss: 96MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 96MB	complete gated feature checking
time: 0.003; rss: 96MB	collecting defs
time: 0.011; rss: 107MB	external crate/lib resolution
time: 0.006; rss: 107MB	early lint checks
time: 0.001; rss: 107MB	AST validation
time: 0.018; rss: 112MB	name resolution
time: 0.010; rss: 120MB	lowering ast -> hir
time: 0.002; rss: 122MB	indexing hir
time: 0.001; rss: 122MB	attribute checking
time: 0.001; rss: 115MB	language item collection
time: 0.002; rss: 115MB	lifetime resolution
time: 0.000; rss: 115MB	looking for entry point
time: 0.000; rss: 115MB	looking for plugin registrar
time: 0.006; rss: 120MB	region resolution
time: 0.001; rss: 120MB	loop checking
time: 0.000; rss: 120MB	static item recursion checking
time: 0.000; rss: 120MB	load_dep_graph
time: 0.031; rss: 121MB	type collecting
time: 0.000; rss: 121MB	variance inference
time: 0.048; rss: 128MB	coherence checking
time: 0.096; rss: 131MB	wf checking
time: 0.036; rss: 131MB	item-types checking
time: 0.524; rss: 142MB	item-bodies checking
time: 0.000; rss: 142MB	drop-impl checking
time: 0.045; rss: 144MB	const checking
time: 0.009; rss: 144MB	privacy checking
time: 0.001; rss: 144MB	stability index
time: 0.006; rss: 144MB	intrinsic checking
time: 0.002; rss: 144MB	effect checking
time: 0.014; rss: 144MB	match checking
time: 0.005; rss: 144MB	liveness checking
time: 0.031; rss: 144MB	rvalue checking
time: 0.062; rss: 155MB	MIR dump
time: 0.044; rss: 155MB	MIR passes
time: 0.072; rss: 155MB	borrow checking
time: 0.003; rss: 155MB	reachability checking
time: 0.005; rss: 155MB	death checking
time: 0.005; rss: 155MB	stability checking
time: 0.000; rss: 155MB	unused lib feature checking
time: 0.053; rss: 155MB	lint checking
time: 0.000; rss: 155MB	resolving dependency formats
time: 0.094; rss: 159MB	Prepare MIR codegen passes
  time: 0.129; rss: 163MB	write metadata
  time: 0.185; rss: 166MB	translation item collection
  time: 0.021; rss: 171MB	codegen unit partitioning
  time: 0.036; rss: 289MB	internalize symbols
time: 1.577; rss: 289MB	translation
time: 0.001; rss: 289MB	assert dep graph
time: 0.000; rss: 289MB	serialize dep graph
  time: 0.089; rss: 175MB	llvm function passes [0]
  time: 0.046; rss: 175MB	llvm module passes [0]
  time: 1.587; rss: 178MB	codegen passes [0]
  time: 0.001; rss: 177MB	codegen passes [0]
time: 1.857; rss: 177MB	LLVM passes
time: 0.149; rss: 128MB	linking
done
