commit a29c49f5cca849cd5ac79b3cd70b934bb33cf4e6
Merge: 0b2c356 f5827d0
Author: bors <bors@rust-lang.org>
Date:   Tue Oct 11 23:36:29 2016 -0700

    Auto merge of #37095 - petrochenkov:metactor, r=alexcrichton
    
    Temporary fix for metadata decoding for struct constructors
    
    Same as https://github.com/rust-lang/rust/pull/37078, but for nightly.
    Ideally, metadata lookup functions should "just work" for constructor ids, but this fixes the issue as well.
    
    Fixes https://github.com/rust-lang/rust/issues/37026
    r? @alexcrichton
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.041; rss: 46MB	parsing
Lines of code:             9003
Pre-expansion node count:  44129
time: 0.000; rss: 46MB	recursion limit
time: 0.000; rss: 46MB	crate injection
time: 0.000; rss: 46MB	plugin loading
time: 0.000; rss: 46MB	plugin registration
time: 0.120; rss: 81MB	expansion
time: 0.000; rss: 81MB	maybe building test harness
time: 0.001; rss: 81MB	maybe creating a macro crate
Post-expansion node count: 101371
time: 0.000; rss: 81MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 81MB	complete gated feature checking
time: 0.004; rss: 81MB	early lint checks
time: 0.001; rss: 81MB	AST validation
time: 0.024; rss: 85MB	name resolution
time: 0.017; rss: 91MB	lowering ast -> hir
time: 0.004; rss: 92MB	indexing hir
time: 0.001; rss: 92MB	attribute checking
time: 0.001; rss: 85MB	language item collection
time: 0.002; rss: 85MB	lifetime resolution
time: 0.000; rss: 85MB	looking for entry point
time: 0.000; rss: 85MB	looking for plugin registrar
time: 0.011; rss: 88MB	region resolution
time: 0.001; rss: 88MB	loop checking
time: 0.001; rss: 88MB	static item recursion checking
time: 0.040; rss: 88MB	compute_incremental_hashes_map
time: 0.000; rss: 88MB	load_dep_graph
time: 0.017; rss: 90MB	type collecting
time: 0.000; rss: 90MB	variance inference
time: 0.034; rss: 94MB	coherence checking
time: 0.053; rss: 95MB	wf checking
time: 0.021; rss: 96MB	item-types checking
time: 0.371; rss: 105MB	item-bodies checking
time: 0.000; rss: 105MB	drop-impl checking
time: 0.039; rss: 106MB	const checking
time: 0.010; rss: 106MB	privacy checking
time: 0.001; rss: 106MB	stability index
time: 0.004; rss: 106MB	intrinsic checking
time: 0.002; rss: 106MB	effect checking
time: 0.009; rss: 106MB	match checking
time: 0.005; rss: 106MB	liveness checking
time: 0.025; rss: 106MB	rvalue checking
time: 0.079; rss: 124MB	MIR dump
  time: 0.007; rss: 125MB	SimplifyCfg
  time: 0.012; rss: 125MB	QualifyAndPromoteConstants
  time: 0.014; rss: 125MB	TypeckMir
  time: 0.001; rss: 125MB	SimplifyBranches
  time: 0.004; rss: 125MB	SimplifyCfg
time: 0.038; rss: 125MB	MIR passes
time: 0.064; rss: 125MB	borrow checking
time: 0.003; rss: 125MB	reachability checking
time: 0.006; rss: 126MB	death checking
time: 0.006; rss: 126MB	stability checking
time: 0.000; rss: 126MB	unused lib feature checking
time: 0.042; rss: 126MB	lint checking
time: 0.000; rss: 126MB	resolving dependency formats
  time: 0.001; rss: 126MB	NoLandingPads
  time: 0.003; rss: 126MB	SimplifyCfg
  time: 0.014; rss: 127MB	EraseRegions
  time: 0.001; rss: 127MB	AddCallGuards
  time: 0.053; rss: 129MB	ElaborateDrops
  time: 0.001; rss: 129MB	NoLandingPads
  time: 0.005; rss: 129MB	SimplifyCfg
  time: 0.004; rss: 129MB	InstCombine
  time: 0.003; rss: 129MB	Deaggregator
  time: 0.001; rss: 129MB	CopyPropagation
  time: 0.001; rss: 129MB	AddCallGuards
  time: 0.000; rss: 129MB	PreTrans
time: 0.087; rss: 129MB	Prepare MIR codegen passes
  time: 0.048; rss: 132MB	write metadata
  time: 0.154; rss: 138MB	translation item collection
  time: 0.019; rss: 141MB	codegen unit partitioning
  time: 0.017; rss: 195MB	internalize symbols
time: 1.240; rss: 183MB	translation
time: 0.000; rss: 183MB	assert dep graph
time: 0.000; rss: 183MB	serialize dep graph
  time: 0.087; rss: 142MB	llvm function passes [0]
  time: 0.042; rss: 144MB	llvm module passes [0]
  time: 1.630; rss: 149MB	codegen passes [0]
  time: 0.001; rss: 148MB	codegen passes [0]
time: 1.930; rss: 148MB	LLVM passes
time: 0.000; rss: 148MB	serialize work products
time: 0.158; rss: 90MB	linking
done
