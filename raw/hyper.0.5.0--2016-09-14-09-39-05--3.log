commit 97b561a0944141a02a0cebe577c3c69e436abcf4
Merge: 739d571 8154a6b
Author: bors <bors@rust-lang.org>
Date:   Wed Sep 14 04:57:47 2016 -0700

    Auto merge of #35667 - ollie27:rustdoc_opaque_structs, r=steveklabnik
    
    rustdoc: Don't add extra newlines for fully opaque structs
    
    Changes the definition for braced structs with only private or hidden fields to save space on the page.
    
    Before:
    ```
    pub struct Vec<T> {
        // some fields omitted
    }
    ```
    After:
    ```
    pub struct Vec<T> { /* fields omitted */ }
    ```
    
    This also cleans up empty braced structs.
    
    Before:
    ```
    pub struct Foo {
    }
    ```
    After:
    ```
    pub struct Foo {}
    ```
    
    [before](https://doc.rust-lang.org/nightly/std/vec/struct.Vec.html) [after](https://ollie27.github.io/rust_doc_test/std/vec/struct.Vec.html)
    
    cc #34713
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.027; rss: 51MB	parsing
Lines of code:             9154
Pre-expansion node count:  44873
time: 0.000; rss: 51MB	recursion limit
time: 0.000; rss: 51MB	crate injection
time: 0.000; rss: 51MB	plugin loading
time: 0.000; rss: 51MB	plugin registration
time: 0.094; rss: 79MB	expansion
time: 0.000; rss: 79MB	maybe building test harness
time: 0.001; rss: 79MB	maybe creating a macro crate
time: 0.005; rss: 79MB	assigning node ids
Post-expansion node count: 101537
time: 0.000; rss: 79MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 79MB	complete gated feature checking
time: 0.003; rss: 81MB	collecting defs
time: 0.009; rss: 87MB	external crate/lib resolution
time: 0.003; rss: 87MB	early lint checks
time: 0.001; rss: 87MB	AST validation
time: 0.016; rss: 95MB	name resolution
time: 0.008; rss: 100MB	lowering ast -> hir
time: 0.002; rss: 102MB	indexing hir
time: 0.001; rss: 102MB	attribute checking
time: 0.001; rss: 95MB	language item collection
time: 0.002; rss: 95MB	lifetime resolution
time: 0.000; rss: 95MB	looking for entry point
time: 0.000; rss: 95MB	looking for plugin registrar
time: 0.006; rss: 100MB	region resolution
time: 0.001; rss: 100MB	loop checking
time: 0.001; rss: 100MB	static item recursion checking
time: 0.041; rss: 101MB	compute_incremental_hashes_map
time: 0.000; rss: 101MB	load_dep_graph
time: 0.023; rss: 102MB	type collecting
time: 0.000; rss: 102MB	variance inference
time: 0.035; rss: 106MB	coherence checking
time: 0.056; rss: 107MB	wf checking
time: 0.029; rss: 108MB	item-types checking
time: 0.362; rss: 118MB	item-bodies checking
time: 0.000; rss: 118MB	drop-impl checking
time: 0.037; rss: 121MB	const checking
time: 0.006; rss: 121MB	privacy checking
time: 0.001; rss: 121MB	stability index
time: 0.005; rss: 121MB	intrinsic checking
time: 0.002; rss: 121MB	effect checking
time: 0.013; rss: 121MB	match checking
time: 0.005; rss: 121MB	liveness checking
time: 0.027; rss: 121MB	rvalue checking
time: 0.053; rss: 137MB	MIR dump
  time: 0.007; rss: 139MB	SimplifyCfg
  time: 0.013; rss: 139MB	QualifyAndPromoteConstants
  time: 0.016; rss: 139MB	TypeckMir
  time: 0.001; rss: 139MB	SimplifyBranches
  time: 0.004; rss: 139MB	SimplifyCfg
time: 0.040; rss: 139MB	MIR passes
time: 0.062; rss: 139MB	borrow checking
time: 0.003; rss: 139MB	reachability checking
time: 0.005; rss: 139MB	death checking
time: 0.005; rss: 139MB	stability checking
time: 0.000; rss: 139MB	unused lib feature checking
time: 0.041; rss: 139MB	lint checking
time: 0.000; rss: 139MB	resolving dependency formats
  time: 0.001; rss: 139MB	NoLandingPads
  time: 0.003; rss: 139MB	SimplifyCfg
  time: 0.008; rss: 139MB	EraseRegions
  time: 0.001; rss: 139MB	AddCallGuards
  time: 0.054; rss: 141MB	ElaborateDrops
  time: 0.001; rss: 141MB	NoLandingPads
  time: 0.005; rss: 141MB	SimplifyCfg
  time: 0.003; rss: 141MB	Deaggregator
  time: 0.001; rss: 141MB	AddCallGuards
  time: 0.000; rss: 141MB	PreTrans
time: 0.077; rss: 141MB	Prepare MIR codegen passes
  time: 0.054; rss: 145MB	write metadata
  time: 0.111; rss: 151MB	translation item collection
  time: 0.019; rss: 154MB	codegen unit partitioning
  time: 0.032; rss: 216MB	internalize symbols
time: 1.367; rss: 207MB	translation
time: 0.000; rss: 207MB	assert dep graph
time: 0.000; rss: 207MB	serialize dep graph
  time: 0.103; rss: 158MB	llvm function passes [0]
  time: 0.049; rss: 159MB	llvm module passes [0]
  time: 1.851; rss: 164MB	codegen passes [0]
  time: 0.001; rss: 165MB	codegen passes [0]
time: 2.168; rss: 165MB	LLVM passes
time: 0.000; rss: 165MB	serialize work products
time: 0.161; rss: 99MB	linking
done
