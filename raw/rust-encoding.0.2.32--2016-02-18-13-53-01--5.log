commit 6b076c2daa36d80c103812c1775cf099ea8ef0bf
Merge: 8e2a577 90afb85
Author: bors <bors@rust-lang.org>
Date:   Thu Feb 18 16:29:55 2016 +0000

    Auto merge of #31734 - aliclark:bsd-stat-fixes, r=alexcrichton
    
    In https://github.com/rust-lang/rust/issues/25155 the os::freebsd::raw stat was split for the x86 vs. x86-64 cases, which appears to have been done to implement the padding on the end of struct stat for the x86 case (the struct is otherwise the same notwistanding the size of long).
    
    This PR de-duplicates the struct using #[cfg(target_arch = "x86")] for the __unused field, which also fixes the definitions which had sinced changed with the LFS work d088b671872f1df6993ccca6fa6139ebed0a8cf3.
    
    Also changed definitions to c_long for dragonfly and freebsd where appropriate.
    
    Also removes some unused imports that the compiler was complaining about.
    
    dragonfly's long time_t:
    https://gitweb.dragonflybsd.org/dragonfly.git/blob/a2a57c243ff8016578bc559f8603fb25bbcf1768:/lib/libstand/machine/stdint.h
    
    freebsd's long time_t:
    https://svnweb.freebsd.org/base/release/10.1.0/sys/x86/include/_types.h?view=markup
    https://github.com/rust-lang/rust/blob/d088b671872f1df6993ccca6fa6139ebed0a8cf3/src/liblibc/lib.rs#L980
    
    freebsd's padding for i686 stat:
    https://svnweb.freebsd.org/base/release/10.1.0/sys/sys/stat.h?view=markup#l139
    https://github.com/rust-lang/rust/blob/d088b671872f1df6993ccca6fa6139ebed0a8cf3/src/liblibc/lib.rs#L1038
rustc: ./rust-encoding.0.2.32
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling encoding v0.2.32 (file:///root/benchmarks/rust-encoding.0.2.32)
time: 0.023; rss: 42MB	parsing
Lines of code:             6441
Pre-expansion node count:  30335
time: 0.006; rss: 42MB	configuration 1
time: 0.000; rss: 42MB	recursion limit
time: 0.000; rss: 42MB	gated macro checking
time: 0.000; rss: 42MB	crate injection
time: 0.003; rss: 45MB	macro loading
time: 0.000; rss: 45MB	plugin loading
time: 0.000; rss: 45MB	plugin registration
time: 0.045; rss: 47MB	expansion
time: 0.001; rss: 47MB	complete gated feature checking 1
time: 0.008; rss: 47MB	configuration 2
time: 0.000; rss: 47MB	gated configuration checking
time: 0.004; rss: 47MB	maybe building test harness
time: 0.004; rss: 47MB	prelude injection
time: 0.000; rss: 47MB	checking that all macro invocations are gone
time: 0.000; rss: 47MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 47MB	complete gated feature checking 2
time: 0.000; rss: 47MB	const fn bodies and arguments
Post-expansion node count: 41783
time: 0.003; rss: 47MB	assigning node ids
time: 0.004; rss: 51MB	lowering ast -> hir
time: 0.001; rss: 51MB	indexing hir
time: 0.000; rss: 51MB	attribute checking
time: 0.003; rss: 51MB	early lint checks
time: 0.001; rss: 50MB	external crate/lib resolution
time: 0.000; rss: 50MB	language item collection
time: 0.007; rss: 57MB	resolution
time: 0.000; rss: 57MB	lifetime resolution
time: 0.000; rss: 57MB	looking for entry point
time: 0.000; rss: 57MB	looking for plugin registrar
time: 0.002; rss: 58MB	region resolution
time: 0.000; rss: 58MB	loop checking
time: 0.000; rss: 58MB	static item recursion checking
time: 0.005; rss: 60MB	type collecting
time: 0.000; rss: 60MB	variance inference
time: 0.020; rss: 77MB	coherence checking
time: 0.018; rss: 77MB	wf checking
time: 0.012; rss: 78MB	item-types checking
time: 0.177; rss: 87MB	item-bodies checking
time: 0.000; rss: 87MB	drop-impl checking
time: 0.011; rss: 87MB	const checking
time: 0.003; rss: 87MB	privacy checking
time: 0.000; rss: 87MB	stability index
time: 0.001; rss: 87MB	intrinsic checking
time: 0.000; rss: 87MB	effect checking
time: 0.006; rss: 87MB	match checking
time: 0.018; rss: 94MB	MIR dump
time: 0.000; rss: 94MB	MIR passes
time: 0.002; rss: 94MB	liveness checking
time: 0.021; rss: 94MB	borrow checking
time: 0.006; rss: 94MB	rvalue checking
time: 0.000; rss: 94MB	reachability checking
time: 0.002; rss: 94MB	death checking
time: 0.002; rss: 94MB	stability checking
time: 0.000; rss: 94MB	unused lib feature checking
time: 0.018; rss: 94MB	lint checking
time: 0.000; rss: 94MB	resolving dependency formats
time: 0.002; rss: 94MB	erasing regions from MIR
  time: 0.024; rss: 105MB	translation item collection
  time: 0.056; rss: 137MB	write metadata
time: 0.312; rss: 137MB	translation
  time: 0.027; rss: 104MB	llvm function passes [0]
  time: 0.049; rss: 107MB	llvm module passes [0]
  time: 0.569; rss: 113MB	codegen passes [0]
  time: 0.001; rss: 98MB	codegen passes [0]
time: 0.711; rss: 97MB	LLVM passes
time: 0.051; rss: 95MB	linking
done
