commit 34af2de4096b3b1c5d3a5b70171c6e27822aaefb
Merge: 6dc112d a0f96d6
Author: bors <bors@rust-lang.org>
Date:   Fri Feb 5 20:13:25 2016 +0000

    Auto merge of #31304 - nikomatsakis:incr-comp-read-from-hir-map, r=michaelwoerister
    
    This change also modifies the dep graph infrastructure to keep track of the number of active tasks, so that even if we are not building the full dep-graph, we still get assertions when there is no active task and one does something that would add a read/write edge. This is particularly helpful since, if the assertions are *not* active, you wind up with the error happening in the message processing thread, which is too late to know the correct backtrace.
    
    ~~Before landing, I need to do some performance measurements. Those are underway.~~
    
    See measurements below. No real effect on time.
    
    r? @michaelwoerister
rustc: ./piston-image-0.3.11
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling image v0.3.11 (file:///root/benchmarks/piston-image-0.3.11)
time: 0.044; rss: 47MB	parsing
Lines of code:             10676
Pre-expansion node count:  84646
time: 0.016; rss: 47MB	configuration 1
time: 0.000; rss: 47MB	recursion limit
time: 0.001; rss: 47MB	gated macro checking
time: 0.000; rss: 47MB	crate injection
time: 0.004; rss: 52MB	macro loading
time: 0.000; rss: 52MB	plugin loading
time: 0.000; rss: 52MB	plugin registration
time: 0.121; rss: 56MB	expansion
time: 0.004; rss: 56MB	complete gated feature checking 1
time: 0.026; rss: 56MB	configuration 2
time: 0.000; rss: 56MB	gated configuration checking
time: 0.013; rss: 56MB	maybe building test harness
time: 0.012; rss: 56MB	prelude injection
time: 0.001; rss: 56MB	checking that all macro invocations are gone
time: 0.000; rss: 56MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 56MB	complete gated feature checking 2
Post-expansion node count: 144338
time: 0.012; rss: 56MB	assigning node ids
time: 0.020; rss: 69MB	lowering ast -> hir
time: 0.006; rss: 71MB	indexing hir
time: 0.000; rss: 71MB	attribute checking
time: 0.009; rss: 71MB	early lint checks
time: 0.003; rss: 62MB	external crate/lib resolution
time: 0.001; rss: 62MB	language item collection
time: 0.029; rss: 78MB	resolution
time: 0.003; rss: 78MB	lifetime resolution
time: 0.000; rss: 78MB	looking for entry point
time: 0.000; rss: 78MB	looking for plugin registrar
time: 0.011; rss: 87MB	region resolution
time: 0.001; rss: 87MB	loop checking
time: 0.001; rss: 87MB	static item recursion checking
time: 0.011; rss: 91MB	type collecting
time: 0.000; rss: 91MB	variance inference
time: 0.030; rss: 108MB	coherence checking
time: 0.143; rss: 111MB	wf checking
time: 0.051; rss: 114MB	item-types checking
time: 1.661; rss: 144MB	item-bodies checking
time: 0.000; rss: 144MB	drop-impl checking
time: 0.074; rss: 145MB	const checking
time: 0.012; rss: 145MB	privacy checking
time: 0.001; rss: 145MB	stability index
time: 0.010; rss: 145MB	intrinsic checking
time: 0.003; rss: 145MB	effect checking
time: 0.025; rss: 145MB	match checking
time: 0.094; rss: 154MB	MIR dump
time: 0.011; rss: 156MB	liveness checking
time: 0.152; rss: 156MB	borrow checking
time: 0.078; rss: 156MB	rvalue checking
time: 0.003; rss: 156MB	reachability checking
time: 0.008; rss: 156MB	death checking
time: 0.010; rss: 156MB	stability checking
time: 0.000; rss: 156MB	unused lib feature checking
time: 0.082; rss: 156MB	lint checking
time: 0.000; rss: 156MB	resolving dependency formats
time: 0.008; rss: 158MB	erasing regions from MIR
  time: 0.213; rss: 281MB	write metadata
time: 2.859; rss: 274MB	translation
  time: 0.101; rss: 165MB	llvm function passes [0]
  time: 0.042; rss: 165MB	llvm module passes [0]
  time: 1.738; rss: 214MB	codegen passes [0]
  time: 0.001; rss: 181MB	codegen passes [0]
time: 2.088; rss: 181MB	LLVM passes
time: 0.149; rss: 180MB	linking
done
