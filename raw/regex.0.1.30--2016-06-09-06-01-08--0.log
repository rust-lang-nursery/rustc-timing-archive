commit 24526cc3cc53cecb6e73275ae96b4e698b305931
Merge: dc77c5e 970e15d
Author: bors <bors@rust-lang.org>
Date:   Thu Jun 9 01:35:26 2016 -0700

    Auto merge of #34108 - jseyfried:refactor_prelude_injection, r=nrc
    
    Refactor away the prelude injection fold
    
    Instead, just inject `#[prelude_import] use [core|std]::prelude::v1::*;` at the crate root while injecting `extern crate [core|std];` and process `#[no_implicit_prelude]` attributes in `resolve`.
    
    r? @nrc
rustc: ./regex.0.1.30
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling regex v0.1.30 (file:///root/benchmarks/regex.0.1.30)
time: 0.062; rss: 63MB	parsing
Lines of code:             8558
Pre-expansion node count:  57894
time: 0.009; rss: 63MB	configuration 1
time: 0.000; rss: 63MB	recursion limit
time: 0.000; rss: 63MB	crate injection
time: 0.000; rss: 63MB	plugin loading
time: 0.000; rss: 63MB	plugin registration
time: 0.073; rss: 99MB	expansion
time: 0.000; rss: 99MB	gated configuration checking
time: 0.006; rss: 99MB	maybe building test harness
time: 0.000; rss: 99MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 99MB	complete gated feature checking
Post-expansion node count: 67913
time: 0.006; rss: 99MB	assigning node ids
time: 0.001; rss: 100MB	collecting defs
time: 0.001; rss: 100MB	external crate/lib resolution
time: 0.006; rss: 100MB	early lint checks
time: 0.001; rss: 100MB	AST validation
time: 0.008; rss: 101MB	name resolution
time: 0.009; rss: 108MB	lowering ast -> hir
time: 0.001; rss: 111MB	indexing hir
time: 0.001; rss: 111MB	attribute checking
time: 0.001; rss: 102MB	language item collection
time: 0.001; rss: 102MB	lifetime resolution
time: 0.000; rss: 102MB	looking for entry point
time: 0.000; rss: 102MB	looking for plugin registrar
time: 0.006; rss: 106MB	region resolution
time: 0.001; rss: 106MB	loop checking
time: 0.001; rss: 106MB	static item recursion checking
time: 0.000; rss: 106MB	load_dep_graph
time: 0.011; rss: 109MB	type collecting
time: 0.000; rss: 109MB	variance inference
time: 0.025; rss: 112MB	coherence checking
time: 0.013; rss: 112MB	wf checking
time: 0.324; rss: 120MB	item-types checking
time: 0.199; rss: 124MB	item-bodies checking
time: 0.000; rss: 124MB	drop-impl checking
time: 0.027; rss: 126MB	const checking
time: 0.003; rss: 126MB	privacy checking
time: 0.001; rss: 126MB	stability index
time: 0.002; rss: 126MB	intrinsic checking
time: 0.001; rss: 126MB	effect checking
time: 0.004; rss: 127MB	match checking
time: 0.002; rss: 127MB	liveness checking
time: 0.008; rss: 127MB	rvalue checking
time: 0.050; rss: 138MB	MIR dump
time: 0.021; rss: 138MB	MIR passes
time: 0.021; rss: 138MB	borrow checking
time: 0.000; rss: 138MB	reachability checking
time: 0.003; rss: 138MB	death checking
time: 0.002; rss: 138MB	stability checking
time: 0.000; rss: 138MB	unused lib feature checking
time: 0.028; rss: 138MB	lint checking
time: 0.000; rss: 138MB	resolving dependency formats
time: 0.017; rss: 140MB	Prepare MIR codegen passes
  time: 0.170; rss: 148MB	write metadata
  time: 0.054; rss: 150MB	translation item collection
  time: 0.001; rss: 150MB	codegen unit partitioning
time: 0.704; rss: 196MB	translation
time: 0.000; rss: 196MB	assert dep graph
time: 0.000; rss: 196MB	serialize dep graph
  time: 0.035; rss: 128MB	llvm function passes [0]
  time: 0.018; rss: 130MB	llvm module passes [0]
  time: 0.616; rss: 134MB	codegen passes [0]
  time: 0.001; rss: 116MB	codegen passes [0]
time: 0.745; rss: 114MB	LLVM passes
time: 0.064; rss: 113MB	linking
done
