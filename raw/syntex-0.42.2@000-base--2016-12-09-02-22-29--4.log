commit adb4279e549f51d287140658c1c64b51d7715bfa
Merge: 6a495f7 d38db82
Author: bors <bors@rust-lang.org>
Date:   Fri Dec 9 07:08:29 2016 +0000

    Auto merge of #38256 - alexcrichton:distcheck, r=brson
    
    rustbuild: Implement distcheck
    
    This commit implements the `distcheck` target for rustbuild which is only ever
    run on our nightly bots. This essentially just creates a tarball, un-tars it,
    and then runs a full build, validating that the release tarballs do indeed have
    everything they need to build Rust.
rustc: ./syntex-0.42.2@000-base@000-base
cargo rustc -p syntex_syntax  -- -Ztime-passes -Zinput-stats
time: 0.092; rss: 71MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 71MB	recursion limit
time: 0.000; rss: 71MB	crate injection
time: 0.000; rss: 71MB	plugin loading
time: 0.000; rss: 71MB	plugin registration
time: 0.276; rss: 143MB	expansion
time: 0.000; rss: 143MB	maybe building test harness
time: 0.006; rss: 143MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 143MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 143MB	complete gated feature checking
time: 0.024; rss: 143MB	early lint checks
time: 0.007; rss: 143MB	AST validation
time: 0.100; rss: 158MB	name resolution
time: 0.119; rss: 191MB	lowering ast -> hir
time: 0.012; rss: 184MB	indexing hir
time: 0.006; rss: 184MB	attribute checking
time: 0.002; rss: 146MB	language item collection
time: 0.012; rss: 146MB	lifetime resolution
time: 0.000; rss: 146MB	looking for entry point
time: 0.000; rss: 146MB	looking for plugin registrar
time: 0.094; rss: 165MB	region resolution
time: 0.008; rss: 165MB	loop checking
time: 0.002; rss: 165MB	static item recursion checking
time: 0.383; rss: 167MB	compute_incremental_hashes_map
time: 0.000; rss: 167MB	load_dep_graph
time: 0.009; rss: 167MB	stability index
time: 0.017; rss: 167MB	stability checking
time: 0.049; rss: 172MB	type collecting
time: 0.001; rss: 172MB	variance inference
time: 0.002; rss: 173MB	impl wf inference
time: 0.018; rss: 174MB	coherence checking
time: 0.084; rss: 177MB	wf checking
time: 0.185; rss: 181MB	item-types checking
time: 3.551; rss: 224MB	item-bodies checking
time: 0.000; rss: 224MB	drop-impl checking
time: 0.316; rss: 236MB	const checking
time: 0.058; rss: 236MB	privacy checking
time: 0.016; rss: 236MB	intrinsic checking
time: 0.014; rss: 236MB	effect checking
time: 0.048; rss: 236MB	match checking
time: 0.055; rss: 242MB	liveness checking
time: 0.178; rss: 242MB	rvalue checking
time: 0.597; rss: 415MB	MIR dump
  time: 0.059; rss: 421MB	SimplifyCfg
  time: 0.078; rss: 421MB	QualifyAndPromoteConstants
  time: 0.112; rss: 421MB	TypeckMir
  time: 0.004; rss: 421MB	SimplifyBranches
  time: 0.031; rss: 422MB	SimplifyCfg
time: 0.285; rss: 422MB	MIR cleanup and validation
time: 0.487; rss: 425MB	borrow checking
time: 0.024; rss: 425MB	reachability checking
time: 0.039; rss: 425MB	death checking
time: 0.000; rss: 425MB	unused lib feature checking
time: 0.181; rss: 425MB	lint checking
time: 0.000; rss: 425MB	resolving dependency formats
  time: 0.003; rss: 425MB	NoLandingPads
  time: 0.027; rss: 425MB	SimplifyCfg
  time: 0.078; rss: 433MB	EraseRegions
  time: 0.011; rss: 433MB	AddCallGuards
  time: 0.309; rss: 455MB	ElaborateDrops
  time: 0.003; rss: 455MB	NoLandingPads
  time: 0.053; rss: 455MB	SimplifyCfg
  time: 0.030; rss: 455MB	InstCombine
  time: 0.012; rss: 455MB	Deaggregator
  time: 0.002; rss: 455MB	CopyPropagation
  time: 0.036; rss: 455MB	SimplifyLocals
  time: 0.010; rss: 455MB	AddCallGuards
  time: 0.002; rss: 455MB	PreTrans
time: 0.577; rss: 455MB	MIR optimisations
  time: 0.084; rss: 463MB	write metadata
  time: 0.407; rss: 476MB	translation item collection
  time: 0.059; rss: 481MB	codegen unit partitioning
  time: 0.054; rss: 739MB	internalize symbols
time: 5.125; rss: 739MB	translation
time: 0.000; rss: 739MB	assert dep graph
time: 0.000; rss: 739MB	serialize dep graph
  time: 0.549; rss: 425MB	llvm function passes [0]
  time: 0.308; rss: 432MB	llvm module passes [0]
  time: 10.555; rss: 429MB	codegen passes [0]
  time: 0.000; rss: 429MB	codegen passes [0]
time: 12.263; rss: 429MB	LLVM passes
time: 0.000; rss: 429MB	serialize work products
time: 0.347; rss: 116MB	linking
done
