commit 098d22845933814a92497cbfaa8eb4a9a36b117f
Merge: d34318d 651bb69
Author: bors <bors@rust-lang.org>
Date:   Thu Oct 13 13:12:52 2016 -0700

    Auto merge of #37151 - alexcrichton:fix-master, r=alexcrichton
    
    rustbuild: Less panics in musl_root
    
    Don't panic if the target wasn't configured.
rustc: ./syntex-0.42.2-incr-clean
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax -- -Ztime-passes -Zinput-stats -Z incremental-info
   Compiling bitflags v0.5.0
   Compiling log v0.3.6
   Compiling rustc-serialize v0.3.19
   Compiling libc v0.2.15
   Compiling unicode-xid v0.0.3
   Compiling winapi v0.2.8
   Compiling winapi-build v0.1.1
   Compiling kernel32-sys v0.2.2
   Compiling term v0.4.4
   Compiling syntex_pos v0.42.0
   Compiling syntex_errors v0.42.0
   Compiling syntex_syntax v0.42.0
time: 0.108; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  224033
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.273; rss: 147MB	expansion
time: 0.000; rss: 147MB	maybe building test harness
time: 0.006; rss: 147MB	maybe creating a macro crate
Post-expansion node count: 641571
time: 0.000; rss: 147MB	checking for inline asm in case the target doesn't support it
time: 0.013; rss: 147MB	complete gated feature checking
time: 0.024; rss: 147MB	early lint checks
time: 0.007; rss: 147MB	AST validation
time: 0.084; rss: 162MB	name resolution
time: 0.049; rss: 203MB	lowering ast -> hir
time: 0.009; rss: 213MB	indexing hir
time: 0.007; rss: 213MB	attribute checking
time: 0.006; rss: 163MB	language item collection
time: 0.012; rss: 163MB	lifetime resolution
time: 0.000; rss: 163MB	looking for entry point
time: 0.000; rss: 163MB	looking for plugin registrar
time: 0.044; rss: 173MB	region resolution
time: 0.006; rss: 173MB	loop checking
time: 0.006; rss: 173MB	static item recursion checking
time: 0.266; rss: 175MB	compute_incremental_hashes_map
time: 0.000; rss: 175MB	load_dep_graph
time: 0.043; rss: 181MB	type collecting
time: 0.001; rss: 181MB	variance inference
time: 0.038; rss: 183MB	coherence checking
time: 0.099; rss: 185MB	wf checking
time: 0.194; rss: 192MB	item-types checking
time: 3.938; rss: 243MB	item-bodies checking
time: 0.000; rss: 243MB	drop-impl checking
time: 0.312; rss: 244MB	const checking
time: 0.054; rss: 244MB	privacy checking
time: 0.007; rss: 244MB	stability index
time: 0.022; rss: 244MB	intrinsic checking
time: 0.018; rss: 244MB	effect checking
time: 0.057; rss: 244MB	match checking
time: 0.054; rss: 239MB	liveness checking
time: 0.282; rss: 239MB	rvalue checking
time: 0.419; rss: 426MB	MIR dump
  time: 0.057; rss: 429MB	SimplifyCfg
  time: 0.084; rss: 429MB	QualifyAndPromoteConstants
  time: 0.111; rss: 429MB	TypeckMir
  time: 0.004; rss: 429MB	SimplifyBranches
  time: 0.031; rss: 429MB	SimplifyCfg
time: 0.287; rss: 429MB	MIR passes
time: 0.681; rss: 429MB	borrow checking
time: 0.022; rss: 429MB	reachability checking
time: 0.045; rss: 429MB	death checking
time: 0.042; rss: 429MB	stability checking
time: 0.000; rss: 429MB	unused lib feature checking
time: 0.218; rss: 429MB	lint checking
time: 0.000; rss: 429MB	resolving dependency formats
  time: 0.003; rss: 429MB	NoLandingPads
  time: 0.028; rss: 429MB	SimplifyCfg
  time: 0.072; rss: 442MB	EraseRegions
  time: 0.011; rss: 442MB	AddCallGuards
  time: 1.065; rss: 456MB	ElaborateDrops
  time: 0.003; rss: 456MB	NoLandingPads
  time: 0.052; rss: 457MB	SimplifyCfg
  time: 0.030; rss: 457MB	InstCombine
  time: 0.012; rss: 457MB	Deaggregator
  time: 0.003; rss: 457MB	CopyPropagation
  time: 0.009; rss: 457MB	AddCallGuards
  time: 0.003; rss: 457MB	PreTrans
time: 1.291; rss: 457MB	Prepare MIR codegen passes
  time: 0.264; rss: 464MB	write metadata
  time: 0.449; rss: 472MB	translation item collection
  time: 0.061; rss: 481MB	codegen unit partitioning
  time: 0.051; rss: 726MB	internalize symbols
time: 5.099; rss: 605MB	translation
time: 0.000; rss: 605MB	assert dep graph
time: 0.000; rss: 605MB	serialize dep graph
incremental: re-using 0 out of 1 modules
  time: 0.508; rss: 410MB	llvm function passes [0]
  time: 0.243; rss: 419MB	llvm module passes [0]
  time: 10.008; rss: 413MB	codegen passes [0]
  time: 0.001; rss: 414MB	codegen passes [0]
time: 11.503; rss: 414MB	LLVM passes
time: 0.000; rss: 414MB	serialize work products
time: 0.656; rss: 107MB	linking
done
