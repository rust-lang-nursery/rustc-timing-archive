commit 8fc0554e4df413537760850108b10aafcdccd4b0
Merge: 6cc502c 6e4bc47
Author: bors <bors@rust-lang.org>
Date:   Tue Mar 22 02:05:16 2016 -0700

    Auto merge of #32388 - semarie:snapshot-openbsd, r=alexcrichton
    
    register openbsd snapshot
    
    Here openbsd version for latest snapshot.
    
    The archive is at http://semarie.online.fr/rust/rust-stage0-2016-03-18-235d774-openbsd-x86_64-c5b6feda38138a12cd5c05574b585dadebbb5e87.tar.bz2
    
    These segmentation fault starts to be annoying. @dhuseby do you think it would be possible to have a shell access to openbsd buildbot in order to try to investigating a bit the reason of them ?
    
    r? @alexcrichton
    Ref #32345
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling pkg-config v0.3.8
   Compiling libc v0.1.12
   Compiling traitobject v0.0.1
   Compiling winapi v0.2.6
   Compiling lazy_static v0.1.15
   Compiling rustc-serialize v0.3.18
   Compiling unicase v0.1.0
   Compiling httparse v0.1.6
   Compiling typeable v0.1.2
   Compiling matches v0.1.2
   Compiling libc v0.2.8
   Compiling winapi-build v0.1.1
   Compiling gcc v0.3.26
   Compiling kernel32-sys v0.2.1
   Compiling bitflags v0.3.3
   Compiling openssl-sys v0.6.7
   Compiling time v0.1.34
   Compiling log v0.3.5
   Compiling num_cpus v0.2.11
   Compiling rand v0.3.14
   Compiling mime v0.0.11
   Compiling openssl v0.6.7
   Compiling uuid v0.1.18
   Compiling url v0.2.38
   Compiling cookie v0.1.21
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.029; rss: 45MB	parsing
Lines of code:             9154
Pre-expansion node count:  45594
time: 0.009; rss: 45MB	configuration 1
time: 0.000; rss: 45MB	recursion limit
time: 0.000; rss: 45MB	gated macro checking
time: 0.000; rss: 45MB	crate injection
time: 0.005; rss: 50MB	macro loading
time: 0.000; rss: 50MB	plugin loading
time: 0.000; rss: 50MB	plugin registration
time: 0.189; rss: 60MB	expansion
time: 0.005; rss: 60MB	complete gated feature checking 1
time: 0.033; rss: 60MB	configuration 2
time: 0.000; rss: 60MB	gated configuration checking
time: 0.013; rss: 60MB	maybe building test harness
time: 0.010; rss: 60MB	prelude injection
time: 0.001; rss: 60MB	checking that all macro invocations are gone
time: 0.000; rss: 60MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 60MB	complete gated feature checking 2
time: 0.001; rss: 60MB	const fn bodies and arguments
Post-expansion node count: 106876
time: 0.010; rss: 60MB	assigning node ids
time: 0.011; rss: 66MB	lowering ast -> hir
time: 0.004; rss: 68MB	indexing hir
time: 0.001; rss: 68MB	attribute checking
time: 0.006; rss: 68MB	early lint checks
time: 0.004; rss: 64MB	external crate/lib resolution
time: 0.001; rss: 64MB	language item collection
time: 0.024; rss: 82MB	resolution
time: 0.002; rss: 82MB	lifetime resolution
time: 0.000; rss: 82MB	looking for entry point
time: 0.000; rss: 82MB	looking for plugin registrar
time: 0.006; rss: 85MB	region resolution
time: 0.001; rss: 85MB	loop checking
time: 0.001; rss: 85MB	static item recursion checking
time: 0.013; rss: 89MB	type collecting
time: 0.000; rss: 89MB	variance inference
time: 0.531; rss: 110MB	coherence checking
time: 0.079; rss: 110MB	wf checking
time: 0.030; rss: 112MB	item-types checking
time: 0.495; rss: 132MB	item-bodies checking
time: 0.000; rss: 132MB	drop-impl checking
time: 0.037; rss: 134MB	const checking
time: 0.009; rss: 134MB	privacy checking
time: 0.001; rss: 134MB	stability index
time: 0.004; rss: 134MB	intrinsic checking
time: 0.002; rss: 134MB	effect checking
time: 0.012; rss: 134MB	match checking
time: 0.005; rss: 134MB	liveness checking
time: 0.033; rss: 134MB	rvalue checking
time: 0.045; rss: 139MB	MIR dump
time: 0.027; rss: 139MB	MIR passes
time: 0.064; rss: 139MB	borrow checking
time: 0.003; rss: 139MB	reachability checking
time: 0.006; rss: 139MB	death checking
time: 0.005; rss: 139MB	stability checking
time: 0.000; rss: 139MB	unused lib feature checking
time: 0.046; rss: 139MB	lint checking
time: 0.000; rss: 139MB	resolving dependency formats
  time: 0.194; rss: 162MB	translation item collection
  time: 0.134; rss: 285MB	write metadata
time: 1.344; rss: 285MB	translation
  time: 0.099; rss: 165MB	llvm function passes [0]
  time: 0.047; rss: 166MB	llvm module passes [0]
  time: 1.638; rss: 169MB	codegen passes [0]
  time: 0.001; rss: 117MB	codegen passes [0]
time: 1.981; rss: 114MB	LLVM passes
time: 0.168; rss: 114MB	linking
done
