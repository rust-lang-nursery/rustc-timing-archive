commit 00ce2c0ffa93bd13b52037dfd9b70d3fc68c943c
Merge: 4d91323 5e9149d
Author: bors <bors@rust-lang.org>
Date:   Mon Sep 12 01:33:40 2016 -0700

    Auto merge of #36360 - orbea:docdir, r=alexcrichton
    
    Allow setting --docdir
    
    This will allow setting `--docdir` during configure, this is useful because not all linux distributions install documentation to `/usr/share/doc`.  For example in Slackware documentation is installed to `/usr/doc/$PRGNAM-$VERSION` and `/usr/share/doc` is a symlink to `/usr/doc`.
    
    To use this `./configure --docdir=/usr/doc/$PRGNAM-$VERSION` can be used.
rustc: ./piston-image-0.10.3
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling image v0.10.3 (file:///root/benchmarks/piston-image-0.10.3)
time: 0.046; rss: 58MB	parsing
Lines of code:             12000
Pre-expansion node count:  90272
time: 0.000; rss: 58MB	recursion limit
time: 0.000; rss: 58MB	crate injection
time: 0.000; rss: 58MB	plugin loading
time: 0.000; rss: 58MB	plugin registration
time: 0.068; rss: 88MB	expansion
time: 0.000; rss: 88MB	maybe building test harness
time: 0.002; rss: 88MB	maybe creating a macro crate
time: 0.007; rss: 88MB	assigning node ids
Post-expansion node count: 149551
time: 0.000; rss: 88MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 88MB	complete gated feature checking
time: 0.004; rss: 88MB	collecting defs
time: 0.011; rss: 97MB	external crate/lib resolution
time: 0.006; rss: 97MB	early lint checks
time: 0.002; rss: 97MB	AST validation
time: 0.022; rss: 101MB	name resolution
time: 0.013; rss: 112MB	lowering ast -> hir
time: 0.003; rss: 116MB	indexing hir
time: 0.002; rss: 116MB	attribute checking
time: 0.002; rss: 106MB	language item collection
time: 0.003; rss: 106MB	lifetime resolution
time: 0.000; rss: 106MB	looking for entry point
time: 0.000; rss: 106MB	looking for plugin registrar
time: 0.011; rss: 112MB	region resolution
time: 0.002; rss: 112MB	loop checking
time: 0.001; rss: 112MB	static item recursion checking
time: 0.058; rss: 112MB	compute_incremental_hashes_map
time: 0.000; rss: 112MB	load_dep_graph
time: 0.025; rss: 112MB	type collecting
time: 0.000; rss: 112MB	variance inference
time: 0.032; rss: 116MB	coherence checking
time: 0.099; rss: 117MB	wf checking
time: 0.222; rss: 126MB	item-types checking
time: 0.950; rss: 138MB	item-bodies checking
time: 0.000; rss: 138MB	drop-impl checking
time: 0.072; rss: 138MB	const checking
time: 0.011; rss: 138MB	privacy checking
time: 0.001; rss: 138MB	stability index
time: 0.010; rss: 138MB	intrinsic checking
time: 0.003; rss: 138MB	effect checking
time: 0.025; rss: 138MB	match checking
time: 0.011; rss: 138MB	liveness checking
time: 0.068; rss: 138MB	rvalue checking
time: 0.114; rss: 181MB	MIR dump
  time: 0.011; rss: 181MB	SimplifyCfg
  time: 0.025; rss: 181MB	QualifyAndPromoteConstants
  time: 0.028; rss: 181MB	TypeckMir
  time: 0.001; rss: 181MB	SimplifyBranches
  time: 0.007; rss: 181MB	SimplifyCfg
time: 0.073; rss: 181MB	MIR passes
time: 0.144; rss: 181MB	borrow checking
time: 0.004; rss: 181MB	reachability checking
time: 0.008; rss: 181MB	death checking
time: 0.010; rss: 181MB	stability checking
time: 0.000; rss: 181MB	unused lib feature checking
time: 0.074; rss: 181MB	lint checking
time: 0.000; rss: 181MB	resolving dependency formats
  time: 0.001; rss: 181MB	NoLandingPads
  time: 0.005; rss: 181MB	SimplifyCfg
  time: 0.012; rss: 183MB	EraseRegions
  time: 0.002; rss: 183MB	AddCallGuards
  time: 0.135; rss: 187MB	ElaborateDrops
  time: 0.001; rss: 187MB	NoLandingPads
  time: 0.009; rss: 187MB	SimplifyCfg
  time: 0.002; rss: 187MB	Deaggregator
  time: 0.001; rss: 187MB	AddCallGuards
  time: 0.000; rss: 187MB	PreTrans
time: 0.169; rss: 187MB	Prepare MIR codegen passes
  time: 0.082; rss: 189MB	write metadata
  time: 0.541; rss: 199MB	translation item collection
  time: 0.028; rss: 203MB	codegen unit partitioning
  time: 0.050; rss: 326MB	internalize symbols
time: 3.469; rss: 299MB	translation
time: 0.000; rss: 299MB	assert dep graph
time: 0.000; rss: 299MB	serialize dep graph
  time: 0.206; rss: 227MB	llvm function passes [0]
  time: 0.083; rss: 231MB	llvm module passes [0]
  time: 4.070; rss: 234MB	codegen passes [0]
  time: 0.001; rss: 234MB	codegen passes [0]
time: 4.660; rss: 234MB	LLVM passes
time: 0.000; rss: 234MB	serialize work products
time: 0.255; rss: 105MB	linking
done
