commit 4fdf2c4f976ce52163841ba5b3117bb2bb06d97e
Merge: 8310de8 e512abd
Author: bors <bors@rust-lang.org>
Date:   Mon May 16 12:15:10 2016 -0700

    Auto merge of #33500 - Nercury:update-aarch64-android-target-to-match-abi, r=alexcrichton
    
    Update aarch64-linux-android target to match android abi.
    
    - Changed `target_env` to "gnu" to empty "" for all android targets because it does not matter for android.
    - The PR #33048 added "max_atomic_width" for arm-android but missed recently added armv7-android. Add it there too.
    - Added features `+neon,+fp-armv8` because they [must exist on `aarch64` android](http://developer.android.com/ndk/guides/cpu-features.html).
    - Update libc to include https://github.com/rust-lang/libc/pull/282 so that rust's std lib works on android's aarch64 (the main issue there was incorrect structure alignment on 64-bit arm).
    
    r? @alexcrichton
rustc: ./regex.0.1.30
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling regex v0.1.30 (file:///root/benchmarks/regex.0.1.30)
time: 0.063; rss: 62MB	parsing
Lines of code:             8558
Pre-expansion node count:  58331
time: 0.011; rss: 62MB	configuration 1
time: 0.000; rss: 62MB	recursion limit
time: 0.000; rss: 62MB	crate injection
time: 0.004; rss: 65MB	macro loading
time: 0.000; rss: 65MB	plugin loading
time: 0.000; rss: 65MB	plugin registration
time: 0.058; rss: 69MB	expansion
time: 0.013; rss: 69MB	configuration 2
time: 0.000; rss: 69MB	gated configuration checking
time: 0.006; rss: 69MB	maybe building test harness
time: 0.006; rss: 69MB	prelude injection
time: 0.000; rss: 69MB	checking that all macro invocations are gone
time: 0.000; rss: 69MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 69MB	complete gated feature checking
Post-expansion node count: 68487
time: 0.006; rss: 69MB	assigning node ids
time: 0.001; rss: 69MB	collecting defs
time: 0.001; rss: 69MB	external crate/lib resolution
time: 0.006; rss: 69MB	early lint checks
time: 0.009; rss: 77MB	name resolution
time: 0.009; rss: 89MB	lowering ast -> hir
time: 0.001; rss: 91MB	indexing hir
time: 0.001; rss: 91MB	attribute checking
time: 0.001; rss: 83MB	language item collection
time: 0.001; rss: 83MB	lifetime resolution
time: 0.000; rss: 83MB	looking for entry point
time: 0.000; rss: 83MB	looking for plugin registrar
time: 0.006; rss: 87MB	region resolution
time: 0.001; rss: 87MB	loop checking
time: 0.001; rss: 87MB	static item recursion checking
time: 0.000; rss: 87MB	load_dep_graph
time: 0.007; rss: 98MB	type collecting
time: 0.000; rss: 98MB	variance inference
time: 0.025; rss: 109MB	coherence checking
time: 0.013; rss: 110MB	wf checking
time: 0.384; rss: 113MB	item-types checking
time: 0.216; rss: 119MB	item-bodies checking
time: 0.000; rss: 119MB	drop-impl checking
time: 0.027; rss: 121MB	const checking
time: 0.004; rss: 121MB	privacy checking
time: 0.001; rss: 121MB	stability index
time: 0.002; rss: 121MB	intrinsic checking
time: 0.001; rss: 121MB	effect checking
time: 0.004; rss: 121MB	match checking
time: 0.002; rss: 121MB	liveness checking
time: 0.008; rss: 121MB	rvalue checking
time: 0.053; rss: 131MB	MIR dump
time: 0.020; rss: 131MB	MIR passes
time: 0.021; rss: 131MB	borrow checking
time: 0.000; rss: 131MB	reachability checking
time: 0.003; rss: 131MB	death checking
time: 0.002; rss: 131MB	stability checking
time: 0.000; rss: 131MB	unused lib feature checking
time: 0.028; rss: 131MB	lint checking
time: 0.000; rss: 131MB	resolving dependency formats
time: 0.005; rss: 133MB	Prepare MIR codegen passes
  time: 0.066; rss: 140MB	translation item collection
  time: 0.001; rss: 140MB	codegen unit partitioning
  time: 0.179; rss: 196MB	write metadata
time: 0.709; rss: 193MB	translation
time: 0.000; rss: 193MB	assert dep graph
time: 0.000; rss: 193MB	serialize dep graph
  time: 0.036; rss: 127MB	llvm function passes [0]
  time: 0.018; rss: 128MB	llvm module passes [0]
  time: 0.612; rss: 133MB	codegen passes [0]
  time: 0.001; rss: 114MB	codegen passes [0]
time: 0.740; rss: 111MB	LLVM passes
time: 0.067; rss: 111MB	linking
done
