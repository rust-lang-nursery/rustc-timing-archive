commit 9debf51f4b8a5d437df1abca57c5a58c45297b60
Merge: ccc7e95 5613372
Author: bors <bors@rust-lang.org>
Date:   Fri Apr 15 12:41:25 2016 -0700

    Auto merge of #32338 - lukaspustina:doc-std-process, r=alexcrichton
    
    Extends rustdoc on how to caputure output
    
    - The documentation is quite about how to caputure a process' output when using
      ` std::process::Child::wait_with_output()`.
    - This PR adds an example for this particular use case.
rustc: ./rust-encoding.0.2.32
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling encoding v0.2.32 (file:///root/benchmarks/rust-encoding.0.2.32)
time: 0.031; rss: 42MB	parsing
Lines of code:             6441
Pre-expansion node count:  30335
time: 0.006; rss: 42MB	configuration 1
time: 0.000; rss: 42MB	recursion limit
time: 0.000; rss: 42MB	gated macro checking
time: 0.000; rss: 42MB	crate injection
time: 0.003; rss: 45MB	macro loading
time: 0.000; rss: 45MB	plugin loading
time: 0.000; rss: 45MB	plugin registration
time: 0.044; rss: 48MB	expansion
time: 0.001; rss: 48MB	complete gated feature checking 1
time: 0.006; rss: 48MB	configuration 2
time: 0.000; rss: 48MB	gated configuration checking
time: 0.003; rss: 48MB	maybe building test harness
time: 0.003; rss: 48MB	prelude injection
time: 0.000; rss: 48MB	checking that all macro invocations are gone
time: 0.000; rss: 48MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 48MB	complete gated feature checking 2
time: 0.000; rss: 48MB	const fn bodies and arguments
Post-expansion node count: 41611
time: 0.003; rss: 48MB	assigning node ids
time: 0.006; rss: 50MB	lowering ast -> hir
time: 0.003; rss: 51MB	indexing hir
time: 0.000; rss: 51MB	attribute checking
time: 0.002; rss: 51MB	early lint checks
time: 0.001; rss: 51MB	external crate/lib resolution
time: 0.000; rss: 51MB	language item collection
time: 0.009; rss: 60MB	resolution
time: 0.001; rss: 60MB	lifetime resolution
time: 0.000; rss: 60MB	looking for entry point
time: 0.000; rss: 60MB	looking for plugin registrar
time: 0.006; rss: 61MB	region resolution
time: 0.000; rss: 61MB	loop checking
time: 0.000; rss: 61MB	static item recursion checking
time: 0.000; rss: 61MB	load_dep_graph
time: 0.005; rss: 63MB	type collecting
time: 0.000; rss: 63MB	variance inference
time: 0.022; rss: 80MB	coherence checking
time: 0.017; rss: 81MB	wf checking
time: 0.012; rss: 81MB	item-types checking
time: 0.211; rss: 91MB	item-bodies checking
time: 0.000; rss: 91MB	drop-impl checking
time: 0.011; rss: 91MB	const checking
time: 0.003; rss: 91MB	privacy checking
time: 0.000; rss: 91MB	stability index
time: 0.001; rss: 91MB	intrinsic checking
time: 0.000; rss: 91MB	effect checking
time: 0.006; rss: 91MB	match checking
time: 0.002; rss: 91MB	liveness checking
time: 0.006; rss: 91MB	rvalue checking
time: 0.030; rss: 99MB	MIR dump
time: 0.008; rss: 99MB	MIR passes
time: 0.023; rss: 99MB	borrow checking
time: 0.000; rss: 99MB	reachability checking
time: 0.002; rss: 99MB	death checking
time: 0.002; rss: 99MB	stability checking
time: 0.000; rss: 99MB	unused lib feature checking
time: 0.023; rss: 99MB	lint checking
time: 0.000; rss: 99MB	resolving dependency formats
time: 0.003; rss: 100MB	Prepare MIR codegen passes
  time: 0.028; rss: 112MB	translation item collection
  time: 0.059; rss: 145MB	write metadata
time: 0.404; rss: 145MB	translation
time: 0.000; rss: 145MB	assert dep graph
time: 0.000; rss: 145MB	serialize dep graph
  time: 0.027; rss: 110MB	llvm function passes [0]
  time: 0.051; rss: 114MB	llvm module passes [0]
  time: 0.582; rss: 118MB	codegen passes [0]
  time: 0.001; rss: 102MB	codegen passes [0]
time: 0.729; rss: 102MB	LLVM passes
time: 0.055; rss: 100MB	linking
done
