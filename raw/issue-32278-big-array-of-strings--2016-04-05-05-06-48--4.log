commit 7fd331e16642363c333804fe3322ae6bc0be8fbc
Merge: 600dc35 6f09dea
Author: bors <bors@rust-lang.org>
Date:   Mon Apr 4 21:50:05 2016 -0700

    Auto merge of #32328 - jseyfried:coherence, r=nikomatsakis
    
    resolve: Improve import failure detection and lay groundwork for RFC 1422
    
    This PR improves import failure detection and lays some groundwork for RFC 1422.
    More specifically, it
     - Avoids recomputing the resolution of an import directive's module path.
     - Refactors code in `resolve_imports` that does not scale to the arbitrarily many levels of visibility that will be required by RFC 1422.
      - Replaces `ModuleS`'s fields `public_glob_count`, `private_glob_count`, and `resolved_globs` with a list of glob import directives `globs`.
      - Replaces `NameResolution`'s fields `pub_outstanding_references` and `outstanding_references` with a field `single_imports` of a newly defined type `SingleImports`.
     - Improves import failure detection by detecting cycles that include single imports (currently, only cycles of globs are detected). This fixes #32119.
    
    r? @nikomatsakis
rustc: ./issue-32278-big-array-of-strings
/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc big-array-of-strings.rs -Ztime-passes -Zinput-stats
time: 0.149; rss: 58MB	parsing
Lines of code:             65577
Pre-expansion node count:  65552
time: 0.011; rss: 58MB	configuration 1
time: 0.000; rss: 58MB	recursion limit
time: 0.001; rss: 58MB	gated macro checking
time: 0.000; rss: 58MB	crate injection
time: 0.004; rss: 61MB	macro loading
time: 0.000; rss: 61MB	plugin loading
time: 0.000; rss: 61MB	plugin registration
time: 0.042; rss: 67MB	expansion
time: 0.001; rss: 67MB	complete gated feature checking 1
time: 0.011; rss: 67MB	configuration 2
time: 0.000; rss: 67MB	gated configuration checking
time: 0.005; rss: 67MB	maybe building test harness
time: 0.005; rss: 67MB	prelude injection
time: 0.000; rss: 67MB	checking that all macro invocations are gone
time: 0.000; rss: 67MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 67MB	complete gated feature checking 2
time: 0.001; rss: 67MB	const fn bodies and arguments
Post-expansion node count: 65565
time: 0.006; rss: 67MB	assigning node ids
time: 0.010; rss: 80MB	lowering ast -> hir
time: 0.002; rss: 82MB	indexing hir
time: 0.001; rss: 82MB	attribute checking
time: 0.010; rss: 82MB	early lint checks
time: 0.001; rss: 69MB	external crate/lib resolution
time: 0.001; rss: 69MB	language item collection
time: 0.003; rss: 72MB	resolution
time: 0.001; rss: 72MB	lifetime resolution
time: 0.000; rss: 72MB	looking for entry point
time: 0.000; rss: 72MB	looking for plugin registrar
time: 0.009; rss: 80MB	region resolution
time: 0.001; rss: 80MB	loop checking
time: 0.002; rss: 80MB	static item recursion checking
time: 0.000; rss: 80MB	type collecting
time: 0.000; rss: 80MB	variance inference
time: 0.006; rss: 88MB	coherence checking
time: 0.001; rss: 88MB	wf checking
time: 0.796; rss: 194MB	item-types checking
time: 0.000; rss: 194MB	item-bodies checking
time: 0.000; rss: 194MB	drop-impl checking
time: 0.020; rss: 193MB	const checking
time: 0.002; rss: 193MB	privacy checking
time: 0.001; rss: 193MB	stability index
time: 0.001; rss: 193MB	intrinsic checking
time: 0.001; rss: 193MB	effect checking
time: 0.000; rss: 193MB	match checking
time: 0.001; rss: 193MB	liveness checking
time: 0.000; rss: 193MB	rvalue checking
time: 0.001; rss: 193MB	MIR dump
time: 0.000; rss: 193MB	MIR passes
time: 0.001; rss: 193MB	borrow checking
time: 0.000; rss: 193MB	reachability checking
time: 0.001; rss: 193MB	death checking
time: 0.001; rss: 193MB	stability checking
time: 0.000; rss: 193MB	unused lib feature checking
time: 0.029; rss: 193MB	lint checking
time: 0.001; rss: 193MB	resolving dependency formats
time: 0.000; rss: 193MB	Prepare MIR codegen passes
  time: 0.001; rss: 200MB	translation item collection
  time: 0.000; rss: 210MB	write metadata
time: 0.089; rss: 210MB	translation
  time: 0.005; rss: 84MB	llvm function passes [0]
  time: 0.000; rss: 84MB	llvm module passes [0]
  time: 0.163; rss: 85MB	codegen passes [0]
  time: 0.000; rss: 75MB	codegen passes [0]
time: 0.178; rss: 75MB	LLVM passes
  time: 0.186; rss: 75MB	running linker
time: 0.186; rss: 75MB	linking
done
