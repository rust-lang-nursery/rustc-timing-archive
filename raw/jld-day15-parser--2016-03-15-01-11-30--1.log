commit 34b95a3c6a2a56d76bbd8ae19f318c03a2e5041d
Merge: 9ca7561 158b854
Author: bors <bors@rust-lang.org>
Date:   Mon Mar 14 21:09:37 2016 -0700

    Auto merge of #32206 - alexcrichton:fix-windows-rustbuild, r=brson
    
    Fix Windows rustbuild
    
    These commits fix the rustbuild Windows bots, namely:
    
    * The 32-bit build of LLVM was failing because libraries weren't being linked. This was in turn caused by the build script for `rustc_llvm` erroneously detecting that it was cross compiling when it actually wasn't.
    * Tools of the build were compiled against the wrong libraries, so running them would fail on Windows as rpath didn't exist and `PATH` was wrong.
    * Some linkchecker fixes for Windows paths had to be applied as well.
rustc: ./jld-day15-parser
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling day15 v0.1.0 (file:///root/benchmarks/jld-day15-parser)
time: 0.001; rss: 36MB	parsing
Lines of code:             72
Pre-expansion node count:  673
time: 0.000; rss: 36MB	configuration 1
time: 0.000; rss: 36MB	recursion limit
time: 0.000; rss: 36MB	gated macro checking
time: 0.000; rss: 36MB	crate injection
time: 0.003; rss: 40MB	macro loading
time: 0.000; rss: 40MB	plugin loading
time: 0.000; rss: 40MB	plugin registration
time: 0.002; rss: 40MB	expansion
time: 0.000; rss: 40MB	complete gated feature checking 1
time: 0.000; rss: 40MB	configuration 2
time: 0.000; rss: 40MB	gated configuration checking
time: 0.000; rss: 40MB	maybe building test harness
time: 0.000; rss: 40MB	prelude injection
time: 0.000; rss: 40MB	checking that all macro invocations are gone
time: 0.000; rss: 40MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 40MB	complete gated feature checking 2
time: 0.000; rss: 40MB	const fn bodies and arguments
Post-expansion node count: 1176
time: 0.000; rss: 40MB	assigning node ids
time: 0.000; rss: 40MB	lowering ast -> hir
time: 0.000; rss: 40MB	indexing hir
time: 0.000; rss: 40MB	attribute checking
time: 0.000; rss: 40MB	early lint checks
time: 0.001; rss: 40MB	external crate/lib resolution
time: 0.000; rss: 40MB	language item collection
time: 0.001; rss: 48MB	resolution
time: 0.000; rss: 48MB	lifetime resolution
time: 0.000; rss: 48MB	looking for entry point
time: 0.000; rss: 48MB	looking for plugin registrar
time: 0.000; rss: 48MB	region resolution
time: 0.000; rss: 48MB	loop checking
time: 0.000; rss: 48MB	static item recursion checking
time: 0.001; rss: 52MB	type collecting
time: 0.000; rss: 52MB	variance inference
time: 0.005; rss: 57MB	coherence checking
time: 0.007; rss: 63MB	wf checking
time: 0.000; rss: 63MB	item-types checking
time: 1.661; rss: 141MB	item-bodies checking
time: 0.000; rss: 141MB	drop-impl checking
time: 0.001; rss: 141MB	const checking
time: 0.000; rss: 141MB	privacy checking
time: 0.000; rss: 141MB	stability index
time: 0.000; rss: 141MB	intrinsic checking
time: 0.000; rss: 141MB	effect checking
time: 0.000; rss: 141MB	match checking
time: 0.000; rss: 141MB	liveness checking
time: 0.002; rss: 141MB	rvalue checking
time: 0.001; rss: 141MB	MIR dump
time: 0.000; rss: 141MB	MIR passes
time: 0.001; rss: 141MB	borrow checking
time: 0.000; rss: 141MB	reachability checking
time: 0.000; rss: 141MB	death checking
time: 0.000; rss: 141MB	stability checking
time: 0.000; rss: 141MB	unused lib feature checking
time: 0.003; rss: 143MB	lint checking
time: 0.001; rss: 143MB	resolving dependency formats
  time: 13.084; rss: 187MB	translation item collection
  time: 0.000; rss: 245MB	write metadata
time: 46.500; rss: 245MB	translation
  time: 0.015; rss: 96MB	llvm function passes [0]
  time: 0.002; rss: 96MB	llvm module passes [0]
  time: 0.271; rss: 102MB	codegen passes [0]
  time: 0.000; rss: 96MB	codegen passes [0]
time: 0.296; rss: 95MB	LLVM passes
  time: 0.115; rss: 95MB	running linker
time: 0.116; rss: 95MB	linking
done
