commit 9cf6fba955736fff590a67293733755172d51cb9
Merge: c2aaad4 8984242
Author: bors <bors@rust-lang.org>
Date:   Tue Apr 19 19:17:08 2016 -0700

    Auto merge of #31253 - ranma42:improve-unicode-iter-offset, r=brson
    
    Improve computation of offset in `EscapeUnicode`
    
    Unify the computation of `offset` and use `leading_zeros` instead of manually scanning the bits.
    This PR removes some duplicated code and makes it a little simpler .
    The computation of `offset` is also faster, but it is unlikely to have an impact on actual code.
    
    (split from #31049)
rustc: ./jld-day15-parser
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling day15 v0.1.0 (file:///root/benchmarks/jld-day15-parser)
time: 0.001; rss: 35MB	parsing
Lines of code:             72
Pre-expansion node count:  673
time: 0.000; rss: 39MB	configuration 1
time: 0.000; rss: 39MB	recursion limit
time: 0.000; rss: 39MB	gated macro checking
time: 0.000; rss: 39MB	crate injection
time: 0.003; rss: 42MB	macro loading
time: 0.000; rss: 42MB	plugin loading
time: 0.000; rss: 42MB	plugin registration
time: 0.002; rss: 42MB	expansion
time: 0.000; rss: 42MB	complete gated feature checking 1
time: 0.000; rss: 42MB	configuration 2
time: 0.000; rss: 42MB	gated configuration checking
time: 0.000; rss: 42MB	maybe building test harness
time: 0.000; rss: 42MB	prelude injection
time: 0.000; rss: 42MB	checking that all macro invocations are gone
time: 0.000; rss: 42MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 42MB	complete gated feature checking 2
time: 0.000; rss: 42MB	const fn bodies and arguments
Post-expansion node count: 1176
time: 0.000; rss: 42MB	assigning node ids
time: 0.000; rss: 42MB	lowering ast -> hir
time: 0.000; rss: 46MB	indexing hir
time: 0.000; rss: 46MB	attribute checking
time: 0.000; rss: 46MB	early lint checks
time: 0.001; rss: 46MB	external crate/lib resolution
time: 0.000; rss: 46MB	language item collection
time: 0.001; rss: 50MB	resolution
time: 0.000; rss: 50MB	lifetime resolution
time: 0.000; rss: 50MB	looking for entry point
time: 0.000; rss: 50MB	looking for plugin registrar
time: 0.000; rss: 50MB	region resolution
time: 0.000; rss: 50MB	loop checking
time: 0.000; rss: 50MB	static item recursion checking
time: 0.000; rss: 55MB	load_dep_graph
time: 0.001; rss: 55MB	type collecting
time: 0.000; rss: 55MB	variance inference
time: 0.005; rss: 63MB	coherence checking
time: 0.007; rss: 67MB	wf checking
time: 0.000; rss: 67MB	item-types checking
time: 1.514; rss: 144MB	item-bodies checking
time: 0.000; rss: 144MB	drop-impl checking
time: 0.001; rss: 144MB	const checking
time: 0.000; rss: 144MB	privacy checking
time: 0.000; rss: 144MB	stability index
time: 0.000; rss: 144MB	intrinsic checking
time: 0.000; rss: 144MB	effect checking
time: 0.000; rss: 144MB	match checking
time: 0.000; rss: 144MB	liveness checking
time: 0.002; rss: 144MB	rvalue checking
time: 0.001; rss: 145MB	MIR dump
time: 0.000; rss: 145MB	MIR passes
time: 0.001; rss: 145MB	borrow checking
time: 0.000; rss: 145MB	reachability checking
time: 0.000; rss: 145MB	death checking
time: 0.000; rss: 145MB	stability checking
time: 0.000; rss: 145MB	unused lib feature checking
time: 0.004; rss: 147MB	lint checking
time: 0.001; rss: 147MB	resolving dependency formats
time: 0.000; rss: 147MB	Prepare MIR codegen passes
  time: 12.215; rss: 189MB	translation item collection
  time: 0.001; rss: 189MB	codegen unit partitioning
  time: 0.000; rss: 225MB	write metadata
time: 38.304; rss: 225MB	translation
time: 0.000; rss: 225MB	assert dep graph
time: 0.000; rss: 225MB	serialize dep graph
  time: 0.014; rss: 104MB	llvm function passes [0]
  time: 0.001; rss: 104MB	llvm module passes [0]
  time: 0.273; rss: 111MB	codegen passes [0]
  time: 0.000; rss: 104MB	codegen passes [0]
time: 0.296; rss: 103MB	LLVM passes
  time: 0.113; rss: 103MB	running linker
time: 0.114; rss: 103MB	linking
done
