commit b5d0f90929ddaae89609e9bb229a9b8a27e27615
Merge: 1842efb cc6edb2
Author: bors <bors@rust-lang.org>
Date:   Tue Dec 6 17:38:26 2016 +0000

    Auto merge of #38036 - Mark-Simulacrum:polish-2, r=nagisa,eddyb
    
    Simplify calling find_implied_output_region.
    
    @nnethercote added the optimization that find_implied_output_region
    takes a closure as an optimization in #37014, but passing an iterator is
    simpler, and more ergonomic for callers.
rustc: ./syntex-0.42.2@010-incr@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.240; rss: 152MB	expansion
time: 0.000; rss: 152MB	maybe building test harness
time: 0.006; rss: 152MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 152MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 152MB	complete gated feature checking
time: 0.023; rss: 152MB	early lint checks
time: 0.007; rss: 152MB	AST validation
time: 0.076; rss: 166MB	name resolution
time: 0.058; rss: 200MB	lowering ast -> hir
time: 0.010; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.046; rss: 177MB	region resolution
time: 0.008; rss: 177MB	loop checking
time: 0.002; rss: 177MB	static item recursion checking
time: 0.383; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.021; rss: 182MB	stability checking
time: 0.056; rss: 190MB	type collecting
time: 0.004; rss: 190MB	variance inference
time: 0.006; rss: 193MB	impl wf inference
time: 0.026; rss: 197MB	coherence checking
time: 0.090; rss: 200MB	wf checking
time: 0.199; rss: 208MB	item-types checking
time: 3.600; rss: 267MB	item-bodies checking
time: 0.000; rss: 267MB	drop-impl checking
time: 0.222; rss: 277MB	const checking
time: 0.069; rss: 277MB	privacy checking
time: 0.021; rss: 284MB	intrinsic checking
time: 0.016; rss: 284MB	effect checking
time: 0.051; rss: 284MB	match checking
time: 0.050; rss: 291MB	liveness checking
time: 0.182; rss: 293MB	rvalue checking
time: 0.375; rss: 482MB	MIR dump
  time: 0.058; rss: 484MB	SimplifyCfg
  time: 0.076; rss: 484MB	QualifyAndPromoteConstants
  time: 0.124; rss: 500MB	TypeckMir
  time: 0.005; rss: 500MB	SimplifyBranches
  time: 0.034; rss: 500MB	SimplifyCfg
time: 0.296; rss: 500MB	MIR cleanup and validation
time: 0.479; rss: 501MB	borrow checking
time: 0.024; rss: 501MB	reachability checking
time: 0.039; rss: 501MB	death checking
time: 0.000; rss: 501MB	unused lib feature checking
time: 0.179; rss: 501MB	lint checking
time: 0.000; rss: 501MB	resolving dependency formats
  time: 0.004; rss: 501MB	NoLandingPads
  time: 0.028; rss: 501MB	SimplifyCfg
  time: 0.066; rss: 510MB	EraseRegions
  time: 0.011; rss: 510MB	AddCallGuards
  time: 0.275; rss: 529MB	ElaborateDrops
  time: 0.004; rss: 529MB	NoLandingPads
  time: 0.055; rss: 529MB	SimplifyCfg
  time: 0.029; rss: 529MB	InstCombine
  time: 0.013; rss: 529MB	Deaggregator
  time: 0.003; rss: 529MB	CopyPropagation
  time: 0.035; rss: 529MB	SimplifyLocals
  time: 0.010; rss: 529MB	AddCallGuards
  time: 0.003; rss: 529MB	PreTrans
time: 0.536; rss: 529MB	MIR optimisations
  time: 0.068; rss: 538MB	write metadata
  time: 0.402; rss: 551MB	translation item collection
  time: 0.074; rss: 556MB	codegen unit partitioning
  time: 0.049; rss: 1458MB	internalize symbols
time: 11.898; rss: 1458MB	translation
time: 0.000; rss: 1458MB	assert dep graph
time: 1.447; rss: 1486MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1193MB	llvm function passes [0]
time: 0.000; rss: 1197MB	llvm module passes [0]
time: 0.001; rss: 1204MB	llvm function passes [2]
time: 0.000; rss: 1206MB	llvm module passes [2]
time: 0.002; rss: 1214MB	llvm function passes [3]
time: 0.000; rss: 1214MB	llvm module passes [3]
time: 0.002; rss: 1214MB	llvm function passes [1]
time: 0.000; rss: 1214MB	llvm module passes [1]
time: 0.004; rss: 1217MB	llvm function passes [5]
time: 0.004; rss: 1217MB	codegen passes [0]
time: 0.001; rss: 1217MB	llvm module passes [5]
time: 0.001; rss: 1217MB	llvm function passes [0]
time: 0.005; rss: 1217MB	codegen passes [2]
time: 0.000; rss: 1217MB	llvm module passes [0]
time: 0.008; rss: 1227MB	codegen passes [3]
time: 0.018; rss: 1229MB	llvm function passes [4]
time: 0.019; rss: 1233MB	codegen passes [1]
time: 0.008; rss: 1233MB	llvm module passes [4]
time: 0.026; rss: 1233MB	llvm function passes [6]
time: 0.020; rss: 1233MB	codegen passes [0]
time: 0.000; rss: 1233MB	llvm function passes [0]
time: 0.000; rss: 1233MB	llvm module passes [0]
time: 0.001; rss: 1233MB	codegen passes [0]
time: 0.024; rss: 1233MB	llvm function passes [2]
time: 0.016; rss: 1233MB	llvm module passes [6]
time: 0.028; rss: 1233MB	llvm function passes [46]
time: 0.017; rss: 1233MB	llvm function passes [0]
time: 0.001; rss: 1233MB	llvm module passes [0]
time: 0.008; rss: 1237MB	llvm module passes [46]
time: 0.001; rss: 1243MB	llvm function passes [45]
time: 0.000; rss: 1243MB	llvm module passes [45]
time: 0.054; rss: 1243MB	llvm function passes [48]
time: 0.037; rss: 1245MB	llvm module passes [2]
time: 0.000; rss: 1250MB	llvm function passes [15]
time: 0.000; rss: 1250MB	llvm module passes [15]
time: 0.004; rss: 1252MB	codegen passes [15]
time: 0.000; rss: 1252MB	llvm function passes [15]
time: 0.000; rss: 1252MB	llvm module passes [15]
time: 0.001; rss: 1252MB	codegen passes [15]
time: 0.045; rss: 1260MB	llvm function passes [39]
time: 0.012; rss: 1260MB	llvm module passes [39]
time: 0.036; rss: 1260MB	llvm module passes [48]
time: 0.038; rss: 1260MB	llvm function passes [37]
time: 0.049; rss: 1268MB	llvm function passes [40]
time: 0.000; rss: 1272MB	llvm module passes [40]
time: 0.110; rss: 1272MB	llvm function passes [47]
time: 0.106; rss: 1270MB	codegen passes [5]
time: 0.063; rss: 1274MB	codegen passes [45]
time: 0.031; rss: 1282MB	llvm module passes [37]
time: 0.106; rss: 1282MB	codegen passes [0]
time: 0.047; rss: 1282MB	llvm function passes [5]
time: 0.050; rss: 1284MB	codegen passes [40]
time: 0.104; rss: 1284MB	llvm function passes [15]
time: 0.012; rss: 1284MB	llvm module passes [5]
time: 0.188; rss: 1284MB	llvm function passes [10]
time: 0.126; rss: 1284MB	llvm function passes [43]
time: 0.066; rss: 1284MB	llvm function passes [45]
time: 0.025; rss: 1310MB	llvm module passes [15]
time: 0.085; rss: 1310MB	llvm module passes [47]
time: 0.022; rss: 1312MB	llvm module passes [43]
time: 0.160; rss: 1314MB	llvm function passes [42]
time: 0.003; rss: 1321MB	llvm function passes [28]
time: 0.002; rss: 1318MB	llvm module passes [28]
time: 0.176; rss: 1320MB	llvm function passes [38]
time: 0.062; rss: 1320MB	llvm module passes [45]
time: 0.100; rss: 1320MB	llvm function passes [32]
time: 0.007; rss: 1322MB	llvm module passes [32]
time: 0.004; rss: 1334MB	llvm function passes [14]
time: 0.001; rss: 1334MB	llvm module passes [14]
time: 0.134; rss: 1334MB	llvm function passes [0]
time: 0.000; rss: 1330MB	llvm function passes [8]
time: 0.000; rss: 1330MB	llvm module passes [8]
time: 0.004; rss: 1330MB	llvm module passes [0]
time: 0.195; rss: 1330MB	llvm function passes [33]
time: 0.004; rss: 1332MB	codegen passes [8]
time: 0.061; rss: 1332MB	llvm module passes [38]
time: 0.236; rss: 1333MB	llvm function passes [36]
time: 0.145; rss: 1358MB	llvm module passes [10]
time: 0.140; rss: 1358MB	llvm function passes [31]
time: 0.211; rss: 1362MB	llvm function passes [34]
time: 0.265; rss: 1362MB	llvm function passes [35]
time: 0.013; rss: 1364MB	llvm module passes [31]
time: 0.111; rss: 1368MB	codegen passes [28]
time: 0.368; rss: 1368MB	llvm function passes [49]
time: 0.032; rss: 1370MB	llvm module passes [34]
time: 0.175; rss: 1369MB	llvm function passes [30]
time: 0.078; rss: 1371MB	llvm module passes [36]
time: 0.092; rss: 1371MB	llvm module passes [33]
time: 0.018; rss: 1373MB	llvm module passes [30]
time: 0.193; rss: 1374MB	llvm module passes [42]
time: 0.069; rss: 1374MB	llvm module passes [35]
time: 0.000; rss: 1383MB	codegen passes [27]
time: 0.144; rss: 1386MB	llvm module passes [49]
time: 0.218; rss: 1386MB	llvm function passes [41]
time: 0.273; rss: 1384MB	llvm function passes [29]
time: 0.214; rss: 1382MB	llvm function passes [12]
time: 0.021; rss: 1374MB	llvm module passes [12]
time: 0.044; rss: 1384MB	llvm module passes [41]
time: 0.169; rss: 1383MB	llvm function passes [7]
time: 0.423; rss: 1385MB	llvm function passes [40]
time: 0.081; rss: 1380MB	llvm module passes [29]
time: 0.598; rss: 1383MB	llvm function passes [3]
time: 0.345; rss: 1384MB	llvm function passes [44]
time: 0.329; rss: 1387MB	llvm function passes [11]
time: 0.025; rss: 1387MB	llvm module passes [44]
time: 0.375; rss: 1388MB	llvm function passes [9]
time: 0.038; rss: 1392MB	llvm module passes [11]
time: 0.687; rss: 1396MB	llvm function passes [1]
time: 0.148; rss: 1400MB	llvm module passes [40]
time: 0.204; rss: 1412MB	llvm module passes [3]
time: 0.404; rss: 1418MB	codegen passes [14]
time: 0.796; rss: 1419MB	codegen passes [6]
time: 0.288; rss: 1421MB	llvm module passes [9]
time: 0.691; rss: 1409MB	llvm function passes [13]
time: 0.085; rss: 1425MB	llvm module passes [13]
time: 0.520; rss: 1430MB	llvm module passes [7]
time: 0.535; rss: 1431MB	codegen passes [0]
time: 0.425; rss: 1414MB	llvm module passes [1]
time: 0.673; rss: 1494MB	codegen passes [41]
time: 1.088; rss: 1478MB	codegen passes [4]
time: 1.344; rss: 1474MB	codegen passes [46]
time: 1.323; rss: 1471MB	codegen passes [31]
time: 1.459; rss: 1473MB	codegen passes [32]
time: 1.672; rss: 1461MB	codegen passes [48]
time: 1.707; rss: 1445MB	codegen passes [39]
time: 2.018; rss: 1429MB	codegen passes [2]
time: 1.914; rss: 1440MB	codegen passes [5]
time: 1.989; rss: 1442MB	codegen passes [37]
time: 1.929; rss: 1441MB	codegen passes [43]
time: 2.062; rss: 1431MB	codegen passes [15]
time: 1.701; rss: 1467MB	codegen passes [44]
time: 2.002; rss: 1462MB	codegen passes [11]
time: 2.263; rss: 1475MB	codegen passes [12]
time: 2.695; rss: 1505MB	codegen passes [30]
time: 2.748; rss: 1526MB	codegen passes [45]
time: 3.172; rss: 1613MB	codegen passes [38]
time: 3.144; rss: 1584MB	codegen passes [34]
time: 3.260; rss: 1611MB	codegen passes [47]
time: 3.914; rss: 1708MB	codegen passes [42]
time: 3.554; rss: 1683MB	codegen passes [36]
time: 4.011; rss: 1708MB	codegen passes [7]
time: 4.006; rss: 1680MB	codegen passes [33]
time: 4.102; rss: 1676MB	codegen passes [13]
time: 4.236; rss: 1650MB	codegen passes [10]
time: 4.422; rss: 1607MB	codegen passes [35]
time: 4.159; rss: 1599MB	codegen passes [29]
time: 4.658; rss: 1565MB	codegen passes [9]
time: 4.841; rss: 1546MB	codegen passes [49]
time: 5.094; rss: 1475MB	codegen passes [3]
time: 5.153; rss: 1428MB	codegen passes [40]
time: 5.179; rss: 1344MB	codegen passes [1]
time: 7.399; rss: 1343MB	LLVM passes
time: 0.000; rss: 1343MB	serialize work products
time: 1.068; rss: 315MB	linking
done
