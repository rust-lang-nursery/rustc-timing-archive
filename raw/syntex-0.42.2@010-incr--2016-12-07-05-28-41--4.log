commit 5938eba4e30b766751483e93776a87a4db1681f4
Merge: 02ea82d d53f82c
Author: bors <bors@rust-lang.org>
Date:   Wed Dec 7 07:15:31 2016 +0000

    Auto merge of #38149 - bluss:is-empty, r=alexcrichton
    
    Forward more ExactSizeIterator methods and `is_empty` edits
    
    - Forward ExactSizeIterator methods in more places, like `&mut I` and `Box<I>` iterator impls.
    - Improve `VecDeque::is_empty` itself (see commit 4)
    - All the collections iterators now have `len` or `is_empty` forwarded if doing so is a benefit. In the remaining cases, they already use a simple size hint (using something like a stored `usize` value), which is sufficient for the default implementation of len and is_empty.
rustc: ./syntex-0.42.2@010-incr@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.091; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.239; rss: 151MB	expansion
time: 0.000; rss: 151MB	maybe building test harness
time: 0.006; rss: 151MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 151MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 151MB	complete gated feature checking
time: 0.023; rss: 151MB	early lint checks
time: 0.007; rss: 151MB	AST validation
time: 0.075; rss: 166MB	name resolution
time: 0.058; rss: 199MB	lowering ast -> hir
time: 0.010; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.046; rss: 177MB	region resolution
time: 0.007; rss: 177MB	loop checking
time: 0.002; rss: 177MB	static item recursion checking
time: 0.381; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.021; rss: 182MB	stability checking
time: 0.055; rss: 189MB	type collecting
time: 0.003; rss: 189MB	variance inference
time: 0.006; rss: 193MB	impl wf inference
time: 0.026; rss: 196MB	coherence checking
time: 0.089; rss: 199MB	wf checking
time: 0.196; rss: 207MB	item-types checking
time: 3.565; rss: 264MB	item-bodies checking
time: 0.000; rss: 264MB	drop-impl checking
time: 0.224; rss: 276MB	const checking
time: 0.067; rss: 276MB	privacy checking
time: 0.021; rss: 283MB	intrinsic checking
time: 0.016; rss: 283MB	effect checking
time: 0.049; rss: 283MB	match checking
time: 0.050; rss: 291MB	liveness checking
time: 0.179; rss: 293MB	rvalue checking
time: 0.372; rss: 481MB	MIR dump
  time: 0.060; rss: 482MB	SimplifyCfg
  time: 0.079; rss: 482MB	QualifyAndPromoteConstants
  time: 0.126; rss: 499MB	TypeckMir
  time: 0.004; rss: 499MB	SimplifyBranches
  time: 0.033; rss: 499MB	SimplifyCfg
time: 0.303; rss: 499MB	MIR cleanup and validation
time: 0.472; rss: 500MB	borrow checking
time: 0.024; rss: 500MB	reachability checking
time: 0.038; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.177; rss: 500MB	lint checking
time: 0.000; rss: 500MB	resolving dependency formats
  time: 0.004; rss: 500MB	NoLandingPads
  time: 0.027; rss: 500MB	SimplifyCfg
  time: 0.063; rss: 509MB	EraseRegions
  time: 0.011; rss: 509MB	AddCallGuards
  time: 0.270; rss: 531MB	ElaborateDrops
  time: 0.003; rss: 531MB	NoLandingPads
  time: 0.052; rss: 530MB	SimplifyCfg
  time: 0.028; rss: 530MB	InstCombine
  time: 0.012; rss: 530MB	Deaggregator
  time: 0.003; rss: 530MB	CopyPropagation
  time: 0.034; rss: 530MB	SimplifyLocals
  time: 0.010; rss: 530MB	AddCallGuards
  time: 0.003; rss: 530MB	PreTrans
time: 0.521; rss: 530MB	MIR optimisations
  time: 0.064; rss: 537MB	write metadata
  time: 0.398; rss: 551MB	translation item collection
  time: 0.073; rss: 553MB	codegen unit partitioning
  time: 0.048; rss: 1457MB	internalize symbols
time: 11.877; rss: 1457MB	translation
time: 0.000; rss: 1457MB	assert dep graph
time: 1.362; rss: 1485MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1191MB	llvm function passes [0]
time: 0.000; rss: 1195MB	llvm module passes [0]
time: 0.001; rss: 1210MB	llvm function passes [2]
time: 0.000; rss: 1210MB	llvm module passes [2]
time: 0.002; rss: 1214MB	llvm function passes [4]
time: 0.000; rss: 1214MB	llvm module passes [4]
time: 0.002; rss: 1214MB	llvm function passes [1]
time: 0.000; rss: 1214MB	llvm module passes [1]
time: 0.004; rss: 1218MB	llvm function passes [5]
time: 0.001; rss: 1220MB	llvm function passes [9]
time: 0.001; rss: 1220MB	llvm module passes [9]
time: 0.008; rss: 1220MB	codegen passes [2]
time: 0.011; rss: 1220MB	llvm function passes [6]
time: 0.016; rss: 1220MB	llvm function passes [3]
time: 0.017; rss: 1220MB	codegen passes [0]
time: 0.019; rss: 1228MB	llvm module passes [5]
time: 0.008; rss: 1228MB	llvm module passes [3]
time: 0.021; rss: 1228MB	codegen passes [1]
time: 0.018; rss: 1228MB	llvm function passes [2]
time: 0.017; rss: 1228MB	llvm module passes [6]
time: 0.018; rss: 1228MB	llvm function passes [0]
time: 0.033; rss: 1228MB	codegen passes [4]
time: 0.031; rss: 1231MB	codegen passes [9]
time: 0.014; rss: 1231MB	llvm module passes [2]
time: 0.008; rss: 1231MB	llvm module passes [0]
time: 0.013; rss: 1241MB	llvm function passes [9]
time: 0.008; rss: 1248MB	llvm module passes [9]
time: 0.000; rss: 1251MB	llvm function passes [11]
time: 0.000; rss: 1251MB	llvm module passes [11]
time: 0.001; rss: 1251MB	codegen passes [11]
time: 0.003; rss: 1251MB	llvm function passes [11]
time: 0.001; rss: 1251MB	llvm module passes [11]
time: 0.066; rss: 1261MB	llvm function passes [1]
time: 0.048; rss: 1273MB	llvm function passes [12]
time: 0.085; rss: 1270MB	codegen passes [5]
time: 0.012; rss: 1270MB	llvm module passes [12]
time: 0.001; rss: 1274MB	llvm function passes [14]
time: 0.000; rss: 1274MB	llvm module passes [14]
time: 0.040; rss: 1274MB	llvm module passes [1]
time: 0.134; rss: 1278MB	llvm function passes [7]
time: 0.001; rss: 1281MB	llvm function passes [15]
time: 0.000; rss: 1281MB	llvm module passes [15]
time: 0.064; rss: 1283MB	codegen passes [11]
time: 0.000; rss: 1283MB	llvm function passes [11]
time: 0.000; rss: 1283MB	llvm module passes [11]
time: 0.015; rss: 1283MB	codegen passes [14]
time: 0.058; rss: 1283MB	llvm function passes [13]
time: 0.016; rss: 1291MB	llvm module passes [13]
time: 0.000; rss: 1301MB	llvm function passes [17]
time: 0.043; rss: 1301MB	codegen passes [15]
time: 0.000; rss: 1301MB	llvm module passes [17]
time: 0.001; rss: 1301MB	codegen passes [17]
time: 0.069; rss: 1303MB	llvm module passes [7]
time: 0.063; rss: 1303MB	llvm function passes [14]
time: 0.208; rss: 1308MB	llvm function passes [8]
time: 0.037; rss: 1311MB	llvm function passes [15]
time: 0.014; rss: 1311MB	codegen passes [11]
time: 0.033; rss: 1313MB	llvm module passes [14]
time: 0.022; rss: 1319MB	llvm module passes [15]
time: 0.036; rss: 1330MB	llvm function passes [22]
time: 0.013; rss: 1332MB	llvm function passes [20]
time: 0.004; rss: 1332MB	llvm module passes [20]
time: 0.012; rss: 1336MB	llvm module passes [22]
time: 0.094; rss: 1336MB	llvm function passes [16]
time: 0.040; rss: 1336MB	llvm function passes [24]
time: 0.008; rss: 1338MB	llvm module passes [24]
time: 0.022; rss: 1343MB	llvm function passes [27]
time: 0.035; rss: 1350MB	llvm module passes [16]
time: 0.093; rss: 1352MB	llvm function passes [19]
time: 0.089; rss: 1354MB	llvm function passes [23]
time: 0.024; rss: 1356MB	llvm module passes [27]
time: 0.024; rss: 1366MB	llvm module passes [23]
time: 0.146; rss: 1372MB	llvm module passes [8]
time: 0.044; rss: 1372MB	llvm module passes [19]
time: 0.190; rss: 1376MB	llvm function passes [17]
time: 0.073; rss: 1396MB	llvm function passes [21]
time: 0.002; rss: 1396MB	llvm module passes [21]
time: 0.223; rss: 1396MB	llvm function passes [18]
time: 0.119; rss: 1399MB	llvm function passes [26]
time: 0.058; rss: 1399MB	llvm module passes [17]
time: 0.353; rss: 1401MB	llvm function passes [5]
time: 0.048; rss: 1405MB	llvm module passes [26]
time: 0.075; rss: 1414MB	llvm module passes [18]
time: 0.084; rss: 1412MB	codegen passes [21]
time: 0.003; rss: 1414MB	llvm function passes [21]
time: 0.197; rss: 1413MB	llvm function passes [28]
time: 0.013; rss: 1417MB	llvm module passes [21]
time: 0.207; rss: 1421MB	llvm function passes [29]
time: 0.267; rss: 1423MB	llvm function passes [25]
time: 0.194; rss: 1418MB	codegen passes [20]
time: 0.000; rss: 1417MB	llvm function passes [20]
time: 0.000; rss: 1417MB	llvm module passes [20]
time: 0.003; rss: 1415MB	codegen passes [20]
time: 0.000; rss: 1410MB	codegen passes [20]
time: 0.456; rss: 1416MB	codegen passes [9]
time: 0.092; rss: 1415MB	llvm module passes [28]
time: 0.549; rss: 1417MB	llvm function passes [10]
time: 0.080; rss: 1410MB	llvm module passes [29]
time: 0.098; rss: 1410MB	llvm function passes [35]
time: 0.247; rss: 1410MB	llvm function passes [30]
time: 0.040; rss: 1405MB	llvm module passes [35]
time: 0.147; rss: 1406MB	llvm module passes [25]
time: 0.077; rss: 1416MB	codegen passes [21]
time: 0.663; rss: 1415MB	codegen passes [6]
time: 0.259; rss: 1417MB	llvm function passes [33]
time: 0.130; rss: 1420MB	llvm module passes [30]
time: 0.297; rss: 1425MB	llvm function passes [32]
time: 0.104; rss: 1433MB	llvm module passes [33]
time: 0.381; rss: 1411MB	llvm function passes [34]
time: 0.140; rss: 1420MB	llvm module passes [32]
time: 0.909; rss: 1421MB	llvm function passes [4]
time: 0.557; rss: 1431MB	llvm function passes [31]
time: 0.549; rss: 1431MB	llvm module passes [5]
time: 0.947; rss: 1434MB	codegen passes [3]
time: 0.840; rss: 1422MB	llvm function passes [11]
time: 0.215; rss: 1433MB	llvm module passes [34]
time: 0.554; rss: 1436MB	llvm module passes [10]
time: 0.278; rss: 1450MB	llvm module passes [4]
time: 0.256; rss: 1458MB	llvm module passes [11]
time: 0.487; rss: 1479MB	llvm module passes [31]
time: 1.154; rss: 1476MB	codegen passes [24]
time: 1.525; rss: 1482MB	codegen passes [0]
time: 0.999; rss: 1471MB	codegen passes [35]
time: 1.291; rss: 1468MB	codegen passes [12]
time: 1.468; rss: 1495MB	codegen passes [22]
time: 1.813; rss: 1452MB	codegen passes [2]
time: 1.670; rss: 1447MB	codegen passes [27]
time: 1.829; rss: 1460MB	codegen passes [16]
time: 1.279; rss: 1468MB	codegen passes [30]
time: 2.396; rss: 1504MB	codegen passes [15]
time: 2.457; rss: 1497MB	codegen passes [13]
time: 2.357; rss: 1483MB	codegen passes [26]
time: 2.074; rss: 1488MB	codegen passes [33]
time: 2.378; rss: 1479MB	codegen passes [23]
time: 2.116; rss: 1519MB	codegen passes [32]
time: 2.627; rss: 1512MB	codegen passes [1]
time: 2.815; rss: 1556MB	codegen passes [19]
time: 3.208; rss: 1572MB	codegen passes [14]
time: 3.919; rss: 1740MB	codegen passes [17]
time: 3.709; rss: 1706MB	codegen passes [29]
time: 3.843; rss: 1670MB	codegen passes [34]
time: 3.784; rss: 1622MB	codegen passes [7]
time: 3.584; rss: 1598MB	codegen passes [5]
time: 4.275; rss: 1633MB	codegen passes [18]
time: 3.663; rss: 1581MB	codegen passes [11]
time: 4.573; rss: 1593MB	codegen passes [28]
time: 4.303; rss: 1535MB	codegen passes [31]
time: 3.945; rss: 1506MB	codegen passes [4]
time: 4.907; rss: 1456MB	codegen passes [8]
time: 5.393; rss: 1404MB	codegen passes [25]
time: 5.510; rss: 1327MB	codegen passes [10]
time: 7.741; rss: 1324MB	LLVM passes
time: 0.000; rss: 1324MB	serialize work products
time: 1.091; rss: 297MB	linking
done
