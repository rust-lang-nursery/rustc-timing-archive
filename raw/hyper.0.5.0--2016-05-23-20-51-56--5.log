commit 57ef015132ec09345b88d2ec20a9d9809b5d3dfc
Merge: 1ccada6 eb67f49
Author: bors <bors@rust-lang.org>
Date:   Mon May 23 13:31:59 2016 -0700

    Auto merge of #33664 - huonw:abs_sub, r=alexcrichton
    
    Deprecate {f32,f64}::abs_sub.
    
    The abs_sub name is misleading: the function actually computes the
    positive difference (`fdim` in C), not the `(x - y).abs()` that *many* people expect
    from the name.
    
    This function can be replaced with just `(x - y).max(0.0)`, mirroring
    the `abs` version, but this behaves differently with NAN: `NAN.max(0.0)
    == 0.0`, while `NAN.positive_diff(0.0) == NAN`. People who absolutely
    need that behaviour can use the C function directly and/or talk to the libs
    team (we haven't encountered a concrete use-case for this functionality).
    
    Closes #30315.
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.031; rss: 53MB	parsing
Lines of code:             9154
Pre-expansion node count:  45851
time: 0.008; rss: 53MB	configuration 1
time: 0.000; rss: 53MB	recursion limit
time: 0.000; rss: 53MB	crate injection
time: 0.021; rss: 94MB	macro loading
time: 0.000; rss: 94MB	plugin loading
time: 0.000; rss: 94MB	plugin registration
time: 0.188; rss: 100MB	expansion
time: 0.030; rss: 100MB	configuration 2
time: 0.000; rss: 100MB	gated configuration checking
time: 0.011; rss: 100MB	maybe building test harness
time: 0.008; rss: 100MB	prelude injection
time: 0.001; rss: 100MB	checking that all macro invocations are gone
time: 0.000; rss: 100MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 100MB	complete gated feature checking
Post-expansion node count: 103616
time: 0.008; rss: 100MB	assigning node ids
time: 0.003; rss: 102MB	collecting defs
time: 0.011; rss: 113MB	external crate/lib resolution
time: 0.006; rss: 113MB	early lint checks
time: 0.023; rss: 120MB	name resolution
time: 0.012; rss: 126MB	lowering ast -> hir
time: 0.002; rss: 128MB	indexing hir
time: 0.001; rss: 128MB	attribute checking
time: 0.001; rss: 119MB	language item collection
time: 0.002; rss: 119MB	lifetime resolution
time: 0.000; rss: 119MB	looking for entry point
time: 0.000; rss: 119MB	looking for plugin registrar
time: 0.005; rss: 122MB	region resolution
time: 0.001; rss: 122MB	loop checking
time: 0.001; rss: 122MB	static item recursion checking
time: 0.000; rss: 122MB	load_dep_graph
time: 0.018; rss: 125MB	type collecting
time: 0.000; rss: 125MB	variance inference
time: 0.043; rss: 131MB	coherence checking
time: 0.088; rss: 134MB	wf checking
time: 0.034; rss: 134MB	item-types checking
time: 0.499; rss: 144MB	item-bodies checking
time: 0.000; rss: 144MB	drop-impl checking
time: 0.042; rss: 147MB	const checking
time: 0.007; rss: 147MB	privacy checking
time: 0.001; rss: 147MB	stability index
time: 0.006; rss: 147MB	intrinsic checking
time: 0.002; rss: 147MB	effect checking
time: 0.014; rss: 147MB	match checking
time: 0.005; rss: 147MB	liveness checking
time: 0.030; rss: 147MB	rvalue checking
time: 0.059; rss: 153MB	MIR dump
time: 0.039; rss: 155MB	MIR passes
time: 0.070; rss: 155MB	borrow checking
time: 0.003; rss: 155MB	reachability checking
time: 0.006; rss: 155MB	death checking
time: 0.006; rss: 155MB	stability checking
time: 0.000; rss: 155MB	unused lib feature checking
time: 0.049; rss: 155MB	lint checking
time: 0.000; rss: 155MB	resolving dependency formats
time: 0.012; rss: 155MB	Prepare MIR codegen passes
  time: 0.277; rss: 164MB	translation item collection
  time: 0.008; rss: 166MB	codegen unit partitioning
  time: 0.131; rss: 291MB	write metadata
time: 1.718; rss: 291MB	translation
time: 0.001; rss: 291MB	assert dep graph
time: 0.000; rss: 291MB	serialize dep graph
  time: 0.097; rss: 180MB	llvm function passes [0]
  time: 0.051; rss: 182MB	llvm module passes [0]
  time: 1.624; rss: 185MB	codegen passes [0]
  time: 0.001; rss: 138MB	codegen passes [0]
time: 1.975; rss: 137MB	LLVM passes
time: 0.175; rss: 135MB	linking
done
