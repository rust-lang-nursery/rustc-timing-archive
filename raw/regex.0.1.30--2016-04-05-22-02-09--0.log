commit 772c600d4d6f39daa6d07d1a60ee0df3d3426978
Merge: 241a9d0 432eb8a
Author: bors <bors@rust-lang.org>
Date:   Tue Apr 5 18:58:24 2016 -0700

    Auto merge of #32688 - jseyfried:ast_groundwork_for_1422, r=pnkfelix
    
    [breaking-batch] Add support for `pub(restricted)` syntax in the AST
    
    This PR allows the AST to represent the `pub(restricted)` syntax from RFC 1422 (cc #32409).
    
    More specifically, it makes `ast::Visibility` non-`Copy` and adds two new variants, `Visibility::Crate` for `pub(crate)` and `Visitibility::Restricted { path: P<Path>, id: NodeId }` for `pub(path)`.
    
    plugin-[breaking-change] cc #31645
    r? @pnkfelix
rustc: ./regex.0.1.30
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling regex v0.1.30 (file:///root/benchmarks/regex.0.1.30)
time: 0.060; rss: 50MB	parsing
Lines of code:             8558
Pre-expansion node count:  58217
time: 0.011; rss: 50MB	configuration 1
time: 0.000; rss: 50MB	recursion limit
time: 0.001; rss: 50MB	gated macro checking
time: 0.000; rss: 50MB	crate injection
time: 0.003; rss: 53MB	macro loading
time: 0.000; rss: 53MB	plugin loading
time: 0.000; rss: 53MB	plugin registration
time: 0.057; rss: 56MB	expansion
time: 0.001; rss: 56MB	complete gated feature checking 1
time: 0.013; rss: 56MB	configuration 2
time: 0.000; rss: 56MB	gated configuration checking
time: 0.006; rss: 56MB	maybe building test harness
time: 0.006; rss: 56MB	prelude injection
time: 0.001; rss: 56MB	checking that all macro invocations are gone
time: 0.000; rss: 56MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 56MB	complete gated feature checking 2
time: 0.001; rss: 56MB	const fn bodies and arguments
Post-expansion node count: 68485
time: 0.006; rss: 56MB	assigning node ids
time: 0.009; rss: 67MB	lowering ast -> hir
time: 0.002; rss: 69MB	indexing hir
time: 0.001; rss: 69MB	attribute checking
time: 0.007; rss: 69MB	early lint checks
time: 0.001; rss: 61MB	external crate/lib resolution
time: 0.001; rss: 61MB	language item collection
time: 0.010; rss: 72MB	resolution
time: 0.001; rss: 72MB	lifetime resolution
time: 0.000; rss: 72MB	looking for entry point
time: 0.000; rss: 72MB	looking for plugin registrar
time: 0.005; rss: 77MB	region resolution
time: 0.001; rss: 77MB	loop checking
time: 0.001; rss: 77MB	static item recursion checking
time: 0.008; rss: 87MB	type collecting
time: 0.000; rss: 87MB	variance inference
time: 0.065; rss: 97MB	coherence checking
time: 0.010; rss: 97MB	wf checking
time: 0.255; rss: 102MB	item-types checking
time: 0.189; rss: 116MB	item-bodies checking
time: 0.000; rss: 116MB	drop-impl checking
time: 0.024; rss: 119MB	const checking
time: 0.003; rss: 119MB	privacy checking
time: 0.001; rss: 119MB	stability index
time: 0.001; rss: 119MB	intrinsic checking
time: 0.001; rss: 119MB	effect checking
time: 0.003; rss: 119MB	match checking
time: 0.002; rss: 119MB	liveness checking
time: 0.007; rss: 119MB	rvalue checking
time: 0.014; rss: 120MB	MIR dump
time: 0.007; rss: 120MB	MIR passes
time: 0.019; rss: 120MB	borrow checking
time: 0.000; rss: 120MB	reachability checking
time: 0.003; rss: 120MB	death checking
time: 0.002; rss: 120MB	stability checking
time: 0.000; rss: 120MB	unused lib feature checking
time: 0.029; rss: 120MB	lint checking
time: 0.000; rss: 120MB	resolving dependency formats
time: 0.004; rss: 120MB	Prepare MIR codegen passes
  time: 0.053; rss: 132MB	translation item collection
  time: 0.130; rss: 186MB	write metadata
time: 0.605; rss: 186MB	translation
  time: 0.036; rss: 121MB	llvm function passes [0]
  time: 0.017; rss: 121MB	llvm module passes [0]
  time: 0.612; rss: 126MB	codegen passes [0]
  time: 0.001; rss: 106MB	codegen passes [0]
time: 0.737; rss: 104MB	LLVM passes
time: 0.065; rss: 103MB	linking
done
