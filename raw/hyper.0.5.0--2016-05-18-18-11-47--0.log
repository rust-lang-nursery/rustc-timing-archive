commit 9a140454ea47b7fd107b6e963b7ea2aef74e9518
Merge: 9743c66 f860f8b
Author: bors <bors@rust-lang.org>
Date:   Wed May 18 08:47:53 2016 -0700

    Auto merge of #33476 - nikomatsakis:incr-comp-xcrate, r=mw
    
    track incr. comp. dependencies across crates
    
    This PR refactors the compiler's incremental compilation hashing so that it can track dependencies across crates. The main bits are:
    
    - computing a hash representing the metadata for an item we are emitting
      - we do this by making `MetaData(X)` be the current task while computing metadata for an item
      - this naturally registers reads from any tables and things that we read for that purpose
      - we can then hash all the inputs to those tables
    - tracking when we access metadata
      - we do this by registering a read of `MetaData(X)` for each foreign item `X` whose metadata we read
    - hashing metadata from foreign items
      - we do this by loading up metadata from a file in the incr. comp. directory
      - if there is no file, we use the SVH for the entire crate
    
    There is one very simple test only at this point. The next PR will be focused on expanding out the tests.
    
    Note that this is based on top of https://github.com/rust-lang/rust/pull/33228
    
    r? @michaelwoerister
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
 Downloading regex v0.1.70
   Compiling traitobject v0.0.1
   Compiling winapi v0.2.7
   Compiling rustc-serialize v0.3.19
   Compiling lazy_static v0.1.16
   Compiling typeable v0.1.2
   Compiling matches v0.1.2
   Compiling bitflags v0.3.3
   Compiling log v0.3.6
   Compiling pkg-config v0.3.8
   Compiling libc v0.1.12
   Compiling unicase v0.1.0
   Compiling winapi-build v0.1.1
   Compiling libc v0.2.11
   Compiling gcc v0.3.28
   Compiling kernel32-sys v0.2.2
   Compiling mime v0.0.11
   Compiling httparse v0.1.6
   Compiling num_cpus v0.2.12
   Compiling time v0.1.35
   Compiling rand v0.3.14
   Compiling openssl-sys v0.6.7
   Compiling openssl v0.6.7
   Compiling uuid v0.1.18
   Compiling url v0.2.38
   Compiling cookie v0.1.21
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.032; rss: 53MB	parsing
Lines of code:             9154
Pre-expansion node count:  45851
time: 0.008; rss: 53MB	configuration 1
time: 0.000; rss: 53MB	recursion limit
time: 0.000; rss: 53MB	crate injection
time: 0.020; rss: 93MB	macro loading
time: 0.000; rss: 93MB	plugin loading
time: 0.000; rss: 93MB	plugin registration
time: 0.190; rss: 101MB	expansion
time: 0.029; rss: 101MB	configuration 2
time: 0.000; rss: 101MB	gated configuration checking
time: 0.011; rss: 101MB	maybe building test harness
time: 0.008; rss: 101MB	prelude injection
time: 0.001; rss: 101MB	checking that all macro invocations are gone
time: 0.000; rss: 101MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 101MB	complete gated feature checking
Post-expansion node count: 103616
time: 0.008; rss: 101MB	assigning node ids
time: 0.003; rss: 103MB	collecting defs
time: 0.011; rss: 113MB	external crate/lib resolution
time: 0.006; rss: 113MB	early lint checks
time: 0.024; rss: 119MB	name resolution
time: 0.011; rss: 126MB	lowering ast -> hir
time: 0.002; rss: 128MB	indexing hir
time: 0.002; rss: 128MB	attribute checking
time: 0.001; rss: 118MB	language item collection
time: 0.002; rss: 118MB	lifetime resolution
time: 0.000; rss: 118MB	looking for entry point
time: 0.000; rss: 118MB	looking for plugin registrar
time: 0.005; rss: 121MB	region resolution
time: 0.001; rss: 121MB	loop checking
time: 0.001; rss: 121MB	static item recursion checking
time: 0.000; rss: 121MB	load_dep_graph
time: 0.018; rss: 125MB	type collecting
time: 0.000; rss: 125MB	variance inference
time: 0.043; rss: 131MB	coherence checking
time: 0.091; rss: 131MB	wf checking
time: 0.035; rss: 131MB	item-types checking
time: 0.511; rss: 142MB	item-bodies checking
time: 0.000; rss: 142MB	drop-impl checking
time: 0.043; rss: 144MB	const checking
time: 0.007; rss: 144MB	privacy checking
time: 0.001; rss: 144MB	stability index
time: 0.006; rss: 144MB	intrinsic checking
time: 0.002; rss: 144MB	effect checking
time: 0.015; rss: 144MB	match checking
time: 0.005; rss: 144MB	liveness checking
time: 0.030; rss: 144MB	rvalue checking
time: 0.061; rss: 153MB	MIR dump
time: 0.040; rss: 155MB	MIR passes
time: 0.071; rss: 155MB	borrow checking
time: 0.003; rss: 155MB	reachability checking
time: 0.006; rss: 155MB	death checking
time: 0.006; rss: 155MB	stability checking
time: 0.000; rss: 155MB	unused lib feature checking
time: 0.050; rss: 155MB	lint checking
time: 0.000; rss: 155MB	resolving dependency formats
time: 0.011; rss: 155MB	Prepare MIR codegen passes
  time: 0.278; rss: 162MB	translation item collection
  time: 0.008; rss: 164MB	codegen unit partitioning
  time: 0.131; rss: 291MB	write metadata
time: 1.709; rss: 291MB	translation
time: 0.001; rss: 291MB	assert dep graph
time: 0.000; rss: 291MB	serialize dep graph
  time: 0.097; rss: 179MB	llvm function passes [0]
  time: 0.052; rss: 182MB	llvm module passes [0]
  time: 1.624; rss: 185MB	codegen passes [0]
  time: 0.001; rss: 135MB	codegen passes [0]
time: 1.977; rss: 135MB	LLVM passes
time: 0.173; rss: 133MB	linking
done
