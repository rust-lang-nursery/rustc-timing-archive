commit d64b7030658c839c60d7c7165e8be19283c3f28c
Merge: 2217bd7 49c6b3c
Author: bors <bors@rust-lang.org>
Date:   Fri Nov 25 20:19:47 2016 -0600

    Auto merge of #37960 - samestep:five, r=frewsxcv
    
    Use literal 5 instead of five in book section 4.1
    
    The other two code snippets in this sentence are valid code, so it makes more sense to use the literal `5` rather than the invalid symbol `five`.
rustc: ./inflate-0.1.0
cargo rustc  -- -Ztime-passes -Zinput-stats
   Compiling inflate v0.1.0 (file:///root/benchmarks/inflate-0.1.0)
time: 0.007; rss: 40MB	parsing
Lines of code:             956
Pre-expansion node count:  4736
time: 0.000; rss: 40MB	recursion limit
time: 0.000; rss: 40MB	crate injection
time: 0.000; rss: 40MB	plugin loading
time: 0.000; rss: 40MB	plugin registration
time: 0.071; rss: 69MB	expansion
time: 0.000; rss: 69MB	maybe building test harness
time: 0.000; rss: 69MB	maybe creating a macro crate
Post-expansion node count: 55748
time: 0.000; rss: 69MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 69MB	complete gated feature checking
time: 0.002; rss: 69MB	early lint checks
time: 0.000; rss: 69MB	AST validation
time: 0.011; rss: 71MB	name resolution
time: 0.008; rss: 74MB	lowering ast -> hir
time: 0.001; rss: 74MB	indexing hir
time: 0.000; rss: 74MB	attribute checking
time: 0.000; rss: 71MB	language item collection
time: 0.001; rss: 71MB	lifetime resolution
time: 0.000; rss: 71MB	looking for entry point
time: 0.000; rss: 71MB	looking for plugin registrar
time: 0.006; rss: 72MB	region resolution
time: 0.000; rss: 72MB	loop checking
time: 0.000; rss: 72MB	static item recursion checking
time: 0.019; rss: 72MB	compute_incremental_hashes_map
time: 0.000; rss: 72MB	load_dep_graph
time: 0.002; rss: 74MB	type collecting
time: 0.000; rss: 74MB	variance inference
time: 0.000; rss: 74MB	impl wf inference
time: 0.009; rss: 75MB	coherence checking
time: 0.001; rss: 75MB	wf checking
time: 0.001; rss: 75MB	item-types checking
time: 1.655; rss: 84MB	item-bodies checking
time: 0.000; rss: 84MB	drop-impl checking
time: 0.014; rss: 84MB	const checking
time: 0.001; rss: 84MB	privacy checking
time: 0.000; rss: 84MB	stability index
time: 0.000; rss: 84MB	intrinsic checking
time: 0.000; rss: 84MB	effect checking
time: 0.002; rss: 84MB	match checking
time: 0.313; rss: 83MB	liveness checking
time: 0.011; rss: 83MB	rvalue checking
time: 0.035; rss: 101MB	MIR dump
  time: 0.007; rss: 102MB	SimplifyCfg
  time: 0.005; rss: 102MB	QualifyAndPromoteConstants
  time: 0.007; rss: 102MB	TypeckMir
  time: 0.000; rss: 102MB	SimplifyBranches
  time: 0.002; rss: 102MB	SimplifyCfg
time: 0.021; rss: 102MB	MIR cleanup and validation
time: 0.202; rss: 105MB	borrow checking
time: 0.000; rss: 105MB	reachability checking
time: 0.003; rss: 105MB	death checking
time: 0.002; rss: 105MB	stability checking
time: 0.000; rss: 105MB	unused lib feature checking
time: 0.015; rss: 106MB	lint checking
time: 0.000; rss: 106MB	resolving dependency formats
  time: 0.000; rss: 106MB	NoLandingPads
  time: 0.002; rss: 106MB	SimplifyCfg
  time: 0.002; rss: 106MB	EraseRegions
  time: 0.001; rss: 107MB	AddCallGuards
  time: 0.235; rss: 108MB	ElaborateDrops
  time: 0.000; rss: 108MB	NoLandingPads
  time: 0.006; rss: 108MB	SimplifyCfg
  time: 0.003; rss: 108MB	InstCombine
  time: 0.000; rss: 108MB	Deaggregator
  time: 0.000; rss: 108MB	CopyPropagation
  time: 0.003; rss: 108MB	SimplifyLocals
  time: 0.001; rss: 107MB	AddCallGuards
  time: 0.000; rss: 107MB	PreTrans
time: 0.253; rss: 107MB	MIR optimisations
  time: 0.001; rss: 107MB	write metadata
  time: 0.008; rss: 108MB	translation item collection
  time: 0.001; rss: 108MB	codegen unit partitioning
  time: 0.001; rss: 121MB	internalize symbols
time: 0.145; rss: 121MB	translation
time: 0.000; rss: 121MB	assert dep graph
time: 0.000; rss: 121MB	serialize dep graph
  time: 0.027; rss: 90MB	llvm function passes [0]
  time: 0.006; rss: 91MB	llvm module passes [0]
  time: 0.665; rss: 94MB	codegen passes [0]
  time: 0.000; rss: 94MB	codegen passes [0]
time: 0.734; rss: 94MB	LLVM passes
time: 0.000; rss: 94MB	serialize work products
time: 0.019; rss: 83MB	linking
done
