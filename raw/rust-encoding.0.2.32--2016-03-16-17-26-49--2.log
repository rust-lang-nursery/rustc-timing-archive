commit eeb062b8b1a1bb26151bed05ddd16fe55c979ee1
Merge: fd5603b 0e3334e
Author: bors <bors@rust-lang.org>
Date:   Wed Mar 16 14:20:36 2016 -0700

    Auto merge of #31746 - erickt:newline, r=sfackler
    
    syntax: Always pretty print a newline after doc comments
    
    Before this patch, code that had a doc comment as the first
    line, as in:
    
    ```rust
    /// Foo
    struct Foo;
    ```
    
    Was pretty printed into:
    
    ```rust
    ///Foostruct Foo;
    ```
    
    This makes sure that that there is always a trailing newline
    after a doc comment.
    
    Closes #31722
rustc: ./rust-encoding.0.2.32
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling encoding v0.2.32 (file:///root/benchmarks/rust-encoding.0.2.32)
time: 0.024; rss: 43MB	parsing
Lines of code:             6441
Pre-expansion node count:  30335
time: 0.006; rss: 43MB	configuration 1
time: 0.000; rss: 43MB	recursion limit
time: 0.000; rss: 43MB	gated macro checking
time: 0.000; rss: 43MB	crate injection
time: 0.003; rss: 46MB	macro loading
time: 0.000; rss: 46MB	plugin loading
time: 0.000; rss: 46MB	plugin registration
time: 0.044; rss: 49MB	expansion
time: 0.001; rss: 49MB	complete gated feature checking 1
time: 0.008; rss: 49MB	configuration 2
time: 0.000; rss: 49MB	gated configuration checking
time: 0.004; rss: 49MB	maybe building test harness
time: 0.003; rss: 49MB	prelude injection
time: 0.000; rss: 49MB	checking that all macro invocations are gone
time: 0.000; rss: 49MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 49MB	complete gated feature checking 2
time: 0.000; rss: 49MB	const fn bodies and arguments
Post-expansion node count: 41783
time: 0.003; rss: 49MB	assigning node ids
time: 0.004; rss: 52MB	lowering ast -> hir
time: 0.001; rss: 54MB	indexing hir
time: 0.001; rss: 54MB	attribute checking
time: 0.002; rss: 54MB	early lint checks
time: 0.001; rss: 53MB	external crate/lib resolution
time: 0.000; rss: 53MB	language item collection
time: 0.008; rss: 62MB	resolution
time: 0.000; rss: 62MB	lifetime resolution
time: 0.000; rss: 62MB	looking for entry point
time: 0.000; rss: 62MB	looking for plugin registrar
time: 0.002; rss: 64MB	region resolution
time: 0.000; rss: 64MB	loop checking
time: 0.000; rss: 64MB	static item recursion checking
time: 0.005; rss: 66MB	type collecting
time: 0.000; rss: 66MB	variance inference
time: 0.140; rss: 84MB	coherence checking
time: 0.017; rss: 84MB	wf checking
time: 0.012; rss: 84MB	item-types checking
time: 0.203; rss: 97MB	item-bodies checking
time: 0.000; rss: 97MB	drop-impl checking
time: 0.010; rss: 97MB	const checking
time: 0.002; rss: 97MB	privacy checking
time: 0.000; rss: 97MB	stability index
time: 0.001; rss: 97MB	intrinsic checking
time: 0.000; rss: 97MB	effect checking
time: 0.006; rss: 97MB	match checking
time: 0.002; rss: 97MB	liveness checking
time: 0.006; rss: 97MB	rvalue checking
time: 0.016; rss: 101MB	MIR dump
time: 0.009; rss: 101MB	MIR passes
time: 0.021; rss: 101MB	borrow checking
time: 0.000; rss: 101MB	reachability checking
time: 0.002; rss: 101MB	death checking
time: 0.002; rss: 101MB	stability checking
time: 0.000; rss: 101MB	unused lib feature checking
time: 0.018; rss: 101MB	lint checking
time: 0.000; rss: 101MB	resolving dependency formats
  time: 0.024; rss: 113MB	translation item collection
  time: 0.057; rss: 147MB	write metadata
time: 0.326; rss: 147MB	translation
  time: 0.026; rss: 108MB	llvm function passes [0]
  time: 0.048; rss: 111MB	llvm module passes [0]
  time: 0.557; rss: 116MB	codegen passes [0]
  time: 0.001; rss: 101MB	codegen passes [0]
time: 0.696; rss: 100MB	LLVM passes
time: 0.051; rss: 99MB	linking
done
