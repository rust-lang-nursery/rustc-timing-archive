commit 98a3502da1456b209ff031604cabbbcb9d0eddf1
Merge: 5bfe107 a61d85b
Author: bors <bors@rust-lang.org>
Date:   Sat Oct 15 15:38:52 2016 -0700

    Auto merge of #37152 - arielb1:drop-cache, r=pnkfelix
    
    add a per-param-env cache to `impls_bound`
    
    There used to be only a global cache, which led to uncached calls to
    trait selection when there were type parameters.
    
    This causes a 20% decrease in borrow-checking time and an overall 0.5% performance increase during bootstrapping (as borrow-checking tends to be a tiny part of compilation time).
    
    Fixes #37106 (drop elaboration times are now ~half of borrow checking,
    so might still be worthy of optimization, but not critical).
    
    r? @pnkfelix
rustc: ./syntex-0.42.2
cargo rustc -p syntex_syntax -- -Ztime-passes -Zinput-stats
   Compiling syntex_syntax v0.42.0
time: 0.161; rss: 71MB	parsing
Lines of code:             33687
Pre-expansion node count:  224033
time: 0.000; rss: 72MB	recursion limit
time: 0.000; rss: 72MB	crate injection
time: 0.000; rss: 72MB	plugin loading
time: 0.000; rss: 72MB	plugin registration
time: 0.363; rss: 141MB	expansion
time: 0.000; rss: 141MB	maybe building test harness
time: 0.007; rss: 141MB	maybe creating a macro crate
Post-expansion node count: 641571
time: 0.000; rss: 141MB	checking for inline asm in case the target doesn't support it
time: 0.013; rss: 141MB	complete gated feature checking
time: 0.023; rss: 141MB	early lint checks
time: 0.008; rss: 141MB	AST validation
time: 0.116; rss: 157MB	name resolution
time: 0.124; rss: 197MB	lowering ast -> hir
time: 0.023; rss: 205MB	indexing hir
time: 0.007; rss: 205MB	attribute checking
time: 0.006; rss: 158MB	language item collection
time: 0.013; rss: 158MB	lifetime resolution
time: 0.000; rss: 158MB	looking for entry point
time: 0.000; rss: 158MB	looking for plugin registrar
time: 0.063; rss: 168MB	region resolution
time: 0.006; rss: 168MB	loop checking
time: 0.006; rss: 168MB	static item recursion checking
time: 0.265; rss: 169MB	compute_incremental_hashes_map
time: 0.000; rss: 169MB	load_dep_graph
time: 0.043; rss: 175MB	type collecting
time: 0.001; rss: 175MB	variance inference
time: 0.038; rss: 179MB	coherence checking
time: 0.106; rss: 181MB	wf checking
time: 0.207; rss: 186MB	item-types checking
time: 4.057; rss: 230MB	item-bodies checking
time: 0.000; rss: 230MB	drop-impl checking
time: 0.283; rss: 236MB	const checking
time: 0.057; rss: 236MB	privacy checking
time: 0.007; rss: 236MB	stability index
time: 0.023; rss: 236MB	intrinsic checking
time: 0.019; rss: 236MB	effect checking
time: 0.061; rss: 236MB	match checking
time: 0.093; rss: 227MB	liveness checking
time: 0.236; rss: 227MB	rvalue checking
time: 0.661; rss: 403MB	MIR dump
  time: 0.060; rss: 410MB	SimplifyCfg
  time: 0.084; rss: 410MB	QualifyAndPromoteConstants
  time: 0.113; rss: 410MB	TypeckMir
  time: 0.005; rss: 410MB	SimplifyBranches
  time: 0.031; rss: 410MB	SimplifyCfg
time: 0.293; rss: 410MB	MIR passes
time: 0.593; rss: 413MB	borrow checking
time: 0.023; rss: 413MB	reachability checking
time: 0.047; rss: 413MB	death checking
time: 0.049; rss: 415MB	stability checking
time: 0.000; rss: 415MB	unused lib feature checking
time: 0.228; rss: 415MB	lint checking
time: 0.000; rss: 415MB	resolving dependency formats
  time: 0.003; rss: 415MB	NoLandingPads
  time: 0.027; rss: 415MB	SimplifyCfg
  time: 0.092; rss: 422MB	EraseRegions
  time: 0.012; rss: 422MB	AddCallGuards
  time: 0.329; rss: 443MB	ElaborateDrops
  time: 0.003; rss: 443MB	NoLandingPads
  time: 0.054; rss: 443MB	SimplifyCfg
  time: 0.032; rss: 443MB	InstCombine
  time: 0.012; rss: 443MB	Deaggregator
  time: 0.003; rss: 443MB	CopyPropagation
  time: 0.010; rss: 443MB	AddCallGuards
  time: 0.003; rss: 443MB	PreTrans
time: 0.580; rss: 443MB	Prepare MIR codegen passes
  time: 0.282; rss: 449MB	write metadata
  time: 0.472; rss: 459MB	translation item collection
  time: 0.065; rss: 467MB	codegen unit partitioning
  time: 0.054; rss: 714MB	internalize symbols
time: 5.807; rss: 595MB	translation
time: 0.000; rss: 595MB	assert dep graph
time: 0.000; rss: 595MB	serialize dep graph
  time: 0.516; rss: 405MB	llvm function passes [0]
  time: 0.259; rss: 414MB	llvm module passes [0]
  time: 10.145; rss: 410MB	codegen passes [0]
  time: 0.002; rss: 406MB	codegen passes [0]
time: 11.834; rss: 406MB	LLVM passes
time: 0.000; rss: 406MB	serialize work products
time: 0.670; rss: 104MB	linking
done
