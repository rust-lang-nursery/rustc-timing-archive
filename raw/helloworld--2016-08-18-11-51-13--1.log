commit 43c090ed69a624928c03ad61a29a59badf80ff7b
Merge: 9d6520f 864b3ef
Author: bors <bors@rust-lang.org>
Date:   Thu Aug 18 05:39:11 2016 -0700

    Auto merge of #35732 - jonathandturner:region_error_labels, r=nikomatsakis
    
    Move 'doesn't live long enough' errors to labels
    
    This patch moves the "doesn't live long enough" region-style errors to instead use labels.
    
    An example follows.
    
    Before:
    
    ```
    error: `x` does not live long enough
      --> src/test/compile-fail/send-is-not-static-ensures-scoping.rs:26:18
       |
    26 |         let y = &x;
       |                  ^
       |
    note: reference must be valid for the block at 23:10...
      --> src/test/compile-fail/send-is-not-static-ensures-scoping.rs:23:11
       |
    23 | fn main() {
       |           ^
    note: ...but borrowed value is only valid for the block suffix following statement 0 at 25:18
      --> src/test/compile-fail/send-is-not-static-ensures-scoping.rs:25:19
       |
    25 |         let x = 1;
       |                   ^
    ```
    
    After:
    
    ```
    error: `x` does not live long enough
      --> src/test/compile-fail/send-is-not-static-ensures-scoping.rs:26:18
       |
    26 |         let y = &x;
       |                  ^ does not live long enough
    ...
    32 |     };
       |     - borrowed value only valid until here
    ...
    35 | }
       | - borrowed value must be valid until here
    ```
    
    r? @nikomatsakis
rustc: ./helloworld
/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc hello.rs -Ztime-passes -Zinput-stats
time: 0.000; rss: 42MB	parsing
Lines of code:             3
Pre-expansion node count:  8
time: 0.000; rss: 42MB	configuration
time: 0.000; rss: 42MB	recursion limit
time: 0.000; rss: 42MB	crate injection
time: 0.000; rss: 42MB	plugin loading
time: 0.000; rss: 42MB	plugin registration
time: 0.018; rss: 78MB	expansion
time: 0.000; rss: 78MB	maybe building test harness
time: 0.000; rss: 78MB	assigning node ids
Post-expansion node count: 68
time: 0.000; rss: 78MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 78MB	complete gated feature checking
time: 0.000; rss: 78MB	collecting defs
time: 0.002; rss: 78MB	external crate/lib resolution
time: 0.000; rss: 78MB	early lint checks
time: 0.000; rss: 78MB	AST validation
time: 0.000; rss: 78MB	name resolution
time: 0.000; rss: 78MB	lowering ast -> hir
time: 0.000; rss: 78MB	indexing hir
time: 0.000; rss: 78MB	attribute checking
time: 0.000; rss: 78MB	language item collection
time: 0.000; rss: 78MB	lifetime resolution
time: 0.000; rss: 78MB	looking for entry point
time: 0.000; rss: 78MB	looking for plugin registrar
time: 0.000; rss: 78MB	region resolution
time: 0.000; rss: 78MB	loop checking
time: 0.000; rss: 78MB	static item recursion checking
time: 0.000; rss: 78MB	load_dep_graph
time: 0.000; rss: 78MB	type collecting
time: 0.000; rss: 78MB	variance inference
time: 0.004; rss: 78MB	coherence checking
time: 0.000; rss: 82MB	wf checking
time: 0.000; rss: 82MB	item-types checking
time: 0.000; rss: 82MB	item-bodies checking
time: 0.000; rss: 82MB	drop-impl checking
time: 0.000; rss: 82MB	const checking
time: 0.000; rss: 82MB	privacy checking
time: 0.000; rss: 82MB	stability index
time: 0.000; rss: 82MB	intrinsic checking
time: 0.000; rss: 82MB	effect checking
time: 0.000; rss: 82MB	match checking
time: 0.000; rss: 82MB	liveness checking
time: 0.000; rss: 82MB	rvalue checking
time: 0.000; rss: 82MB	MIR dump
time: 0.001; rss: 86MB	MIR passes
time: 0.000; rss: 86MB	borrow checking
time: 0.000; rss: 86MB	reachability checking
time: 0.000; rss: 86MB	death checking
time: 0.000; rss: 86MB	stability checking
time: 0.000; rss: 86MB	unused lib feature checking
time: 0.000; rss: 86MB	lint checking
time: 0.001; rss: 86MB	resolving dependency formats
time: 0.000; rss: 86MB	Prepare MIR codegen passes
  time: 0.000; rss: 86MB	write metadata
  time: 0.001; rss: 86MB	translation item collection
  time: 0.000; rss: 86MB	codegen unit partitioning
  time: 0.000; rss: 86MB	internalize symbols
time: 0.008; rss: 86MB	translation
time: 0.000; rss: 86MB	assert dep graph
time: 0.000; rss: 86MB	serialize dep graph
  time: 0.000; rss: 86MB	llvm function passes [0]
  time: 0.000; rss: 86MB	llvm module passes [0]
  time: 0.001; rss: 90MB	codegen passes [0]
  time: 0.000; rss: 90MB	codegen passes [0]
time: 0.002; rss: 90MB	LLVM passes
time: 0.000; rss: 90MB	serialize work products
  time: 0.105; rss: 90MB	running linker
time: 0.106; rss: 90MB	linking
done
