commit eb38d426c41aa8487e8cb8a9dafbfcf3528201f9
Merge: dfd98eb cde42cd
Author: bors <bors@rust-lang.org>
Date:   Wed Oct 19 22:05:13 2016 -0700

    Auto merge of #36973 - nnethercote:dep_graph, r=nikomatsakis
    
    Don't enqueue onto a disabled dep_graph.
    
    This commit guards all calls to `DepGraphThreadData::enqueue` with a
    check to make sure it is enabled. This avoids some useless allocation
    and vector manipulations when it is disabled (i.e. when incremental
    compilation is off) which improves speed by 1--2% on most of the
    rustc-benchmarks.
    
    This commit has an observable functional change: when the dep_graph is
    disabled its `shadow_graph` will no longer receive messages. This should
    be ok because these message are only used when debug assertions are
    enabled.
    
    r? @nikomatsakis
rustc: ./syntex-0.42.2-incr-clean
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax -- -Ztime-passes -Zinput-stats -Z incremental-info
   Compiling syntex_syntax v0.42.0
time: 0.110; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  224033
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.272; rss: 147MB	expansion
time: 0.000; rss: 147MB	maybe building test harness
time: 0.006; rss: 147MB	maybe creating a macro crate
Post-expansion node count: 641571
time: 0.000; rss: 147MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 147MB	complete gated feature checking
time: 0.022; rss: 147MB	early lint checks
time: 0.007; rss: 147MB	AST validation
time: 0.086; rss: 162MB	name resolution
time: 0.048; rss: 202MB	lowering ast -> hir
time: 0.009; rss: 212MB	indexing hir
time: 0.006; rss: 212MB	attribute checking
time: 0.006; rss: 164MB	language item collection
time: 0.011; rss: 164MB	lifetime resolution
time: 0.000; rss: 164MB	looking for entry point
time: 0.000; rss: 164MB	looking for plugin registrar
time: 0.043; rss: 174MB	region resolution
time: 0.006; rss: 174MB	loop checking
time: 0.005; rss: 174MB	static item recursion checking
time: 0.528; rss: 175MB	compute_incremental_hashes_map
time: 0.000; rss: 175MB	load_dep_graph
time: 0.041; rss: 181MB	type collecting
time: 0.001; rss: 181MB	variance inference
time: 0.035; rss: 184MB	coherence checking
time: 0.098; rss: 187MB	wf checking
time: 0.184; rss: 193MB	item-types checking
time: 3.742; rss: 244MB	item-bodies checking
time: 0.000; rss: 244MB	drop-impl checking
time: 0.248; rss: 248MB	const checking
time: 0.051; rss: 248MB	privacy checking
time: 0.007; rss: 248MB	stability index
time: 0.021; rss: 248MB	intrinsic checking
time: 0.017; rss: 248MB	effect checking
time: 0.055; rss: 248MB	match checking
time: 0.053; rss: 239MB	liveness checking
time: 0.211; rss: 239MB	rvalue checking
time: 0.401; rss: 427MB	MIR dump
  time: 0.057; rss: 431MB	SimplifyCfg
  time: 0.078; rss: 431MB	QualifyAndPromoteConstants
  time: 0.107; rss: 431MB	TypeckMir
  time: 0.004; rss: 431MB	SimplifyBranches
  time: 0.031; rss: 431MB	SimplifyCfg
time: 0.277; rss: 431MB	MIR passes
time: 0.554; rss: 431MB	borrow checking
time: 0.018; rss: 431MB	reachability checking
time: 0.043; rss: 431MB	death checking
time: 0.040; rss: 431MB	stability checking
time: 0.000; rss: 431MB	unused lib feature checking
time: 0.213; rss: 431MB	lint checking
time: 0.000; rss: 431MB	resolving dependency formats
  time: 0.003; rss: 431MB	NoLandingPads
  time: 0.027; rss: 431MB	SimplifyCfg
  time: 0.067; rss: 440MB	EraseRegions
  time: 0.011; rss: 440MB	AddCallGuards
  time: 0.287; rss: 460MB	ElaborateDrops
  time: 0.003; rss: 460MB	NoLandingPads
  time: 0.052; rss: 460MB	SimplifyCfg
  time: 0.030; rss: 459MB	InstCombine
  time: 0.011; rss: 459MB	Deaggregator
  time: 0.002; rss: 459MB	CopyPropagation
  time: 0.009; rss: 459MB	AddCallGuards
  time: 0.002; rss: 459MB	PreTrans
time: 0.505; rss: 459MB	Prepare MIR codegen passes
  time: 0.060; rss: 467MB	write metadata
  time: 0.418; rss: 475MB	translation item collection
  time: 0.058; rss: 486MB	codegen unit partitioning
  time: 0.048; rss: 730MB	internalize symbols
time: 4.791; rss: 609MB	translation
time: 0.000; rss: 609MB	assert dep graph
time: 0.000; rss: 609MB	serialize dep graph
incremental: re-using 0 out of 1 modules
  time: 0.516; rss: 409MB	llvm function passes [0]
  time: 0.239; rss: 417MB	llvm module passes [0]
  time: 9.956; rss: 416MB	codegen passes [0]
  time: 0.000; rss: 416MB	codegen passes [0]
time: 11.440; rss: 416MB	LLVM passes
time: 0.000; rss: 416MB	serialize work products
time: 0.671; rss: 105MB	linking
done
