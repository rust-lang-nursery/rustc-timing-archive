commit 7cee8b9ffb6a2dac7e2f729988c2324e2f8ac10f
Merge: 7b0b80a e67590b
Author: bors <bors@rust-lang.org>
Date:   Thu Mar 3 02:21:28 2016 +0000

    Auto merge of #31824 - jseyfried:privacy_in_resolve, r=nikomatsakis
    
    This PR privacy checks paths as they are resolved instead of in `librustc_privacy` (fixes #12334 and fixes #31779). This removes the need for the `LastPrivate` system introduced in PR #9735, the limitations of which cause #31779.
    
    This PR also reports privacy violations in paths to intra- and inter-crate items the same way -- it always reports the first inaccessible segment of the path.
    
    Since it fixes #31779, this is a [breaking-change]. For example, the following code would break:
    ```rust
    mod foo {
        pub use foo::bar::S;
        mod bar { // `bar` should be private to `foo`
            pub struct S;
        }
    }
    
    impl foo::S {
        fn f() {}
    }
    
    fn main() {
        foo::bar::S::f(); // This is now a privacy error
    }
    ```
    
    r? @alexcrichton
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.030; rss: 45MB	parsing
Lines of code:             9154
Pre-expansion node count:  45594
time: 0.009; rss: 45MB	configuration 1
time: 0.000; rss: 45MB	recursion limit
time: 0.000; rss: 45MB	gated macro checking
time: 0.000; rss: 45MB	crate injection
time: 0.004; rss: 50MB	macro loading
time: 0.000; rss: 50MB	plugin loading
time: 0.000; rss: 50MB	plugin registration
time: 0.192; rss: 60MB	expansion
time: 0.005; rss: 60MB	complete gated feature checking 1
time: 0.035; rss: 60MB	configuration 2
time: 0.000; rss: 60MB	gated configuration checking
time: 0.014; rss: 60MB	maybe building test harness
time: 0.011; rss: 60MB	prelude injection
time: 0.001; rss: 60MB	checking that all macro invocations are gone
time: 0.000; rss: 60MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 60MB	complete gated feature checking 2
time: 0.001; rss: 60MB	const fn bodies and arguments
Post-expansion node count: 109258
time: 0.010; rss: 60MB	assigning node ids
time: 0.010; rss: 64MB	lowering ast -> hir
time: 0.004; rss: 66MB	indexing hir
time: 0.002; rss: 66MB	attribute checking
time: 0.006; rss: 66MB	early lint checks
time: 0.004; rss: 62MB	external crate/lib resolution
time: 0.001; rss: 62MB	language item collection
time: 0.023; rss: 79MB	resolution
time: 0.002; rss: 79MB	lifetime resolution
time: 0.000; rss: 79MB	looking for entry point
time: 0.000; rss: 79MB	looking for plugin registrar
time: 0.005; rss: 83MB	region resolution
time: 0.001; rss: 83MB	loop checking
time: 0.001; rss: 83MB	static item recursion checking
time: 0.012; rss: 87MB	type collecting
time: 0.000; rss: 87MB	variance inference
time: 0.038; rss: 104MB	coherence checking
time: 0.079; rss: 105MB	wf checking
time: 0.024; rss: 107MB	item-types checking
time: 0.474; rss: 128MB	item-bodies checking
time: 0.000; rss: 128MB	drop-impl checking
time: 0.037; rss: 130MB	const checking
time: 0.008; rss: 130MB	privacy checking
time: 0.001; rss: 130MB	stability index
time: 0.004; rss: 130MB	intrinsic checking
time: 0.002; rss: 130MB	effect checking
time: 0.012; rss: 130MB	match checking
time: 0.005; rss: 130MB	liveness checking
time: 0.032; rss: 130MB	rvalue checking
time: 0.060; rss: 133MB	MIR dump
time: 0.000; rss: 133MB	MIR passes
time: 0.065; rss: 135MB	borrow checking
time: 0.004; rss: 135MB	reachability checking
time: 0.006; rss: 135MB	death checking
time: 0.005; rss: 135MB	stability checking
time: 0.000; rss: 135MB	unused lib feature checking
time: 0.048; rss: 135MB	lint checking
time: 0.000; rss: 135MB	resolving dependency formats
time: 0.006; rss: 135MB	erasing regions from MIR
  time: 0.187; rss: 151MB	translation item collection
  time: 0.135; rss: 245MB	write metadata
time: 1.338; rss: 245MB	translation
  time: 0.098; rss: 168MB	llvm function passes [0]
  time: 0.049; rss: 169MB	llvm module passes [0]
  time: 1.655; rss: 173MB	codegen passes [0]
  time: 0.001; rss: 124MB	codegen passes [0]
time: 2.015; rss: 123MB	LLVM passes
time: 0.170; rss: 123MB	linking
done
