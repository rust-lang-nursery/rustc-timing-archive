commit 17790570373a7f560950d53ea4d67807232db255
Merge: bf44003 5b29f9a
Author: bors <bors@rust-lang.org>
Date:   Fri Apr 8 15:36:34 2016 -0700

    Auto merge of #32751 - alexcrichton:dist-docs, r=brson
    
    rustbuild: Support cross rust-docs packages
    
    Right now if you configure multiple hosts rustbuild will only build
    documentation for the build triple, but we've got all the support necessary to
    build documentation for different architectures as well. This commit
    reinterprets the `target` field of doc `Step` instances to be the target of the
    documentation rather than the target of the rustdoc/tool being run.
    
    This should enable `make dist` to start producing a bunch of `rust-docs`
    packages for all the cross architectures that rustbuild is producing now.
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.029; rss: 48MB	parsing
Lines of code:             9154
Pre-expansion node count:  45594
time: 0.008; rss: 48MB	configuration 1
time: 0.000; rss: 48MB	recursion limit
time: 0.000; rss: 48MB	gated macro checking
time: 0.000; rss: 48MB	crate injection
time: 0.004; rss: 53MB	macro loading
time: 0.000; rss: 53MB	plugin loading
time: 0.000; rss: 53MB	plugin registration
time: 0.186; rss: 62MB	expansion
time: 0.005; rss: 62MB	complete gated feature checking 1
time: 0.029; rss: 62MB	configuration 2
time: 0.000; rss: 62MB	gated configuration checking
time: 0.011; rss: 62MB	maybe building test harness
time: 0.008; rss: 62MB	prelude injection
time: 0.001; rss: 62MB	checking that all macro invocations are gone
time: 0.000; rss: 62MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 62MB	complete gated feature checking 2
time: 0.001; rss: 62MB	const fn bodies and arguments
Post-expansion node count: 107125
time: 0.008; rss: 62MB	assigning node ids
time: 0.011; rss: 66MB	lowering ast -> hir
time: 0.004; rss: 70MB	indexing hir
time: 0.001; rss: 70MB	attribute checking
time: 0.006; rss: 70MB	early lint checks
time: 0.004; rss: 68MB	external crate/lib resolution
time: 0.001; rss: 68MB	language item collection
time: 0.024; rss: 84MB	resolution
time: 0.002; rss: 84MB	lifetime resolution
time: 0.000; rss: 84MB	looking for entry point
time: 0.000; rss: 84MB	looking for plugin registrar
time: 0.006; rss: 87MB	region resolution
time: 0.001; rss: 87MB	loop checking
time: 0.001; rss: 87MB	static item recursion checking
time: 0.000; rss: 87MB	load_dep_graph
time: 0.018; rss: 96MB	type collecting
time: 0.000; rss: 96MB	variance inference
time: 0.042; rss: 111MB	coherence checking
time: 0.072; rss: 112MB	wf checking
time: 0.028; rss: 112MB	item-types checking
time: 0.465; rss: 134MB	item-bodies checking
time: 0.000; rss: 134MB	drop-impl checking
time: 0.036; rss: 136MB	const checking
time: 0.007; rss: 136MB	privacy checking
time: 0.001; rss: 136MB	stability index
time: 0.004; rss: 136MB	intrinsic checking
time: 0.002; rss: 136MB	effect checking
time: 0.012; rss: 136MB	match checking
time: 0.005; rss: 137MB	liveness checking
time: 0.032; rss: 137MB	rvalue checking
time: 0.046; rss: 143MB	MIR dump
time: 0.021; rss: 143MB	MIR passes
time: 0.063; rss: 143MB	borrow checking
time: 0.003; rss: 143MB	reachability checking
time: 0.006; rss: 143MB	death checking
time: 0.005; rss: 143MB	stability checking
time: 0.000; rss: 143MB	unused lib feature checking
time: 0.046; rss: 143MB	lint checking
time: 0.000; rss: 143MB	resolving dependency formats
time: 0.010; rss: 145MB	Prepare MIR codegen passes
  time: 0.171; rss: 164MB	translation item collection
  time: 0.135; rss: 290MB	write metadata
time: 1.448; rss: 290MB	translation
time: 0.001; rss: 290MB	assert dep graph
time: 0.000; rss: 290MB	serialize dep graph
  time: 0.097; rss: 170MB	llvm function passes [0]
  time: 0.049; rss: 172MB	llvm module passes [0]
  time: 1.633; rss: 174MB	codegen passes [0]
  time: 0.001; rss: 125MB	codegen passes [0]
time: 1.980; rss: 123MB	LLVM passes
time: 0.171; rss: 121MB	linking
done
