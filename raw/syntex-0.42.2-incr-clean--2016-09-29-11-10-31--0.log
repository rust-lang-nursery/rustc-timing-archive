commit 704bcc0ddafc0b3c3f4879286204442d43169e30
Merge: 91f34c0 d68f7eb
Author: bors <bors@rust-lang.org>
Date:   Thu Sep 29 03:48:02 2016 -0700

    Auto merge of #36456 - alexcrichton:rustbuild-dont-use-c, r=jonathandturner
    
    rustbuild: Use current_dir instead of -C
    
    Apparently some versions of git don't support the `-C` flag, so let's use the
    guaranteed-to-work `current_dir` function.
rustc: ./syntex-0.42.2-incr-clean
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax -- -Ztime-passes -Zinput-stats -Z incremental-info
   Compiling libc v0.2.15
   Compiling rustc-serialize v0.3.19
   Compiling winapi v0.2.8
   Compiling winapi-build v0.1.1
   Compiling bitflags v0.5.0
   Compiling unicode-xid v0.0.3
   Compiling log v0.3.6
   Compiling kernel32-sys v0.2.2
   Compiling term v0.4.4
   Compiling syntex_pos v0.42.0
   Compiling syntex_errors v0.42.0
   Compiling syntex_syntax v0.42.0
time: 0.109; rss: 76MB	parsing
Lines of code:             33687
Pre-expansion node count:  224033
time: 0.000; rss: 76MB	recursion limit
time: 0.000; rss: 76MB	crate injection
time: 0.000; rss: 76MB	plugin loading
time: 0.000; rss: 76MB	plugin registration
time: 0.280; rss: 145MB	expansion
time: 0.000; rss: 145MB	maybe building test harness
time: 0.007; rss: 145MB	maybe creating a macro crate
Post-expansion node count: 641571
time: 0.000; rss: 145MB	checking for inline asm in case the target doesn't support it
time: 0.016; rss: 145MB	complete gated feature checking
time: 0.027; rss: 145MB	early lint checks
time: 0.009; rss: 145MB	AST validation
time: 0.089; rss: 160MB	name resolution
time: 0.050; rss: 202MB	lowering ast -> hir
time: 0.009; rss: 210MB	indexing hir
time: 0.007; rss: 210MB	attribute checking
time: 0.006; rss: 161MB	language item collection
time: 0.013; rss: 161MB	lifetime resolution
time: 0.000; rss: 161MB	looking for entry point
time: 0.000; rss: 161MB	looking for plugin registrar
time: 0.047; rss: 172MB	region resolution
time: 0.006; rss: 172MB	loop checking
time: 0.006; rss: 172MB	static item recursion checking
time: 0.296; rss: 173MB	compute_incremental_hashes_map
time: 0.000; rss: 173MB	load_dep_graph
time: 0.082; rss: 174MB	type collecting
time: 0.001; rss: 174MB	variance inference
time: 0.039; rss: 179MB	coherence checking
time: 0.101; rss: 181MB	wf checking
time: 0.197; rss: 186MB	item-types checking
time: 3.980; rss: 240MB	item-bodies checking
time: 0.000; rss: 240MB	drop-impl checking
time: 0.319; rss: 240MB	const checking
time: 0.057; rss: 240MB	privacy checking
time: 0.008; rss: 240MB	stability index
time: 0.023; rss: 240MB	intrinsic checking
time: 0.019; rss: 240MB	effect checking
time: 0.059; rss: 240MB	match checking
time: 0.056; rss: 236MB	liveness checking
time: 0.288; rss: 236MB	rvalue checking
time: 0.420; rss: 418MB	MIR dump
  time: 0.057; rss: 421MB	SimplifyCfg
  time: 0.082; rss: 421MB	QualifyAndPromoteConstants
  time: 0.111; rss: 421MB	TypeckMir
  time: 0.004; rss: 421MB	SimplifyBranches
  time: 0.037; rss: 421MB	SimplifyCfg
time: 0.292; rss: 421MB	MIR passes
time: 0.699; rss: 422MB	borrow checking
time: 0.018; rss: 422MB	reachability checking
time: 0.047; rss: 422MB	death checking
time: 0.043; rss: 422MB	stability checking
time: 0.000; rss: 422MB	unused lib feature checking
time: 0.222; rss: 422MB	lint checking
time: 0.000; rss: 422MB	resolving dependency formats
  time: 0.003; rss: 422MB	NoLandingPads
  time: 0.027; rss: 422MB	SimplifyCfg
  time: 0.073; rss: 434MB	EraseRegions
  time: 0.011; rss: 434MB	AddCallGuards
  time: 1.094; rss: 448MB	ElaborateDrops
  time: 0.003; rss: 448MB	NoLandingPads
  time: 0.052; rss: 448MB	SimplifyCfg
  time: 0.030; rss: 448MB	InstCombine
  time: 0.012; rss: 448MB	Deaggregator
  time: 0.003; rss: 448MB	CopyPropagation
  time: 0.010; rss: 448MB	AddCallGuards
  time: 0.003; rss: 448MB	PreTrans
time: 1.320; rss: 448MB	Prepare MIR codegen passes
  time: 0.260; rss: 458MB	write metadata
  time: 0.480; rss: 467MB	translation item collection
  time: 0.067; rss: 472MB	codegen unit partitioning
  time: 0.058; rss: 721MB	internalize symbols
time: 5.278; rss: 606MB	translation
time: 0.000; rss: 606MB	assert dep graph
time: 0.000; rss: 606MB	serialize dep graph
incremental: re-using 0 out of 1 modules
  time: 0.506; rss: 417MB	llvm function passes [0]
  time: 0.255; rss: 421MB	llvm module passes [0]
  time: 10.112; rss: 414MB	codegen passes [0]
  time: 0.001; rss: 415MB	codegen passes [0]
time: 11.617; rss: 415MB	LLVM passes
time: 0.000; rss: 415MB	serialize work products
time: 0.665; rss: 107MB	linking
done
