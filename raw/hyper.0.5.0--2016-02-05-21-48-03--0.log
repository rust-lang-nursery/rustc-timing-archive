commit 5147c1f2c04f62dceea5feaf6a2dcbebf5cd638f
Merge: 34af2de caf62ef
Author: bors <bors@rust-lang.org>
Date:   Sat Feb 6 01:24:22 2016 +0000

    Auto merge of #31307 - nagisa:mir-drop-terminator, r=nikomatsakis
    
    The scope of these refactorings is a little bit bigger than the title implies. See each commit for details.
    
    I’m submitting this for nitpicking now (the first 4 commits), because I feel the basic idea/implementation is sound and should work. I will eventually expand this PR to cover the translator changes necessary for all this to work (+ tests), ~~and perhaps implement a dynamic dropping scheme while I’m at it as well.~~
    
    r? @nikomatsakis
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling lazy_static v0.1.15
   Compiling bitflags v0.3.3
   Compiling pkg-config v0.3.6
   Compiling libc v0.1.12
   Compiling unicase v0.1.0
   Compiling gcc v0.3.21
   Compiling winapi-build v0.1.1
   Compiling httparse v0.1.6
   Compiling winapi v0.2.5
   Compiling traitobject v0.0.1
   Compiling matches v0.1.2
   Compiling libc v0.2.6
   Compiling rustc-serialize v0.3.16
   Compiling typeable v0.1.2
   Compiling advapi32-sys v0.1.2
   Compiling kernel32-sys v0.2.1
   Compiling time v0.1.34
   Compiling log v0.3.5
   Compiling rand v0.3.13
   Compiling num_cpus v0.2.10
   Compiling mime v0.0.11
   Compiling openssl-sys v0.6.7
   Compiling openssl v0.6.7
   Compiling uuid v0.1.18
   Compiling url v0.2.38
   Compiling cookie v0.1.21
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.030; rss: 43MB	parsing
Lines of code:             9154
Pre-expansion node count:  45594
time: 0.009; rss: 43MB	configuration 1
time: 0.000; rss: 43MB	recursion limit
time: 0.000; rss: 43MB	gated macro checking
time: 0.000; rss: 43MB	crate injection
time: 0.004; rss: 49MB	macro loading
time: 0.000; rss: 49MB	plugin loading
time: 0.000; rss: 49MB	plugin registration
time: 0.191; rss: 58MB	expansion
time: 0.005; rss: 58MB	complete gated feature checking 1
time: 0.034; rss: 58MB	configuration 2
time: 0.000; rss: 58MB	gated configuration checking
time: 0.013; rss: 58MB	maybe building test harness
time: 0.011; rss: 58MB	prelude injection
time: 0.001; rss: 58MB	checking that all macro invocations are gone
time: 0.000; rss: 58MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 58MB	complete gated feature checking 2
Post-expansion node count: 109258
time: 0.010; rss: 58MB	assigning node ids
time: 0.011; rss: 62MB	lowering ast -> hir
time: 0.005; rss: 66MB	indexing hir
time: 0.000; rss: 66MB	attribute checking
time: 0.005; rss: 66MB	early lint checks
time: 0.003; rss: 61MB	external crate/lib resolution
time: 0.001; rss: 61MB	language item collection
time: 0.029; rss: 81MB	resolution
time: 0.002; rss: 81MB	lifetime resolution
time: 0.000; rss: 81MB	looking for entry point
time: 0.000; rss: 81MB	looking for plugin registrar
time: 0.006; rss: 84MB	region resolution
time: 0.001; rss: 84MB	loop checking
time: 0.001; rss: 84MB	static item recursion checking
time: 0.013; rss: 88MB	type collecting
time: 0.000; rss: 88MB	variance inference
time: 0.038; rss: 105MB	coherence checking
time: 0.069; rss: 108MB	wf checking
time: 0.026; rss: 109MB	item-types checking
time: 0.520; rss: 131MB	item-bodies checking
time: 0.000; rss: 131MB	drop-impl checking
time: 0.042; rss: 132MB	const checking
time: 0.008; rss: 132MB	privacy checking
time: 0.001; rss: 132MB	stability index
time: 0.004; rss: 132MB	intrinsic checking
time: 0.002; rss: 132MB	effect checking
time: 0.013; rss: 132MB	match checking
time: 0.051; rss: 135MB	MIR dump
time: 0.006; rss: 135MB	liveness checking
time: 0.069; rss: 135MB	borrow checking
time: 0.035; rss: 135MB	rvalue checking
time: 0.003; rss: 135MB	reachability checking
time: 0.005; rss: 135MB	death checking
time: 0.006; rss: 135MB	stability checking
time: 0.000; rss: 135MB	unused lib feature checking
time: 0.044; rss: 135MB	lint checking
time: 0.000; rss: 135MB	resolving dependency formats
time: 0.007; rss: 135MB	erasing regions from MIR
  time: 0.136; rss: 272MB	write metadata
time: 1.431; rss: 272MB	translation
  time: 0.102; rss: 169MB	llvm function passes [0]
  time: 0.049; rss: 170MB	llvm module passes [0]
  time: 1.674; rss: 214MB	codegen passes [0]
  time: 0.001; rss: 172MB	codegen passes [0]
time: 2.062; rss: 172MB	LLVM passes
time: 0.172; rss: 170MB	linking
done
