commit 29abe6f9e86829d55ba180a5957f203a64a96b65
Merge: 696fab8 4be7786
Author: bors <bors@rust-lang.org>
Date:   Thu Nov 24 00:26:44 2016 -0600

    Auto merge of #37890 - eddyb:rustdoc-1, r=nrc
    
    rustdoc: separate test collection from the main "clean"-ing pipeline.
    
    While reusing the documentation "clean"-ing infrastructure for collecting code examples to test may have seemed appealing at some point, doing the same through a HIR visitor is barely any harder.
    At the same time, supporting both "regular documentation" and "test collection" modes in `rustdoc::clean` has its cost, requiring any use of a `TyCtxt` to be speculative, and provide some sort of fallback.
    
    This simplification is the first step towards bringing rustdoc closer to the compiler, and perhaps even unifying the "local crate" (based on the HIR AST) and "inlinined across crates" (based on crate metadata and typesystem information) implementations of rustdoc.
    
    Sadly, not all possible changes to rustdoc will be uncontroversial, so I'm starting small with this patch.
rustc: ./syntex-0.42.2
cargo rustc -p syntex_syntax  -- -Ztime-passes -Zinput-stats
   Compiling syntex_syntax v0.42.0
time: 0.090; rss: 71MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 71MB	recursion limit
time: 0.000; rss: 71MB	crate injection
time: 0.000; rss: 71MB	plugin loading
time: 0.000; rss: 71MB	plugin registration
time: 0.238; rss: 146MB	expansion
time: 0.000; rss: 146MB	maybe building test harness
time: 0.006; rss: 146MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 146MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 146MB	complete gated feature checking
time: 0.022; rss: 146MB	early lint checks
time: 0.007; rss: 146MB	AST validation
time: 0.075; rss: 161MB	name resolution
time: 0.044; rss: 184MB	lowering ast -> hir
time: 0.008; rss: 195MB	indexing hir
time: 0.006; rss: 195MB	attribute checking
time: 0.004; rss: 150MB	language item collection
time: 0.010; rss: 150MB	lifetime resolution
time: 0.000; rss: 150MB	looking for entry point
time: 0.000; rss: 150MB	looking for plugin registrar
time: 0.041; rss: 169MB	region resolution
time: 0.005; rss: 169MB	loop checking
time: 0.004; rss: 169MB	static item recursion checking
time: 0.327; rss: 170MB	compute_incremental_hashes_map
time: 0.000; rss: 170MB	load_dep_graph
time: 0.047; rss: 168MB	type collecting
time: 0.001; rss: 168MB	variance inference
time: 0.002; rss: 169MB	impl wf inference
time: 0.018; rss: 172MB	coherence checking
time: 0.086; rss: 176MB	wf checking
time: 0.178; rss: 181MB	item-types checking
time: 6.212; rss: 230MB	item-bodies checking
time: 0.000; rss: 230MB	drop-impl checking
time: 0.212; rss: 250MB	const checking
time: 0.046; rss: 250MB	privacy checking
time: 0.006; rss: 250MB	stability index
time: 0.017; rss: 250MB	intrinsic checking
time: 0.014; rss: 250MB	effect checking
time: 0.045; rss: 250MB	match checking
time: 0.049; rss: 251MB	liveness checking
time: 0.173; rss: 251MB	rvalue checking
time: 0.357; rss: 439MB	MIR dump
  time: 0.056; rss: 441MB	SimplifyCfg
  time: 0.071; rss: 441MB	QualifyAndPromoteConstants
  time: 0.105; rss: 441MB	TypeckMir
  time: 0.004; rss: 441MB	SimplifyBranches
  time: 0.030; rss: 441MB	SimplifyCfg
time: 0.267; rss: 441MB	MIR cleanup and validation
time: 0.534; rss: 441MB	borrow checking
time: 0.025; rss: 441MB	reachability checking
time: 0.038; rss: 441MB	death checking
time: 0.030; rss: 443MB	stability checking
time: 0.000; rss: 443MB	unused lib feature checking
time: 0.193; rss: 443MB	lint checking
time: 0.000; rss: 443MB	resolving dependency formats
  time: 0.003; rss: 443MB	NoLandingPads
  time: 0.026; rss: 443MB	SimplifyCfg
  time: 0.061; rss: 449MB	EraseRegions
  time: 0.010; rss: 449MB	AddCallGuards
  time: 0.266; rss: 465MB	ElaborateDrops
  time: 0.003; rss: 465MB	NoLandingPads
  time: 0.051; rss: 465MB	SimplifyCfg
  time: 0.028; rss: 465MB	InstCombine
  time: 0.011; rss: 465MB	Deaggregator
  time: 0.002; rss: 465MB	CopyPropagation
  time: 0.034; rss: 465MB	SimplifyLocals
  time: 0.009; rss: 465MB	AddCallGuards
  time: 0.002; rss: 465MB	PreTrans
time: 0.507; rss: 465MB	MIR optimisations
  time: 0.060; rss: 476MB	write metadata
  time: 0.375; rss: 490MB	translation item collection
  time: 0.058; rss: 499MB	codegen unit partitioning
  time: 0.040; rss: 739MB	internalize symbols
time: 4.356; rss: 739MB	translation
time: 0.000; rss: 739MB	assert dep graph
time: 0.000; rss: 739MB	serialize dep graph
  time: 0.518; rss: 429MB	llvm function passes [0]
  time: 0.244; rss: 435MB	llvm module passes [0]
  time: 10.355; rss: 432MB	codegen passes [0]
  time: 0.000; rss: 432MB	codegen passes [0]
time: 11.867; rss: 432MB	LLVM passes
time: 0.000; rss: 432MB	serialize work products
time: 0.336; rss: 115MB	linking
done
