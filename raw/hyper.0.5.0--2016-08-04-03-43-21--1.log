commit 271d048523b6c1b0e773d9e5cc76bbb997cc180c
Merge: 40f3ee2 5c88efc
Author: bors <bors@rust-lang.org>
Date:   Wed Aug 3 22:56:33 2016 -0700

    Auto merge of #35015 - petrochenkov:forearg, r=nikomatsakis
    
    Properly enforce the "patterns aren't allowed in foreign functions" rule
    
    Cases like `arg @ PATTERN` or `mut arg` were missing.
    Apply the same rule to function pointer types.
    
    Closes https://github.com/rust-lang/rust/issues/35203
    [breaking-change], no breakage in sane code is expected though
    r? @nikomatsakis
    
    This is somewhat related to https://github.com/rust-lang/rfcs/pull/1685 (cc @matklad).
    The goal is to eventually support full pattern syntax where it makes sense (function body may present) and to support *only* the following forms - `TYPE`, `ident: TYPE`, `_: TYPE` - where patterns don't make sense (function body doesn't present), i.e. in foreign functions and function pointer types.
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.032; rss: 52MB	parsing
Lines of code:             9154
Pre-expansion node count:  44838
time: 0.005; rss: 56MB	configuration
time: 0.000; rss: 56MB	recursion limit
time: 0.000; rss: 56MB	crate injection
time: 0.000; rss: 56MB	plugin loading
time: 0.000; rss: 56MB	plugin registration
time: 0.114; rss: 96MB	expansion
time: 0.000; rss: 96MB	maybe building test harness
time: 0.008; rss: 96MB	assigning node ids
Post-expansion node count: 101581
time: 0.000; rss: 96MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 96MB	complete gated feature checking
time: 0.003; rss: 96MB	collecting defs
time: 0.010; rss: 107MB	external crate/lib resolution
time: 0.006; rss: 107MB	early lint checks
time: 0.001; rss: 107MB	AST validation
time: 0.019; rss: 112MB	name resolution
time: 0.009; rss: 120MB	lowering ast -> hir
time: 0.001; rss: 122MB	indexing hir
time: 0.001; rss: 122MB	attribute checking
time: 0.001; rss: 116MB	language item collection
time: 0.002; rss: 116MB	lifetime resolution
time: 0.000; rss: 116MB	looking for entry point
time: 0.000; rss: 116MB	looking for plugin registrar
time: 0.005; rss: 120MB	region resolution
time: 0.001; rss: 120MB	loop checking
time: 0.000; rss: 120MB	static item recursion checking
time: 0.000; rss: 120MB	load_dep_graph
time: 0.032; rss: 122MB	type collecting
time: 0.000; rss: 122MB	variance inference
time: 0.046; rss: 128MB	coherence checking
time: 0.098; rss: 132MB	wf checking
time: 0.037; rss: 132MB	item-types checking
time: 0.531; rss: 142MB	item-bodies checking
time: 0.000; rss: 142MB	drop-impl checking
time: 0.044; rss: 145MB	const checking
time: 0.006; rss: 145MB	privacy checking
time: 0.001; rss: 145MB	stability index
time: 0.006; rss: 145MB	intrinsic checking
time: 0.002; rss: 145MB	effect checking
time: 0.014; rss: 145MB	match checking
time: 0.005; rss: 145MB	liveness checking
time: 0.031; rss: 145MB	rvalue checking
time: 0.062; rss: 155MB	MIR dump
time: 0.043; rss: 155MB	MIR passes
time: 0.071; rss: 155MB	borrow checking
time: 0.003; rss: 155MB	reachability checking
time: 0.005; rss: 155MB	death checking
time: 0.005; rss: 155MB	stability checking
time: 0.000; rss: 155MB	unused lib feature checking
time: 0.052; rss: 155MB	lint checking
time: 0.000; rss: 155MB	resolving dependency formats
time: 0.092; rss: 157MB	Prepare MIR codegen passes
  time: 0.128; rss: 163MB	write metadata
  time: 0.187; rss: 169MB	translation item collection
  time: 0.022; rss: 171MB	codegen unit partitioning
  time: 0.037; rss: 290MB	internalize symbols
time: 1.591; rss: 290MB	translation
time: 0.001; rss: 290MB	assert dep graph
time: 0.000; rss: 290MB	serialize dep graph
  time: 0.087; rss: 176MB	llvm function passes [0]
  time: 0.047; rss: 175MB	llvm module passes [0]
  time: 1.593; rss: 176MB	codegen passes [0]
  time: 0.001; rss: 176MB	codegen passes [0]
time: 1.860; rss: 175MB	LLVM passes
time: 0.147; rss: 129MB	linking
done
