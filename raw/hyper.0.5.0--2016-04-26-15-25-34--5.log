commit 897199a0fbe01ab6f7e7f8096656603e238e85a2
Merge: 01a0207 36d9ee3
Author: bors <bors@rust-lang.org>
Date:   Tue Apr 26 12:00:35 2016 -0700

    Auto merge of #33191 - alexcrichton:rustdoc-create-dir-all-racy, r=steveklabnik
    
    rustdoc: Handle concurrent mkdir requests
    
    It's likely that `rustdoc` as a tool is run concurrently in the same output
    (e.g. documenting multiple crates as Cargo does), in which case it needs to
    handle concurrent calls to `fs::create_dir`.
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.042; rss: 49MB	parsing
Lines of code:             9154
Pre-expansion node count:  45594
time: 0.009; rss: 50MB	configuration 1
time: 0.000; rss: 50MB	recursion limit
time: 0.000; rss: 50MB	gated macro checking
time: 0.000; rss: 50MB	crate injection
time: 0.004; rss: 55MB	macro loading
time: 0.000; rss: 55MB	plugin loading
time: 0.000; rss: 55MB	plugin registration
time: 0.199; rss: 64MB	expansion
time: 0.005; rss: 64MB	complete gated feature checking 1
time: 0.029; rss: 64MB	configuration 2
time: 0.000; rss: 64MB	gated configuration checking
time: 0.011; rss: 64MB	maybe building test harness
time: 0.009; rss: 64MB	prelude injection
time: 0.001; rss: 64MB	checking that all macro invocations are gone
time: 0.000; rss: 64MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 64MB	complete gated feature checking 2
time: 0.001; rss: 64MB	const fn bodies and arguments
Post-expansion node count: 107125
time: 0.008; rss: 64MB	assigning node ids
time: 0.006; rss: 66MB	collecting defs
time: 0.005; rss: 68MB	external crate/lib resolution
time: 0.019; rss: 74MB	lowering ast -> hir
time: 0.005; rss: 75MB	indexing hir
time: 0.001; rss: 75MB	attribute checking
time: 0.007; rss: 75MB	early lint checks
time: 0.001; rss: 68MB	language item collection
time: 0.026; rss: 85MB	name resolution
time: 0.002; rss: 85MB	lifetime resolution
time: 0.000; rss: 85MB	looking for entry point
time: 0.000; rss: 85MB	looking for plugin registrar
time: 0.009; rss: 87MB	region resolution
time: 0.001; rss: 87MB	loop checking
time: 0.001; rss: 87MB	static item recursion checking
time: 0.000; rss: 87MB	load_dep_graph
time: 0.018; rss: 97MB	type collecting
time: 0.000; rss: 97MB	variance inference
time: 0.046; rss: 112MB	coherence checking
time: 0.073; rss: 113MB	wf checking
time: 0.029; rss: 114MB	item-types checking
time: 0.505; rss: 131MB	item-bodies checking
time: 0.000; rss: 131MB	drop-impl checking
time: 0.040; rss: 134MB	const checking
time: 0.010; rss: 134MB	privacy checking
time: 0.001; rss: 134MB	stability index
time: 0.004; rss: 134MB	intrinsic checking
time: 0.002; rss: 134MB	effect checking
time: 0.012; rss: 134MB	match checking
time: 0.005; rss: 134MB	liveness checking
time: 0.034; rss: 134MB	rvalue checking
time: 0.062; rss: 142MB	MIR dump
time: 0.022; rss: 142MB	MIR passes
time: 0.066; rss: 143MB	borrow checking
time: 0.003; rss: 143MB	reachability checking
time: 0.007; rss: 143MB	death checking
time: 0.006; rss: 143MB	stability checking
time: 0.000; rss: 143MB	unused lib feature checking
time: 0.050; rss: 143MB	lint checking
time: 0.000; rss: 143MB	resolving dependency formats
time: 0.010; rss: 144MB	Prepare MIR codegen passes
  time: 0.213; rss: 162MB	translation item collection
  time: 0.009; rss: 164MB	codegen unit partitioning
  time: 0.142; rss: 280MB	write metadata
time: 1.762; rss: 280MB	translation
time: 0.001; rss: 280MB	assert dep graph
time: 0.000; rss: 280MB	serialize dep graph
  time: 0.098; rss: 164MB	llvm function passes [0]
  time: 0.048; rss: 166MB	llvm module passes [0]
  time: 1.638; rss: 169MB	codegen passes [0]
  time: 0.001; rss: 120MB	codegen passes [0]
time: 1.990; rss: 120MB	LLVM passes
time: 0.178; rss: 117MB	linking
done
