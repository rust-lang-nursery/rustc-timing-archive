commit 25e42ac10653e4d7178e36201608cc269e3c66c7
Merge: 0400d92 bc93fbc
Author: bors <bors@rust-lang.org>
Date:   Wed Mar 2 08:42:38 2016 +0000

    Auto merge of #31937 - petrochenkov:field, r=eddyb
    
    The names are "0", "1", "2" etc, the same as used in field access.
    
    This generally make things simpler and potentially allows to reuse braced struct machinery (struct patterns, struct expressions) for tuple structs.
    
    I haven't touched the AST for stability reasons, but I intend to do it later.
    
    r? @eddyb
rustc: ./rust-encoding.0.2.32
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling encoding v0.2.32 (file:///root/benchmarks/rust-encoding.0.2.32)
time: 0.023; rss: 43MB	parsing
Lines of code:             6441
Pre-expansion node count:  30335
time: 0.006; rss: 42MB	configuration 1
time: 0.000; rss: 42MB	recursion limit
time: 0.000; rss: 42MB	gated macro checking
time: 0.000; rss: 42MB	crate injection
time: 0.003; rss: 45MB	macro loading
time: 0.000; rss: 45MB	plugin loading
time: 0.000; rss: 45MB	plugin registration
time: 0.045; rss: 48MB	expansion
time: 0.001; rss: 48MB	complete gated feature checking 1
time: 0.008; rss: 47MB	configuration 2
time: 0.000; rss: 47MB	gated configuration checking
time: 0.004; rss: 47MB	maybe building test harness
time: 0.004; rss: 47MB	prelude injection
time: 0.000; rss: 47MB	checking that all macro invocations are gone
time: 0.000; rss: 47MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 47MB	complete gated feature checking 2
time: 0.000; rss: 47MB	const fn bodies and arguments
Post-expansion node count: 41783
time: 0.003; rss: 47MB	assigning node ids
time: 0.004; rss: 51MB	lowering ast -> hir
time: 0.001; rss: 51MB	indexing hir
time: 0.000; rss: 51MB	attribute checking
time: 0.002; rss: 51MB	early lint checks
time: 0.001; rss: 50MB	external crate/lib resolution
time: 0.000; rss: 50MB	language item collection
time: 0.007; rss: 57MB	resolution
time: 0.000; rss: 57MB	lifetime resolution
time: 0.000; rss: 57MB	looking for entry point
time: 0.000; rss: 57MB	looking for plugin registrar
time: 0.002; rss: 58MB	region resolution
time: 0.000; rss: 58MB	loop checking
time: 0.000; rss: 58MB	static item recursion checking
time: 0.004; rss: 60MB	type collecting
time: 0.000; rss: 60MB	variance inference
time: 0.019; rss: 77MB	coherence checking
time: 0.018; rss: 77MB	wf checking
time: 0.012; rss: 78MB	item-types checking
time: 0.175; rss: 88MB	item-bodies checking
time: 0.000; rss: 88MB	drop-impl checking
time: 0.010; rss: 88MB	const checking
time: 0.003; rss: 88MB	privacy checking
time: 0.000; rss: 88MB	stability index
time: 0.001; rss: 88MB	intrinsic checking
time: 0.000; rss: 88MB	effect checking
time: 0.005; rss: 88MB	match checking
time: 0.002; rss: 88MB	liveness checking
time: 0.006; rss: 88MB	rvalue checking
time: 0.021; rss: 92MB	MIR dump
time: 0.000; rss: 92MB	MIR passes
time: 0.022; rss: 92MB	borrow checking
time: 0.000; rss: 92MB	reachability checking
time: 0.002; rss: 92MB	death checking
time: 0.002; rss: 92MB	stability checking
time: 0.000; rss: 92MB	unused lib feature checking
time: 0.019; rss: 96MB	lint checking
time: 0.000; rss: 96MB	resolving dependency formats
time: 0.002; rss: 96MB	erasing regions from MIR
  time: 0.023; rss: 109MB	translation item collection
  time: 0.056; rss: 138MB	write metadata
time: 0.307; rss: 138MB	translation
  time: 0.026; rss: 107MB	llvm function passes [0]
  time: 0.048; rss: 110MB	llvm module passes [0]
  time: 0.563; rss: 115MB	codegen passes [0]
  time: 0.001; rss: 98MB	codegen passes [0]
time: 0.700; rss: 98MB	LLVM passes
time: 0.051; rss: 97MB	linking
done
