commit 6b076c2daa36d80c103812c1775cf099ea8ef0bf
Merge: 8e2a577 90afb85
Author: bors <bors@rust-lang.org>
Date:   Thu Feb 18 16:29:55 2016 +0000

    Auto merge of #31734 - aliclark:bsd-stat-fixes, r=alexcrichton
    
    In https://github.com/rust-lang/rust/issues/25155 the os::freebsd::raw stat was split for the x86 vs. x86-64 cases, which appears to have been done to implement the padding on the end of struct stat for the x86 case (the struct is otherwise the same notwistanding the size of long).
    
    This PR de-duplicates the struct using #[cfg(target_arch = "x86")] for the __unused field, which also fixes the definitions which had sinced changed with the LFS work d088b671872f1df6993ccca6fa6139ebed0a8cf3.
    
    Also changed definitions to c_long for dragonfly and freebsd where appropriate.
    
    Also removes some unused imports that the compiler was complaining about.
    
    dragonfly's long time_t:
    https://gitweb.dragonflybsd.org/dragonfly.git/blob/a2a57c243ff8016578bc559f8603fb25bbcf1768:/lib/libstand/machine/stdint.h
    
    freebsd's long time_t:
    https://svnweb.freebsd.org/base/release/10.1.0/sys/x86/include/_types.h?view=markup
    https://github.com/rust-lang/rust/blob/d088b671872f1df6993ccca6fa6139ebed0a8cf3/src/liblibc/lib.rs#L980
    
    freebsd's padding for i686 stat:
    https://svnweb.freebsd.org/base/release/10.1.0/sys/sys/stat.h?view=markup#l139
    https://github.com/rust-lang/rust/blob/d088b671872f1df6993ccca6fa6139ebed0a8cf3/src/liblibc/lib.rs#L1038
rustc: ./jld-day15-parser
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling day15 v0.1.0 (file:///root/benchmarks/jld-day15-parser)
time: 0.001; rss: 36MB	parsing
Lines of code:             72
Pre-expansion node count:  673
time: 0.000; rss: 36MB	configuration 1
time: 0.000; rss: 36MB	recursion limit
time: 0.000; rss: 36MB	gated macro checking
time: 0.000; rss: 36MB	crate injection
time: 0.003; rss: 39MB	macro loading
time: 0.000; rss: 39MB	plugin loading
time: 0.000; rss: 39MB	plugin registration
time: 0.002; rss: 39MB	expansion
time: 0.000; rss: 39MB	complete gated feature checking 1
time: 0.000; rss: 39MB	configuration 2
time: 0.000; rss: 39MB	gated configuration checking
time: 0.000; rss: 39MB	maybe building test harness
time: 0.000; rss: 39MB	prelude injection
time: 0.000; rss: 39MB	checking that all macro invocations are gone
time: 0.000; rss: 39MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 39MB	complete gated feature checking 2
time: 0.000; rss: 39MB	const fn bodies and arguments
Post-expansion node count: 1176
time: 0.000; rss: 39MB	assigning node ids
time: 0.000; rss: 39MB	lowering ast -> hir
time: 0.000; rss: 39MB	indexing hir
time: 0.000; rss: 39MB	attribute checking
time: 0.000; rss: 39MB	early lint checks
time: 0.001; rss: 39MB	external crate/lib resolution
time: 0.000; rss: 39MB	language item collection
time: 0.001; rss: 47MB	resolution
time: 0.000; rss: 47MB	lifetime resolution
time: 0.000; rss: 47MB	looking for entry point
time: 0.000; rss: 47MB	looking for plugin registrar
time: 0.000; rss: 47MB	region resolution
time: 0.000; rss: 47MB	loop checking
time: 0.000; rss: 47MB	static item recursion checking
time: 0.001; rss: 52MB	type collecting
time: 0.000; rss: 52MB	variance inference
time: 0.005; rss: 56MB	coherence checking
time: 0.006; rss: 62MB	wf checking
time: 0.000; rss: 62MB	item-types checking
time: 1.593; rss: 141MB	item-bodies checking
time: 0.000; rss: 141MB	drop-impl checking
time: 0.001; rss: 139MB	const checking
time: 0.000; rss: 139MB	privacy checking
time: 0.000; rss: 139MB	stability index
time: 0.000; rss: 139MB	intrinsic checking
time: 0.000; rss: 139MB	effect checking
time: 0.000; rss: 139MB	match checking
time: 0.001; rss: 139MB	MIR dump
time: 0.000; rss: 139MB	MIR passes
time: 0.000; rss: 139MB	liveness checking
time: 0.001; rss: 139MB	borrow checking
time: 0.006; rss: 145MB	rvalue checking
time: 0.000; rss: 145MB	reachability checking
time: 0.000; rss: 145MB	death checking
time: 0.000; rss: 145MB	stability checking
time: 0.000; rss: 145MB	unused lib feature checking
time: 0.003; rss: 146MB	lint checking
time: 0.001; rss: 146MB	resolving dependency formats
time: 0.000; rss: 146MB	erasing regions from MIR
  time: 12.030; rss: 182MB	translation item collection
  time: 0.000; rss: 202MB	write metadata
time: 33.515; rss: 202MB	translation
  time: 0.015; rss: 99MB	llvm function passes [0]
  time: 0.002; rss: 99MB	llvm module passes [0]
  time: 0.276; rss: 105MB	codegen passes [0]
  time: 0.000; rss: 98MB	codegen passes [0]
time: 0.302; rss: 98MB	LLVM passes
  time: 0.106; rss: 102MB	running linker
time: 0.106; rss: 102MB	linking
done
