commit 528c6f3ed6a23a374dc5a40582d1bea2f2cfda65
Merge: 17a2be8 0a70944
Author: bors <bors@rust-lang.org>
Date:   Thu Aug 25 08:32:19 2016 -0700

    Auto merge of #35884 - habnabit:freebsd-arc4rand, r=alexcrichton
    
    Use arc4rand(9) on FreeBSD
    
    From rust-lang-nursery/rand#112:
    
    >After reading through #30691 it seems that there's general agreement that using OS-provided facilities for seeding rust userland processes is fine as long as it doesn't use too much from libc. FreeBSD's `arc4random_buf(3)` is not only a whole lot of libc code, but also not even currently exposed in the libc crate. Fortunately, the mechanism `arc4random_buf(3)` et al. use for getting entropy from the kernel ([`arc4rand(9)`](https://www.freebsd.org/cgi/man.cgi?query=arc4random&apropos=0&sektion=9&manpath=FreeBSD+10.3-RELEASE&arch=default&format=html)) is exposed via `sysctl(3)` with constants that are already in the libc crate.
    
    >I haven't found too much documentation on `KERN_ARND`â€”it's missing or only briefly described in most of the places that cover sysctl mibs. But, from digging through the kernel source, it appears that the sysctl used in this PR is very close to just calling `arc4rand(9)` directly (with `reseed` set to 0 and no way to change it).
    
    I expected [rand](/rust-lang-nursery/rand) to reply quicker, so I tried submitting it there first. It's been a few weeks with no comment, so I don't know the state of it, but maybe someone will see it here and have an opinion. This is basically the same patch. It pains me to duplicate the code but I guess it hasn't been factored out into just one place yet.
rustc: ./futures-rs-test-all
cargo rustc --test all --verbose -- -Ztime-passes -Zinput-stats
       Fresh log v0.3.6
   Compiling futures v0.1.0 (file:///root/benchmarks/futures-rs-test-all)
     Running `/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc tests/all.rs --crate-name all --crate-type bin -g -Ztime-passes -Zinput-stats --test -C metadata=449e6fc7d003a0bc -C extra-filename=-449e6fc7d003a0bc --out-dir /root/benchmarks/futures-rs-test-all/target/debug --emit=dep-info,link -L dependency=/root/benchmarks/futures-rs-test-all/target/debug -L dependency=/root/benchmarks/futures-rs-test-all/target/debug/deps --extern log=/root/benchmarks/futures-rs-test-all/target/debug/deps/liblog-30a8a27ec161f1be.rlib --extern futures=/root/benchmarks/futures-rs-test-all/target/debug/libfutures.rlib`
time: 0.003; rss: 44MB	parsing
Lines of code:             412
Pre-expansion node count:  5522
time: 0.000; rss: 44MB	configuration
time: 0.000; rss: 44MB	recursion limit
time: 0.000; rss: 44MB	crate injection
time: 0.000; rss: 44MB	plugin loading
time: 0.000; rss: 44MB	plugin registration
time: 0.023; rss: 62MB	expansion
time: 0.000; rss: 62MB	maybe building test harness
time: 0.000; rss: 62MB	assigning node ids
Post-expansion node count: 10613
time: 0.000; rss: 62MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 62MB	complete gated feature checking
time: 0.000; rss: 62MB	collecting defs
time: 0.005; rss: 66MB	external crate/lib resolution
time: 0.000; rss: 66MB	early lint checks
time: 0.000; rss: 66MB	AST validation
time: 0.002; rss: 66MB	name resolution
time: 0.001; rss: 70MB	lowering ast -> hir
time: 0.000; rss: 70MB	indexing hir
time: 0.000; rss: 70MB	attribute checking
time: 0.000; rss: 70MB	language item collection
time: 0.000; rss: 70MB	lifetime resolution
time: 0.000; rss: 70MB	looking for entry point
time: 0.000; rss: 70MB	looking for plugin registrar
time: 0.001; rss: 70MB	region resolution
time: 0.000; rss: 70MB	loop checking
time: 0.000; rss: 70MB	static item recursion checking
time: 0.001; rss: 70MB	compute_incremental_hashes_map
time: 0.000; rss: 70MB	load_dep_graph
time: 0.005; rss: 70MB	type collecting
time: 0.000; rss: 70MB	variance inference
time: 0.004; rss: 70MB	coherence checking
time: 0.015; rss: 73MB	wf checking
time: 0.003; rss: 73MB	item-types checking
time: 0.174; rss: 80MB	item-bodies checking
time: 0.000; rss: 80MB	drop-impl checking
time: 0.005; rss: 82MB	const checking
time: 0.000; rss: 82MB	privacy checking
time: 0.000; rss: 82MB	stability index
time: 0.000; rss: 82MB	intrinsic checking
time: 0.000; rss: 82MB	effect checking
time: 0.001; rss: 82MB	match checking
time: 0.001; rss: 82MB	liveness checking
time: 0.004; rss: 82MB	rvalue checking
time: 0.008; rss: 84MB	MIR dump
time: 0.006; rss: 84MB	MIR passes
time: 0.008; rss: 85MB	borrow checking
time: 0.000; rss: 85MB	reachability checking
time: 0.000; rss: 85MB	death checking
time: 0.000; rss: 85MB	stability checking
time: 0.000; rss: 85MB	unused lib feature checking
time: 0.003; rss: 85MB	lint checking
time: 0.002; rss: 85MB	resolving dependency formats
time: 0.019; rss: 85MB	Prepare MIR codegen passes
  time: 0.000; rss: 85MB	write metadata
  time: 0.421; rss: 94MB	translation item collection
  time: 0.022; rss: 94MB	codegen unit partitioning
  time: 0.043; rss: 148MB	internalize symbols
time: 3.661; rss: 148MB	translation
time: 0.000; rss: 148MB	assert dep graph
time: 0.000; rss: 148MB	serialize dep graph
  time: 0.082; rss: 132MB	llvm function passes [0]
  time: 0.027; rss: 133MB	llvm module passes [0]
  time: 1.758; rss: 132MB	codegen passes [0]
  time: 0.000; rss: 132MB	codegen passes [0]
time: 1.868; rss: 132MB	LLVM passes
time: 0.000; rss: 132MB	serialize work products
  time: 0.199; rss: 84MB	running linker
time: 0.201; rss: 84MB	linking
done
