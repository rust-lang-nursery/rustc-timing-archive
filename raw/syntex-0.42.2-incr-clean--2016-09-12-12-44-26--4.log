commit 888970370a3f4b9e8be399869581422c67638d7b
Merge: 85592fb 826f673
Author: bors <bors@rust-lang.org>
Date:   Mon Sep 12 07:43:57 2016 -0700

    Auto merge of #36414 - nnethercote:char_lit, r=jseyfried
    
    Improve char_lit's readability and speed
    
    This is my first contribution to rustc. Please let me know if I've done anything wrong. (I ran `make tidy` before making the pull request.)
rustc: ./syntex-0.42.2-incr-clean
RUSTFLAGS="-Z incremental=incr -Z incremental-info" cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling winapi-build v0.1.1
   Compiling libc v0.2.15
   Compiling unicode-xid v0.0.3
   Compiling bitflags v0.5.0
   Compiling winapi v0.2.8
   Compiling log v0.3.6
   Compiling rustc-serialize v0.3.19
   Compiling kernel32-sys v0.2.2
   Compiling term v0.4.4
   Compiling syntex_pos v0.42.0
   Compiling syntex_errors v0.42.0
   Compiling syntex_syntax v0.42.0
   Compiling syntex v0.42.2
   Compiling incremental-syntex v0.1.0 (file:///root/benchmarks/syntex-0.42.2-incr-clean)
time: 0.000; rss: 42MB	parsing
Lines of code:             3
Pre-expansion node count:  8
time: 0.000; rss: 42MB	recursion limit
time: 0.000; rss: 42MB	crate injection
time: 0.000; rss: 42MB	plugin loading
time: 0.000; rss: 42MB	plugin registration
time: 0.018; rss: 66MB	expansion
time: 0.000; rss: 66MB	maybe building test harness
time: 0.000; rss: 66MB	maybe creating a macro crate
time: 0.000; rss: 66MB	assigning node ids
Post-expansion node count: 68
time: 0.000; rss: 66MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 66MB	complete gated feature checking
time: 0.000; rss: 66MB	collecting defs
time: 0.002; rss: 66MB	external crate/lib resolution
time: 0.000; rss: 66MB	early lint checks
time: 0.000; rss: 66MB	AST validation
time: 0.000; rss: 66MB	name resolution
time: 0.000; rss: 66MB	lowering ast -> hir
time: 0.000; rss: 66MB	indexing hir
time: 0.000; rss: 66MB	attribute checking
time: 0.000; rss: 66MB	language item collection
time: 0.000; rss: 66MB	lifetime resolution
time: 0.000; rss: 66MB	looking for entry point
time: 0.000; rss: 66MB	looking for plugin registrar
time: 0.000; rss: 66MB	region resolution
time: 0.000; rss: 66MB	loop checking
time: 0.000; rss: 66MB	static item recursion checking
time: 0.000; rss: 66MB	compute_incremental_hashes_map
time: 0.000; rss: 66MB	load_dep_graph
time: 0.000; rss: 70MB	type collecting
time: 0.000; rss: 70MB	variance inference
time: 0.004; rss: 70MB	coherence checking
time: 0.000; rss: 70MB	wf checking
time: 0.000; rss: 70MB	item-types checking
time: 0.000; rss: 70MB	item-bodies checking
time: 0.000; rss: 70MB	drop-impl checking
time: 0.000; rss: 70MB	const checking
time: 0.000; rss: 70MB	privacy checking
time: 0.000; rss: 70MB	stability index
time: 0.000; rss: 70MB	intrinsic checking
time: 0.000; rss: 70MB	effect checking
time: 0.000; rss: 70MB	match checking
time: 0.000; rss: 70MB	liveness checking
time: 0.000; rss: 70MB	rvalue checking
time: 0.000; rss: 70MB	MIR dump
  time: 0.000; rss: 70MB	SimplifyCfg
  time: 0.000; rss: 70MB	QualifyAndPromoteConstants
  time: 0.000; rss: 70MB	TypeckMir
  time: 0.000; rss: 70MB	SimplifyBranches
  time: 0.000; rss: 70MB	SimplifyCfg
time: 0.001; rss: 70MB	MIR passes
time: 0.000; rss: 70MB	borrow checking
time: 0.000; rss: 70MB	reachability checking
time: 0.000; rss: 70MB	death checking
time: 0.000; rss: 70MB	stability checking
time: 0.000; rss: 70MB	unused lib feature checking
time: 0.000; rss: 70MB	lint checking
time: 0.001; rss: 70MB	resolving dependency formats
  time: 0.000; rss: 70MB	NoLandingPads
  time: 0.000; rss: 70MB	SimplifyCfg
  time: 0.000; rss: 70MB	EraseRegions
  time: 0.000; rss: 70MB	AddCallGuards
  time: 0.000; rss: 70MB	ElaborateDrops
  time: 0.000; rss: 70MB	NoLandingPads
  time: 0.000; rss: 70MB	SimplifyCfg
  time: 0.000; rss: 70MB	Deaggregator
  time: 0.000; rss: 70MB	AddCallGuards
  time: 0.000; rss: 70MB	PreTrans
time: 0.000; rss: 70MB	Prepare MIR codegen passes
  time: 0.000; rss: 70MB	write metadata
  time: 0.001; rss: 70MB	translation item collection
  time: 0.000; rss: 70MB	codegen unit partitioning
  time: 0.000; rss: 75MB	internalize symbols
time: 0.008; rss: 75MB	translation
time: 0.000; rss: 75MB	assert dep graph
time: 0.000; rss: 75MB	serialize dep graph
  time: 0.000; rss: 75MB	llvm function passes [0]
  time: 0.000; rss: 75MB	llvm module passes [0]
  time: 0.002; rss: 75MB	codegen passes [0]
  time: 0.000; rss: 75MB	codegen passes [0]
time: 0.003; rss: 75MB	LLVM passes
time: 0.000; rss: 75MB	serialize work products
  time: 0.114; rss: 75MB	running linker
time: 0.114; rss: 75MB	linking
done
