commit 0f7c75b74fb7adc436eedc66c0032879293eeac6
Merge: 1c11ea3 6c2a456
Author: bors <bors@rust-lang.org>
Date:   Tue Nov 22 03:29:46 2016 -0600

    Auto merge of #37834 - bluss:peek-none, r=BurntSushi
    
    Make Peekable remember peeking a None
    
    Peekable should remember if a None has been seen in the `.peek()` method.
    It ensures that `.peek(); .peek();` or `.peek(); .next();` only advances the
    underlying iterator at most once. This does not by itself make the iterator
    fused.
    
    Thanks to @s3bk for the code in `fn peek()` itself.
    
    Fixes #37784
rustc: ./hyper.0.5.0
cargo rustc  -- -Ztime-passes -Zinput-stats
   Compiling matches v0.1.2
   Compiling bitflags v0.3.3
   Compiling log v0.3.6
   Compiling pkg-config v0.3.8
   Compiling libc v0.1.12
   Compiling rustc-serialize v0.3.19
   Compiling gcc v0.3.35
   Compiling winapi-build v0.1.1
   Compiling unicase v0.1.0
   Compiling libc v0.2.16
   Compiling lazy_static v0.1.16
   Compiling httparse v0.1.6
   Compiling kernel32-sys v0.2.2
   Compiling mime v0.0.11
   Compiling winapi v0.2.8
   Compiling typeable v0.1.2
   Compiling traitobject v0.0.1
   Compiling num_cpus v0.2.13
   Compiling rand v0.3.14
   Compiling time v0.1.35
   Compiling openssl-sys v0.6.7
   Compiling openssl v0.6.7
   Compiling uuid v0.1.18
   Compiling url v0.2.38
   Compiling cookie v0.1.21
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.023; rss: 48MB	parsing
Lines of code:             9003
Pre-expansion node count:  44055
time: 0.000; rss: 48MB	recursion limit
time: 0.000; rss: 48MB	crate injection
time: 0.000; rss: 48MB	plugin loading
time: 0.000; rss: 48MB	plugin registration
time: 0.092; rss: 86MB	expansion
time: 0.000; rss: 86MB	maybe building test harness
time: 0.001; rss: 86MB	maybe creating a macro crate
Post-expansion node count: 101769
time: 0.000; rss: 86MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 86MB	complete gated feature checking
time: 0.003; rss: 86MB	early lint checks
time: 0.001; rss: 86MB	AST validation
time: 0.017; rss: 90MB	name resolution
time: 0.014; rss: 93MB	lowering ast -> hir
time: 0.001; rss: 94MB	indexing hir
time: 0.001; rss: 94MB	attribute checking
time: 0.001; rss: 89MB	language item collection
time: 0.002; rss: 89MB	lifetime resolution
time: 0.000; rss: 89MB	looking for entry point
time: 0.000; rss: 89MB	looking for plugin registrar
time: 0.009; rss: 92MB	region resolution
time: 0.001; rss: 92MB	loop checking
time: 0.001; rss: 92MB	static item recursion checking
time: 0.039; rss: 92MB	compute_incremental_hashes_map
time: 0.000; rss: 92MB	load_dep_graph
time: 0.014; rss: 94MB	type collecting
time: 0.000; rss: 94MB	variance inference
time: 0.001; rss: 94MB	impl wf inference
time: 0.014; rss: 96MB	coherence checking
time: 0.041; rss: 97MB	wf checking
time: 0.024; rss: 98MB	item-types checking
time: 0.473; rss: 106MB	item-bodies checking
time: 0.000; rss: 106MB	drop-impl checking
time: 0.050; rss: 108MB	const checking
time: 0.008; rss: 108MB	privacy checking
time: 0.001; rss: 108MB	stability index
time: 0.003; rss: 108MB	intrinsic checking
time: 0.001; rss: 108MB	effect checking
time: 0.007; rss: 108MB	match checking
time: 0.004; rss: 109MB	liveness checking
time: 0.020; rss: 109MB	rvalue checking
time: 0.062; rss: 128MB	MIR dump
  time: 0.007; rss: 130MB	SimplifyCfg
  time: 0.013; rss: 131MB	QualifyAndPromoteConstants
  time: 0.013; rss: 131MB	TypeckMir
  time: 0.001; rss: 131MB	SimplifyBranches
  time: 0.003; rss: 131MB	SimplifyCfg
time: 0.037; rss: 131MB	MIR cleanup and validation
time: 0.055; rss: 132MB	borrow checking
time: 0.003; rss: 132MB	reachability checking
time: 0.005; rss: 132MB	death checking
time: 0.004; rss: 132MB	stability checking
time: 0.000; rss: 132MB	unused lib feature checking
time: 0.038; rss: 132MB	lint checking
time: 0.000; rss: 132MB	resolving dependency formats
  time: 0.000; rss: 132MB	NoLandingPads
  time: 0.003; rss: 132MB	SimplifyCfg
  time: 0.008; rss: 132MB	EraseRegions
  time: 0.001; rss: 132MB	AddCallGuards
  time: 0.025; rss: 134MB	ElaborateDrops
  time: 0.000; rss: 134MB	NoLandingPads
  time: 0.005; rss: 134MB	SimplifyCfg
  time: 0.003; rss: 134MB	InstCombine
  time: 0.003; rss: 134MB	Deaggregator
  time: 0.000; rss: 134MB	CopyPropagation
  time: 0.004; rss: 134MB	SimplifyLocals
  time: 0.001; rss: 134MB	AddCallGuards
  time: 0.000; rss: 134MB	PreTrans
time: 0.054; rss: 134MB	MIR optimisations
  time: 0.013; rss: 136MB	write metadata
  time: 0.126; rss: 142MB	translation item collection
  time: 0.014; rss: 145MB	codegen unit partitioning
  time: 0.012; rss: 199MB	internalize symbols
time: 1.038; rss: 199MB	translation
time: 0.000; rss: 199MB	assert dep graph
time: 0.000; rss: 199MB	serialize dep graph
  time: 0.085; rss: 151MB	llvm function passes [0]
  time: 0.042; rss: 153MB	llvm module passes [0]
  time: 1.646; rss: 152MB	codegen passes [0]
  time: 0.000; rss: 152MB	codegen passes [0]
time: 1.932; rss: 152MB	LLVM passes
time: 0.000; rss: 152MB	serialize work products
time: 0.070; rss: 99MB	linking
done
