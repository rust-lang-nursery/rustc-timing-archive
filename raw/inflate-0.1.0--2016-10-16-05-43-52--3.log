commit 6dc035ed911672c6a1f7afc9eed15fb08e574e5b
Merge: 98a3502 0b2746c
Author: bors <bors@rust-lang.org>
Date:   Sat Oct 15 19:49:12 2016 -0700

    Auto merge of #37098 - ollie27:rustdoc_playground, r=GuillaumeGomez
    
    rustdoc: Improve playground run buttons
    
    The main change is to stop using javascript to generate the URLs and use
    rustdoc instead.
    
    This also adds run buttons to the error index examples.
    
    You can test the changes at https://ollie27.github.io/rust_doc_test/.
    
    Fixes #36621
    Fixes #36910
rustc: ./inflate-0.1.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling inflate v0.1.0 (file:///root/benchmarks/inflate-0.1.0)
time: 0.004; rss: 43MB	parsing
Lines of code:             956
Pre-expansion node count:  4740
time: 0.000; rss: 43MB	recursion limit
time: 0.000; rss: 43MB	crate injection
time: 0.000; rss: 43MB	plugin loading
time: 0.000; rss: 43MB	plugin registration
time: 0.076; rss: 71MB	expansion
time: 0.000; rss: 71MB	maybe building test harness
time: 0.000; rss: 71MB	maybe creating a macro crate
Post-expansion node count: 55750
time: 0.000; rss: 71MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 71MB	complete gated feature checking
time: 0.002; rss: 71MB	early lint checks
time: 0.000; rss: 71MB	AST validation
time: 0.008; rss: 73MB	name resolution
time: 0.005; rss: 77MB	lowering ast -> hir
time: 0.001; rss: 79MB	indexing hir
time: 0.001; rss: 79MB	attribute checking
time: 0.001; rss: 75MB	language item collection
time: 0.001; rss: 75MB	lifetime resolution
time: 0.000; rss: 75MB	looking for entry point
time: 0.000; rss: 75MB	looking for plugin registrar
time: 0.003; rss: 76MB	region resolution
time: 0.000; rss: 76MB	loop checking
time: 0.000; rss: 76MB	static item recursion checking
time: 0.021; rss: 76MB	compute_incremental_hashes_map
time: 0.000; rss: 76MB	load_dep_graph
time: 0.001; rss: 78MB	type collecting
time: 0.000; rss: 78MB	variance inference
time: 0.009; rss: 79MB	coherence checking
time: 0.001; rss: 79MB	wf checking
time: 0.002; rss: 79MB	item-types checking
time: 2.409; rss: 92MB	item-bodies checking
time: 0.000; rss: 92MB	drop-impl checking
time: 0.017; rss: 92MB	const checking
time: 0.001; rss: 92MB	privacy checking
time: 0.000; rss: 92MB	stability index
time: 0.000; rss: 92MB	intrinsic checking
time: 0.001; rss: 92MB	effect checking
time: 0.003; rss: 92MB	match checking
time: 0.066; rss: 90MB	liveness checking
time: 0.013; rss: 90MB	rvalue checking
time: 0.037; rss: 112MB	MIR dump
  time: 0.007; rss: 111MB	SimplifyCfg
  time: 0.005; rss: 111MB	QualifyAndPromoteConstants
  time: 0.007; rss: 111MB	TypeckMir
  time: 0.000; rss: 111MB	SimplifyBranches
  time: 0.002; rss: 111MB	SimplifyCfg
time: 0.021; rss: 111MB	MIR passes
time: 0.206; rss: 113MB	borrow checking
time: 0.000; rss: 113MB	reachability checking
time: 0.003; rss: 113MB	death checking
time: 0.002; rss: 113MB	stability checking
time: 0.000; rss: 113MB	unused lib feature checking
time: 0.018; rss: 114MB	lint checking
time: 0.000; rss: 114MB	resolving dependency formats
  time: 0.000; rss: 114MB	NoLandingPads
  time: 0.002; rss: 114MB	SimplifyCfg
  time: 0.003; rss: 114MB	EraseRegions
  time: 0.001; rss: 114MB	AddCallGuards
  time: 0.200; rss: 114MB	ElaborateDrops
  time: 0.000; rss: 114MB	NoLandingPads
  time: 0.006; rss: 114MB	SimplifyCfg
  time: 0.003; rss: 114MB	InstCombine
  time: 0.000; rss: 114MB	Deaggregator
  time: 0.000; rss: 114MB	CopyPropagation
  time: 0.001; rss: 114MB	AddCallGuards
  time: 0.000; rss: 114MB	PreTrans
time: 0.215; rss: 114MB	Prepare MIR codegen passes
  time: 0.002; rss: 115MB	write metadata
  time: 0.010; rss: 115MB	translation item collection
  time: 0.001; rss: 115MB	codegen unit partitioning
  time: 0.001; rss: 129MB	internalize symbols
time: 0.160; rss: 112MB	translation
time: 0.000; rss: 112MB	assert dep graph
time: 0.000; rss: 112MB	serialize dep graph
  time: 0.028; rss: 88MB	llvm function passes [0]
  time: 0.005; rss: 88MB	llvm module passes [0]
  time: 0.665; rss: 93MB	codegen passes [0]
  time: 0.000; rss: 93MB	codegen passes [0]
time: 0.732; rss: 93MB	LLVM passes
time: 0.000; rss: 93MB	serialize work products
time: 0.046; rss: 82MB	linking
done
