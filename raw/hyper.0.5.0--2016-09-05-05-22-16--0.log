commit 2dbf600d159a5c65b53419f1669834d1f81496a7
Merge: 86995dc 92aa7e4
Author: bors <bors@rust-lang.org>
Date:   Sun Sep 4 23:50:04 2016 -0700

    Auto merge of #36242 - semarie:local-rebuild, r=alexcrichton
    
    Use libraries from local-rust-root directory in configure when using …
    
    …--enable-local-rebuild
    
    When using --enable-local-rebuild configure options, the configure
    script will test rustc version. But when running it, it will not use the
    libraries in the local-rust-root directory.
    
    So use `LD_LIBRARY_PATH` environment variable to correct it.
    
    Under OpenBSD, we use `--enable-local-rebuild` for rebuilding rustc-1.11.0 using rustc-1.11.0. But as it is in use in -current (the developpment branch of OpenBSD), system libraries could easily have ABI/API changes. The (unofficial) bootstrap (rustc-1.11.0 used for building rustc-1.11.0) include several system libraries to permit it to run. The build system use libraries in stage0/lib directory. But the configure script doesn't.
    
    Due to my special use of `--enable-local-rebuild`, I dunno if this PR is suitable for inclusion. But it corrects a difference between build and configure use of the binary.
    
    r? @alexcrichton
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling traitobject v0.0.1
   Compiling unicase v0.1.0
   Compiling typeable v0.1.2
   Compiling gcc v0.3.35
   Compiling matches v0.1.2
   Compiling libc v0.2.15
   Compiling winapi-build v0.1.1
   Compiling lazy_static v0.1.16
   Compiling log v0.3.6
   Compiling rustc-serialize v0.3.19
   Compiling winapi v0.2.8
   Compiling bitflags v0.3.3
   Compiling httparse v0.1.6
   Compiling libc v0.1.12
   Compiling kernel32-sys v0.2.2
   Compiling mime v0.0.11
   Compiling pkg-config v0.3.8
   Compiling num_cpus v0.2.13
   Compiling rand v0.3.14
   Compiling time v0.1.35
   Compiling openssl-sys v0.6.7
   Compiling openssl v0.6.7
   Compiling uuid v0.1.18
   Compiling url v0.2.38
   Compiling cookie v0.1.21
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.028; rss: 50MB	parsing
Lines of code:             9154
Pre-expansion node count:  44873
time: 0.003; rss: 50MB	configuration
time: 0.000; rss: 50MB	recursion limit
time: 0.000; rss: 50MB	crate injection
time: 0.000; rss: 50MB	plugin loading
time: 0.000; rss: 50MB	plugin registration
time: 0.091; rss: 78MB	expansion
time: 0.000; rss: 78MB	maybe building test harness
time: 0.001; rss: 78MB	maybe creating a macro crate
time: 0.005; rss: 78MB	assigning node ids
Post-expansion node count: 101537
time: 0.000; rss: 78MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 78MB	complete gated feature checking
time: 0.003; rss: 80MB	collecting defs
time: 0.009; rss: 86MB	external crate/lib resolution
time: 0.003; rss: 86MB	early lint checks
time: 0.001; rss: 86MB	AST validation
time: 0.015; rss: 95MB	name resolution
time: 0.008; rss: 99MB	lowering ast -> hir
time: 0.002; rss: 101MB	indexing hir
time: 0.001; rss: 101MB	attribute checking
time: 0.001; rss: 94MB	language item collection
time: 0.002; rss: 94MB	lifetime resolution
time: 0.000; rss: 94MB	looking for entry point
time: 0.000; rss: 94MB	looking for plugin registrar
time: 0.006; rss: 99MB	region resolution
time: 0.001; rss: 99MB	loop checking
time: 0.001; rss: 99MB	static item recursion checking
time: 0.013; rss: 99MB	compute_incremental_hashes_map
time: 0.000; rss: 99MB	load_dep_graph
time: 0.022; rss: 100MB	type collecting
time: 0.000; rss: 100MB	variance inference
time: 0.035; rss: 104MB	coherence checking
time: 0.057; rss: 105MB	wf checking
time: 0.029; rss: 107MB	item-types checking
time: 0.363; rss: 117MB	item-bodies checking
time: 0.000; rss: 117MB	drop-impl checking
time: 0.038; rss: 119MB	const checking
time: 0.009; rss: 119MB	privacy checking
time: 0.001; rss: 119MB	stability index
time: 0.005; rss: 119MB	intrinsic checking
time: 0.002; rss: 119MB	effect checking
time: 0.013; rss: 119MB	match checking
time: 0.004; rss: 119MB	liveness checking
time: 0.027; rss: 119MB	rvalue checking
time: 0.054; rss: 136MB	MIR dump
time: 0.040; rss: 136MB	MIR passes
time: 0.062; rss: 136MB	borrow checking
time: 0.003; rss: 136MB	reachability checking
time: 0.005; rss: 136MB	death checking
time: 0.005; rss: 138MB	stability checking
time: 0.000; rss: 138MB	unused lib feature checking
time: 0.042; rss: 138MB	lint checking
time: 0.000; rss: 138MB	resolving dependency formats
time: 0.076; rss: 141MB	Prepare MIR codegen passes
  time: 0.055; rss: 145MB	write metadata
  time: 0.114; rss: 149MB	translation item collection
  time: 0.018; rss: 151MB	codegen unit partitioning
  time: 0.031; rss: 218MB	internalize symbols
time: 1.335; rss: 208MB	translation
time: 0.000; rss: 208MB	assert dep graph
time: 0.000; rss: 208MB	serialize dep graph
  time: 0.100; rss: 158MB	llvm function passes [0]
  time: 0.049; rss: 160MB	llvm module passes [0]
  time: 1.848; rss: 165MB	codegen passes [0]
  time: 0.001; rss: 164MB	codegen passes [0]
time: 2.160; rss: 164MB	LLVM passes
time: 0.000; rss: 164MB	serialize work products
time: 0.162; rss: 98MB	linking
done
