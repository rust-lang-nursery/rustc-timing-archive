commit a888333ea6acad7e289fa3f0f9e6c1058aa2a011
Merge: 9b367d9 e3b414d
Author: bors <bors@rust-lang.org>
Date:   Sun Feb 14 21:24:45 2016 +0000

    Auto merge of #31460 - alexcrichton:supafast-rustc, r=brson
    
    Looking at some profiles of rustc recently, these seemed like two pretty easy wins we could get in terms of performance on the table.
rustc: ./regex-macros.0.1.30
cd regex_macros && cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling regex_macros v0.1.17 (file:///root/benchmarks/regex-macros.0.1.30/regex_macros)
time: 0.002; rss: 36MB	parsing
Lines of code:             639
Pre-expansion node count:  2170
time: 0.001; rss: 36MB	configuration 1
time: 0.000; rss: 36MB	recursion limit
time: 0.000; rss: 36MB	gated macro checking
time: 0.000; rss: 36MB	crate injection
time: 0.003; rss: 40MB	macro loading
time: 0.000; rss: 40MB	plugin loading
time: 0.000; rss: 40MB	plugin registration
time: 0.044; rss: 47MB	expansion
time: 0.001; rss: 47MB	complete gated feature checking 1
time: 0.011; rss: 47MB	configuration 2
time: 0.000; rss: 47MB	gated configuration checking
time: 0.005; rss: 47MB	maybe building test harness
time: 0.005; rss: 47MB	prelude injection
time: 0.000; rss: 47MB	checking that all macro invocations are gone
time: 0.000; rss: 47MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 47MB	complete gated feature checking 2
time: 0.000; rss: 47MB	const fn bodies and arguments
Post-expansion node count: 76201
time: 0.005; rss: 47MB	assigning node ids
time: 0.007; rss: 52MB	lowering ast -> hir
time: 0.001; rss: 52MB	indexing hir
time: 0.000; rss: 52MB	attribute checking
time: 0.004; rss: 52MB	early lint checks
time: 0.081; rss: 85MB	external crate/lib resolution
time: 0.001; rss: 85MB	language item collection
time: 0.012; rss: 104MB	resolution
time: 0.001; rss: 104MB	lifetime resolution
time: 0.000; rss: 104MB	looking for entry point
time: 0.000; rss: 104MB	looking for plugin registrar
time: 0.002; rss: 105MB	region resolution
time: 0.000; rss: 105MB	loop checking
time: 0.000; rss: 105MB	static item recursion checking
time: 0.003; rss: 106MB	type collecting
time: 0.000; rss: 106MB	variance inference
time: 0.011; rss: 132MB	coherence checking
time: 0.007; rss: 135MB	wf checking
time: 0.001; rss: 135MB	item-types checking
time: 1.049; rss: 181MB	item-bodies checking
makefile:2: recipe for target 'all' failed
done
