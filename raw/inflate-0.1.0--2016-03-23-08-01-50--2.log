commit d6af19b89c477708ed0f5341ab7a26f1764f1ffa
Merge: 8ba2ea5 3a790ac
Author: bors <bors@rust-lang.org>
Date:   Wed Mar 23 01:03:04 2016 -0700

    Auto merge of #32348 - brson:cargotest, r=alexcrichton
    
    Introduce 'cargotest' and the check-cargotest buildstep
    
    This is a new suite of tests that verifies that the compiler builds specific revisions of select crates from crates.io.
    
    It does not run by default. It is intended that bors runs these tests against all PRs, and gates on them. In this way we will make it harder still to break important swaths of the ecosystem, even on nightly.
    
    This is a very basic implementation intended for feedback. The biggest thing it probably should do but doesn't is use a lockfile for every project it builds.
    
    r? @alexcrichton cc @rust-lang/lang @rust-lang/libs
rustc: ./inflate-0.1.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling inflate v0.1.0 (file:///root/benchmarks/inflate-0.1.0)
time: 0.004; rss: 38MB	parsing
Lines of code:             956
Pre-expansion node count:  4761
time: 0.001; rss: 38MB	configuration 1
time: 0.000; rss: 38MB	recursion limit
time: 0.000; rss: 38MB	gated macro checking
time: 0.000; rss: 38MB	crate injection
time: 0.003; rss: 42MB	macro loading
time: 0.000; rss: 42MB	plugin loading
time: 0.000; rss: 42MB	plugin registration
time: 0.079; rss: 49MB	expansion
time: 0.001; rss: 49MB	complete gated feature checking 1
time: 0.009; rss: 49MB	configuration 2
time: 0.000; rss: 49MB	gated configuration checking
time: 0.004; rss: 49MB	maybe building test harness
time: 0.004; rss: 49MB	prelude injection
time: 0.000; rss: 49MB	checking that all macro invocations are gone
time: 0.000; rss: 49MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 49MB	complete gated feature checking 2
time: 0.000; rss: 49MB	const fn bodies and arguments
Post-expansion node count: 54798
time: 0.004; rss: 49MB	assigning node ids
time: 0.009; rss: 55MB	lowering ast -> hir
time: 0.002; rss: 55MB	indexing hir
time: 0.001; rss: 55MB	attribute checking
time: 0.004; rss: 55MB	early lint checks
time: 0.001; rss: 53MB	external crate/lib resolution
time: 0.001; rss: 53MB	language item collection
time: 0.010; rss: 63MB	resolution
time: 0.001; rss: 63MB	lifetime resolution
time: 0.000; rss: 63MB	looking for entry point
time: 0.000; rss: 63MB	looking for plugin registrar
time: 0.003; rss: 63MB	region resolution
time: 0.000; rss: 63MB	loop checking
time: 0.000; rss: 63MB	static item recursion checking
time: 0.001; rss: 65MB	type collecting
time: 0.000; rss: 65MB	variance inference
time: 0.015; rss: 78MB	coherence checking
time: 0.002; rss: 78MB	wf checking
time: 0.002; rss: 79MB	item-types checking
time: 2.884; rss: 101MB	item-bodies checking
time: 0.000; rss: 101MB	drop-impl checking
time: 0.013; rss: 102MB	const checking
time: 0.002; rss: 102MB	privacy checking
time: 0.000; rss: 102MB	stability index
time: 0.000; rss: 102MB	intrinsic checking
time: 0.001; rss: 102MB	effect checking
time: 0.003; rss: 102MB	match checking
time: 0.065; rss: 102MB	liveness checking
time: 0.009; rss: 102MB	rvalue checking
time: 0.028; rss: 115MB	MIR dump
time: 0.014; rss: 114MB	MIR passes
time: 0.209; rss: 114MB	borrow checking
time: 0.000; rss: 114MB	reachability checking
time: 0.003; rss: 114MB	death checking
time: 0.002; rss: 114MB	stability checking
time: 0.000; rss: 114MB	unused lib feature checking
time: 0.018; rss: 116MB	lint checking
time: 0.000; rss: 116MB	resolving dependency formats
  time: 0.012; rss: 127MB	translation item collection
  time: 0.003; rss: 144MB	write metadata
time: 0.359; rss: 136MB	translation
  time: 0.026; rss: 99MB	llvm function passes [0]
  time: 0.005; rss: 100MB	llvm module passes [0]
  time: 0.500; rss: 105MB	codegen passes [0]
  time: 0.000; rss: 94MB	codegen passes [0]
time: 0.571; rss: 94MB	LLVM passes
time: 0.034; rss: 94MB	linking
done
