commit 19765f2ab18ebb79f8615951b7cb8b86d896ecda
Merge: 1ece9ca ac73335
Author: bors <bors@rust-lang.org>
Date:   Mon Aug 1 20:05:57 2016 -0700

    Auto merge of #35054 - pwoolcoc:stringfromchars, r=brson
    
    implement `From<Vec<char>>` and `From<&'a [char]>` for `String`
    
    Though there are ways to convert a slice or vec of chars into a string,
    it would be nice to be able to just do `String::from(&['a', 'b', 'c'])`,
    so this PR implements `From<Vec<char>>` and `From<&'a [char]>` for
    String.
rustc: ./issue-32278-big-array-of-strings
/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc big-array-of-strings.rs -Ztime-passes -Zinput-stats
time: 0.149; rss: 71MB	parsing
Lines of code:             65577
Pre-expansion node count:  65552
time: 0.011; rss: 71MB	configuration
time: 0.000; rss: 71MB	recursion limit
time: 0.000; rss: 71MB	crate injection
time: 0.000; rss: 71MB	plugin loading
time: 0.000; rss: 71MB	plugin registration
time: 0.027; rss: 106MB	expansion
time: 0.000; rss: 106MB	maybe building test harness
time: 0.005; rss: 106MB	assigning node ids
Post-expansion node count: 65565
time: 0.000; rss: 106MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 106MB	complete gated feature checking
time: 0.000; rss: 106MB	collecting defs
time: 0.003; rss: 106MB	external crate/lib resolution
time: 0.007; rss: 106MB	early lint checks
time: 0.000; rss: 106MB	AST validation
time: 0.002; rss: 106MB	name resolution
time: 0.007; rss: 125MB	lowering ast -> hir
time: 0.002; rss: 129MB	indexing hir
time: 0.001; rss: 129MB	attribute checking
time: 0.001; rss: 119MB	language item collection
time: 0.001; rss: 119MB	lifetime resolution
time: 0.000; rss: 119MB	looking for entry point
time: 0.000; rss: 119MB	looking for plugin registrar
time: 0.007; rss: 124MB	region resolution
time: 0.001; rss: 124MB	loop checking
time: 0.001; rss: 124MB	static item recursion checking
time: 0.000; rss: 124MB	load_dep_graph
time: 0.000; rss: 124MB	type collecting
time: 0.000; rss: 124MB	variance inference
time: 0.005; rss: 126MB	coherence checking
time: 0.001; rss: 126MB	wf checking
time: 0.930; rss: 143MB	item-types checking
time: 0.000; rss: 143MB	item-bodies checking
time: 0.000; rss: 143MB	drop-impl checking
time: 0.021; rss: 146MB	const checking
time: 0.002; rss: 146MB	privacy checking
time: 0.001; rss: 146MB	stability index
time: 0.001; rss: 146MB	intrinsic checking
time: 0.001; rss: 146MB	effect checking
time: 0.001; rss: 146MB	match checking
time: 0.001; rss: 146MB	liveness checking
time: 0.000; rss: 146MB	rvalue checking
time: 0.052; rss: 153MB	MIR dump
time: 0.002; rss: 153MB	MIR passes
time: 0.001; rss: 153MB	borrow checking
time: 0.000; rss: 153MB	reachability checking
time: 0.001; rss: 153MB	death checking
time: 0.001; rss: 153MB	stability checking
time: 0.000; rss: 153MB	unused lib feature checking
time: 0.028; rss: 153MB	lint checking
time: 0.001; rss: 153MB	resolving dependency formats
time: 0.001; rss: 153MB	Prepare MIR codegen passes
  time: 0.000; rss: 153MB	write metadata
  time: 0.001; rss: 154MB	translation item collection
  time: 0.000; rss: 154MB	codegen unit partitioning
  time: 0.001; rss: 167MB	internalize symbols
time: 0.091; rss: 161MB	translation
time: 0.000; rss: 161MB	assert dep graph
time: 0.000; rss: 161MB	serialize dep graph
  time: 0.009; rss: 112MB	llvm function passes [0]
  time: 0.000; rss: 112MB	llvm module passes [0]
  time: 0.179; rss: 111MB	codegen passes [0]
  time: 0.000; rss: 111MB	codegen passes [0]
time: 0.189; rss: 111MB	LLVM passes
time: 0.000; rss: 111MB	serialize work products
  time: 0.197; rss: 99MB	running linker
time: 0.198; rss: 99MB	linking
done
