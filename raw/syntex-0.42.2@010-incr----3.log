commit 6c9bb42ecc48ffb5a3c8b61e220b11adc3a46384
Merge: 7f2d2af a8535ce
Author: bors <bors@rust-lang.org>
Date:   Fri Dec 30 18:24:27 2016 +0000

    Auto merge of #38658 - alexcrichton:less-docs, r=nikomatsakis
    
    std: Don't build docs for misc facade crates
    
    Retain the same behavior as stable.
    
    Closes #38319
rustc 1.15.0-nightly (daf8c1dfc 2016-12-05)
-rwxr-xr-x 1 root root 9432 Dec  6 15:39 /usr/local/bin/rustc
rustc: ./syntex-0.42.2@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.095; rss: 86MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 89MB	recursion limit
time: 0.000; rss: 89MB	crate injection
time: 0.000; rss: 89MB	plugin loading
time: 0.000; rss: 89MB	plugin registration
time: 0.242; rss: 164MB	expansion
time: 0.000; rss: 164MB	maybe building test harness
time: 0.006; rss: 164MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 164MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 164MB	complete gated feature checking
time: 0.025; rss: 164MB	early lint checks
time: 0.007; rss: 164MB	AST validation
time: 0.078; rss: 178MB	name resolution
time: 0.060; rss: 212MB	lowering ast -> hir
time: 0.010; rss: 204MB	indexing hir
time: 0.006; rss: 204MB	attribute checking
time: 0.002; rss: 166MB	language item collection
time: 0.011; rss: 168MB	lifetime resolution
time: 0.000; rss: 168MB	looking for entry point
time: 0.000; rss: 168MB	looking for plugin registrar
time: 0.049; rss: 189MB	region resolution
time: 0.008; rss: 189MB	loop checking
time: 0.002; rss: 189MB	static item recursion checking
time: 0.389; rss: 190MB	compute_incremental_hashes_map
time: 0.000; rss: 190MB	load_dep_graph
time: 0.009; rss: 190MB	stability index
time: 0.021; rss: 195MB	stability checking
time: 0.055; rss: 203MB	type collecting
time: 0.004; rss: 203MB	variance inference
time: 0.006; rss: 206MB	impl wf inference
time: 0.026; rss: 211MB	coherence checking
time: 0.086; rss: 212MB	wf checking
time: 0.203; rss: 222MB	item-types checking
time: 3.683; rss: 280MB	item-bodies checking
time: 0.000; rss: 280MB	drop-impl checking
time: 0.234; rss: 290MB	const checking
time: 0.060; rss: 290MB	privacy checking
time: 0.020; rss: 297MB	intrinsic checking
time: 0.015; rss: 297MB	effect checking
time: 0.050; rss: 297MB	match checking
time: 0.047; rss: 304MB	liveness checking
time: 0.181; rss: 306MB	rvalue checking
time: 0.363; rss: 492MB	MIR dump
  time: 0.058; rss: 496MB	SimplifyCfg
  time: 0.077; rss: 496MB	QualifyAndPromoteConstants
  time: 0.109; rss: 496MB	TypeckMir
  time: 0.005; rss: 496MB	SimplifyBranches
  time: 0.031; rss: 496MB	SimplifyCfg
time: 0.279; rss: 496MB	MIR cleanup and validation
time: 0.518; rss: 514MB	borrow checking
time: 0.019; rss: 514MB	reachability checking
time: 0.039; rss: 514MB	death checking
time: 0.000; rss: 514MB	unused lib feature checking
time: 0.196; rss: 514MB	lint checking
time: 0.000; rss: 514MB	resolving dependency formats
  time: 0.004; rss: 514MB	NoLandingPads
  time: 0.027; rss: 514MB	SimplifyCfg
  time: 0.063; rss: 520MB	EraseRegions
  time: 0.011; rss: 520MB	AddCallGuards
  time: 0.282; rss: 544MB	ElaborateDrops
  time: 0.004; rss: 544MB	NoLandingPads
  time: 0.053; rss: 544MB	SimplifyCfg
  time: 0.030; rss: 543MB	InstCombine
  time: 0.014; rss: 543MB	Deaggregator
  time: 0.004; rss: 543MB	CopyPropagation
  time: 0.035; rss: 543MB	SimplifyLocals
  time: 0.010; rss: 543MB	AddCallGuards
  time: 0.003; rss: 543MB	PreTrans
time: 0.540; rss: 543MB	MIR optimisations
  time: 0.069; rss: 550MB	write metadata
  time: 0.400; rss: 558MB	translation item collection
  time: 0.074; rss: 567MB	codegen unit partitioning
  time: 0.050; rss: 1467MB	internalize symbols
time: 13.736; rss: 1467MB	translation
time: 0.000; rss: 1467MB	assert dep graph
time: 1.381; rss: 1495MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.001; rss: 1222MB	llvm function passes [1]
time: 0.000; rss: 1222MB	llvm module passes [1]
time: 0.001; rss: 1228MB	llvm function passes [0]
time: 0.000; rss: 1228MB	llvm module passes [0]
time: 0.005; rss: 1229MB	llvm function passes [2]
time: 0.000; rss: 1229MB	llvm module passes [2]
time: 0.003; rss: 1229MB	codegen passes [1]
time: 0.007; rss: 1233MB	llvm function passes [4]
time: 0.002; rss: 1233MB	llvm function passes [9]
time: 0.001; rss: 1233MB	llvm module passes [9]
time: 0.003; rss: 1233MB	llvm module passes [4]
time: 0.016; rss: 1241MB	llvm function passes [6]
time: 0.023; rss: 1247MB	llvm function passes [5]
time: 0.025; rss: 1247MB	codegen passes [0]
time: 0.015; rss: 1247MB	llvm module passes [6]
time: 0.010; rss: 1247MB	llvm module passes [5]
time: 0.039; rss: 1250MB	llvm function passes [3]
time: 0.000; rss: 1250MB	llvm module passes [3]
time: 0.021; rss: 1250MB	llvm function passes [16]
time: 0.000; rss: 1252MB	llvm function passes [12]
time: 0.000; rss: 1252MB	llvm module passes [12]
time: 0.001; rss: 1252MB	codegen passes [12]
time: 0.001; rss: 1265MB	llvm function passes [18]
time: 0.000; rss: 1265MB	llvm module passes [18]
time: 0.005; rss: 1265MB	llvm function passes [12]
time: 0.001; rss: 1265MB	llvm module passes [12]
time: 0.011; rss: 1267MB	llvm module passes [16]
time: 0.001; rss: 1277MB	llvm function passes [21]
time: 0.000; rss: 1277MB	llvm module passes [21]
time: 0.025; rss: 1277MB	codegen passes [3]
time: 0.000; rss: 1277MB	llvm function passes [3]
time: 0.000; rss: 1277MB	llvm module passes [3]
time: 0.059; rss: 1279MB	llvm function passes [0]
time: 0.015; rss: 1279MB	llvm module passes [0]
time: 0.046; rss: 1283MB	codegen passes [18]
time: 0.033; rss: 1285MB	codegen passes [3]
time: 0.000; rss: 1287MB	llvm function passes [3]
time: 0.000; rss: 1287MB	llvm module passes [3]
time: 0.001; rss: 1287MB	codegen passes [3]
time: 0.041; rss: 1291MB	codegen passes [21]
time: 0.127; rss: 1297MB	codegen passes [9]
time: 0.128; rss: 1297MB	codegen passes [2]
time: 0.128; rss: 1307MB	llvm function passes [10]
time: 0.087; rss: 1309MB	codegen passes [12]
time: 0.017; rss: 1313MB	llvm function passes [27]
time: 0.004; rss: 1313MB	llvm module passes [27]
time: 0.034; rss: 1318MB	llvm function passes [19]
time: 0.009; rss: 1318MB	llvm module passes [19]
time: 0.116; rss: 1334MB	llvm function passes [3]
time: 0.094; rss: 1334MB	llvm module passes [10]
time: 0.225; rss: 1334MB	codegen passes [4]
time: 0.006; rss: 1334MB	llvm function passes [4]
time: 0.026; rss: 1344MB	llvm module passes [4]
time: 0.169; rss: 1344MB	llvm function passes [18]
time: 0.000; rss: 1343MB	codegen passes [38]
time: 0.057; rss: 1345MB	llvm module passes [3]
time: 0.116; rss: 1345MB	llvm function passes [20]
time: 0.040; rss: 1341MB	llvm module passes [18]
time: 0.034; rss: 1341MB	llvm module passes [20]
time: 0.302; rss: 1341MB	llvm function passes [15]
time: 0.401; rss: 1352MB	llvm function passes [8]
time: 0.274; rss: 1352MB	llvm function passes [23]
time: 0.019; rss: 1352MB	llvm module passes [23]
time: 0.133; rss: 1354MB	codegen passes [4]
time: 0.467; rss: 1360MB	llvm function passes [7]
time: 0.204; rss: 1363MB	llvm function passes [37]
time: 0.000; rss: 1363MB	llvm module passes [37]
time: 0.152; rss: 1363MB	llvm module passes [15]
time: 0.106; rss: 1363MB	llvm module passes [8]
time: 0.025; rss: 1365MB	codegen passes [37]
time: 0.516; rss: 1365MB	llvm function passes [11]
time: 0.011; rss: 1365MB	llvm module passes [11]
time: 0.535; rss: 1365MB	llvm function passes [1]
time: 0.498; rss: 1367MB	llvm function passes [17]
time: 0.019; rss: 1371MB	llvm module passes [17]
time: 0.342; rss: 1371MB	llvm function passes [36]
time: 0.033; rss: 1371MB	llvm module passes [1]
time: 0.405; rss: 1378MB	llvm function passes [32]
time: 0.164; rss: 1382MB	llvm module passes [7]
time: 0.623; rss: 1385MB	llvm function passes [13]
time: 0.359; rss: 1385MB	llvm function passes [30]
time: 0.526; rss: 1387MB	llvm function passes [21]
time: 0.502; rss: 1395MB	llvm function passes [29]
time: 0.560; rss: 1399MB	llvm function passes [9]
time: 0.528; rss: 1399MB	llvm function passes [25]
time: 0.015; rss: 1405MB	llvm module passes [25]
time: 0.505; rss: 1400MB	codegen passes [27]
time: 0.528; rss: 1400MB	llvm function passes [34]
time: 0.141; rss: 1398MB	llvm module passes [13]
time: 0.097; rss: 1398MB	llvm module passes [29]
time: 0.092; rss: 1398MB	llvm module passes [9]
time: 0.173; rss: 1399MB	llvm module passes [32]
time: 0.654; rss: 1401MB	llvm function passes [24]
time: 0.634; rss: 1404MB	llvm function passes [28]
time: 0.002; rss: 1404MB	llvm module passes [28]
time: 0.687; rss: 1404MB	llvm function passes [22]
time: 0.797; rss: 1403MB	llvm function passes [14]
time: 0.014; rss: 1403MB	llvm module passes [22]
time: 0.091; rss: 1409MB	llvm module passes [34]
time: 0.072; rss: 1411MB	llvm module passes [24]
time: 0.734; rss: 1405MB	llvm function passes [26]
time: 0.621; rss: 1402MB	llvm function passes [33]
time: 0.030; rss: 1401MB	llvm module passes [26]
time: 0.116; rss: 1407MB	codegen passes [28]
time: 0.835; rss: 1400MB	llvm function passes [2]
time: 0.071; rss: 1403MB	llvm module passes [33]
time: 0.350; rss: 1404MB	llvm module passes [30]
time: 0.773; rss: 1408MB	llvm function passes [35]
time: 0.848; rss: 1410MB	llvm function passes [31]
time: 0.021; rss: 1410MB	llvm module passes [35]
time: 0.180; rss: 1422MB	llvm module passes [2]
time: 1.007; rss: 1424MB	llvm function passes [12]
time: 0.180; rss: 1430MB	llvm module passes [31]
time: 0.599; rss: 1434MB	llvm module passes [21]
time: 0.761; rss: 1450MB	llvm module passes [36]
time: 0.290; rss: 1452MB	llvm module passes [12]
time: 1.285; rss: 1448MB	codegen passes [16]
time: 1.342; rss: 1464MB	codegen passes [5]
time: 0.732; rss: 1466MB	llvm module passes [14]
time: 1.607; rss: 1467MB	codegen passes [6]
time: 0.681; rss: 1463MB	codegen passes [33]
time: 2.029; rss: 1494MB	codegen passes [0]
time: 1.636; rss: 1494MB	codegen passes [11]
time: 2.047; rss: 1467MB	codegen passes [19]
time: 2.021; rss: 1477MB	codegen passes [22]
time: 2.228; rss: 1452MB	codegen passes [1]
time: 2.301; rss: 1440MB	codegen passes [25]
time: 2.053; rss: 1446MB	codegen passes [30]
time: 2.434; rss: 1444MB	codegen passes [17]
time: 2.961; rss: 1481MB	codegen passes [3]
time: 3.036; rss: 1463MB	codegen passes [23]
time: 2.988; rss: 1461MB	codegen passes [20]
time: 2.745; rss: 1510MB	codegen passes [35]
time: 3.140; rss: 1514MB	codegen passes [26]
time: 3.276; rss: 1565MB	codegen passes [34]
time: 3.933; rss: 1605MB	codegen passes [24]
time: 4.416; rss: 1596MB	codegen passes [18]
time: 4.792; rss: 1652MB	codegen passes [10]
time: 4.272; rss: 1702MB	codegen passes [21]
time: 5.294; rss: 1674MB	codegen passes [15]
time: 5.495; rss: 1688MB	codegen passes [31]
time: 5.185; rss: 1688MB	codegen passes [8]
time: 5.253; rss: 1668MB	codegen passes [36]
time: 5.719; rss: 1622MB	codegen passes [9]
time: 5.920; rss: 1573MB	codegen passes [2]
time: 5.868; rss: 1584MB	codegen passes [32]
time: 5.899; rss: 1540MB	codegen passes [29]
time: 6.593; rss: 1518MB	codegen passes [7]
time: 6.369; rss: 1442MB	codegen passes [13]
time: 7.307; rss: 1409MB	codegen passes [12]
time: 7.527; rss: 1335MB	codegen passes [14]
time: 10.731; rss: 1332MB	LLVM passes
time: 0.000; rss: 1332MB	serialize work products
time: 1.061; rss: 297MB	linking
done
