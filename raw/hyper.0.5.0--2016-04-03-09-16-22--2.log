commit 0894b06283ac513bd4b6351aa9065fa515e2a71d
Merge: a09f386 a3fdde7
Author: bors <bors@rust-lang.org>
Date:   Sun Apr 3 03:12:41 2016 -0700

    Auto merge of #32168 - alexcrichton:fix-filecheck, r=aturon
    
    mk: Add configure option for disabling codegen tests
    
    Our `codegen` test suite requires the LLVM `FileCheck` utility but unfortunately
    this isn't always available in all custom LLVM roots (e.g. those specified via
    `--llvm-root`). This commit adds a `./configure` option called
    `--disable-codegen-tests` which will manually disable running these tests. In
    the case that this option is passed we can forgo the need for the `FileCheck`
    executable. Note that we still require `FileCheck` by default as we will attempt
    to run these tests.
    
    Closes #28667
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.031; rss: 45MB	parsing
Lines of code:             9154
Pre-expansion node count:  45594
time: 0.009; rss: 45MB	configuration 1
time: 0.000; rss: 45MB	recursion limit
time: 0.000; rss: 45MB	gated macro checking
time: 0.000; rss: 45MB	crate injection
time: 0.004; rss: 51MB	macro loading
time: 0.000; rss: 51MB	plugin loading
time: 0.000; rss: 51MB	plugin registration
time: 0.190; rss: 60MB	expansion
time: 0.005; rss: 60MB	complete gated feature checking 1
time: 0.034; rss: 60MB	configuration 2
time: 0.000; rss: 60MB	gated configuration checking
time: 0.013; rss: 60MB	maybe building test harness
time: 0.010; rss: 60MB	prelude injection
time: 0.001; rss: 60MB	checking that all macro invocations are gone
time: 0.000; rss: 60MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 60MB	complete gated feature checking 2
time: 0.001; rss: 60MB	const fn bodies and arguments
Post-expansion node count: 107125
time: 0.010; rss: 60MB	assigning node ids
time: 0.011; rss: 66MB	lowering ast -> hir
time: 0.004; rss: 68MB	indexing hir
time: 0.001; rss: 68MB	attribute checking
time: 0.006; rss: 68MB	early lint checks
time: 0.004; rss: 65MB	external crate/lib resolution
time: 0.001; rss: 65MB	language item collection
time: 0.023; rss: 83MB	resolution
time: 0.002; rss: 83MB	lifetime resolution
time: 0.000; rss: 83MB	looking for entry point
time: 0.000; rss: 83MB	looking for plugin registrar
time: 0.006; rss: 87MB	region resolution
time: 0.001; rss: 87MB	loop checking
time: 0.001; rss: 87MB	static item recursion checking
time: 0.019; rss: 96MB	type collecting
time: 0.000; rss: 96MB	variance inference
time: 0.519; rss: 113MB	coherence checking
time: 0.076; rss: 113MB	wf checking
time: 0.029; rss: 115MB	item-types checking
time: 0.488; rss: 135MB	item-bodies checking
time: 0.000; rss: 135MB	drop-impl checking
time: 0.036; rss: 137MB	const checking
time: 0.007; rss: 137MB	privacy checking
time: 0.001; rss: 137MB	stability index
time: 0.004; rss: 137MB	intrinsic checking
time: 0.002; rss: 137MB	effect checking
time: 0.012; rss: 137MB	match checking
time: 0.005; rss: 137MB	liveness checking
time: 0.033; rss: 137MB	rvalue checking
time: 0.047; rss: 142MB	MIR dump
time: 0.028; rss: 144MB	MIR passes
time: 0.064; rss: 144MB	borrow checking
time: 0.003; rss: 144MB	reachability checking
time: 0.006; rss: 144MB	death checking
time: 0.006; rss: 144MB	stability checking
time: 0.000; rss: 144MB	unused lib feature checking
time: 0.046; rss: 144MB	lint checking
time: 0.000; rss: 144MB	resolving dependency formats
  time: 0.184; rss: 157MB	translation item collection
  time: 0.138; rss: 288MB	write metadata
time: 1.463; rss: 288MB	translation
  time: 0.096; rss: 168MB	llvm function passes [0]
  time: 0.047; rss: 169MB	llvm module passes [0]
  time: 1.633; rss: 172MB	codegen passes [0]
  time: 0.001; rss: 122MB	codegen passes [0]
time: 1.974; rss: 121MB	LLVM passes
time: 0.171; rss: 119MB	linking
done
