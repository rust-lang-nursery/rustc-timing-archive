commit 499484f56d336f4628a6fa016626beb3ef21ba81
Merge: 43c090e 37d974f
Author: bors <bors@rust-lang.org>
Date:   Thu Aug 18 08:54:10 2016 -0700

    Auto merge of #35684 - nikomatsakis:incr-comp-metadata-audit-35111, r=mw
    
    Restructure metadata encoder to track deps precisely
    
    This issue restructures meta-data encoding to track dependencies very precisely. It uses a cute technique I hope to spread elsewhere, where we can guard the data flowing into a new dep-graph task and ensure that it is not "leaking" information from the outside, which would result in missing edges. There are no tests because we don't know of any bugs in the old system, but it's clear that there was leaked data.
    
    The commit series is standalone, but the refactorings are kind of "windy". It's a good idea to read the comment in `src/librustc_metadata/index_builder.rs` to get a feeling for the overall strategy I was aiming at.
    
    In several cases, I wound up adding some extra hashtable lookups, I think primarily for looking up `AdtDef` instances. We could remove these by implementing `DepGraphRead` for an `AdtDef` and then having it register a read to the adt-defs table, I guess, but I doubt it is really noticeable.
    
    Eventually I think I'd like to extend this pattern to the dep-graph more generally, since it effectively guarantees that data cannot leak.
    
    Fixes #35111.
    
    r? @michaelwoerister
rustc: ./regex-macros.0.1.30
cd regex_macros && cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling regex_macros v0.1.17 (file:///root/benchmarks/regex-macros.0.1.30/regex_macros)
time: 0.002; rss: 44MB	parsing
Lines of code:             639
Pre-expansion node count:  2088
time: 0.000; rss: 44MB	configuration
time: 0.000; rss: 44MB	recursion limit
time: 0.000; rss: 44MB	crate injection
time: 0.000; rss: 44MB	plugin loading
time: 0.000; rss: 44MB	plugin registration
time: 0.032; rss: 84MB	expansion
time: 0.000; rss: 84MB	maybe building test harness
time: 0.003; rss: 84MB	assigning node ids
Post-expansion node count: 69587
time: 0.000; rss: 84MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 84MB	complete gated feature checking
time: 0.000; rss: 84MB	collecting defs
time: 0.088; rss: 174MB	external crate/lib resolution
time: 0.002; rss: 174MB	early lint checks
time: 0.000; rss: 174MB	AST validation
time: 0.023; rss: 180MB	name resolution
time: 0.004; rss: 185MB	lowering ast -> hir
time: 0.001; rss: 184MB	indexing hir
time: 0.000; rss: 184MB	attribute checking
time: 0.001; rss: 178MB	language item collection
time: 0.000; rss: 178MB	lifetime resolution
time: 0.000; rss: 178MB	looking for entry point
time: 0.000; rss: 178MB	looking for plugin registrar
time: 0.003; rss: 180MB	region resolution
time: 0.000; rss: 180MB	loop checking
time: 0.000; rss: 180MB	static item recursion checking
time: 0.000; rss: 180MB	load_dep_graph
time: 0.012; rss: 181MB	type collecting
time: 0.000; rss: 181MB	variance inference
time: 0.010; rss: 182MB	coherence checking
time: 0.007; rss: 183MB	wf checking
time: 0.001; rss: 183MB	item-types checking
time: 0.662; rss: 197MB	item-bodies checking
makefile:2: recipe for target 'all' failed
done
