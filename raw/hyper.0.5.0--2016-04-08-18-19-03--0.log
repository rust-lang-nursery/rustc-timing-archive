commit bf44003c970719743a9a9b199f6f22fa8e7fae85
Merge: 7e99694 94a387e
Author: bors <bors@rust-lang.org>
Date:   Fri Apr 8 12:22:11 2016 -0700

    Auto merge of #32810 - brson:relnotes, r=brson
    
    Release notes for 1.8
    
    cc @steveklabnik to me the highlights are compound assignment overloading, 32-bit MSVC builds being ready for use, and the cargo improvements.
    
    [Rendered](https://github.com/brson/rust/blob/relnotes/RELEASES.md).
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling unicase v0.1.0
   Compiling winapi-build v0.1.1
   Compiling httparse v0.1.6
   Compiling log v0.3.6
   Compiling matches v0.1.2
   Compiling libc v0.2.9
   Compiling rustc-serialize v0.3.19
   Compiling libc v0.1.12
   Compiling typeable v0.1.2
   Compiling pkg-config v0.3.8
   Compiling traitobject v0.0.1
   Compiling winapi v0.2.6
   Compiling kernel32-sys v0.2.1
   Compiling mime v0.0.11
   Compiling gcc v0.3.26
   Compiling bitflags v0.3.3
   Compiling lazy_static v0.1.15
   Compiling time v0.1.35
   Compiling rand v0.3.14
   Compiling num_cpus v0.2.11
   Compiling openssl-sys v0.6.7
   Compiling openssl v0.6.7
   Compiling uuid v0.1.18
   Compiling url v0.2.38
   Compiling cookie v0.1.21
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.040; rss: 41MB	parsing
Lines of code:             9154
Pre-expansion node count:  45594
time: 0.009; rss: 42MB	configuration 1
time: 0.000; rss: 42MB	recursion limit
time: 0.000; rss: 42MB	gated macro checking
time: 0.000; rss: 42MB	crate injection
time: 0.005; rss: 47MB	macro loading
time: 0.000; rss: 47MB	plugin loading
time: 0.000; rss: 47MB	plugin registration
time: 0.199; rss: 56MB	expansion
time: 0.005; rss: 56MB	complete gated feature checking 1
time: 0.029; rss: 56MB	configuration 2
time: 0.000; rss: 56MB	gated configuration checking
time: 0.011; rss: 56MB	maybe building test harness
time: 0.008; rss: 56MB	prelude injection
time: 0.001; rss: 56MB	checking that all macro invocations are gone
time: 0.000; rss: 56MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 56MB	complete gated feature checking 2
time: 0.001; rss: 56MB	const fn bodies and arguments
Post-expansion node count: 107125
time: 0.008; rss: 56MB	assigning node ids
time: 0.019; rss: 62MB	lowering ast -> hir
time: 0.011; rss: 63MB	indexing hir
time: 0.002; rss: 63MB	attribute checking
time: 0.007; rss: 64MB	early lint checks
time: 0.004; rss: 59MB	external crate/lib resolution
time: 0.001; rss: 59MB	language item collection
time: 0.028; rss: 75MB	resolution
time: 0.002; rss: 75MB	lifetime resolution
time: 0.000; rss: 75MB	looking for entry point
time: 0.000; rss: 75MB	looking for plugin registrar
time: 0.008; rss: 78MB	region resolution
time: 0.001; rss: 78MB	loop checking
time: 0.001; rss: 78MB	static item recursion checking
time: 0.000; rss: 78MB	load_dep_graph
time: 0.018; rss: 88MB	type collecting
time: 0.000; rss: 88MB	variance inference
time: 0.046; rss: 103MB	coherence checking
time: 0.076; rss: 104MB	wf checking
time: 0.028; rss: 104MB	item-types checking
time: 0.508; rss: 122MB	item-bodies checking
time: 0.000; rss: 122MB	drop-impl checking
time: 0.040; rss: 123MB	const checking
time: 0.009; rss: 123MB	privacy checking
time: 0.001; rss: 123MB	stability index
time: 0.004; rss: 123MB	intrinsic checking
time: 0.002; rss: 123MB	effect checking
time: 0.012; rss: 123MB	match checking
time: 0.005; rss: 124MB	liveness checking
time: 0.033; rss: 124MB	rvalue checking
time: 0.060; rss: 131MB	MIR dump
time: 0.022; rss: 132MB	MIR passes
time: 0.066; rss: 132MB	borrow checking
time: 0.003; rss: 132MB	reachability checking
time: 0.006; rss: 132MB	death checking
time: 0.006; rss: 132MB	stability checking
time: 0.000; rss: 132MB	unused lib feature checking
time: 0.047; rss: 132MB	lint checking
time: 0.000; rss: 132MB	resolving dependency formats
time: 0.014; rss: 134MB	Prepare MIR codegen passes
  time: 0.197; rss: 153MB	translation item collection
  time: 0.138; rss: 273MB	write metadata
time: 1.786; rss: 273MB	translation
time: 0.001; rss: 273MB	assert dep graph
time: 0.000; rss: 273MB	serialize dep graph
  time: 0.097; rss: 161MB	llvm function passes [0]
  time: 0.050; rss: 163MB	llvm module passes [0]
  time: 1.652; rss: 167MB	codegen passes [0]
  time: 0.001; rss: 117MB	codegen passes [0]
time: 2.003; rss: 115MB	LLVM passes
time: 0.175; rss: 114MB	linking
done
