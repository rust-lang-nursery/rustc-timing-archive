commit 271d048523b6c1b0e773d9e5cc76bbb997cc180c
Merge: 40f3ee2 5c88efc
Author: bors <bors@rust-lang.org>
Date:   Wed Aug 3 22:56:33 2016 -0700

    Auto merge of #35015 - petrochenkov:forearg, r=nikomatsakis
    
    Properly enforce the "patterns aren't allowed in foreign functions" rule
    
    Cases like `arg @ PATTERN` or `mut arg` were missing.
    Apply the same rule to function pointer types.
    
    Closes https://github.com/rust-lang/rust/issues/35203
    [breaking-change], no breakage in sane code is expected though
    r? @nikomatsakis
    
    This is somewhat related to https://github.com/rust-lang/rfcs/pull/1685 (cc @matklad).
    The goal is to eventually support full pattern syntax where it makes sense (function body may present) and to support *only* the following forms - `TYPE`, `ident: TYPE`, `_: TYPE` - where patterns don't make sense (function body doesn't present), i.e. in foreign functions and function pointer types.
rustc: ./issue-32278-big-array-of-strings
/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc big-array-of-strings.rs -Ztime-passes -Zinput-stats
time: 0.157; rss: 68MB	parsing
Lines of code:             65577
Pre-expansion node count:  65552
time: 0.012; rss: 68MB	configuration
time: 0.000; rss: 68MB	recursion limit
time: 0.000; rss: 68MB	crate injection
time: 0.000; rss: 68MB	plugin loading
time: 0.000; rss: 68MB	plugin registration
time: 0.027; rss: 103MB	expansion
time: 0.000; rss: 103MB	maybe building test harness
time: 0.006; rss: 103MB	assigning node ids
Post-expansion node count: 65565
time: 0.000; rss: 103MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 103MB	complete gated feature checking
time: 0.000; rss: 103MB	collecting defs
time: 0.003; rss: 103MB	external crate/lib resolution
time: 0.008; rss: 103MB	early lint checks
time: 0.000; rss: 103MB	AST validation
time: 0.002; rss: 103MB	name resolution
time: 0.007; rss: 122MB	lowering ast -> hir
time: 0.002; rss: 126MB	indexing hir
time: 0.001; rss: 126MB	attribute checking
time: 0.001; rss: 116MB	language item collection
time: 0.001; rss: 116MB	lifetime resolution
time: 0.000; rss: 116MB	looking for entry point
time: 0.000; rss: 116MB	looking for plugin registrar
time: 0.007; rss: 122MB	region resolution
time: 0.001; rss: 122MB	loop checking
time: 0.002; rss: 122MB	static item recursion checking
time: 0.000; rss: 123MB	load_dep_graph
time: 0.000; rss: 123MB	type collecting
time: 0.000; rss: 123MB	variance inference
time: 0.005; rss: 125MB	coherence checking
time: 0.001; rss: 125MB	wf checking
time: 0.972; rss: 140MB	item-types checking
time: 0.000; rss: 140MB	item-bodies checking
time: 0.000; rss: 140MB	drop-impl checking
time: 0.023; rss: 144MB	const checking
time: 0.002; rss: 144MB	privacy checking
time: 0.001; rss: 144MB	stability index
time: 0.001; rss: 144MB	intrinsic checking
time: 0.001; rss: 144MB	effect checking
time: 0.000; rss: 144MB	match checking
time: 0.001; rss: 144MB	liveness checking
time: 0.000; rss: 144MB	rvalue checking
time: 0.053; rss: 149MB	MIR dump
time: 0.002; rss: 149MB	MIR passes
time: 0.001; rss: 149MB	borrow checking
time: 0.000; rss: 149MB	reachability checking
time: 0.001; rss: 149MB	death checking
time: 0.001; rss: 149MB	stability checking
time: 0.000; rss: 149MB	unused lib feature checking
time: 0.028; rss: 149MB	lint checking
time: 0.001; rss: 149MB	resolving dependency formats
time: 0.001; rss: 149MB	Prepare MIR codegen passes
  time: 0.000; rss: 150MB	write metadata
  time: 0.001; rss: 150MB	translation item collection
  time: 0.000; rss: 150MB	codegen unit partitioning
  time: 0.000; rss: 165MB	internalize symbols
time: 0.088; rss: 159MB	translation
time: 0.000; rss: 159MB	assert dep graph
time: 0.000; rss: 159MB	serialize dep graph
  time: 0.004; rss: 107MB	llvm function passes [0]
  time: 0.000; rss: 107MB	llvm module passes [0]
  time: 0.157; rss: 109MB	codegen passes [0]
  time: 0.000; rss: 109MB	codegen passes [0]
time: 0.161; rss: 109MB	LLVM passes
  time: 0.184; rss: 96MB	running linker
time: 0.185; rss: 96MB	linking
done
