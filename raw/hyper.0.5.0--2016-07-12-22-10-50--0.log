commit 26fd0117f9a5128d39a30ae36efc731042bd1fec
Merge: 3085ec7 a7220d9
Author: bors <bors@rust-lang.org>
Date:   Tue Jul 12 15:15:56 2016 -0700

    Auto merge of #34705 - alexcrichton:clean-deprecated, r=brson
    
    std: Clean out deprecated APIs
    
    This primarily removes a lot of `sync::Static*` APIs and rejiggers the
    associated implementations. While doing this it was discovered that the
    `is_poisoned` method can actually result in a data race for the Mutex/RwLock
    primitives, so the inner `Cell<bool>` was changed to an `AtomicBool` to prevent
    the associated data race. Otherwise the usage/gurantees should be the same
    they were before.
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
 Downloading gcc v0.3.29
   Compiling rustc-serialize v0.3.19
   Compiling matches v0.1.2
   Compiling pkg-config v0.3.8
   Compiling typeable v0.1.2
   Compiling lazy_static v0.1.16
   Compiling winapi v0.2.8
   Compiling unicase v0.1.0
   Compiling bitflags v0.3.3
   Compiling libc v0.2.14
   Compiling traitobject v0.0.1
   Compiling libc v0.1.12
   Compiling gcc v0.3.29
   Compiling log v0.3.6
   Compiling winapi-build v0.1.1
   Compiling httparse v0.1.6
   Compiling kernel32-sys v0.2.2
   Compiling mime v0.0.11
   Compiling num_cpus v0.2.13
   Compiling rand v0.3.14
   Compiling time v0.1.35
   Compiling openssl-sys v0.6.7
   Compiling openssl v0.6.7
   Compiling uuid v0.1.18
   Compiling url v0.2.38
   Compiling cookie v0.1.21
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.038; rss: 91MB	parsing
Lines of code:             9154
Pre-expansion node count:  44838
time: 0.005; rss: 91MB	configuration
time: 0.000; rss: 91MB	recursion limit
time: 0.000; rss: 91MB	crate injection
time: 0.000; rss: 92MB	plugin loading
time: 0.000; rss: 92MB	plugin registration
time: 0.145; rss: 130MB	expansion
time: 0.000; rss: 130MB	maybe building test harness
time: 0.000; rss: 130MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 130MB	complete gated feature checking
Post-expansion node count: 101579
time: 0.008; rss: 130MB	assigning node ids
time: 0.003; rss: 133MB	collecting defs
time: 0.012; rss: 141MB	external crate/lib resolution
time: 0.006; rss: 141MB	early lint checks
time: 0.001; rss: 141MB	AST validation
time: 0.021; rss: 147MB	name resolution
time: 0.023; rss: 155MB	lowering ast -> hir
time: 0.003; rss: 156MB	indexing hir
time: 0.001; rss: 156MB	attribute checking
time: 0.001; rss: 150MB	language item collection
time: 0.002; rss: 150MB	lifetime resolution
time: 0.000; rss: 150MB	looking for entry point
time: 0.000; rss: 150MB	looking for plugin registrar
time: 0.011; rss: 152MB	region resolution
time: 0.001; rss: 152MB	loop checking
time: 0.001; rss: 152MB	static item recursion checking
time: 0.000; rss: 152MB	load_dep_graph
time: 0.033; rss: 154MB	type collecting
time: 0.000; rss: 154MB	variance inference
time: 0.048; rss: 163MB	coherence checking
time: 0.097; rss: 165MB	wf checking
time: 0.037; rss: 165MB	item-types checking
time: 0.551; rss: 174MB	item-bodies checking
time: 0.000; rss: 174MB	drop-impl checking
time: 0.049; rss: 176MB	const checking
time: 0.009; rss: 176MB	privacy checking
time: 0.001; rss: 176MB	stability index
time: 0.006; rss: 176MB	intrinsic checking
time: 0.002; rss: 176MB	effect checking
time: 0.015; rss: 176MB	match checking
time: 0.005; rss: 176MB	liveness checking
time: 0.032; rss: 176MB	rvalue checking
time: 0.083; rss: 187MB	MIR dump
time: 0.045; rss: 187MB	MIR passes
time: 0.076; rss: 187MB	borrow checking
time: 0.003; rss: 187MB	reachability checking
time: 0.006; rss: 187MB	death checking
time: 0.006; rss: 188MB	stability checking
time: 0.000; rss: 188MB	unused lib feature checking
time: 0.053; rss: 188MB	lint checking
time: 0.000; rss: 188MB	resolving dependency formats
time: 0.097; rss: 190MB	Prepare MIR codegen passes
  time: 0.144; rss: 195MB	write metadata
  time: 0.192; rss: 200MB	translation item collection
  time: 0.022; rss: 202MB	codegen unit partitioning
time: 3.956; rss: 320MB	translation
time: 0.001; rss: 320MB	assert dep graph
time: 0.000; rss: 320MB	serialize dep graph
  time: 1.138; rss: 211MB	llvm function passes [0]
  time: 0.431; rss: 213MB	llvm module passes [0]
  time: 16.180; rss: 213MB	codegen passes [0]
  time: 0.002; rss: 212MB	codegen passes [0]
time: 18.848; rss: 212MB	LLVM passes
time: 0.153; rss: 165MB	linking
done
