commit 6ad10844db51b950306d49070932562246e06616
Merge: 1cf592f e4b1842
Author: bors <bors@rust-lang.org>
Date:   Wed Sep 21 22:40:51 2016 -0700

    Auto merge of #36585 - jonathandturner:misc_error_touchups, r=nrc
    
    Add the ability to merge spans to codemap
    
    This PR adds the ability to merge Spans.  To do so, it builds on the Codemap's ability to verify the locations of spans, namely that following can be verified:
    
    * the expn_id of both spans much match
    * the lhs span needs to end on the same line the rhs span begins
    * the lhs span must start at or before the rhs span
    
    If all of these are met, a new span is returned that is min(lo), max(hi) of the two spans.
    
    This PR also removes an older Span merge, as this new functionality subsumes it.
    
    r? @nrc
rustc: ./futures-rs-test-all
cargo rustc --test all --verbose -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling log v0.3.6
     Running `/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc /root/.cargo/registry/src/github.com-88ac128001ac3a9a/log-0.3.6/src/lib.rs --crate-name log --crate-type lib -g --cfg feature=\"use_std\" --cfg feature=\"default\" -C metadata=30a8a27ec161f1be -C extra-filename=-30a8a27ec161f1be --out-dir /root/benchmarks/futures-rs-test-all/target/debug/deps --emit=dep-info,link -L dependency=/root/benchmarks/futures-rs-test-all/target/debug/deps -L dependency=/root/benchmarks/futures-rs-test-all/target/debug/deps --cap-lints allow`
   Compiling futures v0.1.0 (file:///root/benchmarks/futures-rs-test-all)
     Running `/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc src/lib.rs --crate-name futures --crate-type lib -g --out-dir /root/benchmarks/futures-rs-test-all/target/debug --emit=dep-info,link -L dependency=/root/benchmarks/futures-rs-test-all/target/debug -L dependency=/root/benchmarks/futures-rs-test-all/target/debug/deps --extern log=/root/benchmarks/futures-rs-test-all/target/debug/deps/liblog-30a8a27ec161f1be.rlib`
     Running `/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc tests/all.rs --crate-name all --crate-type bin -g -Ztime-passes -Zinput-stats --test -C metadata=449e6fc7d003a0bc -C extra-filename=-449e6fc7d003a0bc --out-dir /root/benchmarks/futures-rs-test-all/target/debug --emit=dep-info,link -L dependency=/root/benchmarks/futures-rs-test-all/target/debug -L dependency=/root/benchmarks/futures-rs-test-all/target/debug/deps --extern log=/root/benchmarks/futures-rs-test-all/target/debug/deps/liblog-30a8a27ec161f1be.rlib --extern futures=/root/benchmarks/futures-rs-test-all/target/debug/libfutures.rlib`
time: 0.003; rss: 44MB	parsing
Lines of code:             412
Pre-expansion node count:  5522
time: 0.000; rss: 44MB	recursion limit
time: 0.000; rss: 44MB	crate injection
time: 0.000; rss: 44MB	plugin loading
time: 0.000; rss: 44MB	plugin registration
time: 0.024; rss: 64MB	expansion
time: 0.000; rss: 64MB	maybe building test harness
time: 0.000; rss: 64MB	maybe creating a macro crate
time: 0.000; rss: 68MB	assigning node ids
Post-expansion node count: 10613
time: 0.000; rss: 68MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 68MB	complete gated feature checking
time: 0.000; rss: 68MB	collecting defs
time: 0.005; rss: 69MB	external crate/lib resolution
time: 0.000; rss: 69MB	early lint checks
time: 0.000; rss: 69MB	AST validation
time: 0.002; rss: 69MB	name resolution
time: 0.001; rss: 73MB	lowering ast -> hir
time: 0.000; rss: 73MB	indexing hir
time: 0.000; rss: 73MB	attribute checking
time: 0.000; rss: 73MB	language item collection
time: 0.000; rss: 73MB	lifetime resolution
time: 0.000; rss: 73MB	looking for entry point
time: 0.000; rss: 73MB	looking for plugin registrar
time: 0.001; rss: 73MB	region resolution
time: 0.000; rss: 73MB	loop checking
time: 0.000; rss: 73MB	static item recursion checking
time: 0.003; rss: 73MB	compute_incremental_hashes_map
time: 0.000; rss: 73MB	load_dep_graph
time: 0.005; rss: 73MB	type collecting
time: 0.000; rss: 73MB	variance inference
time: 0.004; rss: 73MB	coherence checking
time: 0.014; rss: 75MB	wf checking
time: 0.003; rss: 75MB	item-types checking
time: 0.153; rss: 84MB	item-bodies checking
time: 0.000; rss: 84MB	drop-impl checking
time: 0.005; rss: 83MB	const checking
time: 0.000; rss: 83MB	privacy checking
time: 0.000; rss: 83MB	stability index
time: 0.000; rss: 83MB	intrinsic checking
time: 0.000; rss: 83MB	effect checking
time: 0.001; rss: 83MB	match checking
time: 0.001; rss: 84MB	liveness checking
time: 0.004; rss: 84MB	rvalue checking
time: 0.008; rss: 85MB	MIR dump
  time: 0.001; rss: 85MB	SimplifyCfg
  time: 0.002; rss: 85MB	QualifyAndPromoteConstants
  time: 0.002; rss: 85MB	TypeckMir
  time: 0.000; rss: 85MB	SimplifyBranches
  time: 0.001; rss: 85MB	SimplifyCfg
time: 0.006; rss: 85MB	MIR passes
time: 0.008; rss: 85MB	borrow checking
time: 0.000; rss: 85MB	reachability checking
time: 0.000; rss: 85MB	death checking
time: 0.000; rss: 85MB	stability checking
time: 0.000; rss: 85MB	unused lib feature checking
time: 0.003; rss: 85MB	lint checking
time: 0.002; rss: 85MB	resolving dependency formats
  time: 0.000; rss: 85MB	NoLandingPads
  time: 0.000; rss: 85MB	SimplifyCfg
  time: 0.001; rss: 85MB	EraseRegions
  time: 0.000; rss: 85MB	AddCallGuards
  time: 0.014; rss: 88MB	ElaborateDrops
  time: 0.000; rss: 88MB	NoLandingPads
  time: 0.001; rss: 88MB	SimplifyCfg
  time: 0.000; rss: 88MB	Deaggregator
  time: 0.000; rss: 88MB	AddCallGuards
  time: 0.000; rss: 88MB	PreTrans
time: 0.017; rss: 88MB	Prepare MIR codegen passes
  time: 0.000; rss: 88MB	write metadata
  time: 0.193; rss: 96MB	translation item collection
  time: 0.023; rss: 96MB	codegen unit partitioning
  time: 0.045; rss: 150MB	internalize symbols
time: 1.489; rss: 150MB	translation
time: 0.000; rss: 150MB	assert dep graph
time: 0.000; rss: 150MB	serialize dep graph
  time: 0.082; rss: 134MB	llvm function passes [0]
  time: 0.027; rss: 135MB	llvm module passes [0]
  time: 1.755; rss: 138MB	codegen passes [0]
  time: 0.000; rss: 138MB	codegen passes [0]
time: 1.865; rss: 138MB	LLVM passes
time: 0.000; rss: 138MB	serialize work products
  time: 0.192; rss: 87MB	running linker
time: 0.194; rss: 87MB	linking
done
