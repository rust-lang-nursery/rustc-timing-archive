commit ac919fcd9d4a958baf99b2f2ed5c3d38a2ebf9d0
Merge: f9f45c6 b4f910d
Author: bors <bors@rust-lang.org>
Date:   Wed Nov 2 22:58:01 2016 -0700

    Auto merge of #37541 - nikomatsakis:issue-37291, r=brson
    
    Use impl obligations as initial environment for specialization
    
    This corrects a small regression in specialization that crept in, I think as part of the refactoring to introduce arenas. I also made an experiment (in the last commit) to cleanup the code to be more aggressive about normalization. As the commit log notes, I am not 100% sure that this is correct, but it feels safer, and I think that at worst it yields *more* ICEs (as opposed to admitting faulty code). I'll schedule a crater run to check beyond the testbase.
    
    Fixes #37291.
    
    r? @aturon
rustc: ./piston-image-0.10.3
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling image v0.10.3 (file:///root/benchmarks/piston-image-0.10.3)
time: 0.044; rss: 57MB	parsing
Lines of code:             12000
Pre-expansion node count:  90272
time: 0.000; rss: 57MB	recursion limit
time: 0.000; rss: 57MB	crate injection
time: 0.000; rss: 57MB	plugin loading
time: 0.000; rss: 57MB	plugin registration
time: 0.071; rss: 95MB	expansion
time: 0.000; rss: 95MB	maybe building test harness
time: 0.001; rss: 95MB	maybe creating a macro crate
Post-expansion node count: 148999
time: 0.000; rss: 95MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 95MB	complete gated feature checking
time: 0.005; rss: 95MB	early lint checks
time: 0.001; rss: 95MB	AST validation
time: 0.020; rss: 99MB	name resolution
time: 0.012; rss: 105MB	lowering ast -> hir
time: 0.002; rss: 110MB	indexing hir
time: 0.002; rss: 110MB	attribute checking
time: 0.001; rss: 98MB	language item collection
time: 0.002; rss: 98MB	lifetime resolution
time: 0.000; rss: 98MB	looking for entry point
time: 0.000; rss: 98MB	looking for plugin registrar
time: 0.010; rss: 104MB	region resolution
time: 0.001; rss: 104MB	loop checking
time: 0.001; rss: 104MB	static item recursion checking
time: 0.077; rss: 103MB	compute_incremental_hashes_map
time: 0.000; rss: 103MB	load_dep_graph
time: 0.016; rss: 106MB	type collecting
time: 0.000; rss: 106MB	variance inference
time: 0.027; rss: 109MB	coherence checking
time: 0.074; rss: 111MB	wf checking
time: 0.134; rss: 117MB	item-types checking
time: 0.787; rss: 130MB	item-bodies checking
time: 0.000; rss: 130MB	drop-impl checking
time: 0.053; rss: 130MB	const checking
time: 0.009; rss: 130MB	privacy checking
time: 0.001; rss: 130MB	stability index
time: 0.007; rss: 130MB	intrinsic checking
time: 0.003; rss: 130MB	effect checking
time: 0.015; rss: 130MB	match checking
time: 0.010; rss: 130MB	liveness checking
time: 0.042; rss: 130MB	rvalue checking
time: 0.095; rss: 173MB	MIR dump
  time: 0.011; rss: 173MB	SimplifyCfg
  time: 0.020; rss: 173MB	QualifyAndPromoteConstants
  time: 0.023; rss: 173MB	TypeckMir
  time: 0.001; rss: 173MB	SimplifyBranches
  time: 0.005; rss: 173MB	SimplifyCfg
time: 0.060; rss: 173MB	MIR passes
time: 0.115; rss: 174MB	borrow checking
time: 0.003; rss: 174MB	reachability checking
time: 0.008; rss: 174MB	death checking
time: 0.009; rss: 176MB	stability checking
time: 0.000; rss: 176MB	unused lib feature checking
time: 0.067; rss: 176MB	lint checking
time: 0.000; rss: 176MB	resolving dependency formats
  time: 0.001; rss: 176MB	NoLandingPads
  time: 0.005; rss: 176MB	SimplifyCfg
  time: 0.012; rss: 176MB	EraseRegions
  time: 0.002; rss: 176MB	AddCallGuards
  time: 0.043; rss: 180MB	ElaborateDrops
  time: 0.001; rss: 180MB	NoLandingPads
  time: 0.009; rss: 180MB	SimplifyCfg
  time: 0.006; rss: 180MB	InstCombine
  time: 0.002; rss: 180MB	Deaggregator
  time: 0.000; rss: 180MB	CopyPropagation
  time: 0.002; rss: 180MB	AddCallGuards
  time: 0.000; rss: 180MB	PreTrans
time: 0.081; rss: 180MB	Prepare MIR codegen passes
  time: 0.015; rss: 182MB	write metadata
  time: 0.374; rss: 194MB	translation item collection
  time: 0.025; rss: 196MB	codegen unit partitioning
  time: 0.021; rss: 319MB	internalize symbols
time: 2.548; rss: 319MB	translation
time: 0.000; rss: 319MB	assert dep graph
time: 0.000; rss: 319MB	serialize dep graph
  time: 0.205; rss: 221MB	llvm function passes [0]
  time: 0.080; rss: 224MB	llvm module passes [0]
  time: 4.104; rss: 228MB	codegen passes [0]
  time: 0.000; rss: 228MB	codegen passes [0]
time: 4.683; rss: 228MB	LLVM passes
time: 0.000; rss: 228MB	serialize work products
time: 0.126; rss: 99MB	linking
done
