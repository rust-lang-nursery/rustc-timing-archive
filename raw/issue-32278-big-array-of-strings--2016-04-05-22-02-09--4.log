commit 772c600d4d6f39daa6d07d1a60ee0df3d3426978
Merge: 241a9d0 432eb8a
Author: bors <bors@rust-lang.org>
Date:   Tue Apr 5 18:58:24 2016 -0700

    Auto merge of #32688 - jseyfried:ast_groundwork_for_1422, r=pnkfelix
    
    [breaking-batch] Add support for `pub(restricted)` syntax in the AST
    
    This PR allows the AST to represent the `pub(restricted)` syntax from RFC 1422 (cc #32409).
    
    More specifically, it makes `ast::Visibility` non-`Copy` and adds two new variants, `Visibility::Crate` for `pub(crate)` and `Visitibility::Restricted { path: P<Path>, id: NodeId }` for `pub(path)`.
    
    plugin-[breaking-change] cc #31645
    r? @pnkfelix
rustc: ./issue-32278-big-array-of-strings
/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc big-array-of-strings.rs -Ztime-passes -Zinput-stats
time: 0.150; rss: 57MB	parsing
Lines of code:             65577
Pre-expansion node count:  65552
time: 0.012; rss: 57MB	configuration 1
time: 0.000; rss: 57MB	recursion limit
time: 0.001; rss: 57MB	gated macro checking
time: 0.000; rss: 57MB	crate injection
time: 0.004; rss: 60MB	macro loading
time: 0.000; rss: 60MB	plugin loading
time: 0.000; rss: 60MB	plugin registration
time: 0.041; rss: 66MB	expansion
time: 0.001; rss: 66MB	complete gated feature checking 1
time: 0.012; rss: 66MB	configuration 2
time: 0.000; rss: 66MB	gated configuration checking
time: 0.005; rss: 66MB	maybe building test harness
time: 0.005; rss: 66MB	prelude injection
time: 0.000; rss: 66MB	checking that all macro invocations are gone
time: 0.000; rss: 66MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 66MB	complete gated feature checking 2
time: 0.001; rss: 66MB	const fn bodies and arguments
Post-expansion node count: 65565
time: 0.006; rss: 66MB	assigning node ids
time: 0.009; rss: 80MB	lowering ast -> hir
time: 0.002; rss: 82MB	indexing hir
time: 0.001; rss: 82MB	attribute checking
time: 0.009; rss: 82MB	early lint checks
time: 0.001; rss: 69MB	external crate/lib resolution
time: 0.001; rss: 69MB	language item collection
time: 0.002; rss: 72MB	resolution
time: 0.001; rss: 72MB	lifetime resolution
time: 0.000; rss: 72MB	looking for entry point
time: 0.000; rss: 72MB	looking for plugin registrar
time: 0.007; rss: 78MB	region resolution
time: 0.001; rss: 78MB	loop checking
time: 0.001; rss: 78MB	static item recursion checking
time: 0.000; rss: 78MB	type collecting
time: 0.000; rss: 78MB	variance inference
time: 0.006; rss: 87MB	coherence checking
time: 0.001; rss: 87MB	wf checking
time: 0.790; rss: 190MB	item-types checking
time: 0.000; rss: 190MB	item-bodies checking
time: 0.000; rss: 190MB	drop-impl checking
time: 0.020; rss: 192MB	const checking
time: 0.002; rss: 192MB	privacy checking
time: 0.001; rss: 192MB	stability index
time: 0.001; rss: 192MB	intrinsic checking
time: 0.001; rss: 192MB	effect checking
time: 0.001; rss: 192MB	match checking
time: 0.001; rss: 192MB	liveness checking
time: 0.001; rss: 192MB	rvalue checking
time: 0.001; rss: 192MB	MIR dump
time: 0.000; rss: 192MB	MIR passes
time: 0.001; rss: 192MB	borrow checking
time: 0.000; rss: 192MB	reachability checking
time: 0.001; rss: 192MB	death checking
time: 0.001; rss: 192MB	stability checking
time: 0.000; rss: 192MB	unused lib feature checking
time: 0.029; rss: 192MB	lint checking
time: 0.001; rss: 192MB	resolving dependency formats
time: 0.000; rss: 192MB	Prepare MIR codegen passes
  time: 0.001; rss: 198MB	translation item collection
  time: 0.000; rss: 206MB	write metadata
time: 0.084; rss: 206MB	translation
  time: 0.003; rss: 85MB	llvm function passes [0]
  time: 0.000; rss: 85MB	llvm module passes [0]
  time: 0.164; rss: 85MB	codegen passes [0]
  time: 0.000; rss: 75MB	codegen passes [0]
time: 0.178; rss: 75MB	LLVM passes
  time: 0.180; rss: 75MB	running linker
time: 0.181; rss: 75MB	linking
done
