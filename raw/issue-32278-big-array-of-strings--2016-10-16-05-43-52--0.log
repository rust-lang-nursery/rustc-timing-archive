commit 6dc035ed911672c6a1f7afc9eed15fb08e574e5b
Merge: 98a3502 0b2746c
Author: bors <bors@rust-lang.org>
Date:   Sat Oct 15 19:49:12 2016 -0700

    Auto merge of #37098 - ollie27:rustdoc_playground, r=GuillaumeGomez
    
    rustdoc: Improve playground run buttons
    
    The main change is to stop using javascript to generate the URLs and use
    rustdoc instead.
    
    This also adds run buttons to the error index examples.
    
    You can test the changes at https://ollie27.github.io/rust_doc_test/.
    
    Fixes #36621
    Fixes #36910
rustc: ./issue-32278-big-array-of-strings
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling issue-32278-big-array-of-strings v0.1.0 (file:///root/benchmarks/issue-32278-big-array-of-strings)
time: 0.110; rss: 62MB	parsing
Lines of code:             65577
Pre-expansion node count:  65552
time: 0.000; rss: 62MB	recursion limit
time: 0.000; rss: 62MB	crate injection
time: 0.000; rss: 62MB	plugin loading
time: 0.000; rss: 62MB	plugin registration
time: 0.028; rss: 84MB	expansion
time: 0.000; rss: 84MB	maybe building test harness
time: 0.001; rss: 84MB	maybe creating a macro crate
Post-expansion node count: 65565
time: 0.000; rss: 84MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 84MB	complete gated feature checking
time: 0.004; rss: 84MB	early lint checks
time: 0.000; rss: 84MB	AST validation
time: 0.003; rss: 88MB	name resolution
time: 0.007; rss: 103MB	lowering ast -> hir
time: 0.002; rss: 107MB	indexing hir
time: 0.001; rss: 107MB	attribute checking
time: 0.001; rss: 94MB	language item collection
time: 0.001; rss: 94MB	lifetime resolution
time: 0.000; rss: 94MB	looking for entry point
time: 0.000; rss: 94MB	looking for plugin registrar
time: 0.006; rss: 101MB	region resolution
time: 0.001; rss: 101MB	loop checking
time: 0.001; rss: 101MB	static item recursion checking
time: 0.021; rss: 101MB	compute_incremental_hashes_map
time: 0.000; rss: 101MB	load_dep_graph
time: 0.000; rss: 101MB	type collecting
time: 0.000; rss: 101MB	variance inference
time: 0.005; rss: 103MB	coherence checking
time: 0.001; rss: 103MB	wf checking
time: 0.655; rss: 113MB	item-types checking
time: 0.000; rss: 113MB	item-bodies checking
time: 0.000; rss: 113MB	drop-impl checking
time: 0.021; rss: 115MB	const checking
time: 0.002; rss: 115MB	privacy checking
time: 0.001; rss: 115MB	stability index
time: 0.001; rss: 115MB	intrinsic checking
time: 0.001; rss: 115MB	effect checking
time: 0.001; rss: 115MB	match checking
time: 0.001; rss: 115MB	liveness checking
time: 0.001; rss: 115MB	rvalue checking
time: 0.042; rss: 119MB	MIR dump
  time: 0.000; rss: 119MB	SimplifyCfg
  time: 0.001; rss: 119MB	QualifyAndPromoteConstants
  time: 0.001; rss: 119MB	TypeckMir
  time: 0.000; rss: 119MB	SimplifyBranches
  time: 0.000; rss: 119MB	SimplifyCfg
time: 0.002; rss: 119MB	MIR passes
time: 0.001; rss: 119MB	borrow checking
time: 0.000; rss: 119MB	reachability checking
time: 0.001; rss: 119MB	death checking
time: 0.001; rss: 119MB	stability checking
time: 0.000; rss: 119MB	unused lib feature checking
time: 0.024; rss: 119MB	lint checking
time: 0.001; rss: 119MB	resolving dependency formats
  time: 0.000; rss: 119MB	NoLandingPads
  time: 0.000; rss: 119MB	SimplifyCfg
  time: 0.001; rss: 119MB	EraseRegions
  time: 0.000; rss: 119MB	AddCallGuards
  time: 0.000; rss: 119MB	ElaborateDrops
  time: 0.000; rss: 119MB	NoLandingPads
  time: 0.000; rss: 119MB	SimplifyCfg
  time: 0.000; rss: 119MB	InstCombine
  time: 0.000; rss: 119MB	Deaggregator
  time: 0.000; rss: 119MB	CopyPropagation
  time: 0.000; rss: 119MB	AddCallGuards
  time: 0.000; rss: 119MB	PreTrans
time: 0.001; rss: 119MB	Prepare MIR codegen passes
  time: 0.000; rss: 120MB	write metadata
  time: 0.001; rss: 120MB	translation item collection
  time: 0.000; rss: 120MB	codegen unit partitioning
  time: 0.001; rss: 130MB	internalize symbols
time: 0.059; rss: 129MB	translation
time: 0.000; rss: 129MB	assert dep graph
time: 0.000; rss: 129MB	serialize dep graph
  time: 0.008; rss: 86MB	llvm function passes [0]
  time: 0.000; rss: 86MB	llvm module passes [0]
  time: 0.176; rss: 85MB	codegen passes [0]
  time: 0.000; rss: 85MB	codegen passes [0]
time: 0.186; rss: 85MB	LLVM passes
time: 0.000; rss: 85MB	serialize work products
  time: 0.150; rss: 76MB	running linker
time: 0.152; rss: 76MB	linking
done
