commit 525aa6102250ec2a33c7066dfb966524f0ce3e21
Merge: 6136a86 cc3b6f2
Author: bors <bors@rust-lang.org>
Date:   Wed Apr 13 07:16:20 2016 -0700

    Auto merge of #32828 - vadimcn:symlinks, r=alexcrichton
    
    Do not rely on file extensions after path canonicalization.
    
    Rustc does not recognize libraries which are symlinked to files having extension other than .rlib. The problem is that find_library_crate calls fs::canonicalize on found library paths, but then the resulting path is passed to get_metadata_section, which assumes it will end in ".rlib" if it's an rlib (from https://internals.rust-lang.org/t/is-library-path-canonicalization-worth-it/3206).
    
    cc #29433
rustc: ./issue-32278-big-array-of-strings
/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc big-array-of-strings.rs -Ztime-passes -Zinput-stats
time: 0.147; rss: 60MB	parsing
Lines of code:             65577
Pre-expansion node count:  65552
time: 0.011; rss: 60MB	configuration 1
time: 0.000; rss: 60MB	recursion limit
time: 0.001; rss: 60MB	gated macro checking
time: 0.000; rss: 60MB	crate injection
time: 0.004; rss: 63MB	macro loading
time: 0.000; rss: 63MB	plugin loading
time: 0.000; rss: 63MB	plugin registration
time: 0.042; rss: 69MB	expansion
time: 0.001; rss: 69MB	complete gated feature checking 1
time: 0.011; rss: 69MB	configuration 2
time: 0.000; rss: 69MB	gated configuration checking
time: 0.005; rss: 69MB	maybe building test harness
time: 0.005; rss: 69MB	prelude injection
time: 0.000; rss: 69MB	checking that all macro invocations are gone
time: 0.000; rss: 69MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 69MB	complete gated feature checking 2
time: 0.001; rss: 69MB	const fn bodies and arguments
Post-expansion node count: 65565
time: 0.006; rss: 69MB	assigning node ids
time: 0.009; rss: 82MB	lowering ast -> hir
time: 0.002; rss: 85MB	indexing hir
time: 0.001; rss: 85MB	attribute checking
time: 0.008; rss: 85MB	early lint checks
time: 0.001; rss: 71MB	external crate/lib resolution
time: 0.001; rss: 71MB	language item collection
time: 0.002; rss: 75MB	resolution
time: 0.001; rss: 75MB	lifetime resolution
time: 0.000; rss: 75MB	looking for entry point
time: 0.000; rss: 75MB	looking for plugin registrar
time: 0.007; rss: 81MB	region resolution
time: 0.001; rss: 81MB	loop checking
time: 0.002; rss: 81MB	static item recursion checking
time: 0.000; rss: 81MB	load_dep_graph
time: 0.000; rss: 81MB	type collecting
time: 0.000; rss: 81MB	variance inference
time: 0.006; rss: 89MB	coherence checking
time: 0.001; rss: 89MB	wf checking
time: 0.751; rss: 194MB	item-types checking
time: 0.000; rss: 194MB	item-bodies checking
time: 0.000; rss: 194MB	drop-impl checking
time: 0.018; rss: 193MB	const checking
time: 0.002; rss: 193MB	privacy checking
time: 0.001; rss: 193MB	stability index
time: 0.001; rss: 193MB	intrinsic checking
time: 0.001; rss: 193MB	effect checking
time: 0.000; rss: 193MB	match checking
time: 0.001; rss: 193MB	liveness checking
time: 0.000; rss: 193MB	rvalue checking
time: 0.001; rss: 193MB	MIR dump
time: 0.000; rss: 193MB	MIR passes
time: 0.001; rss: 193MB	borrow checking
time: 0.000; rss: 193MB	reachability checking
time: 0.001; rss: 193MB	death checking
time: 0.001; rss: 193MB	stability checking
time: 0.000; rss: 193MB	unused lib feature checking
time: 0.029; rss: 193MB	lint checking
time: 0.001; rss: 193MB	resolving dependency formats
time: 0.000; rss: 193MB	Prepare MIR codegen passes
  time: 0.001; rss: 201MB	translation item collection
  time: 0.000; rss: 208MB	write metadata
time: 0.088; rss: 208MB	translation
time: 0.000; rss: 208MB	assert dep graph
time: 0.000; rss: 208MB	serialize dep graph
  time: 0.004; rss: 86MB	llvm function passes [0]
  time: 0.000; rss: 86MB	llvm module passes [0]
  time: 0.163; rss: 89MB	codegen passes [0]
  time: 0.000; rss: 76MB	codegen passes [0]
time: 0.179; rss: 76MB	LLVM passes
  time: 0.180; rss: 76MB	running linker
time: 0.181; rss: 76MB	linking
done
