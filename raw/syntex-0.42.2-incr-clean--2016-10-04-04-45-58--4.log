commit 5ea241b9fb411b42f0173113d43ef1020ca3df70
Merge: 9c31d76 58b75f7
Author: bors <bors@rust-lang.org>
Date:   Mon Oct 3 19:36:27 2016 -0700

    Auto merge of #36876 - nikomatsakis:issue-36381, r=pnkfelix
    
    loosen assertion against proj in collector
    
    The collector was asserting a total absence of projections, but some projections are expected, even in trans: in particular, projections containing higher-ranked regions, which we don't currently normalize.
    
    r? @pnkfelix
    
    Fixes #36381
rustc: ./syntex-0.42.2-incr-clean
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax -- -Ztime-passes -Zinput-stats -Z incremental-info
   Compiling syntex_syntax v0.42.0
time: 0.108; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  224033
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.276; rss: 148MB	expansion
time: 0.000; rss: 148MB	maybe building test harness
time: 0.006; rss: 148MB	maybe creating a macro crate
Post-expansion node count: 641571
time: 0.000; rss: 148MB	checking for inline asm in case the target doesn't support it
time: 0.014; rss: 148MB	complete gated feature checking
time: 0.023; rss: 148MB	early lint checks
time: 0.008; rss: 148MB	AST validation
time: 0.084; rss: 162MB	name resolution
time: 0.051; rss: 202MB	lowering ast -> hir
time: 0.009; rss: 212MB	indexing hir
time: 0.007; rss: 212MB	attribute checking
time: 0.006; rss: 161MB	language item collection
time: 0.012; rss: 161MB	lifetime resolution
time: 0.000; rss: 161MB	looking for entry point
time: 0.000; rss: 161MB	looking for plugin registrar
time: 0.045; rss: 173MB	region resolution
time: 0.006; rss: 173MB	loop checking
time: 0.006; rss: 173MB	static item recursion checking
time: 0.260; rss: 174MB	compute_incremental_hashes_map
time: 0.000; rss: 174MB	load_dep_graph
time: 0.080; rss: 176MB	type collecting
time: 0.001; rss: 176MB	variance inference
time: 0.038; rss: 179MB	coherence checking
time: 0.101; rss: 181MB	wf checking
time: 0.197; rss: 188MB	item-types checking
time: 3.972; rss: 243MB	item-bodies checking
time: 0.000; rss: 243MB	drop-impl checking
time: 0.323; rss: 244MB	const checking
time: 0.057; rss: 244MB	privacy checking
time: 0.008; rss: 244MB	stability index
time: 0.023; rss: 244MB	intrinsic checking
time: 0.019; rss: 244MB	effect checking
time: 0.058; rss: 244MB	match checking
time: 0.056; rss: 236MB	liveness checking
time: 0.292; rss: 236MB	rvalue checking
time: 0.421; rss: 426MB	MIR dump
  time: 0.057; rss: 430MB	SimplifyCfg
  time: 0.083; rss: 430MB	QualifyAndPromoteConstants
  time: 0.113; rss: 430MB	TypeckMir
  time: 0.005; rss: 430MB	SimplifyBranches
  time: 0.037; rss: 430MB	SimplifyCfg
time: 0.295; rss: 430MB	MIR passes
time: 0.706; rss: 430MB	borrow checking
time: 0.022; rss: 430MB	reachability checking
time: 0.047; rss: 430MB	death checking
time: 0.044; rss: 430MB	stability checking
time: 0.000; rss: 430MB	unused lib feature checking
time: 0.216; rss: 430MB	lint checking
time: 0.000; rss: 430MB	resolving dependency formats
  time: 0.003; rss: 430MB	NoLandingPads
  time: 0.027; rss: 430MB	SimplifyCfg
  time: 0.073; rss: 443MB	EraseRegions
  time: 0.011; rss: 443MB	AddCallGuards
  time: 1.100; rss: 458MB	ElaborateDrops
  time: 0.003; rss: 458MB	NoLandingPads
  time: 0.052; rss: 458MB	SimplifyCfg
  time: 0.030; rss: 458MB	InstCombine
  time: 0.012; rss: 458MB	Deaggregator
  time: 0.003; rss: 458MB	CopyPropagation
  time: 0.009; rss: 458MB	AddCallGuards
  time: 0.003; rss: 458MB	PreTrans
time: 1.326; rss: 458MB	Prepare MIR codegen passes
  time: 0.264; rss: 466MB	write metadata
  time: 0.488; rss: 476MB	translation item collection
  time: 0.067; rss: 480MB	codegen unit partitioning
  time: 0.058; rss: 729MB	internalize symbols
time: 5.192; rss: 607MB	translation
time: 0.000; rss: 607MB	assert dep graph
time: 0.000; rss: 607MB	serialize dep graph
incremental: re-using 0 out of 1 modules
  time: 0.511; rss: 415MB	llvm function passes [0]
  time: 0.254; rss: 421MB	llvm module passes [0]
  time: 10.104; rss: 414MB	codegen passes [0]
  time: 0.001; rss: 416MB	codegen passes [0]
time: 11.612; rss: 416MB	LLVM passes
time: 0.000; rss: 416MB	serialize work products
time: 0.654; rss: 107MB	linking
done
