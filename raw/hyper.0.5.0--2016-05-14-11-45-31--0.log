commit 5f6eb14b28eab9824492f9f82f5f25ad56dda30a
Merge: 6ba8a1a c91b104
Author: bors <bors@rust-lang.org>
Date:   Sat May 14 07:15:45 2016 -0700

    Auto merge of #33563 - Amanieu:oncestate, r=alexcrichton
    
    Export OnceState from libstd
    
    This type is used in the signature of `call_once_force` but isn't exported from libstd.
    
    r? @alexcrichton
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling log v0.3.6
   Compiling lazy_static v0.1.16
   Compiling winapi-build v0.1.1
   Compiling bitflags v0.3.3
   Compiling typeable v0.1.2
   Compiling pkg-config v0.3.8
   Compiling libc v0.1.12
   Compiling matches v0.1.2
   Compiling libc v0.2.11
   Compiling winapi v0.2.7
   Compiling httparse v0.1.6
   Compiling unicase v0.1.0
   Compiling traitobject v0.0.1
   Compiling gcc v0.3.28
   Compiling kernel32-sys v0.2.2
   Compiling mime v0.0.11
   Compiling rustc-serialize v0.3.19
   Compiling rand v0.3.14
   Compiling time v0.1.35
   Compiling num_cpus v0.2.12
   Compiling openssl-sys v0.6.7
   Compiling openssl v0.6.7
   Compiling uuid v0.1.18
   Compiling url v0.2.38
   Compiling cookie v0.1.21
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.031; rss: 53MB	parsing
Lines of code:             9154
Pre-expansion node count:  45594
time: 0.008; rss: 53MB	configuration 1
time: 0.000; rss: 57MB	recursion limit
time: 0.000; rss: 57MB	crate injection
time: 0.005; rss: 61MB	macro loading
time: 0.000; rss: 61MB	plugin loading
time: 0.000; rss: 61MB	plugin registration
time: 0.192; rss: 70MB	expansion
time: 0.030; rss: 70MB	configuration 2
time: 0.000; rss: 70MB	gated configuration checking
time: 0.011; rss: 70MB	maybe building test harness
time: 0.008; rss: 70MB	prelude injection
time: 0.001; rss: 70MB	checking that all macro invocations are gone
time: 0.000; rss: 70MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 70MB	complete gated feature checking
Post-expansion node count: 107141
time: 0.008; rss: 70MB	assigning node ids
time: 0.003; rss: 73MB	collecting defs
time: 0.005; rss: 76MB	external crate/lib resolution
time: 0.006; rss: 76MB	early lint checks
time: 0.026; rss: 94MB	name resolution
time: 0.010; rss: 99MB	lowering ast -> hir
time: 0.001; rss: 101MB	indexing hir
time: 0.001; rss: 101MB	attribute checking
time: 0.001; rss: 94MB	language item collection
time: 0.002; rss: 94MB	lifetime resolution
time: 0.000; rss: 94MB	looking for entry point
time: 0.000; rss: 94MB	looking for plugin registrar
time: 0.006; rss: 97MB	region resolution
time: 0.001; rss: 97MB	loop checking
time: 0.001; rss: 97MB	static item recursion checking
time: 0.000; rss: 97MB	load_dep_graph
time: 0.018; rss: 107MB	type collecting
time: 0.000; rss: 107MB	variance inference
time: 0.044; rss: 122MB	coherence checking
time: 0.092; rss: 123MB	wf checking
time: 0.037; rss: 124MB	item-types checking
time: 0.528; rss: 138MB	item-bodies checking
time: 0.000; rss: 138MB	drop-impl checking
time: 0.045; rss: 140MB	const checking
time: 0.007; rss: 140MB	privacy checking
time: 0.001; rss: 140MB	stability index
time: 0.006; rss: 140MB	intrinsic checking
time: 0.002; rss: 140MB	effect checking
time: 0.016; rss: 140MB	match checking
time: 0.005; rss: 140MB	liveness checking
time: 0.031; rss: 140MB	rvalue checking
time: 0.062; rss: 146MB	MIR dump
time: 0.042; rss: 148MB	MIR passes
time: 0.071; rss: 148MB	borrow checking
time: 0.003; rss: 148MB	reachability checking
time: 0.006; rss: 148MB	death checking
time: 0.006; rss: 148MB	stability checking
time: 0.000; rss: 148MB	unused lib feature checking
time: 0.052; rss: 148MB	lint checking
time: 0.000; rss: 148MB	resolving dependency formats
time: 0.012; rss: 148MB	Prepare MIR codegen passes
  time: 0.218; rss: 158MB	translation item collection
  time: 0.008; rss: 158MB	codegen unit partitioning
  time: 0.136; rss: 284MB	write metadata
time: 1.585; rss: 284MB	translation
time: 0.001; rss: 284MB	assert dep graph
time: 0.000; rss: 284MB	serialize dep graph
  time: 0.098; rss: 173MB	llvm function passes [0]
  time: 0.050; rss: 176MB	llvm module passes [0]
  time: 1.640; rss: 179MB	codegen passes [0]
  time: 0.001; rss: 127MB	codegen passes [0]
time: 1.995; rss: 123MB	LLVM passes
time: 0.175; rss: 122MB	linking
done
