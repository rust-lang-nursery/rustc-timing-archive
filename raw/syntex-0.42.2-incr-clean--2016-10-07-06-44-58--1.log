commit e2bd2d83dd620ddf55eb5638c1e74bed616678e8
Merge: b4e8972 bd77b39
Author: bors <bors@rust-lang.org>
Date:   Fri Oct 7 00:51:28 2016 -0700

    Auto merge of #36940 - eulerdisk:incr_test_for_hash_trait, r=michaelwoerister
    
    Test Case for Incr. Comp. Hash for traits #36681.
    
    Fixes #36681
    Part of #36350
    
    Currently, the following tests fail:
    
    Unsafe modifier
    Extern modifier
    Extern c to rust-intrinsic
    Trait unsafety
    Change type of method parameter (&i32 => &mut i32)
    Mode of self parameter
    
    r? @michaelwoerister
rustc: ./syntex-0.42.2-incr-clean
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax -- -Ztime-passes -Zinput-stats -Z incremental-info
   Compiling syntex_syntax v0.42.0
time: 0.109; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  224033
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.279; rss: 145MB	expansion
time: 0.000; rss: 145MB	maybe building test harness
time: 0.007; rss: 145MB	maybe creating a macro crate
Post-expansion node count: 641571
time: 0.000; rss: 145MB	checking for inline asm in case the target doesn't support it
time: 0.013; rss: 145MB	complete gated feature checking
time: 0.023; rss: 145MB	early lint checks
time: 0.007; rss: 145MB	AST validation
time: 0.084; rss: 159MB	name resolution
time: 0.051; rss: 201MB	lowering ast -> hir
time: 0.009; rss: 211MB	indexing hir
time: 0.007; rss: 211MB	attribute checking
time: 0.006; rss: 161MB	language item collection
time: 0.012; rss: 161MB	lifetime resolution
time: 0.000; rss: 161MB	looking for entry point
time: 0.000; rss: 161MB	looking for plugin registrar
time: 0.045; rss: 172MB	region resolution
time: 0.006; rss: 172MB	loop checking
time: 0.006; rss: 172MB	static item recursion checking
time: 0.264; rss: 173MB	compute_incremental_hashes_map
time: 0.000; rss: 173MB	load_dep_graph
time: 0.081; rss: 177MB	type collecting
time: 0.001; rss: 177MB	variance inference
time: 0.040; rss: 180MB	coherence checking
time: 0.105; rss: 182MB	wf checking
time: 0.198; rss: 187MB	item-types checking
time: 4.021; rss: 240MB	item-bodies checking
time: 0.000; rss: 240MB	drop-impl checking
time: 0.320; rss: 240MB	const checking
time: 0.056; rss: 240MB	privacy checking
time: 0.007; rss: 240MB	stability index
time: 0.023; rss: 240MB	intrinsic checking
time: 0.019; rss: 240MB	effect checking
time: 0.060; rss: 240MB	match checking
time: 0.056; rss: 235MB	liveness checking
time: 0.291; rss: 235MB	rvalue checking
time: 0.418; rss: 425MB	MIR dump
  time: 0.057; rss: 428MB	SimplifyCfg
  time: 0.082; rss: 428MB	QualifyAndPromoteConstants
  time: 0.112; rss: 428MB	TypeckMir
  time: 0.004; rss: 428MB	SimplifyBranches
  time: 0.031; rss: 428MB	SimplifyCfg
time: 0.286; rss: 428MB	MIR passes
time: 0.689; rss: 429MB	borrow checking
time: 0.022; rss: 429MB	reachability checking
time: 0.047; rss: 429MB	death checking
time: 0.043; rss: 429MB	stability checking
time: 0.000; rss: 429MB	unused lib feature checking
time: 0.219; rss: 429MB	lint checking
time: 0.000; rss: 429MB	resolving dependency formats
  time: 0.003; rss: 429MB	NoLandingPads
  time: 0.027; rss: 429MB	SimplifyCfg
  time: 0.073; rss: 441MB	EraseRegions
  time: 0.011; rss: 441MB	AddCallGuards
  time: 1.052; rss: 462MB	ElaborateDrops
  time: 0.003; rss: 462MB	NoLandingPads
  time: 0.054; rss: 458MB	SimplifyCfg
  time: 0.031; rss: 457MB	InstCombine
  time: 0.012; rss: 457MB	Deaggregator
  time: 0.003; rss: 457MB	CopyPropagation
  time: 0.009; rss: 457MB	AddCallGuards
  time: 0.003; rss: 457MB	PreTrans
time: 1.282; rss: 457MB	Prepare MIR codegen passes
  time: 0.263; rss: 465MB	write metadata
  time: 0.470; rss: 476MB	translation item collection
  time: 0.067; rss: 481MB	codegen unit partitioning
  time: 0.058; rss: 723MB	internalize symbols
time: 5.199; rss: 602MB	translation
time: 0.000; rss: 602MB	assert dep graph
time: 0.000; rss: 602MB	serialize dep graph
incremental: re-using 0 out of 1 modules
  time: 0.520; rss: 409MB	llvm function passes [0]
  time: 0.253; rss: 417MB	llvm module passes [0]
  time: 10.135; rss: 417MB	codegen passes [0]
  time: 0.002; rss: 418MB	codegen passes [0]
time: 11.651; rss: 418MB	LLVM passes
time: 0.000; rss: 418MB	serialize work products
time: 0.669; rss: 107MB	linking
done
