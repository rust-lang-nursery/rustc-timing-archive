commit 25e42ac10653e4d7178e36201608cc269e3c66c7
Merge: 0400d92 bc93fbc
Author: bors <bors@rust-lang.org>
Date:   Wed Mar 2 08:42:38 2016 +0000

    Auto merge of #31937 - petrochenkov:field, r=eddyb
    
    The names are "0", "1", "2" etc, the same as used in field access.
    
    This generally make things simpler and potentially allows to reuse braced struct machinery (struct patterns, struct expressions) for tuple structs.
    
    I haven't touched the AST for stability reasons, but I intend to do it later.
    
    r? @eddyb
rustc: ./regex.0.1.30
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling regex v0.1.30 (file:///root/benchmarks/regex.0.1.30)
time: 0.060; rss: 49MB	parsing
Lines of code:             8558
Pre-expansion node count:  58217
time: 0.011; rss: 49MB	configuration 1
time: 0.000; rss: 50MB	recursion limit
time: 0.001; rss: 50MB	gated macro checking
time: 0.000; rss: 50MB	crate injection
time: 0.003; rss: 53MB	macro loading
time: 0.000; rss: 53MB	plugin loading
time: 0.000; rss: 53MB	plugin registration
time: 0.059; rss: 55MB	expansion
time: 0.001; rss: 55MB	complete gated feature checking 1
time: 0.014; rss: 55MB	configuration 2
time: 0.000; rss: 55MB	gated configuration checking
time: 0.006; rss: 55MB	maybe building test harness
time: 0.006; rss: 55MB	prelude injection
time: 0.001; rss: 55MB	checking that all macro invocations are gone
time: 0.000; rss: 55MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 55MB	complete gated feature checking 2
time: 0.001; rss: 55MB	const fn bodies and arguments
Post-expansion node count: 68727
time: 0.006; rss: 55MB	assigning node ids
time: 0.008; rss: 63MB	lowering ast -> hir
time: 0.002; rss: 66MB	indexing hir
time: 0.001; rss: 66MB	attribute checking
time: 0.007; rss: 66MB	early lint checks
time: 0.001; rss: 57MB	external crate/lib resolution
time: 0.001; rss: 57MB	language item collection
time: 0.008; rss: 66MB	resolution
time: 0.001; rss: 66MB	lifetime resolution
time: 0.000; rss: 66MB	looking for entry point
time: 0.000; rss: 66MB	looking for plugin registrar
time: 0.005; rss: 68MB	region resolution
time: 0.001; rss: 68MB	loop checking
time: 0.001; rss: 68MB	static item recursion checking
time: 0.003; rss: 71MB	type collecting
time: 0.000; rss: 71MB	variance inference
time: 0.021; rss: 87MB	coherence checking
time: 0.010; rss: 87MB	wf checking
time: 0.077; rss: 94MB	item-types checking
time: 0.180; rss: 107MB	item-bodies checking
time: 0.000; rss: 107MB	drop-impl checking
time: 0.023; rss: 107MB	const checking
time: 0.004; rss: 107MB	privacy checking
time: 0.000; rss: 107MB	stability index
time: 0.001; rss: 107MB	intrinsic checking
time: 0.001; rss: 107MB	effect checking
time: 0.003; rss: 107MB	match checking
time: 0.002; rss: 107MB	liveness checking
time: 0.007; rss: 107MB	rvalue checking
time: 0.018; rss: 108MB	MIR dump
time: 0.000; rss: 108MB	MIR passes
time: 0.019; rss: 110MB	borrow checking
time: 0.000; rss: 110MB	reachability checking
time: 0.003; rss: 110MB	death checking
time: 0.002; rss: 110MB	stability checking
time: 0.000; rss: 110MB	unused lib feature checking
time: 0.026; rss: 110MB	lint checking
time: 0.000; rss: 110MB	resolving dependency formats
time: 0.002; rss: 110MB	erasing regions from MIR
  time: 0.055; rss: 122MB	translation item collection
  time: 0.131; rss: 167MB	write metadata
time: 0.577; rss: 167MB	translation
  time: 0.036; rss: 116MB	llvm function passes [0]
  time: 0.019; rss: 117MB	llvm module passes [0]
  time: 0.616; rss: 121MB	codegen passes [0]
  time: 0.001; rss: 102MB	codegen passes [0]
time: 0.745; rss: 99MB	LLVM passes
time: 0.065; rss: 99MB	linking
done
