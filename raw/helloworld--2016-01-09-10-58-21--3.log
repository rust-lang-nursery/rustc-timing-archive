commit 69e1f57dfbd32a1a342d696a3e79624da97ebe1b
Merge: d70ab2b 834fb17
Author: bors <bors@rust-lang.org>
Date:   Mon Jan 11 06:40:58 2016 +0000

    Auto merge of #30295 - jseyfried:fix_extern_crate_duplicate, r=nrc
    
    Fix a bug allowing an item and an external crate to collide so long as the external crate is declared after the item. For example,
    ```rust
    mod core { pub fn f() {} } // This would be an error if it followed the `extern crate`
    extern crate core; // This declaration is shadowed by the preceding module
    
    fn main() { core::f(); }
    ```
    This is a [breaking-change], but it looks unlikely to cause breakage in practice, and any breakage can be fixed by removing colliding `extern crate` declarations, which are shadowed and hence unused.
rustc: ./helloworld
/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc hello.rs -Ztime-passes -Zinput-stats
time: 0.000; rss: 26MB	parsing
Lines of code:             3
Pre-expansion node count:  8
time: 0.000; rss: 30MB	configuration 1
time: 0.000; rss: 30MB	recursion limit
time: 0.000; rss: 30MB	gated macro checking
time: 0.000; rss: 30MB	crate injection
time: 0.003; rss: 33MB	macro loading
time: 0.000; rss: 33MB	plugin loading
time: 0.000; rss: 33MB	plugin registration
time: 0.001; rss: 33MB	expansion
time: 0.000; rss: 33MB	complete gated feature checking 1
time: 0.000; rss: 33MB	configuration 2
time: 0.000; rss: 33MB	gated configuration checking
time: 0.000; rss: 33MB	maybe building test harness
time: 0.000; rss: 33MB	prelude injection
time: 0.000; rss: 33MB	checking that all macro invocations are gone
time: 0.000; rss: 33MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 33MB	complete gated feature checking 2
Post-expansion node count: 68
time: 0.000; rss: 33MB	assigning node ids
time: 0.000; rss: 33MB	lowering ast -> hir
time: 0.000; rss: 33MB	indexing hir
time: 0.000; rss: 33MB	attribute checking
time: 0.000; rss: 33MB	early lint checks
time: 0.001; rss: 33MB	external crate/lib resolution
time: 0.000; rss: 37MB	language item collection
time: 0.001; rss: 41MB	resolution
time: 0.000; rss: 41MB	lifetime resolution
time: 0.000; rss: 41MB	looking for entry point
time: 0.000; rss: 41MB	looking for plugin registrar
time: 0.000; rss: 41MB	region resolution
time: 0.000; rss: 41MB	loop checking
time: 0.000; rss: 41MB	static item recursion checking
time: 0.000; rss: 41MB	type collecting
time: 0.000; rss: 41MB	variance inference
time: 0.005; rss: 45MB	coherence checking
time: 0.000; rss: 49MB	wf checking
time: 0.000; rss: 49MB	item-types checking
time: 0.000; rss: 49MB	item-bodies checking
time: 0.000; rss: 49MB	drop-impl checking
time: 0.000; rss: 49MB	const checking
time: 0.000; rss: 49MB	privacy checking
time: 0.000; rss: 49MB	stability index
time: 0.000; rss: 49MB	intrinsic checking
time: 0.000; rss: 49MB	effect checking
time: 0.000; rss: 49MB	match checking
time: 0.000; rss: 49MB	MIR dump
time: 0.000; rss: 49MB	liveness checking
time: 0.000; rss: 49MB	borrow checking
time: 0.000; rss: 49MB	rvalue checking
time: 0.000; rss: 49MB	reachability checking
time: 0.000; rss: 49MB	death checking
time: 0.000; rss: 49MB	stability checking
time: 0.000; rss: 49MB	unused lib feature checking
time: 0.000; rss: 49MB	lint checking
time: 0.001; rss: 49MB	resolving dependency formats
time: 0.000; rss: 49MB	erasing regions from MIR
  time: 0.000; rss: 60MB	write metadata
time: 0.003; rss: 60MB	translation
  time: 0.000; rss: 62MB	llvm function passes [0]
  time: 0.000; rss: 62MB	llvm module passes [0]
  time: 0.001; rss: 64MB	codegen passes [0]
  time: 0.000; rss: 64MB	codegen passes [0]
time: 0.003; rss: 64MB	LLVM passes
  time: 0.031; rss: 70MB	running linker
time: 0.031; rss: 70MB	linking
done
