commit 34d7f7e607aec07b6db2ccd5cab42f996220e148
Merge: 103e5c9 b9a3590
Author: bors <bors@rust-lang.org>
Date:   Sat Jul 16 21:09:15 2016 -0700

    Auto merge of #34606 - mathstuf:llvm-with-ninja, r=alexcrichton
    
    llvm, rt: build using the Ninja generator if available
    
    The Ninja generator generally builds much faster than make. It may also
    be used on Windows to have a vast speed improvement over the Visual
    Studio generators.
    
    Currently hidden behind an `--enable-ninja` flag because it does not
    obey the top-level `-j` or `-l` flags given to `make`.
rustc: ./inflate-0.1.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling inflate v0.1.0 (file:///root/benchmarks/inflate-0.1.0)
time: 0.004; rss: 82MB	parsing
Lines of code:             956
Pre-expansion node count:  4738
time: 0.001; rss: 87MB	configuration
time: 0.000; rss: 87MB	recursion limit
time: 0.000; rss: 87MB	crate injection
time: 0.000; rss: 87MB	plugin loading
time: 0.000; rss: 87MB	plugin registration
time: 0.093; rss: 126MB	expansion
time: 0.000; rss: 126MB	maybe building test harness
time: 0.004; rss: 126MB	assigning node ids
Post-expansion node count: 55769
time: 0.000; rss: 126MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 126MB	complete gated feature checking
time: 0.005; rss: 126MB	collecting defs
time: 0.001; rss: 126MB	external crate/lib resolution
time: 0.003; rss: 126MB	early lint checks
time: 0.000; rss: 126MB	AST validation
time: 0.010; rss: 128MB	name resolution
time: 0.006; rss: 133MB	lowering ast -> hir
time: 0.001; rss: 135MB	indexing hir
time: 0.001; rss: 135MB	attribute checking
time: 0.001; rss: 132MB	language item collection
time: 0.001; rss: 132MB	lifetime resolution
time: 0.000; rss: 132MB	looking for entry point
time: 0.000; rss: 132MB	looking for plugin registrar
time: 0.003; rss: 135MB	region resolution
time: 0.000; rss: 135MB	loop checking
time: 0.000; rss: 135MB	static item recursion checking
time: 0.000; rss: 135MB	load_dep_graph
time: 0.002; rss: 137MB	type collecting
time: 0.000; rss: 137MB	variance inference
time: 0.010; rss: 138MB	coherence checking
time: 0.002; rss: 138MB	wf checking
time: 0.002; rss: 138MB	item-types checking
time: 3.564; rss: 153MB	item-bodies checking
time: 0.000; rss: 153MB	drop-impl checking
time: 0.015; rss: 152MB	const checking
time: 0.001; rss: 152MB	privacy checking
time: 0.000; rss: 152MB	stability index
time: 0.001; rss: 152MB	intrinsic checking
time: 0.001; rss: 152MB	effect checking
time: 0.005; rss: 152MB	match checking
time: 0.071; rss: 151MB	liveness checking
time: 0.011; rss: 151MB	rvalue checking
time: 0.040; rss: 165MB	MIR dump
time: 0.024; rss: 164MB	MIR passes
time: 0.223; rss: 164MB	borrow checking
time: 0.000; rss: 164MB	reachability checking
time: 0.003; rss: 164MB	death checking
time: 0.002; rss: 164MB	stability checking
time: 0.000; rss: 164MB	unused lib feature checking
time: 0.021; rss: 165MB	lint checking
time: 0.000; rss: 165MB	resolving dependency formats
time: 0.124; rss: 162MB	Prepare MIR codegen passes
  time: 0.003; rss: 164MB	write metadata
  time: 0.010; rss: 165MB	translation item collection
  time: 0.001; rss: 165MB	codegen unit partitioning
time: 0.830; rss: 179MB	translation
time: 0.000; rss: 179MB	assert dep graph
time: 0.000; rss: 179MB	serialize dep graph
  time: 0.301; rss: 148MB	llvm function passes [0]
  time: 0.075; rss: 148MB	llvm module passes [0]
  time: 4.622; rss: 153MB	codegen passes [0]
  time: 0.001; rss: 152MB	codegen passes [0]
time: 5.247; rss: 152MB	LLVM passes
time: 0.034; rss: 139MB	linking
done
