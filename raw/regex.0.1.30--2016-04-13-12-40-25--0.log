commit 525aa6102250ec2a33c7066dfb966524f0ce3e21
Merge: 6136a86 cc3b6f2
Author: bors <bors@rust-lang.org>
Date:   Wed Apr 13 07:16:20 2016 -0700

    Auto merge of #32828 - vadimcn:symlinks, r=alexcrichton
    
    Do not rely on file extensions after path canonicalization.
    
    Rustc does not recognize libraries which are symlinked to files having extension other than .rlib. The problem is that find_library_crate calls fs::canonicalize on found library paths, but then the resulting path is passed to get_metadata_section, which assumes it will end in ".rlib" if it's an rlib (from https://internals.rust-lang.org/t/is-library-path-canonicalization-worth-it/3206).
    
    cc #29433
rustc: ./regex.0.1.30
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling regex v0.1.30 (file:///root/benchmarks/regex.0.1.30)
time: 0.059; rss: 52MB	parsing
Lines of code:             8558
Pre-expansion node count:  58217
time: 0.011; rss: 52MB	configuration 1
time: 0.000; rss: 52MB	recursion limit
time: 0.001; rss: 52MB	gated macro checking
time: 0.000; rss: 52MB	crate injection
time: 0.003; rss: 55MB	macro loading
time: 0.000; rss: 55MB	plugin loading
time: 0.000; rss: 55MB	plugin registration
time: 0.057; rss: 59MB	expansion
time: 0.001; rss: 59MB	complete gated feature checking 1
time: 0.013; rss: 59MB	configuration 2
time: 0.000; rss: 59MB	gated configuration checking
time: 0.006; rss: 59MB	maybe building test harness
time: 0.006; rss: 59MB	prelude injection
time: 0.001; rss: 59MB	checking that all macro invocations are gone
time: 0.000; rss: 59MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 59MB	complete gated feature checking 2
time: 0.001; rss: 59MB	const fn bodies and arguments
Post-expansion node count: 68485
time: 0.006; rss: 59MB	assigning node ids
time: 0.009; rss: 69MB	lowering ast -> hir
time: 0.002; rss: 72MB	indexing hir
time: 0.001; rss: 72MB	attribute checking
time: 0.006; rss: 72MB	early lint checks
time: 0.001; rss: 64MB	external crate/lib resolution
time: 0.001; rss: 64MB	language item collection
time: 0.010; rss: 75MB	resolution
time: 0.001; rss: 75MB	lifetime resolution
time: 0.000; rss: 75MB	looking for entry point
time: 0.000; rss: 75MB	looking for plugin registrar
time: 0.005; rss: 79MB	region resolution
time: 0.001; rss: 79MB	loop checking
time: 0.001; rss: 79MB	static item recursion checking
time: 0.000; rss: 79MB	load_dep_graph
time: 0.007; rss: 89MB	type collecting
time: 0.000; rss: 89MB	variance inference
time: 0.023; rss: 99MB	coherence checking
time: 0.010; rss: 100MB	wf checking
time: 0.248; rss: 103MB	item-types checking
time: 0.188; rss: 116MB	item-bodies checking
time: 0.000; rss: 116MB	drop-impl checking
time: 0.023; rss: 117MB	const checking
time: 0.004; rss: 117MB	privacy checking
time: 0.001; rss: 117MB	stability index
time: 0.001; rss: 117MB	intrinsic checking
time: 0.001; rss: 117MB	effect checking
time: 0.003; rss: 117MB	match checking
time: 0.002; rss: 117MB	liveness checking
time: 0.007; rss: 118MB	rvalue checking
time: 0.015; rss: 120MB	MIR dump
time: 0.007; rss: 120MB	MIR passes
time: 0.019; rss: 120MB	borrow checking
time: 0.000; rss: 120MB	reachability checking
time: 0.003; rss: 120MB	death checking
time: 0.002; rss: 120MB	stability checking
time: 0.000; rss: 120MB	unused lib feature checking
time: 0.029; rss: 120MB	lint checking
time: 0.000; rss: 120MB	resolving dependency formats
time: 0.003; rss: 120MB	Prepare MIR codegen passes
  time: 0.053; rss: 134MB	translation item collection
  time: 0.129; rss: 186MB	write metadata
time: 0.610; rss: 186MB	translation
time: 0.000; rss: 186MB	assert dep graph
time: 0.000; rss: 186MB	serialize dep graph
  time: 0.036; rss: 122MB	llvm function passes [0]
  time: 0.017; rss: 123MB	llvm module passes [0]
  time: 0.607; rss: 128MB	codegen passes [0]
  time: 0.001; rss: 109MB	codegen passes [0]
time: 0.733; rss: 106MB	LLVM passes
time: 0.068; rss: 106MB	linking
done
