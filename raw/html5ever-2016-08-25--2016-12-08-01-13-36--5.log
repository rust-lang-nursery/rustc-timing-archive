commit d9aae6362d566497d55a94da060ec163cd874a41
Merge: 7b06438 8e9f7f5
Author: bors <bors@rust-lang.org>
Date:   Thu Dec 8 03:03:51 2016 +0000

    Auto merge of #38076 - alexcrichton:another-rustbuild-bug, r=japaric
    
    rustbuild: Use src/rustc for assembled compilers
    
    The `src/rustc` path is intended for assembling a compiler (e.g. the bare bones)
    not actually compiling the whole compiler itself. This path was accidentally
    getting hijacked to represent the whole compiler being compiled, so let's
    redirect that elsewhere for that particular cargo project.
    
    Closes #38039
rustc: ./html5ever-2016-08-25
cargo rustc  -- -Ztime-passes -Zinput-stats
time: 0.024; rss: 50MB	parsing
Lines of code:             8210
Pre-expansion node count:  52140
time: 0.000; rss: 50MB	recursion limit
time: 0.000; rss: 50MB	crate injection
time: 0.000; rss: 50MB	plugin loading
time: 0.000; rss: 50MB	plugin registration
time: 0.675; rss: 103MB	expansion
time: 0.000; rss: 103MB	maybe building test harness
time: 0.002; rss: 103MB	maybe creating a macro crate
Post-expansion node count: 163412
time: 0.000; rss: 103MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 103MB	complete gated feature checking
time: 0.008; rss: 103MB	early lint checks
time: 0.002; rss: 103MB	AST validation
time: 0.016; rss: 105MB	name resolution
time: 0.014; rss: 116MB	lowering ast -> hir
time: 0.003; rss: 119MB	indexing hir
time: 0.002; rss: 119MB	attribute checking
time: 0.001; rss: 100MB	language item collection
time: 0.002; rss: 100MB	lifetime resolution
time: 0.000; rss: 100MB	looking for entry point
time: 0.000; rss: 100MB	looking for plugin registrar
time: 0.012; rss: 105MB	region resolution
time: 0.001; rss: 105MB	loop checking
time: 0.001; rss: 105MB	static item recursion checking
time: 0.023; rss: 105MB	compute_incremental_hashes_map
time: 0.000; rss: 105MB	load_dep_graph
time: 0.001; rss: 105MB	stability index
time: 0.003; rss: 105MB	stability checking
time: 0.009; rss: 107MB	type collecting
time: 0.000; rss: 107MB	variance inference
time: 0.000; rss: 108MB	impl wf inference
time: 0.011; rss: 109MB	coherence checking
time: 0.018; rss: 110MB	wf checking
time: 0.257; rss: 117MB	item-types checking
time: 0.418; rss: 129MB	item-bodies checking
time: 0.000; rss: 129MB	drop-impl checking
time: 0.056; rss: 136MB	const checking
time: 0.006; rss: 136MB	privacy checking
time: 0.002; rss: 136MB	intrinsic checking
time: 0.002; rss: 136MB	effect checking
time: 0.014; rss: 136MB	match checking
time: 0.011; rss: 131MB	liveness checking
time: 0.020; rss: 131MB	rvalue checking
time: 0.101; rss: 172MB	MIR dump
  time: 0.008; rss: 172MB	SimplifyCfg
  time: 0.013; rss: 174MB	QualifyAndPromoteConstants
  time: 0.022; rss: 174MB	TypeckMir
  time: 0.000; rss: 174MB	SimplifyBranches
  time: 0.004; rss: 174MB	SimplifyCfg
time: 0.048; rss: 174MB	MIR cleanup and validation
time: 0.076; rss: 179MB	borrow checking
time: 0.002; rss: 179MB	reachability checking
time: 0.005; rss: 179MB	death checking
time: 0.000; rss: 179MB	unused lib feature checking
time: 0.049; rss: 179MB	lint checking
time: 0.000; rss: 179MB	resolving dependency formats
  time: 0.000; rss: 179MB	NoLandingPads
  time: 0.004; rss: 179MB	SimplifyCfg
  time: 0.009; rss: 179MB	EraseRegions
  time: 0.001; rss: 179MB	AddCallGuards
  time: 0.073; rss: 183MB	ElaborateDrops
  time: 0.000; rss: 183MB	NoLandingPads
  time: 0.007; rss: 180MB	SimplifyCfg
  time: 0.007; rss: 180MB	InstCombine
  time: 0.001; rss: 178MB	Deaggregator
  time: 0.000; rss: 178MB	CopyPropagation
  time: 0.007; rss: 176MB	SimplifyLocals
  time: 0.001; rss: 176MB	AddCallGuards
  time: 0.000; rss: 176MB	PreTrans
time: 0.110; rss: 176MB	MIR optimisations
  time: 0.011; rss: 178MB	write metadata
  time: 0.042; rss: 191MB	translation item collection
  time: 0.004; rss: 191MB	codegen unit partitioning
  time: 0.005; rss: 206MB	internalize symbols
time: 0.323; rss: 206MB	translation
time: 0.000; rss: 206MB	assert dep graph
time: 0.000; rss: 206MB	serialize dep graph
  time: 0.020; rss: 113MB	llvm function passes [0]
  time: 0.014; rss: 114MB	llvm module passes [0]
  time: 0.482; rss: 117MB	codegen passes [0]
  time: 0.000; rss: 116MB	codegen passes [0]
time: 0.555; rss: 116MB	LLVM passes
time: 0.000; rss: 116MB	serialize work products
time: 0.025; rss: 101MB	linking
done
