commit 8492b6aa4545e3e86f3b144c9a3834c31c612e38
Merge: 5029a60 915fa57
Author: bors <bors@rust-lang.org>
Date:   Sat May 14 11:56:58 2016 -0700

    Auto merge of #33579 - Amanieu:atomic_bool2, r=alexcrichton
    
    Make AtomicBool the same size as bool
    
    Reopening #32365
    
    This allows `AtomicBool` to be transmuted to a `bool`, which makes it more consistent with the other atomic types. Note that this now guarantees that the atomic type will always contain a valid `bool` value, which wasn't the case before (due to `fetch_nand`).
    
    r? @alexcrichton
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.042; rss: 49MB	parsing
Lines of code:             9154
Pre-expansion node count:  45594
time: 0.009; rss: 50MB	configuration 1
time: 0.000; rss: 50MB	recursion limit
time: 0.000; rss: 50MB	crate injection
time: 0.005; rss: 55MB	macro loading
time: 0.000; rss: 55MB	plugin loading
time: 0.000; rss: 55MB	plugin registration
time: 0.203; rss: 65MB	expansion
time: 0.030; rss: 65MB	configuration 2
time: 0.000; rss: 65MB	gated configuration checking
time: 0.011; rss: 65MB	maybe building test harness
time: 0.008; rss: 65MB	prelude injection
time: 0.001; rss: 65MB	checking that all macro invocations are gone
time: 0.000; rss: 65MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 65MB	complete gated feature checking
Post-expansion node count: 107141
time: 0.008; rss: 65MB	assigning node ids
time: 0.006; rss: 67MB	collecting defs
time: 0.023; rss: 69MB	external crate/lib resolution
time: 0.006; rss: 69MB	early lint checks
time: 0.033; rss: 88MB	name resolution
time: 0.019; rss: 93MB	lowering ast -> hir
time: 0.001; rss: 94MB	indexing hir
time: 0.002; rss: 94MB	attribute checking
time: 0.001; rss: 85MB	language item collection
time: 0.002; rss: 85MB	lifetime resolution
time: 0.000; rss: 85MB	looking for entry point
time: 0.000; rss: 85MB	looking for plugin registrar
time: 0.009; rss: 88MB	region resolution
time: 0.001; rss: 88MB	loop checking
time: 0.001; rss: 88MB	static item recursion checking
time: 0.000; rss: 88MB	load_dep_graph
time: 0.019; rss: 99MB	type collecting
time: 0.000; rss: 99MB	variance inference
time: 0.047; rss: 114MB	coherence checking
time: 0.094; rss: 116MB	wf checking
time: 0.038; rss: 116MB	item-types checking
time: 0.556; rss: 126MB	item-bodies checking
time: 0.000; rss: 126MB	drop-impl checking
time: 0.050; rss: 128MB	const checking
time: 0.009; rss: 128MB	privacy checking
time: 0.001; rss: 128MB	stability index
time: 0.006; rss: 128MB	intrinsic checking
time: 0.002; rss: 128MB	effect checking
time: 0.016; rss: 128MB	match checking
time: 0.005; rss: 128MB	liveness checking
time: 0.032; rss: 128MB	rvalue checking
time: 0.075; rss: 137MB	MIR dump
time: 0.043; rss: 138MB	MIR passes
time: 0.075; rss: 138MB	borrow checking
time: 0.003; rss: 138MB	reachability checking
time: 0.006; rss: 138MB	death checking
time: 0.006; rss: 138MB	stability checking
time: 0.000; rss: 138MB	unused lib feature checking
time: 0.053; rss: 138MB	lint checking
time: 0.000; rss: 138MB	resolving dependency formats
time: 0.012; rss: 139MB	Prepare MIR codegen passes
  time: 0.241; rss: 147MB	translation item collection
  time: 0.007; rss: 148MB	codegen unit partitioning
  time: 0.140; rss: 270MB	write metadata
time: 1.888; rss: 270MB	translation
time: 0.001; rss: 270MB	assert dep graph
time: 0.000; rss: 270MB	serialize dep graph
  time: 0.097; rss: 163MB	llvm function passes [0]
  time: 0.050; rss: 164MB	llvm module passes [0]
  time: 1.645; rss: 171MB	codegen passes [0]
  time: 0.001; rss: 119MB	codegen passes [0]
time: 2.102; rss: 118MB	LLVM passes
time: 0.176; rss: 114MB	linking
done
