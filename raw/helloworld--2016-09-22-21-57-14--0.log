commit 3a5d975fdcef451375df20e5ac234bb01e453e33
Merge: 4c04e36 3863834
Author: bors <bors@rust-lang.org>
Date:   Thu Sep 22 16:33:41 2016 -0700

    Auto merge of #36154 - nrc:proc-macro-init, r=@jseyfried
    
    Adds a `ProcMacro` form of syntax extension
    
    This commit adds syntax extension forms matching the types for procedural macros 2.0 (RFC #1566), these still require the usual syntax extension boiler plate, but this is a first step towards proper implementation and should be useful for macros 1.1 stuff too.
    
    Supports both attribute-like and function-like macros.
    
    Note that RFC #1566 has not been accepted yet, but I think there is consensus that we want to head in vaguely that direction and so this PR will be useful in any case. It is also fairly easy to undo and does not break any existing programs.
    
    This is related to #35957 in that I hope it can be used in the implementation of macros 1.1, however, there is no direct overlap and is more of a complement than a competing proposal. There is still a fair bit of work to do before the two can be combined.
    
    r? @jseyfried
    
    cc @alexcrichton, @cgswords, @eddyb, @aturon
rustc: ./helloworld
/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc hello.rs -Ztime-passes -Zinput-stats
time: 0.000; rss: 42MB	parsing
Lines of code:             3
Pre-expansion node count:  8
time: 0.000; rss: 42MB	recursion limit
time: 0.000; rss: 42MB	crate injection
time: 0.000; rss: 42MB	plugin loading
time: 0.000; rss: 42MB	plugin registration
time: 0.019; rss: 67MB	expansion
time: 0.000; rss: 67MB	maybe building test harness
time: 0.000; rss: 67MB	maybe creating a macro crate
time: 0.000; rss: 67MB	assigning node ids
Post-expansion node count: 68
time: 0.000; rss: 67MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 67MB	complete gated feature checking
time: 0.000; rss: 67MB	collecting defs
time: 0.002; rss: 67MB	external crate/lib resolution
time: 0.000; rss: 67MB	early lint checks
time: 0.000; rss: 67MB	AST validation
time: 0.000; rss: 67MB	name resolution
time: 0.000; rss: 67MB	lowering ast -> hir
time: 0.000; rss: 67MB	indexing hir
time: 0.000; rss: 67MB	attribute checking
time: 0.000; rss: 67MB	language item collection
time: 0.000; rss: 67MB	lifetime resolution
time: 0.000; rss: 67MB	looking for entry point
time: 0.000; rss: 67MB	looking for plugin registrar
time: 0.000; rss: 67MB	region resolution
time: 0.000; rss: 67MB	loop checking
time: 0.000; rss: 67MB	static item recursion checking
time: 0.000; rss: 67MB	compute_incremental_hashes_map
time: 0.000; rss: 67MB	load_dep_graph
time: 0.000; rss: 71MB	type collecting
time: 0.000; rss: 71MB	variance inference
time: 0.004; rss: 71MB	coherence checking
time: 0.000; rss: 71MB	wf checking
time: 0.000; rss: 71MB	item-types checking
time: 0.000; rss: 71MB	item-bodies checking
time: 0.000; rss: 71MB	drop-impl checking
time: 0.000; rss: 71MB	const checking
time: 0.000; rss: 71MB	privacy checking
time: 0.000; rss: 71MB	stability index
time: 0.000; rss: 71MB	intrinsic checking
time: 0.000; rss: 71MB	effect checking
time: 0.000; rss: 71MB	match checking
time: 0.000; rss: 71MB	liveness checking
time: 0.000; rss: 71MB	rvalue checking
time: 0.000; rss: 71MB	MIR dump
  time: 0.000; rss: 71MB	SimplifyCfg
  time: 0.000; rss: 71MB	QualifyAndPromoteConstants
  time: 0.000; rss: 71MB	TypeckMir
  time: 0.000; rss: 71MB	SimplifyBranches
  time: 0.000; rss: 71MB	SimplifyCfg
time: 0.000; rss: 71MB	MIR passes
time: 0.000; rss: 71MB	borrow checking
time: 0.000; rss: 71MB	reachability checking
time: 0.000; rss: 71MB	death checking
time: 0.000; rss: 71MB	stability checking
time: 0.000; rss: 71MB	unused lib feature checking
time: 0.000; rss: 71MB	lint checking
time: 0.001; rss: 71MB	resolving dependency formats
  time: 0.000; rss: 71MB	NoLandingPads
  time: 0.000; rss: 71MB	SimplifyCfg
  time: 0.000; rss: 71MB	EraseRegions
  time: 0.000; rss: 71MB	AddCallGuards
  time: 0.000; rss: 71MB	ElaborateDrops
  time: 0.000; rss: 71MB	NoLandingPads
  time: 0.000; rss: 71MB	SimplifyCfg
  time: 0.000; rss: 71MB	Deaggregator
  time: 0.000; rss: 71MB	AddCallGuards
  time: 0.000; rss: 71MB	PreTrans
time: 0.000; rss: 71MB	Prepare MIR codegen passes
  time: 0.000; rss: 71MB	write metadata
  time: 0.001; rss: 71MB	translation item collection
  time: 0.000; rss: 71MB	codegen unit partitioning
  time: 0.000; rss: 75MB	internalize symbols
time: 0.007; rss: 75MB	translation
time: 0.000; rss: 75MB	assert dep graph
time: 0.000; rss: 75MB	serialize dep graph
  time: 0.000; rss: 75MB	llvm function passes [0]
  time: 0.000; rss: 75MB	llvm module passes [0]
  time: 0.001; rss: 75MB	codegen passes [0]
  time: 0.000; rss: 75MB	codegen passes [0]
time: 0.002; rss: 75MB	LLVM passes
time: 0.000; rss: 75MB	serialize work products
  time: 0.111; rss: 75MB	running linker
time: 0.112; rss: 75MB	linking
done
