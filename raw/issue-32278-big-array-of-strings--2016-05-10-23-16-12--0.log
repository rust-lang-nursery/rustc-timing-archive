commit 6dbb0e86aec11050480beb76eade6fb805010ba7
Merge: 04308ce fef8276
Author: bors <bors@rust-lang.org>
Date:   Tue May 10 14:36:46 2016 -0700

    Auto merge of #33319 - birkenfeld:issue31424, r=jseyfried
    
    borrowck: do not suggest to change "&mut self" to "&mut mut self"
    
    Matching the snippet string might not be the cleanest, but matching
    the AST node instead seems to end in a lot of nested `if let`s, so I
    don't know what's better.
    
    Of course it's entirely possible that there is another API altogether
    that I just don't know of?
    
    Fixes #31424.
rustc: ./issue-32278-big-array-of-strings
/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc big-array-of-strings.rs -Ztime-passes -Zinput-stats
time: 0.154; rss: 68MB	parsing
Lines of code:             65577
Pre-expansion node count:  65552
time: 0.011; rss: 68MB	configuration 1
time: 0.000; rss: 68MB	recursion limit
time: 0.000; rss: 68MB	crate injection
time: 0.004; rss: 72MB	macro loading
time: 0.000; rss: 72MB	plugin loading
time: 0.000; rss: 72MB	plugin registration
time: 0.042; rss: 77MB	expansion
time: 0.011; rss: 77MB	configuration 2
time: 0.000; rss: 77MB	gated configuration checking
time: 0.005; rss: 77MB	maybe building test harness
time: 0.005; rss: 77MB	prelude injection
time: 0.000; rss: 77MB	checking that all macro invocations are gone
time: 0.000; rss: 77MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 77MB	complete gated feature checking
Post-expansion node count: 65565
time: 0.006; rss: 77MB	assigning node ids
time: 0.001; rss: 77MB	collecting defs
time: 0.004; rss: 77MB	external crate/lib resolution
time: 0.008; rss: 77MB	early lint checks
time: 0.002; rss: 81MB	name resolution
time: 0.009; rss: 94MB	lowering ast -> hir
time: 0.002; rss: 96MB	indexing hir
time: 0.001; rss: 96MB	attribute checking
time: 0.001; rss: 84MB	language item collection
time: 0.001; rss: 84MB	lifetime resolution
time: 0.000; rss: 84MB	looking for entry point
time: 0.000; rss: 84MB	looking for plugin registrar
time: 0.006; rss: 90MB	region resolution
time: 0.001; rss: 90MB	loop checking
time: 0.002; rss: 90MB	static item recursion checking
time: 0.000; rss: 90MB	load_dep_graph
time: 0.000; rss: 90MB	type collecting
time: 0.000; rss: 90MB	variance inference
time: 0.006; rss: 100MB	coherence checking
time: 0.001; rss: 100MB	wf checking
time: 0.767; rss: 201MB	item-types checking
time: 0.000; rss: 201MB	item-bodies checking
time: 0.000; rss: 201MB	drop-impl checking
time: 0.017; rss: 203MB	const checking
time: 0.002; rss: 203MB	privacy checking
time: 0.000; rss: 203MB	stability index
time: 0.000; rss: 203MB	intrinsic checking
time: 0.000; rss: 203MB	effect checking
time: 0.000; rss: 203MB	match checking
time: 0.001; rss: 203MB	liveness checking
time: 0.000; rss: 203MB	rvalue checking
time: 0.054; rss: 209MB	MIR dump
time: 0.002; rss: 209MB	MIR passes
time: 0.001; rss: 209MB	borrow checking
time: 0.000; rss: 209MB	reachability checking
time: 0.001; rss: 209MB	death checking
time: 0.001; rss: 209MB	stability checking
time: 0.000; rss: 209MB	unused lib feature checking
time: 0.030; rss: 209MB	lint checking
time: 0.001; rss: 209MB	resolving dependency formats
time: 0.001; rss: 209MB	Prepare MIR codegen passes
  time: 0.001; rss: 209MB	translation item collection
  time: 0.000; rss: 209MB	codegen unit partitioning
  time: 0.000; rss: 217MB	write metadata
time: 0.085; rss: 217MB	translation
time: 0.000; rss: 217MB	assert dep graph
time: 0.000; rss: 217MB	serialize dep graph
  time: 0.004; rss: 88MB	llvm function passes [0]
  time: 0.000; rss: 88MB	llvm module passes [0]
  time: 0.165; rss: 90MB	codegen passes [0]
  time: 0.000; rss: 79MB	codegen passes [0]
time: 0.181; rss: 79MB	LLVM passes
  time: 0.195; rss: 79MB	running linker
time: 0.196; rss: 79MB	linking
done
