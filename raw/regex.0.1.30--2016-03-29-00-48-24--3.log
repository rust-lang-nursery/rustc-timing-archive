commit a11129701c873d96fe0816e4c8b55510efebe96e
Merge: cad964a 221d0fb
Author: bors <bors@rust-lang.org>
Date:   Mon Mar 28 20:50:42 2016 -0700

    Auto merge of #32479 - eddyb:eof-not-even-twice, r=nikomatsakis
    
    Prevent bumping the parser past the EOF.
    
    Makes `Parser::bump` after EOF into an ICE, forcing callers to avoid repeated EOF bumps.
    This ICE is intended to break infinite loops where EOF wasn't stopping the loop.
    
    For example, the handling of EOF in `parse_trait_items`' recovery loop fixes #32446.
    But even without this specific fix, the ICE is triggered, which helps diagnosis and UX.
    
    This is a `[breaking-change]` for plugins authors who eagerly eat multiple EOFs.
    See https://github.com/docopt/docopt.rs/pull/171 for such an example and the necessary fix.
rustc: ./regex.0.1.30
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling regex v0.1.30 (file:///root/benchmarks/regex.0.1.30)
time: 0.061; rss: 50MB	parsing
Lines of code:             8558
Pre-expansion node count:  58217
time: 0.011; rss: 50MB	configuration 1
time: 0.000; rss: 50MB	recursion limit
time: 0.001; rss: 50MB	gated macro checking
time: 0.000; rss: 50MB	crate injection
time: 0.004; rss: 54MB	macro loading
time: 0.000; rss: 54MB	plugin loading
time: 0.000; rss: 54MB	plugin registration
time: 0.060; rss: 56MB	expansion
time: 0.002; rss: 56MB	complete gated feature checking 1
time: 0.013; rss: 56MB	configuration 2
time: 0.000; rss: 56MB	gated configuration checking
time: 0.007; rss: 56MB	maybe building test harness
time: 0.006; rss: 56MB	prelude injection
time: 0.001; rss: 56MB	checking that all macro invocations are gone
time: 0.000; rss: 56MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 56MB	complete gated feature checking 2
time: 0.001; rss: 56MB	const fn bodies and arguments
Post-expansion node count: 68485
time: 0.006; rss: 56MB	assigning node ids
time: 0.010; rss: 67MB	lowering ast -> hir
time: 0.003; rss: 69MB	indexing hir
time: 0.001; rss: 69MB	attribute checking
time: 0.007; rss: 69MB	early lint checks
time: 0.001; rss: 61MB	external crate/lib resolution
time: 0.001; rss: 61MB	language item collection
time: 0.010; rss: 72MB	resolution
time: 0.001; rss: 72MB	lifetime resolution
time: 0.000; rss: 72MB	looking for entry point
time: 0.000; rss: 72MB	looking for plugin registrar
time: 0.006; rss: 76MB	region resolution
time: 0.001; rss: 76MB	loop checking
time: 0.002; rss: 76MB	static item recursion checking
time: 0.004; rss: 79MB	type collecting
time: 0.000; rss: 79MB	variance inference
time: 0.071; rss: 96MB	coherence checking
time: 0.010; rss: 96MB	wf checking
time: 0.267; rss: 101MB	item-types checking
time: 0.198; rss: 115MB	item-bodies checking
time: 0.000; rss: 115MB	drop-impl checking
time: 0.026; rss: 115MB	const checking
time: 0.004; rss: 115MB	privacy checking
time: 0.001; rss: 115MB	stability index
time: 0.001; rss: 115MB	intrinsic checking
time: 0.001; rss: 115MB	effect checking
time: 0.003; rss: 115MB	match checking
time: 0.002; rss: 115MB	liveness checking
time: 0.007; rss: 115MB	rvalue checking
time: 0.016; rss: 117MB	MIR dump
time: 0.009; rss: 117MB	MIR passes
time: 0.020; rss: 117MB	borrow checking
time: 0.000; rss: 117MB	reachability checking
time: 0.003; rss: 117MB	death checking
time: 0.003; rss: 117MB	stability checking
time: 0.000; rss: 117MB	unused lib feature checking
time: 0.029; rss: 117MB	lint checking
time: 0.000; rss: 117MB	resolving dependency formats
  time: 0.057; rss: 130MB	translation item collection
  time: 0.136; rss: 185MB	write metadata
time: 0.631; rss: 185MB	translation
  time: 0.037; rss: 119MB	llvm function passes [0]
  time: 0.018; rss: 120MB	llvm module passes [0]
  time: 0.620; rss: 124MB	codegen passes [0]
  time: 0.001; rss: 105MB	codegen passes [0]
time: 0.754; rss: 104MB	LLVM passes
time: 0.065; rss: 102MB	linking
done
