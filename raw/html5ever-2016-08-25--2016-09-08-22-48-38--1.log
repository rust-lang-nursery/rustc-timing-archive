commit 1df64450ecf9d2c458b5789ef823203fcdbd60a9
Merge: 3781956 ce3cecf
Author: bors <bors@rust-lang.org>
Date:   Thu Sep 8 19:15:50 2016 -0700

    Auto merge of #36321 - uweigand:enum-abi, r=eddyb
    
    Follow target ABI sign-/zero-extension rules for enum types
    
    While attempting to port Rust to s390x, I ran into an ABI violation
    (that caused rust_eh_personality to be miscompiled, breaking unwinding).
    The problem is that this function returns an enum type, which is
    supposed to be sign-extended according to the s390x ABI.  However,
    common code would ignore target sign-/zero-extension rules for any
    types that do not satisfy is_integral(), which includes enums.
    
    For the general case of Rust enum types, which map to structure types
    with a discriminant, that seems correct.  However, in the special case
    of simple enums that map directly to C enum types (i.e. LLVM integers),
    this is incorrect; we must follow the target extension rules for those.
    
    Signed-off-by: Ulrich Weigand <ulrich.weigand@de.ibm.com>
rustc: ./html5ever-2016-08-25
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling html5ever v0.5.4 (file:///root/benchmarks/html5ever-2016-08-25)
time: 0.029; rss: 53MB	parsing
Lines of code:             8210
Pre-expansion node count:  52238
time: 0.000; rss: 53MB	recursion limit
time: 0.000; rss: 53MB	crate injection
time: 0.000; rss: 53MB	plugin loading
time: 0.000; rss: 53MB	plugin registration
time: 1.423; rss: 100MB	expansion
time: 0.000; rss: 100MB	maybe building test harness
time: 0.002; rss: 100MB	maybe creating a macro crate
time: 0.008; rss: 100MB	assigning node ids
Post-expansion node count: 164262
time: 0.000; rss: 100MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 100MB	complete gated feature checking
time: 0.005; rss: 102MB	collecting defs
time: 0.006; rss: 104MB	external crate/lib resolution
time: 0.009; rss: 104MB	early lint checks
time: 0.002; rss: 104MB	AST validation
time: 0.019; rss: 108MB	name resolution
time: 0.017; rss: 125MB	lowering ast -> hir
time: 0.004; rss: 129MB	indexing hir
time: 0.002; rss: 129MB	attribute checking
time: 0.002; rss: 111MB	language item collection
time: 0.003; rss: 111MB	lifetime resolution
time: 0.000; rss: 111MB	looking for entry point
time: 0.000; rss: 111MB	looking for plugin registrar
time: 0.016; rss: 117MB	region resolution
time: 0.002; rss: 117MB	loop checking
time: 0.003; rss: 117MB	static item recursion checking
time: 0.023; rss: 118MB	compute_incremental_hashes_map
time: 0.000; rss: 118MB	load_dep_graph
time: 0.015; rss: 118MB	type collecting
time: 0.000; rss: 118MB	variance inference
time: 0.027; rss: 122MB	coherence checking
time: 0.027; rss: 123MB	wf checking
time: 0.370; rss: 128MB	item-types checking
time: 0.591; rss: 144MB	item-bodies checking
time: 0.000; rss: 144MB	drop-impl checking
time: 0.077; rss: 147MB	const checking
time: 0.008; rss: 147MB	privacy checking
time: 0.002; rss: 147MB	stability index
time: 0.004; rss: 147MB	intrinsic checking
time: 0.003; rss: 147MB	effect checking
time: 0.027; rss: 147MB	match checking
time: 0.013; rss: 140MB	liveness checking
time: 0.031; rss: 140MB	rvalue checking
time: 0.120; rss: 183MB	MIR dump
  time: 0.009; rss: 185MB	SimplifyCfg
  time: 0.015; rss: 185MB	QualifyAndPromoteConstants
  time: 0.027; rss: 185MB	TypeckMir
  time: 0.000; rss: 185MB	SimplifyBranches
  time: 0.005; rss: 185MB	SimplifyCfg
time: 0.056; rss: 185MB	MIR passes
time: 0.095; rss: 190MB	borrow checking
time: 0.003; rss: 190MB	reachability checking
time: 0.007; rss: 190MB	death checking
time: 0.008; rss: 190MB	stability checking
time: 0.000; rss: 190MB	unused lib feature checking
time: 0.071; rss: 190MB	lint checking
time: 0.000; rss: 190MB	resolving dependency formats
  time: 0.000; rss: 190MB	NoLandingPads
  time: 0.004; rss: 190MB	SimplifyCfg
  time: 0.010; rss: 190MB	EraseRegions
  time: 0.001; rss: 190MB	AddCallGuards
  time: 0.083; rss: 195MB	ElaborateDrops
  time: 0.000; rss: 195MB	NoLandingPads
  time: 0.007; rss: 192MB	SimplifyCfg
  time: 0.001; rss: 192MB	Deaggregator
  time: 0.001; rss: 192MB	AddCallGuards
  time: 0.000; rss: 192MB	PreTrans
time: 0.108; rss: 192MB	Prepare MIR codegen passes
  time: 0.060; rss: 192MB	write metadata
  time: 0.043; rss: 194MB	translation item collection
  time: 0.005; rss: 194MB	codegen unit partitioning
  time: 0.011; rss: 211MB	internalize symbols
time: 0.428; rss: 185MB	translation
time: 0.000; rss: 185MB	assert dep graph
time: 0.000; rss: 185MB	serialize dep graph
  time: 0.023; rss: 113MB	llvm function passes [0]
  time: 0.014; rss: 114MB	llvm module passes [0]
  time: 0.525; rss: 117MB	codegen passes [0]
  time: 0.001; rss: 117MB	codegen passes [0]
time: 0.604; rss: 117MB	LLVM passes
time: 0.000; rss: 117MB	serialize work products
time: 0.060; rss: 97MB	linking
done
