commit 304d0c8d8544ed0afcb57b32572b948fb5072f59
Merge: e335620 b3cb8f6
Author: bors <bors@rust-lang.org>
Date:   Tue Oct 11 07:39:09 2016 -0700

    Auto merge of #36871 - petrochenkov:pdderr, r=nikomatsakis
    
    Turn compatibility lint `match_of_unit_variant_via_paren_dotdot` into a hard error
    
    The lint was introduced 10 months ago and made deny-by-default 7 months ago.
    In case someone is still using it, https://github.com/rust-lang/rust/pull/36868 contains a stable replacement.
    
    r? @nikomatsakis
rustc: ./syntex-0.42.2-incr-clean
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax -- -Ztime-passes -Zinput-stats -Z incremental-info
   Compiling bitflags v0.5.0
   Compiling libc v0.2.15
   Compiling winapi-build v0.1.1
   Compiling winapi v0.2.8
   Compiling log v0.3.6
   Compiling unicode-xid v0.0.3
   Compiling rustc-serialize v0.3.19
   Compiling kernel32-sys v0.2.2
   Compiling term v0.4.4
   Compiling syntex_pos v0.42.0
   Compiling syntex_errors v0.42.0
   Compiling syntex_syntax v0.42.0
time: 0.109; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  224033
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.279; rss: 145MB	expansion
time: 0.000; rss: 145MB	maybe building test harness
time: 0.007; rss: 145MB	maybe creating a macro crate
Post-expansion node count: 641571
time: 0.000; rss: 145MB	checking for inline asm in case the target doesn't support it
time: 0.016; rss: 145MB	complete gated feature checking
time: 0.027; rss: 145MB	early lint checks
time: 0.009; rss: 145MB	AST validation
time: 0.092; rss: 160MB	name resolution
time: 0.058; rss: 203MB	lowering ast -> hir
time: 0.012; rss: 211MB	indexing hir
time: 0.007; rss: 211MB	attribute checking
time: 0.007; rss: 162MB	language item collection
time: 0.014; rss: 162MB	lifetime resolution
time: 0.000; rss: 162MB	looking for entry point
time: 0.000; rss: 162MB	looking for plugin registrar
time: 0.052; rss: 173MB	region resolution
time: 0.007; rss: 173MB	loop checking
time: 0.007; rss: 173MB	static item recursion checking
time: 0.270; rss: 174MB	compute_incremental_hashes_map
time: 0.000; rss: 174MB	load_dep_graph
time: 0.043; rss: 174MB	type collecting
time: 0.001; rss: 174MB	variance inference
time: 0.039; rss: 178MB	coherence checking
time: 0.098; rss: 180MB	wf checking
time: 0.191; rss: 185MB	item-types checking
time: 3.936; rss: 240MB	item-bodies checking
time: 0.000; rss: 240MB	drop-impl checking
time: 0.314; rss: 240MB	const checking
time: 0.055; rss: 240MB	privacy checking
time: 0.007; rss: 240MB	stability index
time: 0.022; rss: 240MB	intrinsic checking
time: 0.019; rss: 240MB	effect checking
time: 0.059; rss: 240MB	match checking
time: 0.056; rss: 237MB	liveness checking
time: 0.284; rss: 237MB	rvalue checking
time: 0.416; rss: 426MB	MIR dump
  time: 0.057; rss: 429MB	SimplifyCfg
  time: 0.083; rss: 429MB	QualifyAndPromoteConstants
  time: 0.108; rss: 429MB	TypeckMir
  time: 0.004; rss: 429MB	SimplifyBranches
  time: 0.031; rss: 429MB	SimplifyCfg
time: 0.284; rss: 429MB	MIR passes
time: 0.678; rss: 430MB	borrow checking
time: 0.018; rss: 430MB	reachability checking
time: 0.046; rss: 430MB	death checking
time: 0.043; rss: 430MB	stability checking
time: 0.000; rss: 430MB	unused lib feature checking
time: 0.226; rss: 430MB	lint checking
time: 0.000; rss: 430MB	resolving dependency formats
  time: 0.003; rss: 430MB	NoLandingPads
  time: 0.027; rss: 430MB	SimplifyCfg
  time: 0.072; rss: 443MB	EraseRegions
  time: 0.011; rss: 443MB	AddCallGuards
  time: 1.035; rss: 455MB	ElaborateDrops
  time: 0.003; rss: 455MB	NoLandingPads
  time: 0.052; rss: 455MB	SimplifyCfg
  time: 0.030; rss: 455MB	InstCombine
  time: 0.012; rss: 455MB	Deaggregator
  time: 0.003; rss: 455MB	CopyPropagation
  time: 0.009; rss: 455MB	AddCallGuards
  time: 0.003; rss: 455MB	PreTrans
time: 1.259; rss: 455MB	Prepare MIR codegen passes
  time: 0.264; rss: 464MB	write metadata
  time: 0.462; rss: 473MB	translation item collection
  time: 0.068; rss: 482MB	codegen unit partitioning
  time: 0.058; rss: 724MB	internalize symbols
time: 5.122; rss: 602MB	translation
time: 0.000; rss: 602MB	assert dep graph
time: 0.000; rss: 602MB	serialize dep graph
incremental: re-using 0 out of 1 modules
  time: 0.510; rss: 410MB	llvm function passes [0]
  time: 0.253; rss: 418MB	llvm module passes [0]
  time: 10.123; rss: 413MB	codegen passes [0]
  time: 0.001; rss: 414MB	codegen passes [0]
time: 11.654; rss: 414MB	LLVM passes
time: 0.000; rss: 414MB	serialize work products
time: 0.668; rss: 107MB	linking
done
