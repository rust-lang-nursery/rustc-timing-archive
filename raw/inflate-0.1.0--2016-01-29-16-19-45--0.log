commit 074f49a350f22b6f33890cd105b2ebe2c790ee3c
Merge: 0f196bc fdf65e7
Author: bors <bors@rust-lang.org>
Date:   Fri Jan 29 20:58:09 2016 +0000

    Auto merge of #31283 - dotdash:32_64_cc, r=alexcrichton
    
    When cross compiling for a target that has a larger usize type than the
    host system, we use a truncated value to mark data as dropped,
    eventually leading to drop calls on already dropped data. To properly
    handle this, the drop pattern needs to be of type u64.
    
    Since C_integral truncates its given value to the requested size anyway,
    we can also drop the function that chose between the u32 and u64 values,
    and always use the u64 constant.
    
    Fixes #31139
    
    r? @pnkfelix
rustc: ./inflate-0.1.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling inflate v0.1.0 (file:///root/benchmarks/inflate-0.1.0)
time: 0.004; rss: 36MB	parsing
Lines of code:             956
Pre-expansion node count:  4761
time: 0.001; rss: 36MB	configuration 1
time: 0.000; rss: 36MB	recursion limit
time: 0.000; rss: 36MB	gated macro checking
time: 0.000; rss: 36MB	crate injection
time: 0.003; rss: 40MB	macro loading
time: 0.000; rss: 40MB	plugin loading
time: 0.000; rss: 40MB	plugin registration
time: 0.081; rss: 47MB	expansion
time: 0.001; rss: 47MB	complete gated feature checking 1
time: 0.009; rss: 47MB	configuration 2
time: 0.000; rss: 47MB	gated configuration checking
time: 0.004; rss: 47MB	maybe building test harness
time: 0.004; rss: 47MB	prelude injection
time: 0.000; rss: 47MB	checking that all macro invocations are gone
time: 0.000; rss: 47MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 47MB	complete gated feature checking 2
Post-expansion node count: 54798
time: 0.004; rss: 47MB	assigning node ids
time: 0.007; rss: 51MB	lowering ast -> hir
time: 0.002; rss: 53MB	indexing hir
time: 0.000; rss: 53MB	attribute checking
time: 0.002; rss: 53MB	early lint checks
time: 0.001; rss: 50MB	external crate/lib resolution
time: 0.001; rss: 50MB	language item collection
time: 0.009; rss: 59MB	resolution
time: 0.001; rss: 59MB	lifetime resolution
time: 0.000; rss: 59MB	looking for entry point
time: 0.000; rss: 59MB	looking for plugin registrar
time: 0.003; rss: 59MB	region resolution
time: 0.000; rss: 59MB	loop checking
time: 0.000; rss: 59MB	static item recursion checking
time: 0.001; rss: 59MB	type collecting
time: 0.000; rss: 59MB	variance inference
time: 0.009; rss: 74MB	coherence checking
time: 0.002; rss: 74MB	wf checking
time: 0.002; rss: 74MB	item-types checking
time: 27.281; rss: 100MB	item-bodies checking
time: 0.000; rss: 100MB	drop-impl checking
time: 0.014; rss: 101MB	const checking
time: 0.002; rss: 101MB	privacy checking
time: 0.000; rss: 101MB	stability index
time: 0.000; rss: 101MB	intrinsic checking
time: 0.001; rss: 101MB	effect checking
time: 0.003; rss: 101MB	match checking
time: 0.025; rss: 107MB	MIR dump
time: 0.063; rss: 105MB	liveness checking
time: 0.211; rss: 107MB	borrow checking
time: 0.009; rss: 107MB	rvalue checking
time: 0.000; rss: 107MB	reachability checking
time: 0.002; rss: 107MB	death checking
time: 0.002; rss: 107MB	stability checking
time: 0.000; rss: 107MB	unused lib feature checking
time: 0.017; rss: 109MB	lint checking
time: 0.000; rss: 109MB	resolving dependency formats
time: 0.002; rss: 109MB	erasing regions from MIR
  time: 0.003; rss: 136MB	write metadata
time: 0.378; rss: 130MB	translation
  time: 0.026; rss: 96MB	llvm function passes [0]
  time: 0.005; rss: 97MB	llvm module passes [0]
  time: 0.465; rss: 143MB	codegen passes [0]
  time: 0.000; rss: 128MB	codegen passes [0]
time: 0.537; rss: 128MB	LLVM passes
time: 0.035; rss: 129MB	linking
done
