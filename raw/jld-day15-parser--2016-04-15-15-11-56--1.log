commit 9debf51f4b8a5d437df1abca57c5a58c45297b60
Merge: ccc7e95 5613372
Author: bors <bors@rust-lang.org>
Date:   Fri Apr 15 12:41:25 2016 -0700

    Auto merge of #32338 - lukaspustina:doc-std-process, r=alexcrichton
    
    Extends rustdoc on how to caputure output
    
    - The documentation is quite about how to caputure a process' output when using
      ` std::process::Child::wait_with_output()`.
    - This PR adds an example for this particular use case.
rustc: ./jld-day15-parser
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling day15 v0.1.0 (file:///root/benchmarks/jld-day15-parser)
time: 0.001; rss: 35MB	parsing
Lines of code:             72
Pre-expansion node count:  673
time: 0.000; rss: 35MB	configuration 1
time: 0.000; rss: 35MB	recursion limit
time: 0.000; rss: 35MB	gated macro checking
time: 0.000; rss: 35MB	crate injection
time: 0.003; rss: 40MB	macro loading
time: 0.000; rss: 40MB	plugin loading
time: 0.000; rss: 40MB	plugin registration
time: 0.002; rss: 41MB	expansion
time: 0.000; rss: 41MB	complete gated feature checking 1
time: 0.000; rss: 41MB	configuration 2
time: 0.000; rss: 41MB	gated configuration checking
time: 0.000; rss: 41MB	maybe building test harness
time: 0.000; rss: 41MB	prelude injection
time: 0.000; rss: 41MB	checking that all macro invocations are gone
time: 0.000; rss: 41MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 41MB	complete gated feature checking 2
time: 0.000; rss: 41MB	const fn bodies and arguments
Post-expansion node count: 1176
time: 0.000; rss: 41MB	assigning node ids
time: 0.000; rss: 41MB	lowering ast -> hir
time: 0.000; rss: 41MB	indexing hir
time: 0.000; rss: 41MB	attribute checking
time: 0.000; rss: 41MB	early lint checks
time: 0.001; rss: 43MB	external crate/lib resolution
time: 0.000; rss: 43MB	language item collection
time: 0.001; rss: 49MB	resolution
time: 0.000; rss: 49MB	lifetime resolution
time: 0.000; rss: 49MB	looking for entry point
time: 0.000; rss: 49MB	looking for plugin registrar
time: 0.000; rss: 49MB	region resolution
time: 0.000; rss: 49MB	loop checking
time: 0.000; rss: 49MB	static item recursion checking
time: 0.000; rss: 49MB	load_dep_graph
time: 0.001; rss: 52MB	type collecting
time: 0.000; rss: 52MB	variance inference
time: 0.005; rss: 59MB	coherence checking
time: 0.008; rss: 64MB	wf checking
time: 0.000; rss: 65MB	item-types checking
time: 1.834; rss: 135MB	item-bodies checking
time: 0.000; rss: 135MB	drop-impl checking
time: 0.001; rss: 135MB	const checking
time: 0.000; rss: 135MB	privacy checking
time: 0.000; rss: 135MB	stability index
time: 0.000; rss: 135MB	intrinsic checking
time: 0.000; rss: 135MB	effect checking
time: 0.000; rss: 135MB	match checking
time: 0.000; rss: 135MB	liveness checking
time: 0.002; rss: 135MB	rvalue checking
time: 0.001; rss: 136MB	MIR dump
time: 0.000; rss: 136MB	MIR passes
time: 0.001; rss: 136MB	borrow checking
time: 0.000; rss: 136MB	reachability checking
time: 0.000; rss: 136MB	death checking
time: 0.000; rss: 136MB	stability checking
time: 0.000; rss: 136MB	unused lib feature checking
time: 0.004; rss: 138MB	lint checking
time: 0.001; rss: 139MB	resolving dependency formats
time: 0.000; rss: 139MB	Prepare MIR codegen passes
  time: 12.767; rss: 182MB	translation item collection
  time: 0.000; rss: 219MB	write metadata
time: 39.165; rss: 219MB	translation
time: 0.000; rss: 219MB	assert dep graph
time: 0.000; rss: 219MB	serialize dep graph
  time: 0.014; rss: 101MB	llvm function passes [0]
  time: 0.001; rss: 101MB	llvm module passes [0]
  time: 0.272; rss: 107MB	codegen passes [0]
  time: 0.000; rss: 101MB	codegen passes [0]
time: 0.295; rss: 100MB	LLVM passes
  time: 0.126; rss: 100MB	running linker
time: 0.126; rss: 100MB	linking
done
