commit eb38d426c41aa8487e8cb8a9dafbfcf3528201f9
Merge: dfd98eb cde42cd
Author: bors <bors@rust-lang.org>
Date:   Wed Oct 19 22:05:13 2016 -0700

    Auto merge of #36973 - nnethercote:dep_graph, r=nikomatsakis
    
    Don't enqueue onto a disabled dep_graph.
    
    This commit guards all calls to `DepGraphThreadData::enqueue` with a
    check to make sure it is enabled. This avoids some useless allocation
    and vector manipulations when it is disabled (i.e. when incremental
    compilation is off) which improves speed by 1--2% on most of the
    rustc-benchmarks.
    
    This commit has an observable functional change: when the dep_graph is
    disabled its `shadow_graph` will no longer receive messages. This should
    be ok because these message are only used when debug assertions are
    enabled.
    
    r? @nikomatsakis
rustc: ./rust-encoding-0.3.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling encoding-types v0.2.0 (file:///root/benchmarks/rust-encoding-0.3.0)
   Compiling encoding_index_tests v0.1.5 (file:///root/benchmarks/rust-encoding-0.3.0)
   Compiling encoding-index-simpchinese v1.20160120.0 (file:///root/benchmarks/rust-encoding-0.3.0)
   Compiling encoding-index-korean v1.20141219.6 (file:///root/benchmarks/rust-encoding-0.3.0)
   Compiling encoding-index-singlebyte v1.20160120.0 (file:///root/benchmarks/rust-encoding-0.3.0)
   Compiling encoding-index-tradchinese v1.20141219.6 (file:///root/benchmarks/rust-encoding-0.3.0)
   Compiling encoding-index-japanese v1.20141219.6 (file:///root/benchmarks/rust-encoding-0.3.0)
   Compiling encoding v0.3.0-dev (file:///root/benchmarks/rust-encoding-0.3.0)
time: 0.019; rss: 49MB	parsing
Lines of code:             5757
Pre-expansion node count:  26615
time: 0.000; rss: 49MB	recursion limit
time: 0.000; rss: 49MB	crate injection
time: 0.000; rss: 49MB	plugin loading
time: 0.000; rss: 49MB	plugin registration
time: 0.036; rss: 73MB	expansion
time: 0.000; rss: 73MB	maybe building test harness
time: 0.000; rss: 73MB	maybe creating a macro crate
Post-expansion node count: 37904
time: 0.000; rss: 73MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 73MB	complete gated feature checking
time: 0.001; rss: 73MB	early lint checks
time: 0.000; rss: 73MB	AST validation
time: 0.005; rss: 76MB	name resolution
time: 0.003; rss: 76MB	lowering ast -> hir
time: 0.000; rss: 76MB	indexing hir
time: 0.000; rss: 76MB	attribute checking
time: 0.000; rss: 76MB	language item collection
time: 0.000; rss: 76MB	lifetime resolution
time: 0.000; rss: 76MB	looking for entry point
time: 0.000; rss: 76MB	looking for plugin registrar
time: 0.002; rss: 77MB	region resolution
time: 0.000; rss: 77MB	loop checking
time: 0.000; rss: 77MB	static item recursion checking
time: 0.019; rss: 78MB	compute_incremental_hashes_map
time: 0.000; rss: 78MB	load_dep_graph
time: 0.008; rss: 79MB	type collecting
time: 0.000; rss: 79MB	variance inference
time: 0.014; rss: 82MB	coherence checking
time: 0.011; rss: 82MB	wf checking
time: 0.009; rss: 82MB	item-types checking
time: 0.128; rss: 87MB	item-bodies checking
time: 0.000; rss: 87MB	drop-impl checking
time: 0.009; rss: 89MB	const checking
time: 0.001; rss: 89MB	privacy checking
time: 0.000; rss: 89MB	stability index
time: 0.001; rss: 89MB	intrinsic checking
time: 0.000; rss: 89MB	effect checking
time: 0.005; rss: 89MB	match checking
time: 0.001; rss: 89MB	liveness checking
time: 0.006; rss: 89MB	rvalue checking
time: 0.018; rss: 97MB	MIR dump
  time: 0.002; rss: 97MB	SimplifyCfg
  time: 0.003; rss: 97MB	QualifyAndPromoteConstants
  time: 0.004; rss: 97MB	TypeckMir
  time: 0.000; rss: 97MB	SimplifyBranches
  time: 0.001; rss: 97MB	SimplifyCfg
time: 0.011; rss: 97MB	MIR passes
time: 0.019; rss: 97MB	borrow checking
time: 0.000; rss: 97MB	reachability checking
time: 0.001; rss: 97MB	death checking
time: 0.002; rss: 97MB	stability checking
time: 0.000; rss: 97MB	unused lib feature checking
time: 0.015; rss: 97MB	lint checking
time: 0.000; rss: 97MB	resolving dependency formats
  time: 0.000; rss: 97MB	NoLandingPads
  time: 0.001; rss: 97MB	SimplifyCfg
  time: 0.002; rss: 97MB	EraseRegions
  time: 0.000; rss: 97MB	AddCallGuards
  time: 0.022; rss: 99MB	ElaborateDrops
  time: 0.000; rss: 99MB	NoLandingPads
  time: 0.001; rss: 99MB	SimplifyCfg
  time: 0.001; rss: 99MB	InstCombine
  time: 0.001; rss: 99MB	Deaggregator
  time: 0.000; rss: 99MB	CopyPropagation
  time: 0.000; rss: 99MB	AddCallGuards
  time: 0.000; rss: 99MB	PreTrans
time: 0.030; rss: 99MB	Prepare MIR codegen passes
  time: 0.004; rss: 99MB	write metadata
  time: 0.161; rss: 206MB	translation item collection
  time: 0.003; rss: 206MB	codegen unit partitioning
  time: 0.002; rss: 229MB	internalize symbols
time: 0.438; rss: 220MB	translation
time: 0.000; rss: 220MB	assert dep graph
time: 0.000; rss: 220MB	serialize dep graph
  time: 0.025; rss: 112MB	llvm function passes [0]
  time: 0.055; rss: 116MB	llvm module passes [0]
  time: 0.621; rss: 123MB	codegen passes [0]
  time: 0.000; rss: 122MB	codegen passes [0]
time: 0.755; rss: 121MB	LLVM passes
time: 0.000; rss: 121MB	serialize work products
time: 0.077; rss: 92MB	linking
done
