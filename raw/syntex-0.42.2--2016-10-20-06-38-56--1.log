commit eb38d426c41aa8487e8cb8a9dafbfcf3528201f9
Merge: dfd98eb cde42cd
Author: bors <bors@rust-lang.org>
Date:   Wed Oct 19 22:05:13 2016 -0700

    Auto merge of #36973 - nnethercote:dep_graph, r=nikomatsakis
    
    Don't enqueue onto a disabled dep_graph.
    
    This commit guards all calls to `DepGraphThreadData::enqueue` with a
    check to make sure it is enabled. This avoids some useless allocation
    and vector manipulations when it is disabled (i.e. when incremental
    compilation is off) which improves speed by 1--2% on most of the
    rustc-benchmarks.
    
    This commit has an observable functional change: when the dep_graph is
    disabled its `shadow_graph` will no longer receive messages. This should
    be ok because these message are only used when debug assertions are
    enabled.
    
    r? @nikomatsakis
rustc: ./syntex-0.42.2
cargo rustc -p syntex_syntax -- -Ztime-passes -Zinput-stats
   Compiling syntex_syntax v0.42.0
time: 0.110; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  224033
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.276; rss: 148MB	expansion
time: 0.000; rss: 148MB	maybe building test harness
time: 0.007; rss: 148MB	maybe creating a macro crate
Post-expansion node count: 641571
time: 0.000; rss: 148MB	checking for inline asm in case the target doesn't support it
time: 0.015; rss: 148MB	complete gated feature checking
time: 0.024; rss: 148MB	early lint checks
time: 0.009; rss: 148MB	AST validation
time: 0.091; rss: 162MB	name resolution
time: 0.056; rss: 202MB	lowering ast -> hir
time: 0.011; rss: 213MB	indexing hir
time: 0.007; rss: 213MB	attribute checking
time: 0.007; rss: 164MB	language item collection
time: 0.013; rss: 164MB	lifetime resolution
time: 0.000; rss: 164MB	looking for entry point
time: 0.000; rss: 164MB	looking for plugin registrar
time: 0.049; rss: 176MB	region resolution
time: 0.007; rss: 176MB	loop checking
time: 0.007; rss: 176MB	static item recursion checking
time: 0.534; rss: 177MB	compute_incremental_hashes_map
time: 0.000; rss: 177MB	load_dep_graph
time: 0.041; rss: 181MB	type collecting
time: 0.001; rss: 181MB	variance inference
time: 0.034; rss: 183MB	coherence checking
time: 0.098; rss: 186MB	wf checking
time: 0.182; rss: 193MB	item-types checking
time: 3.757; rss: 245MB	item-bodies checking
time: 0.000; rss: 245MB	drop-impl checking
time: 0.248; rss: 248MB	const checking
time: 0.052; rss: 248MB	privacy checking
time: 0.007; rss: 248MB	stability index
time: 0.021; rss: 248MB	intrinsic checking
time: 0.018; rss: 248MB	effect checking
time: 0.055; rss: 248MB	match checking
time: 0.052; rss: 238MB	liveness checking
time: 0.210; rss: 238MB	rvalue checking
time: 0.400; rss: 427MB	MIR dump
  time: 0.057; rss: 431MB	SimplifyCfg
  time: 0.082; rss: 431MB	QualifyAndPromoteConstants
  time: 0.109; rss: 431MB	TypeckMir
  time: 0.004; rss: 431MB	SimplifyBranches
  time: 0.031; rss: 431MB	SimplifyCfg
time: 0.284; rss: 431MB	MIR passes
time: 0.552; rss: 431MB	borrow checking
time: 0.018; rss: 431MB	reachability checking
time: 0.043; rss: 431MB	death checking
time: 0.040; rss: 431MB	stability checking
time: 0.000; rss: 431MB	unused lib feature checking
time: 0.211; rss: 431MB	lint checking
time: 0.000; rss: 431MB	resolving dependency formats
  time: 0.003; rss: 431MB	NoLandingPads
  time: 0.026; rss: 431MB	SimplifyCfg
  time: 0.068; rss: 439MB	EraseRegions
  time: 0.011; rss: 439MB	AddCallGuards
  time: 0.288; rss: 458MB	ElaborateDrops
  time: 0.003; rss: 458MB	NoLandingPads
  time: 0.052; rss: 458MB	SimplifyCfg
  time: 0.029; rss: 458MB	InstCombine
  time: 0.011; rss: 458MB	Deaggregator
  time: 0.002; rss: 458MB	CopyPropagation
  time: 0.009; rss: 458MB	AddCallGuards
  time: 0.002; rss: 458MB	PreTrans
time: 0.506; rss: 458MB	Prepare MIR codegen passes
  time: 0.060; rss: 467MB	write metadata
  time: 0.416; rss: 476MB	translation item collection
  time: 0.057; rss: 484MB	codegen unit partitioning
  time: 0.048; rss: 730MB	internalize symbols
time: 4.751; rss: 609MB	translation
time: 0.000; rss: 609MB	assert dep graph
time: 0.000; rss: 609MB	serialize dep graph
  time: 0.510; rss: 410MB	llvm function passes [0]
  time: 0.241; rss: 419MB	llvm module passes [0]
  time: 9.993; rss: 413MB	codegen passes [0]
  time: 0.000; rss: 413MB	codegen passes [0]
time: 11.485; rss: 413MB	LLVM passes
time: 0.000; rss: 413MB	serialize work products
time: 0.682; rss: 105MB	linking
done
