commit b33873f5411d4ad6a3bd5a4a18dffce8a960a316
Merge: 391939b f9cc166
Author: bors <bors@rust-lang.org>
Date:   Fri Nov 11 20:46:59 2016 -0800

    Auto merge of #37469 - meh:fix-term, r=alexcrichton
    
    Fix terminfo database search path
    
    This is more consistent with what every other program does, I happened to have `TERMINFO` set as `/usr/share/terminfo` but had the actual database in `~/.terminfo`, regardless of that every other terminfo/ncurses based software picked up the one in the home correctly.
    
    This just puts the path in `TERMINFO` at the top of the search paths, and moves the home checking to the default search paths section.
rustc: ./syntex-0.42.2
cargo rustc -p syntex_syntax  -- -Ztime-passes -Zinput-stats
   Compiling syntex_syntax v0.42.0
time: 0.092; rss: 71MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 71MB	recursion limit
time: 0.000; rss: 71MB	crate injection
time: 0.000; rss: 71MB	plugin loading
time: 0.000; rss: 71MB	plugin registration
time: 0.233; rss: 143MB	expansion
time: 0.000; rss: 143MB	maybe building test harness
time: 0.006; rss: 143MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 143MB	checking for inline asm in case the target doesn't support it
time: 0.013; rss: 143MB	complete gated feature checking
time: 0.023; rss: 143MB	early lint checks
time: 0.007; rss: 143MB	AST validation
time: 0.076; rss: 158MB	name resolution
time: 0.044; rss: 183MB	lowering ast -> hir
time: 0.008; rss: 194MB	indexing hir
time: 0.006; rss: 194MB	attribute checking
time: 0.004; rss: 150MB	language item collection
time: 0.010; rss: 150MB	lifetime resolution
time: 0.000; rss: 150MB	looking for entry point
time: 0.000; rss: 150MB	looking for plugin registrar
time: 0.040; rss: 170MB	region resolution
time: 0.005; rss: 170MB	loop checking
time: 0.005; rss: 170MB	static item recursion checking
time: 0.328; rss: 159MB	compute_incremental_hashes_map
time: 0.000; rss: 159MB	load_dep_graph
time: 0.040; rss: 169MB	type collecting
time: 0.001; rss: 169MB	variance inference
time: 0.018; rss: 173MB	coherence checking
time: 0.098; rss: 174MB	wf checking
time: 0.184; rss: 184MB	item-types checking
time: 3.300; rss: 233MB	item-bodies checking
time: 0.000; rss: 233MB	drop-impl checking
time: 0.214; rss: 253MB	const checking
time: 0.045; rss: 253MB	privacy checking
time: 0.005; rss: 253MB	stability index
time: 0.017; rss: 253MB	intrinsic checking
time: 0.014; rss: 253MB	effect checking
time: 0.045; rss: 253MB	match checking
time: 0.048; rss: 254MB	liveness checking
time: 0.178; rss: 254MB	rvalue checking
time: 0.377; rss: 437MB	MIR dump
  time: 0.056; rss: 438MB	SimplifyCfg
  time: 0.072; rss: 439MB	QualifyAndPromoteConstants
  time: 0.098; rss: 439MB	TypeckMir
  time: 0.004; rss: 439MB	SimplifyBranches
  time: 0.030; rss: 439MB	SimplifyCfg
time: 0.262; rss: 439MB	MIR cleanup and validation
time: 0.483; rss: 439MB	borrow checking
time: 0.025; rss: 439MB	reachability checking
time: 0.039; rss: 439MB	death checking
time: 0.030; rss: 441MB	stability checking
time: 0.000; rss: 441MB	unused lib feature checking
time: 0.201; rss: 441MB	lint checking
time: 0.000; rss: 441MB	resolving dependency formats
  time: 0.003; rss: 441MB	NoLandingPads
  time: 0.026; rss: 441MB	SimplifyCfg
  time: 0.059; rss: 450MB	EraseRegions
  time: 0.011; rss: 450MB	AddCallGuards
  time: 0.267; rss: 464MB	ElaborateDrops
  time: 0.003; rss: 464MB	NoLandingPads
  time: 0.052; rss: 464MB	SimplifyCfg
  time: 0.028; rss: 464MB	InstCombine
  time: 0.012; rss: 464MB	Deaggregator
  time: 0.002; rss: 464MB	CopyPropagation
  time: 0.034; rss: 464MB	SimplifyLocals
  time: 0.010; rss: 464MB	AddCallGuards
  time: 0.003; rss: 464MB	PreTrans
time: 0.511; rss: 464MB	MIR optimisations
  time: 0.059; rss: 475MB	write metadata
  time: 0.392; rss: 485MB	translation item collection
  time: 0.055; rss: 493MB	codegen unit partitioning
  time: 0.049; rss: 743MB	internalize symbols
time: 4.469; rss: 743MB	translation
time: 0.000; rss: 743MB	assert dep graph
time: 0.000; rss: 743MB	serialize dep graph
  time: 0.539; rss: 420MB	llvm function passes [0]
  time: 0.252; rss: 429MB	llvm module passes [0]
  time: 10.508; rss: 428MB	codegen passes [0]
  time: 0.000; rss: 428MB	codegen passes [0]
time: 12.069; rss: 428MB	LLVM passes
time: 0.000; rss: 428MB	serialize work products
time: 0.336; rss: 105MB	linking
done
