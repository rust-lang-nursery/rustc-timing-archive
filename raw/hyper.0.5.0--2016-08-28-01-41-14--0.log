commit aa05a153630b64a6928128dae333714c0814c4ca
Merge: e17d6db 3e313d9
Author: bors <bors@rust-lang.org>
Date:   Sat Aug 27 21:20:28 2016 -0700

    Auto merge of #36027 - eddyb:unsized-prefix, r=nagisa
    
    rustc_trans: don't round up the DST prefix size to its alignment.
    
    Fixes #35815 by using `ty::layout` and `min_size` to compute the size of the DST prefix.
    `ty::layout::Struct::min_size` is not rounded up to alignment, which could be smaller for the DST field.
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling pkg-config v0.3.8
   Compiling winapi-build v0.1.1
   Compiling typeable v0.1.2
   Compiling libc v0.1.12
   Compiling traitobject v0.0.1
   Compiling unicase v0.1.0
   Compiling log v0.3.6
   Compiling httparse v0.1.6
   Compiling libc v0.2.15
   Compiling matches v0.1.2
   Compiling winapi v0.2.8
   Compiling rustc-serialize v0.3.19
   Compiling kernel32-sys v0.2.2
   Compiling lazy_static v0.1.16
   Compiling mime v0.0.11
   Compiling gcc v0.3.35
   Compiling bitflags v0.3.3
   Compiling rand v0.3.14
   Compiling num_cpus v0.2.13
   Compiling time v0.1.35
   Compiling openssl-sys v0.6.7
   Compiling openssl v0.6.7
   Compiling uuid v0.1.18
   Compiling url v0.2.38
   Compiling cookie v0.1.21
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.035; rss: 45MB	parsing
Lines of code:             9154
Pre-expansion node count:  44838
time: 0.003; rss: 46MB	configuration
time: 0.000; rss: 46MB	recursion limit
time: 0.000; rss: 46MB	crate injection
time: 0.000; rss: 46MB	plugin loading
time: 0.000; rss: 46MB	plugin registration
time: 0.102; rss: 70MB	expansion
time: 0.000; rss: 70MB	maybe building test harness
time: 0.005; rss: 70MB	assigning node ids
Post-expansion node count: 101581
time: 0.000; rss: 70MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 70MB	complete gated feature checking
time: 0.003; rss: 72MB	collecting defs
time: 0.013; rss: 80MB	external crate/lib resolution
time: 0.004; rss: 80MB	early lint checks
time: 0.001; rss: 80MB	AST validation
time: 0.025; rss: 85MB	name resolution
time: 0.017; rss: 91MB	lowering ast -> hir
time: 0.003; rss: 93MB	indexing hir
time: 0.001; rss: 93MB	attribute checking
time: 0.001; rss: 86MB	language item collection
time: 0.002; rss: 86MB	lifetime resolution
time: 0.000; rss: 86MB	looking for entry point
time: 0.000; rss: 86MB	looking for plugin registrar
time: 0.012; rss: 89MB	region resolution
time: 0.001; rss: 89MB	loop checking
time: 0.001; rss: 89MB	static item recursion checking
time: 0.013; rss: 89MB	compute_incremental_hashes_map
time: 0.000; rss: 89MB	load_dep_graph
time: 0.023; rss: 91MB	type collecting
time: 0.000; rss: 91MB	variance inference
time: 0.038; rss: 96MB	coherence checking
time: 0.059; rss: 97MB	wf checking
time: 0.028; rss: 98MB	item-types checking
time: 0.389; rss: 107MB	item-bodies checking
time: 0.000; rss: 107MB	drop-impl checking
time: 0.042; rss: 109MB	const checking
time: 0.008; rss: 109MB	privacy checking
time: 0.001; rss: 109MB	stability index
time: 0.006; rss: 109MB	intrinsic checking
time: 0.002; rss: 109MB	effect checking
time: 0.013; rss: 109MB	match checking
time: 0.004; rss: 109MB	liveness checking
time: 0.028; rss: 109MB	rvalue checking
time: 0.078; rss: 126MB	MIR dump
time: 0.042; rss: 127MB	MIR passes
time: 0.065; rss: 127MB	borrow checking
time: 0.003; rss: 127MB	reachability checking
time: 0.009; rss: 127MB	death checking
time: 0.005; rss: 128MB	stability checking
time: 0.000; rss: 128MB	unused lib feature checking
time: 0.042; rss: 128MB	lint checking
time: 0.000; rss: 128MB	resolving dependency formats
time: 0.083; rss: 130MB	Prepare MIR codegen passes
  time: 0.060; rss: 134MB	write metadata
  time: 0.144; rss: 140MB	translation item collection
  time: 0.020; rss: 142MB	codegen unit partitioning
  time: 0.034; rss: 205MB	internalize symbols
time: 1.579; rss: 196MB	translation
time: 0.000; rss: 196MB	assert dep graph
time: 0.000; rss: 196MB	serialize dep graph
  time: 0.102; rss: 151MB	llvm function passes [0]
  time: 0.048; rss: 153MB	llvm module passes [0]
  time: 1.837; rss: 156MB	codegen passes [0]
  time: 0.001; rss: 157MB	codegen passes [0]
time: 2.191; rss: 157MB	LLVM passes
time: 0.000; rss: 157MB	serialize work products
time: 0.159; rss: 92MB	linking
done
