commit 5938eba4e30b766751483e93776a87a4db1681f4
Merge: 02ea82d d53f82c
Author: bors <bors@rust-lang.org>
Date:   Wed Dec 7 07:15:31 2016 +0000

    Auto merge of #38149 - bluss:is-empty, r=alexcrichton
    
    Forward more ExactSizeIterator methods and `is_empty` edits
    
    - Forward ExactSizeIterator methods in more places, like `&mut I` and `Box<I>` iterator impls.
    - Improve `VecDeque::is_empty` itself (see commit 4)
    - All the collections iterators now have `len` or `is_empty` forwarded if doing so is a benefit. In the remaining cases, they already use a simple size hint (using something like a stored `usize` value), which is sufficient for the default implementation of len and is_empty.
rustc: ./html5ever-2016-08-25
cargo rustc  -- -Ztime-passes -Zinput-stats
time: 0.023; rss: 50MB	parsing
Lines of code:             8210
Pre-expansion node count:  52140
time: 0.000; rss: 50MB	recursion limit
time: 0.000; rss: 50MB	crate injection
time: 0.000; rss: 50MB	plugin loading
time: 0.000; rss: 50MB	plugin registration
time: 0.673; rss: 102MB	expansion
time: 0.000; rss: 102MB	maybe building test harness
time: 0.002; rss: 102MB	maybe creating a macro crate
Post-expansion node count: 163412
time: 0.000; rss: 102MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 102MB	complete gated feature checking
time: 0.008; rss: 102MB	early lint checks
time: 0.002; rss: 103MB	AST validation
time: 0.015; rss: 105MB	name resolution
time: 0.014; rss: 116MB	lowering ast -> hir
time: 0.003; rss: 118MB	indexing hir
time: 0.002; rss: 118MB	attribute checking
time: 0.001; rss: 100MB	language item collection
time: 0.002; rss: 100MB	lifetime resolution
time: 0.000; rss: 100MB	looking for entry point
time: 0.000; rss: 100MB	looking for plugin registrar
time: 0.014; rss: 104MB	region resolution
time: 0.001; rss: 104MB	loop checking
time: 0.001; rss: 104MB	static item recursion checking
time: 0.023; rss: 104MB	compute_incremental_hashes_map
time: 0.000; rss: 104MB	load_dep_graph
time: 0.001; rss: 104MB	stability index
time: 0.003; rss: 105MB	stability checking
time: 0.009; rss: 106MB	type collecting
time: 0.000; rss: 106MB	variance inference
time: 0.000; rss: 107MB	impl wf inference
time: 0.011; rss: 108MB	coherence checking
time: 0.019; rss: 109MB	wf checking
time: 0.255; rss: 116MB	item-types checking
time: 0.418; rss: 128MB	item-bodies checking
time: 0.000; rss: 128MB	drop-impl checking
time: 0.058; rss: 134MB	const checking
time: 0.006; rss: 134MB	privacy checking
time: 0.002; rss: 134MB	intrinsic checking
time: 0.002; rss: 134MB	effect checking
time: 0.014; rss: 134MB	match checking
time: 0.011; rss: 129MB	liveness checking
time: 0.021; rss: 129MB	rvalue checking
time: 0.101; rss: 170MB	MIR dump
  time: 0.008; rss: 170MB	SimplifyCfg
  time: 0.013; rss: 172MB	QualifyAndPromoteConstants
  time: 0.022; rss: 172MB	TypeckMir
  time: 0.000; rss: 172MB	SimplifyBranches
  time: 0.004; rss: 172MB	SimplifyCfg
time: 0.047; rss: 172MB	MIR cleanup and validation
time: 0.076; rss: 176MB	borrow checking
time: 0.002; rss: 176MB	reachability checking
time: 0.005; rss: 176MB	death checking
time: 0.000; rss: 176MB	unused lib feature checking
time: 0.051; rss: 176MB	lint checking
time: 0.000; rss: 176MB	resolving dependency formats
  time: 0.000; rss: 176MB	NoLandingPads
  time: 0.004; rss: 176MB	SimplifyCfg
  time: 0.009; rss: 176MB	EraseRegions
  time: 0.001; rss: 176MB	AddCallGuards
  time: 0.073; rss: 180MB	ElaborateDrops
  time: 0.000; rss: 180MB	NoLandingPads
  time: 0.006; rss: 178MB	SimplifyCfg
  time: 0.007; rss: 178MB	InstCombine
  time: 0.001; rss: 178MB	Deaggregator
  time: 0.000; rss: 178MB	CopyPropagation
  time: 0.007; rss: 176MB	SimplifyLocals
  time: 0.001; rss: 176MB	AddCallGuards
  time: 0.000; rss: 176MB	PreTrans
time: 0.109; rss: 176MB	MIR optimisations
  time: 0.011; rss: 177MB	write metadata
  time: 0.043; rss: 190MB	translation item collection
  time: 0.004; rss: 191MB	codegen unit partitioning
  time: 0.005; rss: 205MB	internalize symbols
time: 0.319; rss: 205MB	translation
time: 0.000; rss: 205MB	assert dep graph
time: 0.000; rss: 205MB	serialize dep graph
  time: 0.021; rss: 112MB	llvm function passes [0]
  time: 0.014; rss: 113MB	llvm module passes [0]
  time: 0.493; rss: 115MB	codegen passes [0]
  time: 0.000; rss: 115MB	codegen passes [0]
time: 0.568; rss: 115MB	LLVM passes
time: 0.000; rss: 115MB	serialize work products
time: 0.025; rss: 99MB	linking
done
