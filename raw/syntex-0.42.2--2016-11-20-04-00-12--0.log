commit e5ed0a5d78be74238af31631e7ecf311eb661586
Merge: 7c535c6 36f2af1
Author: bors <bors@rust-lang.org>
Date:   Sat Nov 19 23:39:25 2016 -0600

    Auto merge of #37842 - nikomatsakis:incremental-test, r=mw
    
    Add tests for incremental reuse scenarios
    
    These are microbenchmarks checking that we achieve the expected reuse in the scenarios covered by incremental beta.
    
    r? @michaelwoerister
rustc: ./syntex-0.42.2
cargo rustc -p syntex_syntax  -- -Ztime-passes -Zinput-stats
   Compiling libc v0.2.15
   Compiling bitflags v0.5.0
   Compiling winapi v0.2.8
   Compiling unicode-xid v0.0.3
   Compiling rustc-serialize v0.3.19
   Compiling winapi-build v0.1.1
   Compiling log v0.3.6
   Compiling kernel32-sys v0.2.2
   Compiling term v0.4.4
   Compiling syntex_pos v0.42.0
   Compiling syntex_errors v0.42.0
   Compiling syntex_syntax v0.42.0
time: 0.122; rss: 63MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 63MB	recursion limit
time: 0.000; rss: 63MB	crate injection
time: 0.000; rss: 63MB	plugin loading
time: 0.000; rss: 63MB	plugin registration
time: 0.322; rss: 136MB	expansion
time: 0.000; rss: 136MB	maybe building test harness
time: 0.006; rss: 136MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 136MB	checking for inline asm in case the target doesn't support it
time: 0.014; rss: 136MB	complete gated feature checking
time: 0.023; rss: 136MB	early lint checks
time: 0.007; rss: 136MB	AST validation
time: 0.105; rss: 151MB	name resolution
time: 0.088; rss: 176MB	lowering ast -> hir
time: 0.024; rss: 184MB	indexing hir
time: 0.006; rss: 184MB	attribute checking
time: 0.005; rss: 142MB	language item collection
time: 0.011; rss: 142MB	lifetime resolution
time: 0.000; rss: 142MB	looking for entry point
time: 0.000; rss: 142MB	looking for plugin registrar
time: 0.077; rss: 161MB	region resolution
time: 0.005; rss: 161MB	loop checking
time: 0.005; rss: 161MB	static item recursion checking
time: 0.334; rss: 162MB	compute_incremental_hashes_map
time: 0.000; rss: 162MB	load_dep_graph
time: 0.048; rss: 167MB	type collecting
time: 0.002; rss: 167MB	variance inference
time: 0.002; rss: 167MB	impl wf inference
time: 0.019; rss: 169MB	coherence checking
time: 0.090; rss: 171MB	wf checking
time: 0.181; rss: 173MB	item-types checking
time: 6.762; rss: 216MB	item-bodies checking
time: 0.000; rss: 216MB	drop-impl checking
time: 0.283; rss: 237MB	const checking
time: 0.051; rss: 237MB	privacy checking
time: 0.006; rss: 237MB	stability index
time: 0.018; rss: 237MB	intrinsic checking
time: 0.015; rss: 237MB	effect checking
time: 0.047; rss: 237MB	match checking
time: 0.081; rss: 230MB	liveness checking
time: 0.190; rss: 230MB	rvalue checking
time: 0.582; rss: 404MB	MIR dump
  time: 0.060; rss: 411MB	SimplifyCfg
  time: 0.076; rss: 411MB	QualifyAndPromoteConstants
  time: 0.109; rss: 411MB	TypeckMir
  time: 0.004; rss: 411MB	SimplifyBranches
  time: 0.031; rss: 411MB	SimplifyCfg
time: 0.281; rss: 411MB	MIR cleanup and validation
time: 0.574; rss: 414MB	borrow checking
time: 0.020; rss: 414MB	reachability checking
time: 0.041; rss: 414MB	death checking
time: 0.037; rss: 417MB	stability checking
time: 0.000; rss: 417MB	unused lib feature checking
time: 0.210; rss: 417MB	lint checking
time: 0.000; rss: 417MB	resolving dependency formats
  time: 0.003; rss: 417MB	NoLandingPads
  time: 0.028; rss: 417MB	SimplifyCfg
  time: 0.078; rss: 423MB	EraseRegions
  time: 0.011; rss: 423MB	AddCallGuards
  time: 0.306; rss: 443MB	ElaborateDrops
  time: 0.003; rss: 443MB	NoLandingPads
  time: 0.054; rss: 443MB	SimplifyCfg
  time: 0.030; rss: 443MB	InstCombine
  time: 0.013; rss: 443MB	Deaggregator
  time: 0.002; rss: 443MB	CopyPropagation
  time: 0.036; rss: 444MB	SimplifyLocals
  time: 0.010; rss: 444MB	AddCallGuards
  time: 0.003; rss: 444MB	PreTrans
time: 0.577; rss: 444MB	MIR optimisations
  time: 0.081; rss: 452MB	write metadata
  time: 0.427; rss: 464MB	translation item collection
  time: 0.071; rss: 474MB	codegen unit partitioning
  time: 0.048; rss: 717MB	internalize symbols
time: 5.064; rss: 717MB	translation
time: 0.000; rss: 717MB	assert dep graph
time: 0.000; rss: 717MB	serialize dep graph
  time: 0.537; rss: 409MB	llvm function passes [0]
  time: 0.258; rss: 418MB	llvm module passes [0]
  time: 10.417; rss: 417MB	codegen passes [0]
  time: 0.000; rss: 417MB	codegen passes [0]
time: 12.108; rss: 417MB	LLVM passes
time: 0.000; rss: 417MB	serialize work products
time: 0.348; rss: 98MB	linking
done
