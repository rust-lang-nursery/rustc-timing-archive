commit 16281888c0f319706cd07e3c569e0aeb5a66d3b6
Merge: 375fa6e 9e2bd92
Author: bors <bors@rust-lang.org>
Date:   Thu Jun 30 23:30:51 2016 -0700

    Auto merge of #34563 - alexcrichton:robust-mk, r=brson
    
    mk: Don't consider LLVM done until it's done
    
    Currently if an LLVM build is interrupted *after* it creates the llvm-config
    binary but before it's done it puts us in an inconsistent state where we think
    LLVM is compiled but it's not actually. This tweaks our logic to only consider
    LLVM done building once it's actually done building.
    
    This should hopefully alleviate problems on the bots where if we interrupt at
    the wrong time it doesn't corrupt the build directory.
rustc: ./regex.0.1.30
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling regex v0.1.30 (file:///root/benchmarks/regex.0.1.30)
time: 0.080; rss: 94MB	parsing
Lines of code:             8558
Pre-expansion node count:  58076
time: 0.009; rss: 94MB	configuration
time: 0.000; rss: 94MB	recursion limit
time: 0.000; rss: 94MB	crate injection
time: 0.000; rss: 94MB	plugin loading
time: 0.000; rss: 94MB	plugin registration
time: 0.043; rss: 129MB	expansion
time: 0.000; rss: 129MB	maybe building test harness
time: 0.000; rss: 129MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 129MB	complete gated feature checking
Post-expansion node count: 68148
time: 0.006; rss: 129MB	assigning node ids
time: 0.001; rss: 129MB	collecting defs
time: 0.001; rss: 129MB	external crate/lib resolution
time: 0.006; rss: 129MB	early lint checks
time: 0.001; rss: 129MB	AST validation
time: 0.007; rss: 131MB	name resolution
time: 0.009; rss: 140MB	lowering ast -> hir
time: 0.002; rss: 143MB	indexing hir
time: 0.001; rss: 143MB	attribute checking
time: 0.001; rss: 135MB	language item collection
time: 0.001; rss: 135MB	lifetime resolution
time: 0.000; rss: 135MB	looking for entry point
time: 0.000; rss: 135MB	looking for plugin registrar
time: 0.005; rss: 139MB	region resolution
time: 0.001; rss: 139MB	loop checking
time: 0.001; rss: 139MB	static item recursion checking
time: 0.000; rss: 139MB	load_dep_graph
time: 0.010; rss: 141MB	type collecting
time: 0.000; rss: 141MB	variance inference
time: 0.025; rss: 147MB	coherence checking
time: 0.014; rss: 147MB	wf checking
time: 0.327; rss: 153MB	item-types checking
time: 0.202; rss: 157MB	item-bodies checking
time: 0.000; rss: 157MB	drop-impl checking
time: 0.027; rss: 160MB	const checking
time: 0.004; rss: 160MB	privacy checking
time: 0.001; rss: 160MB	stability index
time: 0.002; rss: 160MB	intrinsic checking
time: 0.001; rss: 160MB	effect checking
time: 0.004; rss: 160MB	match checking
time: 0.002; rss: 160MB	liveness checking
time: 0.008; rss: 160MB	rvalue checking
time: 0.051; rss: 170MB	MIR dump
time: 0.021; rss: 170MB	MIR passes
time: 0.021; rss: 172MB	borrow checking
time: 0.000; rss: 172MB	reachability checking
time: 0.003; rss: 172MB	death checking
time: 0.002; rss: 172MB	stability checking
time: 0.000; rss: 172MB	unused lib feature checking
time: 0.027; rss: 172MB	lint checking
time: 0.000; rss: 172MB	resolving dependency formats
time: 0.018; rss: 174MB	Prepare MIR codegen passes
  time: 0.172; rss: 180MB	write metadata
  time: 0.056; rss: 182MB	translation item collection
  time: 0.001; rss: 182MB	codegen unit partitioning
time: 1.542; rss: 233MB	translation
time: 0.000; rss: 233MB	assert dep graph
time: 0.000; rss: 233MB	serialize dep graph
  time: 0.416; rss: 165MB	llvm function passes [0]
  time: 0.188; rss: 165MB	llvm module passes [0]
  time: 6.032; rss: 168MB	codegen passes [0]
  time: 0.002; rss: 149MB	codegen passes [0]
time: 7.183; rss: 147MB	LLVM passes
time: 0.068; rss: 146MB	linking
done
