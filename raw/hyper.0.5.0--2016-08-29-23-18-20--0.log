commit addb7537620feb228d6c9fe149b9c069d3686199
Merge: 77d2cd2 61a639e
Author: bors <bors@rust-lang.org>
Date:   Mon Aug 29 17:01:09 2016 -0700

    Auto merge of #36117 - eddyb:llvm-hoist-meta, r=alexcrichton
    
    llvm: backport "[SimplifyCFG] Hoisting invalidates metadata".
    
    Fixes #36023 by backporting @majnemer's LLVM patch fixing [the LLVM bug](https://llvm.org/bugs/show_bug.cgi?id=29163.) where SimplifyCFG hoisted instructions andkept their metadata (conditional `!nonnull` loads could kill a null check later if hoisted).
    
    r? @alexcrichton
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling rustc-serialize v0.3.19
   Compiling lazy_static v0.1.16
   Compiling pkg-config v0.3.8
   Compiling httparse v0.1.6
   Compiling log v0.3.6
   Compiling gcc v0.3.35
   Compiling unicase v0.1.0
   Compiling typeable v0.1.2
   Compiling libc v0.2.15
   Compiling winapi v0.2.8
   Compiling matches v0.1.2
   Compiling bitflags v0.3.3
   Compiling winapi-build v0.1.1
   Compiling libc v0.1.12
   Compiling mime v0.0.11
   Compiling traitobject v0.0.1
   Compiling kernel32-sys v0.2.2
   Compiling num_cpus v0.2.13
   Compiling time v0.1.35
   Compiling rand v0.3.14
   Compiling openssl-sys v0.6.7
   Compiling openssl v0.6.7
   Compiling uuid v0.1.18
   Compiling url v0.2.38
   Compiling cookie v0.1.21
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.026; rss: 50MB	parsing
Lines of code:             9154
Pre-expansion node count:  44838
time: 0.003; rss: 50MB	configuration
time: 0.000; rss: 50MB	recursion limit
time: 0.000; rss: 50MB	crate injection
time: 0.000; rss: 50MB	plugin loading
time: 0.000; rss: 50MB	plugin registration
time: 0.091; rss: 77MB	expansion
time: 0.000; rss: 77MB	maybe building test harness
time: 0.005; rss: 77MB	assigning node ids
Post-expansion node count: 101581
time: 0.000; rss: 77MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 77MB	complete gated feature checking
time: 0.003; rss: 77MB	collecting defs
time: 0.010; rss: 85MB	external crate/lib resolution
time: 0.003; rss: 85MB	early lint checks
time: 0.001; rss: 85MB	AST validation
time: 0.016; rss: 91MB	name resolution
time: 0.007; rss: 98MB	lowering ast -> hir
time: 0.002; rss: 100MB	indexing hir
time: 0.001; rss: 100MB	attribute checking
time: 0.001; rss: 93MB	language item collection
time: 0.002; rss: 93MB	lifetime resolution
time: 0.000; rss: 93MB	looking for entry point
time: 0.000; rss: 93MB	looking for plugin registrar
time: 0.006; rss: 97MB	region resolution
time: 0.001; rss: 97MB	loop checking
time: 0.001; rss: 97MB	static item recursion checking
time: 0.013; rss: 97MB	compute_incremental_hashes_map
time: 0.000; rss: 97MB	load_dep_graph
time: 0.023; rss: 99MB	type collecting
time: 0.000; rss: 99MB	variance inference
time: 0.035; rss: 104MB	coherence checking
time: 0.058; rss: 105MB	wf checking
time: 0.028; rss: 106MB	item-types checking
time: 0.367; rss: 116MB	item-bodies checking
time: 0.000; rss: 116MB	drop-impl checking
time: 0.037; rss: 118MB	const checking
time: 0.008; rss: 118MB	privacy checking
time: 0.001; rss: 118MB	stability index
time: 0.005; rss: 118MB	intrinsic checking
time: 0.002; rss: 118MB	effect checking
time: 0.012; rss: 118MB	match checking
time: 0.004; rss: 119MB	liveness checking
time: 0.027; rss: 119MB	rvalue checking
time: 0.057; rss: 137MB	MIR dump
time: 0.048; rss: 137MB	MIR passes
time: 0.063; rss: 137MB	borrow checking
time: 0.003; rss: 137MB	reachability checking
time: 0.005; rss: 137MB	death checking
time: 0.005; rss: 137MB	stability checking
time: 0.000; rss: 137MB	unused lib feature checking
time: 0.041; rss: 137MB	lint checking
time: 0.000; rss: 137MB	resolving dependency formats
time: 0.080; rss: 140MB	Prepare MIR codegen passes
  time: 0.054; rss: 144MB	write metadata
  time: 0.132; rss: 148MB	translation item collection
  time: 0.019; rss: 151MB	codegen unit partitioning
  time: 0.034; rss: 217MB	internalize symbols
time: 1.433; rss: 207MB	translation
time: 0.000; rss: 207MB	assert dep graph
time: 0.000; rss: 207MB	serialize dep graph
  time: 0.102; rss: 156MB	llvm function passes [0]
  time: 0.048; rss: 159MB	llvm module passes [0]
  time: 1.837; rss: 163MB	codegen passes [0]
  time: 0.001; rss: 164MB	codegen passes [0]
time: 2.156; rss: 164MB	LLVM passes
time: 0.000; rss: 164MB	serialize work products
time: 0.163; rss: 97MB	linking
done
