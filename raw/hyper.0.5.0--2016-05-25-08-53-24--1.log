commit 5229e0efb34f924346febcfe158973486dabdf83
Merge: 487de42 a619901
Author: bors <bors@rust-lang.org>
Date:   Wed May 25 02:33:29 2016 -0700

    Auto merge of #33602 - eddyb:no-trans--check, r=michaelwoerister
    
    Save metadata even with -Z no-trans (e.g. for multi-crate cargo check).
    
    Removes the item symbol map in metadata, as we can now generate them in a deterministic manner.
    The `-Z no-trans` change lets the LLVM passes and linking run, but with just metadata and no code.
    It fails while trying to link a binary because there's no `main` function, which is correct but not good UX.
    
    There's also no way to easily throw away all of the artifacts to rebuild with actual code generation.
    We might want `cargo check` to do that using cargo-internal information and then it would just work.
    
    cc @alexcrichton @nikomatsakis @Aatch @michaelwoerister
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.031; rss: 52MB	parsing
Lines of code:             9154
Pre-expansion node count:  45851
time: 0.008; rss: 56MB	configuration 1
time: 0.000; rss: 56MB	recursion limit
time: 0.000; rss: 56MB	crate injection
time: 0.020; rss: 93MB	macro loading
time: 0.000; rss: 93MB	plugin loading
time: 0.000; rss: 93MB	plugin registration
time: 0.187; rss: 99MB	expansion
time: 0.029; rss: 99MB	configuration 2
time: 0.000; rss: 99MB	gated configuration checking
time: 0.011; rss: 99MB	maybe building test harness
time: 0.008; rss: 99MB	prelude injection
time: 0.001; rss: 99MB	checking that all macro invocations are gone
time: 0.000; rss: 99MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 99MB	complete gated feature checking
Post-expansion node count: 103616
time: 0.008; rss: 99MB	assigning node ids
time: 0.003; rss: 101MB	collecting defs
time: 0.010; rss: 112MB	external crate/lib resolution
time: 0.006; rss: 112MB	early lint checks
time: 0.022; rss: 119MB	name resolution
time: 0.010; rss: 125MB	lowering ast -> hir
time: 0.002; rss: 127MB	indexing hir
time: 0.001; rss: 127MB	attribute checking
time: 0.001; rss: 118MB	language item collection
time: 0.002; rss: 118MB	lifetime resolution
time: 0.000; rss: 118MB	looking for entry point
time: 0.000; rss: 118MB	looking for plugin registrar
time: 0.006; rss: 120MB	region resolution
time: 0.001; rss: 120MB	loop checking
time: 0.001; rss: 120MB	static item recursion checking
time: 0.000; rss: 120MB	load_dep_graph
time: 0.017; rss: 124MB	type collecting
time: 0.000; rss: 124MB	variance inference
time: 0.043; rss: 130MB	coherence checking
time: 0.089; rss: 133MB	wf checking
time: 0.034; rss: 133MB	item-types checking
time: 0.501; rss: 143MB	item-bodies checking
time: 0.000; rss: 143MB	drop-impl checking
time: 0.042; rss: 145MB	const checking
time: 0.007; rss: 145MB	privacy checking
time: 0.001; rss: 145MB	stability index
time: 0.005; rss: 145MB	intrinsic checking
time: 0.002; rss: 145MB	effect checking
time: 0.014; rss: 145MB	match checking
time: 0.005; rss: 145MB	liveness checking
time: 0.030; rss: 145MB	rvalue checking
time: 0.060; rss: 152MB	MIR dump
time: 0.039; rss: 152MB	MIR passes
time: 0.069; rss: 152MB	borrow checking
time: 0.003; rss: 152MB	reachability checking
time: 0.006; rss: 154MB	death checking
time: 0.006; rss: 154MB	stability checking
time: 0.000; rss: 154MB	unused lib feature checking
time: 0.050; rss: 154MB	lint checking
time: 0.000; rss: 154MB	resolving dependency formats
time: 0.011; rss: 154MB	Prepare MIR codegen passes
  time: 0.128; rss: 162MB	write metadata
  time: 0.276; rss: 166MB	translation item collection
  time: 0.008; rss: 168MB	codegen unit partitioning
time: 1.732; rss: 286MB	translation
time: 0.001; rss: 286MB	assert dep graph
time: 0.000; rss: 286MB	serialize dep graph
  time: 0.095; rss: 179MB	llvm function passes [0]
  time: 0.049; rss: 181MB	llvm module passes [0]
  time: 1.616; rss: 179MB	codegen passes [0]
  time: 0.001; rss: 133MB	codegen passes [0]
time: 1.971; rss: 133MB	LLVM passes
time: 0.175; rss: 130MB	linking
done
