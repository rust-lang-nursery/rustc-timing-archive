commit f8614c397313db00e4b4626d1ba77ae00dbf7549
Merge: 9a86579 5377b5e
Author: bors <bors@rust-lang.org>
Date:   Sat Nov 26 18:47:06 2016 -0600

    Auto merge of #36340 - sfackler:slice-get-slice, r=alexcrichton
    
    Implement RFC 1679
    
    cc #35729
    
    r? @alexcrichton
rustc: ./piston-image-0.10.3
cargo rustc  -- -Ztime-passes -Zinput-stats
   Compiling image v0.10.3 (file:///root/benchmarks/piston-image-0.10.3)
time: 0.037; rss: 54MB	parsing
Lines of code:             12000
Pre-expansion node count:  90152
time: 0.000; rss: 54MB	recursion limit
time: 0.000; rss: 54MB	crate injection
time: 0.000; rss: 54MB	plugin loading
time: 0.000; rss: 54MB	plugin registration
time: 0.071; rss: 95MB	expansion
time: 0.000; rss: 95MB	maybe building test harness
time: 0.002; rss: 95MB	maybe creating a macro crate
Post-expansion node count: 148881
time: 0.000; rss: 95MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 95MB	complete gated feature checking
time: 0.006; rss: 95MB	early lint checks
time: 0.002; rss: 95MB	AST validation
time: 0.018; rss: 97MB	name resolution
time: 0.013; rss: 106MB	lowering ast -> hir
time: 0.003; rss: 110MB	indexing hir
time: 0.002; rss: 110MB	attribute checking
time: 0.001; rss: 100MB	language item collection
time: 0.002; rss: 100MB	lifetime resolution
time: 0.000; rss: 100MB	looking for entry point
time: 0.000; rss: 100MB	looking for plugin registrar
time: 0.010; rss: 105MB	region resolution
time: 0.002; rss: 105MB	loop checking
time: 0.001; rss: 105MB	static item recursion checking
time: 0.052; rss: 104MB	compute_incremental_hashes_map
time: 0.000; rss: 104MB	load_dep_graph
time: 0.017; rss: 107MB	type collecting
time: 0.000; rss: 107MB	variance inference
time: 0.000; rss: 107MB	impl wf inference
time: 0.014; rss: 109MB	coherence checking
time: 0.066; rss: 110MB	wf checking
time: 0.134; rss: 112MB	item-types checking
time: 0.762; rss: 126MB	item-bodies checking
time: 0.000; rss: 126MB	drop-impl checking
time: 0.050; rss: 128MB	const checking
time: 0.009; rss: 128MB	privacy checking
time: 0.001; rss: 128MB	stability index
time: 0.006; rss: 128MB	intrinsic checking
time: 0.004; rss: 128MB	effect checking
time: 0.014; rss: 128MB	match checking
time: 0.010; rss: 129MB	liveness checking
time: 0.039; rss: 129MB	rvalue checking
time: 0.089; rss: 169MB	MIR dump
  time: 0.012; rss: 170MB	SimplifyCfg
  time: 0.021; rss: 170MB	QualifyAndPromoteConstants
  time: 0.024; rss: 170MB	TypeckMir
  time: 0.001; rss: 170MB	SimplifyBranches
  time: 0.005; rss: 170MB	SimplifyCfg
time: 0.062; rss: 170MB	MIR cleanup and validation
time: 0.108; rss: 170MB	borrow checking
time: 0.004; rss: 170MB	reachability checking
time: 0.008; rss: 170MB	death checking
time: 0.007; rss: 170MB	stability checking
time: 0.000; rss: 170MB	unused lib feature checking
time: 0.063; rss: 170MB	lint checking
time: 0.000; rss: 170MB	resolving dependency formats
  time: 0.001; rss: 170MB	NoLandingPads
  time: 0.005; rss: 170MB	SimplifyCfg
  time: 0.011; rss: 172MB	EraseRegions
  time: 0.002; rss: 172MB	AddCallGuards
  time: 0.042; rss: 175MB	ElaborateDrops
  time: 0.000; rss: 175MB	NoLandingPads
  time: 0.009; rss: 175MB	SimplifyCfg
  time: 0.006; rss: 175MB	InstCombine
  time: 0.002; rss: 175MB	Deaggregator
  time: 0.000; rss: 175MB	CopyPropagation
  time: 0.007; rss: 175MB	SimplifyLocals
  time: 0.002; rss: 175MB	AddCallGuards
  time: 0.000; rss: 175MB	PreTrans
time: 0.086; rss: 175MB	MIR optimisations
  time: 0.015; rss: 177MB	write metadata
  time: 0.382; rss: 188MB	translation item collection
  time: 0.020; rss: 193MB	codegen unit partitioning
  time: 0.018; rss: 315MB	internalize symbols
time: 2.257; rss: 315MB	translation
time: 0.000; rss: 315MB	assert dep graph
time: 0.000; rss: 315MB	serialize dep graph
  time: 0.207; rss: 231MB	llvm function passes [0]
  time: 0.090; rss: 234MB	llvm module passes [0]
  time: 4.216; rss: 237MB	codegen passes [0]
  time: 0.000; rss: 237MB	codegen passes [0]
time: 4.812; rss: 231MB	LLVM passes
time: 0.000; rss: 231MB	serialize work products
time: 0.128; rss: 104MB	linking
done
