commit 4bc929013396eede8a22a3e7932fb3a63d2a11da
Merge: fb12219 84415ea
Author: bors <bors@rust-lang.org>
Date:   Sun Nov 20 13:50:47 2016 -0600

    Auto merge of #37862 - shepmaster:llvm-4.0-always-set-eh-personality, r=eddyb
    
    [LLVM 4.0] Set EH personality when resuming stack unwinding
    
    To resume stack unwinding, the LLVM `resume` instruction must be used.
    
    In order to use this instruction, the calling function must have an
    exception handling personality set.
    
    LLVM 4.0 adds a new IR validation check to ensure a personality is
    always set in these cases.
    
    This was introduced in [r277360](https://reviews.llvm.org/rL277360).
rustc: ./html5ever-2016-08-25
cargo rustc  -- -Ztime-passes -Zinput-stats
   Compiling rustc-serialize v0.3.19
   Compiling log v0.3.6
   Compiling void v1.0.2
   Compiling encoding_index_tests v0.1.4
   Compiling mac v0.0.2
   Compiling matches v0.1.2
   Compiling libc v0.2.16
   Compiling lazy_static v0.2.1
   Compiling unreachable v0.1.1
   Compiling encoding-index-korean v1.20141219.5
   Compiling encoding-index-tradchinese v1.20141219.5
   Compiling encoding-index-singlebyte v1.20141219.5
   Compiling encoding-index-simpchinese v1.20141219.5
   Compiling debug_unreachable v0.1.1
   Compiling encoding-index-japanese v1.20141219.5
   Compiling futf v0.1.2
   Compiling utf-8 v0.6.0
   Compiling phf_shared v0.7.16
   Compiling serde v0.8.9
   Compiling rand v0.3.14
   Compiling encoding v0.2.33
   Compiling phf v0.7.16
   Compiling phf_generator v0.7.16
   Compiling string_cache v0.2.29
   Compiling phf_codegen v0.7.16
   Compiling tendril v0.2.3
   Compiling html5ever v0.5.4 (file:///root/benchmarks/html5ever-2016-08-25)
time: 0.023; rss: 47MB	parsing
Lines of code:             8210
Pre-expansion node count:  52140
time: 0.000; rss: 47MB	recursion limit
time: 0.000; rss: 47MB	crate injection
time: 0.000; rss: 47MB	plugin loading
time: 0.000; rss: 47MB	plugin registration
time: 0.635; rss: 103MB	expansion
time: 0.000; rss: 103MB	maybe building test harness
time: 0.002; rss: 103MB	maybe creating a macro crate
Post-expansion node count: 163412
time: 0.000; rss: 103MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 103MB	complete gated feature checking
time: 0.008; rss: 103MB	early lint checks
time: 0.002; rss: 103MB	AST validation
time: 0.015; rss: 105MB	name resolution
time: 0.012; rss: 113MB	lowering ast -> hir
time: 0.003; rss: 117MB	indexing hir
time: 0.002; rss: 117MB	attribute checking
time: 0.001; rss: 97MB	language item collection
time: 0.002; rss: 97MB	lifetime resolution
time: 0.000; rss: 97MB	looking for entry point
time: 0.000; rss: 97MB	looking for plugin registrar
time: 0.011; rss: 105MB	region resolution
time: 0.001; rss: 105MB	loop checking
time: 0.001; rss: 105MB	static item recursion checking
time: 0.020; rss: 106MB	compute_incremental_hashes_map
time: 0.000; rss: 106MB	load_dep_graph
time: 0.010; rss: 107MB	type collecting
time: 0.000; rss: 107MB	variance inference
time: 0.000; rss: 107MB	impl wf inference
time: 0.011; rss: 109MB	coherence checking
time: 0.020; rss: 109MB	wf checking
time: 0.264; rss: 120MB	item-types checking
time: 0.453; rss: 129MB	item-bodies checking
time: 0.000; rss: 129MB	drop-impl checking
time: 0.059; rss: 136MB	const checking
time: 0.006; rss: 136MB	privacy checking
time: 0.001; rss: 136MB	stability index
time: 0.002; rss: 136MB	intrinsic checking
time: 0.002; rss: 136MB	effect checking
time: 0.014; rss: 136MB	match checking
time: 0.011; rss: 131MB	liveness checking
time: 0.021; rss: 131MB	rvalue checking
time: 0.103; rss: 169MB	MIR dump
  time: 0.008; rss: 170MB	SimplifyCfg
  time: 0.013; rss: 172MB	QualifyAndPromoteConstants
  time: 0.022; rss: 172MB	TypeckMir
  time: 0.000; rss: 172MB	SimplifyBranches
  time: 0.004; rss: 172MB	SimplifyCfg
time: 0.048; rss: 172MB	MIR cleanup and validation
time: 0.079; rss: 180MB	borrow checking
time: 0.002; rss: 180MB	reachability checking
time: 0.005; rss: 180MB	death checking
time: 0.006; rss: 180MB	stability checking
time: 0.000; rss: 180MB	unused lib feature checking
time: 0.056; rss: 180MB	lint checking
time: 0.000; rss: 180MB	resolving dependency formats
  time: 0.000; rss: 180MB	NoLandingPads
  time: 0.004; rss: 180MB	SimplifyCfg
  time: 0.009; rss: 180MB	EraseRegions
  time: 0.001; rss: 180MB	AddCallGuards
  time: 0.073; rss: 182MB	ElaborateDrops
  time: 0.000; rss: 182MB	NoLandingPads
  time: 0.006; rss: 180MB	SimplifyCfg
  time: 0.007; rss: 180MB	InstCombine
  time: 0.001; rss: 180MB	Deaggregator
  time: 0.000; rss: 180MB	CopyPropagation
  time: 0.007; rss: 178MB	SimplifyLocals
  time: 0.001; rss: 178MB	AddCallGuards
  time: 0.000; rss: 178MB	PreTrans
time: 0.110; rss: 178MB	MIR optimisations
  time: 0.011; rss: 179MB	write metadata
  time: 0.041; rss: 181MB	translation item collection
  time: 0.005; rss: 181MB	codegen unit partitioning
  time: 0.005; rss: 194MB	internalize symbols
time: 0.269; rss: 194MB	translation
time: 0.000; rss: 194MB	assert dep graph
time: 0.000; rss: 194MB	serialize dep graph
  time: 0.020; rss: 104MB	llvm function passes [0]
  time: 0.012; rss: 105MB	llvm module passes [0]
  time: 0.472; rss: 109MB	codegen passes [0]
  time: 0.000; rss: 109MB	codegen passes [0]
time: 0.544; rss: 109MB	LLVM passes
time: 0.000; rss: 109MB	serialize work products
time: 0.025; rss: 91MB	linking
done
