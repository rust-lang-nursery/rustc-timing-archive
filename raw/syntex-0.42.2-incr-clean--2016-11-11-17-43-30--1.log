commit 5293b913c457ada5e5790ec3bcecbb373c8006e8
Merge: ba2e892 a820d99
Author: bors <bors@rust-lang.org>
Date:   Fri Nov 11 09:04:17 2016 -0800

    Auto merge of #37456 - estebank:unused-imports-verbosity, r=jonathandturner
    
    Group unused import warnings per import list
    
    Given a file
    
    ``` rust
    use std::collections::{BinaryHeap, BTreeMap, BTreeSet};
    
    fn main() {}
    ```
    
    Show a single warning, instead of three for each unused import:
    
    ``` nocode
    warning: unused imports, #[warn(unused_imports)] on by default
     --> file2.rs:1:24
      |
    1 | use std::collections::{BinaryHeap, BTreeMap, BTreeSet};
      |                        ^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^
    ```
    
    Include support for lints pointing at `MultilineSpan`s, instead of just
    `Span`s.
    
    Fixes #16132.
rustc: ./syntex-0.42.2-incr-clean
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
   Compiling syntex_syntax v0.42.0
time: 0.093; rss: 71MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 71MB	recursion limit
time: 0.000; rss: 71MB	crate injection
time: 0.000; rss: 71MB	plugin loading
time: 0.000; rss: 71MB	plugin registration
time: 0.232; rss: 144MB	expansion
time: 0.000; rss: 144MB	maybe building test harness
time: 0.006; rss: 144MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 144MB	checking for inline asm in case the target doesn't support it
time: 0.013; rss: 144MB	complete gated feature checking
time: 0.023; rss: 144MB	early lint checks
time: 0.007; rss: 144MB	AST validation
time: 0.076; rss: 159MB	name resolution
time: 0.044; rss: 184MB	lowering ast -> hir
time: 0.008; rss: 195MB	indexing hir
time: 0.006; rss: 195MB	attribute checking
time: 0.005; rss: 151MB	language item collection
time: 0.010; rss: 151MB	lifetime resolution
time: 0.000; rss: 151MB	looking for entry point
time: 0.000; rss: 151MB	looking for plugin registrar
time: 0.041; rss: 171MB	region resolution
time: 0.005; rss: 171MB	loop checking
time: 0.005; rss: 171MB	static item recursion checking
time: 0.327; rss: 171MB	compute_incremental_hashes_map
time: 0.000; rss: 171MB	load_dep_graph
time: 0.040; rss: 170MB	type collecting
time: 0.001; rss: 171MB	variance inference
time: 0.018; rss: 174MB	coherence checking
time: 0.092; rss: 176MB	wf checking
time: 0.189; rss: 186MB	item-types checking
time: 3.354; rss: 236MB	item-bodies checking
time: 0.000; rss: 236MB	drop-impl checking
time: 0.216; rss: 256MB	const checking
time: 0.046; rss: 256MB	privacy checking
time: 0.006; rss: 256MB	stability index
time: 0.018; rss: 256MB	intrinsic checking
time: 0.014; rss: 256MB	effect checking
time: 0.045; rss: 256MB	match checking
time: 0.049; rss: 258MB	liveness checking
time: 0.180; rss: 258MB	rvalue checking
time: 0.386; rss: 438MB	MIR dump
  time: 0.056; rss: 440MB	SimplifyCfg
  time: 0.073; rss: 440MB	QualifyAndPromoteConstants
  time: 0.099; rss: 440MB	TypeckMir
  time: 0.004; rss: 440MB	SimplifyBranches
  time: 0.030; rss: 440MB	SimplifyCfg
time: 0.263; rss: 440MB	MIR cleanup and validation
time: 0.488; rss: 440MB	borrow checking
time: 0.025; rss: 440MB	reachability checking
time: 0.040; rss: 440MB	death checking
time: 0.031; rss: 442MB	stability checking
time: 0.000; rss: 442MB	unused lib feature checking
time: 0.197; rss: 442MB	lint checking
time: 0.000; rss: 442MB	resolving dependency formats
  time: 0.003; rss: 442MB	NoLandingPads
  time: 0.026; rss: 442MB	SimplifyCfg
  time: 0.060; rss: 451MB	EraseRegions
  time: 0.011; rss: 451MB	AddCallGuards
  time: 0.267; rss: 469MB	ElaborateDrops
  time: 0.003; rss: 469MB	NoLandingPads
  time: 0.052; rss: 469MB	SimplifyCfg
  time: 0.029; rss: 469MB	InstCombine
  time: 0.012; rss: 469MB	Deaggregator
  time: 0.002; rss: 469MB	CopyPropagation
  time: 0.034; rss: 469MB	SimplifyLocals
  time: 0.010; rss: 469MB	AddCallGuards
  time: 0.003; rss: 469MB	PreTrans
time: 0.512; rss: 469MB	MIR optimisations
  time: 0.061; rss: 477MB	write metadata
  time: 0.405; rss: 487MB	translation item collection
  time: 0.055; rss: 496MB	codegen unit partitioning
  time: 0.049; rss: 744MB	internalize symbols
time: 4.574; rss: 744MB	translation
time: 0.000; rss: 744MB	assert dep graph
time: 0.000; rss: 744MB	serialize dep graph
incremental: re-using 0 out of 1 modules
  time: 0.528; rss: 420MB	llvm function passes [0]
  time: 0.255; rss: 430MB	llvm module passes [0]
  time: 10.415; rss: 429MB	codegen passes [0]
  time: 0.000; rss: 429MB	codegen passes [0]
time: 11.966; rss: 429MB	LLVM passes
time: 0.000; rss: 429MB	serialize work products
time: 0.338; rss: 105MB	linking
done
