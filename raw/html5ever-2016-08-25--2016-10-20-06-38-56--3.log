commit eb38d426c41aa8487e8cb8a9dafbfcf3528201f9
Merge: dfd98eb cde42cd
Author: bors <bors@rust-lang.org>
Date:   Wed Oct 19 22:05:13 2016 -0700

    Auto merge of #36973 - nnethercote:dep_graph, r=nikomatsakis
    
    Don't enqueue onto a disabled dep_graph.
    
    This commit guards all calls to `DepGraphThreadData::enqueue` with a
    check to make sure it is enabled. This avoids some useless allocation
    and vector manipulations when it is disabled (i.e. when incremental
    compilation is off) which improves speed by 1--2% on most of the
    rustc-benchmarks.
    
    This commit has an observable functional change: when the dep_graph is
    disabled its `shadow_graph` will no longer receive messages. This should
    be ok because these message are only used when debug assertions are
    enabled.
    
    r? @nikomatsakis
rustc: ./html5ever-2016-08-25
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling html5ever v0.5.4 (file:///root/benchmarks/html5ever-2016-08-25)
time: 0.027; rss: 51MB	parsing
Lines of code:             8210
Pre-expansion node count:  52238
time: 0.000; rss: 51MB	recursion limit
time: 0.000; rss: 51MB	crate injection
time: 0.000; rss: 51MB	plugin loading
time: 0.000; rss: 51MB	plugin registration
time: 0.739; rss: 106MB	expansion
time: 0.000; rss: 106MB	maybe building test harness
time: 0.002; rss: 106MB	maybe creating a macro crate
Post-expansion node count: 163524
time: 0.000; rss: 106MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 106MB	complete gated feature checking
time: 0.009; rss: 106MB	early lint checks
time: 0.002; rss: 106MB	AST validation
time: 0.018; rss: 109MB	name resolution
time: 0.015; rss: 125MB	lowering ast -> hir
time: 0.004; rss: 129MB	indexing hir
time: 0.002; rss: 129MB	attribute checking
time: 0.002; rss: 107MB	language item collection
time: 0.003; rss: 107MB	lifetime resolution
time: 0.000; rss: 107MB	looking for entry point
time: 0.000; rss: 107MB	looking for plugin registrar
time: 0.015; rss: 113MB	region resolution
time: 0.002; rss: 113MB	loop checking
time: 0.002; rss: 113MB	static item recursion checking
time: 0.027; rss: 114MB	compute_incremental_hashes_map
time: 0.000; rss: 114MB	load_dep_graph
time: 0.009; rss: 116MB	type collecting
time: 0.000; rss: 116MB	variance inference
time: 0.022; rss: 118MB	coherence checking
time: 0.023; rss: 118MB	wf checking
time: 0.341; rss: 130MB	item-types checking
time: 0.484; rss: 141MB	item-bodies checking
time: 0.000; rss: 141MB	drop-impl checking
time: 0.070; rss: 144MB	const checking
time: 0.009; rss: 144MB	privacy checking
time: 0.002; rss: 144MB	stability index
time: 0.003; rss: 144MB	intrinsic checking
time: 0.004; rss: 144MB	effect checking
time: 0.023; rss: 144MB	match checking
time: 0.013; rss: 137MB	liveness checking
time: 0.026; rss: 137MB	rvalue checking
time: 0.118; rss: 187MB	MIR dump
  time: 0.009; rss: 184MB	SimplifyCfg
  time: 0.014; rss: 184MB	QualifyAndPromoteConstants
  time: 0.025; rss: 184MB	TypeckMir
  time: 0.000; rss: 184MB	SimplifyBranches
  time: 0.004; rss: 184MB	SimplifyCfg
time: 0.052; rss: 184MB	MIR passes
time: 0.088; rss: 189MB	borrow checking
time: 0.003; rss: 189MB	reachability checking
time: 0.007; rss: 189MB	death checking
time: 0.009; rss: 189MB	stability checking
time: 0.000; rss: 189MB	unused lib feature checking
time: 0.062; rss: 189MB	lint checking
time: 0.000; rss: 189MB	resolving dependency formats
  time: 0.000; rss: 189MB	NoLandingPads
  time: 0.004; rss: 189MB	SimplifyCfg
  time: 0.009; rss: 189MB	EraseRegions
  time: 0.001; rss: 189MB	AddCallGuards
  time: 0.074; rss: 190MB	ElaborateDrops
  time: 0.000; rss: 190MB	NoLandingPads
  time: 0.006; rss: 190MB	SimplifyCfg
  time: 0.008; rss: 188MB	InstCombine
  time: 0.001; rss: 188MB	Deaggregator
  time: 0.000; rss: 188MB	CopyPropagation
  time: 0.001; rss: 188MB	AddCallGuards
  time: 0.000; rss: 188MB	PreTrans
time: 0.105; rss: 188MB	Prepare MIR codegen passes
  time: 0.011; rss: 188MB	write metadata
  time: 0.045; rss: 190MB	translation item collection
  time: 0.005; rss: 190MB	codegen unit partitioning
  time: 0.005; rss: 205MB	internalize symbols
time: 0.309; rss: 175MB	translation
time: 0.000; rss: 175MB	assert dep graph
time: 0.000; rss: 175MB	serialize dep graph
  time: 0.020; rss: 105MB	llvm function passes [0]
  time: 0.012; rss: 106MB	llvm module passes [0]
  time: 0.456; rss: 109MB	codegen passes [0]
  time: 0.000; rss: 109MB	codegen passes [0]
time: 0.529; rss: 109MB	LLVM passes
time: 0.000; rss: 109MB	serialize work products
time: 0.057; rss: 91MB	linking
done
