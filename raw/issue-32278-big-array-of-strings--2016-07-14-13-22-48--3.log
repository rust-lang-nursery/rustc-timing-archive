commit fe5c439f695fd72b7be0d0f28ee8397b3256630c
Merge: 6998018 3205c51
Author: bors <bors@rust-lang.org>
Date:   Thu Jul 14 06:37:30 2016 -0700

    Auto merge of #34783 - Dridi:cdylib_usage, r=alexcrichton
    
    Mention the crate type cdylib in rustc's usage
    
    Hello,
    
    I just tried to build a `cdylib` with the latest stable release, I've been passively waiting for this for quite some time now. Tested successfully on my machine, although it doesn't appear in `rustc`'s usage it seems to work like a charm so far. :grinning:
    
    Thanks!
rustc: ./issue-32278-big-array-of-strings
/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc big-array-of-strings.rs -Ztime-passes -Zinput-stats
time: 0.163; rss: 103MB	parsing
Lines of code:             65577
Pre-expansion node count:  65552
time: 0.013; rss: 103MB	configuration
time: 0.000; rss: 103MB	recursion limit
time: 0.000; rss: 103MB	crate injection
time: 0.000; rss: 103MB	plugin loading
time: 0.000; rss: 103MB	plugin registration
time: 0.030; rss: 139MB	expansion
time: 0.000; rss: 139MB	maybe building test harness
time: 0.000; rss: 139MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 139MB	complete gated feature checking
Post-expansion node count: 65565
time: 0.006; rss: 139MB	assigning node ids
time: 0.001; rss: 139MB	collecting defs
time: 0.003; rss: 139MB	external crate/lib resolution
time: 0.008; rss: 139MB	early lint checks
time: 0.001; rss: 139MB	AST validation
time: 0.002; rss: 139MB	name resolution
time: 0.008; rss: 157MB	lowering ast -> hir
time: 0.002; rss: 162MB	indexing hir
time: 0.001; rss: 162MB	attribute checking
time: 0.001; rss: 152MB	language item collection
time: 0.001; rss: 152MB	lifetime resolution
time: 0.000; rss: 152MB	looking for entry point
time: 0.000; rss: 152MB	looking for plugin registrar
time: 0.009; rss: 158MB	region resolution
time: 0.001; rss: 158MB	loop checking
time: 0.002; rss: 158MB	static item recursion checking
time: 0.000; rss: 158MB	load_dep_graph
time: 0.000; rss: 158MB	type collecting
time: 0.000; rss: 158MB	variance inference
time: 0.005; rss: 161MB	coherence checking
time: 0.001; rss: 161MB	wf checking
time: 0.987; rss: 176MB	item-types checking
time: 0.000; rss: 176MB	item-bodies checking
time: 0.000; rss: 176MB	drop-impl checking
time: 0.019; rss: 179MB	const checking
time: 0.002; rss: 179MB	privacy checking
time: 0.001; rss: 179MB	stability index
time: 0.001; rss: 179MB	intrinsic checking
time: 0.000; rss: 179MB	effect checking
time: 0.000; rss: 179MB	match checking
time: 0.001; rss: 179MB	liveness checking
time: 0.000; rss: 179MB	rvalue checking
time: 0.053; rss: 184MB	MIR dump
time: 0.002; rss: 184MB	MIR passes
time: 0.001; rss: 184MB	borrow checking
time: 0.000; rss: 184MB	reachability checking
time: 0.001; rss: 184MB	death checking
time: 0.001; rss: 184MB	stability checking
time: 0.000; rss: 184MB	unused lib feature checking
time: 0.030; rss: 185MB	lint checking
time: 0.001; rss: 185MB	resolving dependency formats
time: 0.001; rss: 185MB	Prepare MIR codegen passes
  time: 0.000; rss: 186MB	write metadata
  time: 0.001; rss: 186MB	translation item collection
  time: 0.000; rss: 186MB	codegen unit partitioning
time: 0.825; rss: 195MB	translation
time: 0.000; rss: 195MB	assert dep graph
time: 0.000; rss: 195MB	serialize dep graph
  time: 0.041; rss: 144MB	llvm function passes [0]
  time: 0.001; rss: 144MB	llvm module passes [0]
  time: 1.497; rss: 146MB	codegen passes [0]
  time: 0.001; rss: 146MB	codegen passes [0]
time: 1.546; rss: 146MB	LLVM passes
  time: 0.194; rss: 133MB	running linker
time: 0.195; rss: 133MB	linking
done
