commit 91f057de35066d0a34102bd0673b56684509b93d
Merge: 9cc430d e05e74a
Author: bors <bors@rust-lang.org>
Date:   Sun Sep 4 14:03:01 2016 -0700

    Auto merge of #36203 - petrochenkov:uvsdot, r=nrc
    
    Replace `_, _` with `..` in patterns
    
    This is how https://github.com/rust-lang/rust/issues/33627 looks in action.
    
    Looks especially nice in leftmost/rightmost positions `(first, ..)`/`(.., last)`.
    I haven't touched libsyntax intentionally because the feature is still unstable.
rustc: ./inflate-0.1.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling inflate v0.1.0 (file:///root/benchmarks/inflate-0.1.0)
time: 0.004; rss: 45MB	parsing
Lines of code:             956
Pre-expansion node count:  4740
time: 0.000; rss: 45MB	configuration
time: 0.000; rss: 45MB	recursion limit
time: 0.000; rss: 45MB	crate injection
time: 0.000; rss: 45MB	plugin loading
time: 0.000; rss: 45MB	plugin registration
time: 0.074; rss: 72MB	expansion
time: 0.000; rss: 72MB	maybe building test harness
time: 0.000; rss: 72MB	maybe creating a macro crate
time: 0.002; rss: 72MB	assigning node ids
Post-expansion node count: 55771
time: 0.000; rss: 72MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 72MB	complete gated feature checking
time: 0.005; rss: 72MB	collecting defs
time: 0.001; rss: 72MB	external crate/lib resolution
time: 0.002; rss: 72MB	early lint checks
time: 0.000; rss: 72MB	AST validation
time: 0.007; rss: 74MB	name resolution
time: 0.006; rss: 79MB	lowering ast -> hir
time: 0.001; rss: 81MB	indexing hir
time: 0.001; rss: 81MB	attribute checking
time: 0.001; rss: 78MB	language item collection
time: 0.001; rss: 78MB	lifetime resolution
time: 0.000; rss: 78MB	looking for entry point
time: 0.000; rss: 78MB	looking for plugin registrar
time: 0.003; rss: 79MB	region resolution
time: 0.000; rss: 79MB	loop checking
time: 0.000; rss: 79MB	static item recursion checking
time: 0.005; rss: 79MB	compute_incremental_hashes_map
time: 0.000; rss: 79MB	load_dep_graph
time: 0.001; rss: 80MB	type collecting
time: 0.000; rss: 80MB	variance inference
time: 0.009; rss: 81MB	coherence checking
time: 0.002; rss: 81MB	wf checking
time: 0.002; rss: 81MB	item-types checking
time: 2.393; rss: 96MB	item-bodies checking
time: 0.000; rss: 96MB	drop-impl checking
time: 0.016; rss: 96MB	const checking
time: 0.001; rss: 96MB	privacy checking
time: 0.000; rss: 96MB	stability index
time: 0.001; rss: 96MB	intrinsic checking
time: 0.001; rss: 96MB	effect checking
time: 0.004; rss: 96MB	match checking
time: 0.067; rss: 96MB	liveness checking
time: 0.012; rss: 96MB	rvalue checking
time: 0.036; rss: 116MB	MIR dump
time: 0.023; rss: 115MB	MIR passes
time: 0.215; rss: 117MB	borrow checking
time: 0.000; rss: 117MB	reachability checking
time: 0.003; rss: 117MB	death checking
time: 0.003; rss: 117MB	stability checking
time: 0.000; rss: 117MB	unused lib feature checking
time: 0.018; rss: 117MB	lint checking
time: 0.000; rss: 117MB	resolving dependency formats
time: 0.180; rss: 116MB	Prepare MIR codegen passes
  time: 0.003; rss: 117MB	write metadata
  time: 0.009; rss: 118MB	translation item collection
  time: 0.001; rss: 118MB	codegen unit partitioning
  time: 0.002; rss: 132MB	internalize symbols
time: 0.191; rss: 119MB	translation
time: 0.000; rss: 119MB	assert dep graph
time: 0.000; rss: 119MB	serialize dep graph
  time: 0.027; rss: 92MB	llvm function passes [0]
  time: 0.005; rss: 92MB	llvm module passes [0]
  time: 0.634; rss: 98MB	codegen passes [0]
  time: 0.000; rss: 98MB	codegen passes [0]
time: 0.701; rss: 96MB	LLVM passes
time: 0.000; rss: 96MB	serialize work products
time: 0.046; rss: 85MB	linking
done
