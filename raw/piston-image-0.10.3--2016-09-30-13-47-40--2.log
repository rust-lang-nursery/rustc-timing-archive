commit 954873055a998a06841ac19b39b1fe18a6641731
Merge: 1d64acd a84b550
Author: bors <bors@rust-lang.org>
Date:   Fri Sep 30 07:35:04 2016 -0700

    Auto merge of #36823 - durka:discriminant_value, r=nagisa
    
    add wrapper for discriminant_value, take 2
    
    [This is #34785 reopened, since @bors apparently gave up on that thread.]
    
    add wrapper for discriminant_value intrinsic
    
    Implementation of [RFC 1696](https://github.com/rust-lang/rfcs/blob/master/text/1696-discriminant.md).
    
    Wraps the `discriminant_value` intrinsic under the name `std::mem::discriminant`. In order to avoid prematurely leaking information about the implementation of enums, the return value is an opaque type, generic over the enum type, which implements Copy, Clone, PartialEq, Eq, Hash, and Debug (notably not PartialOrd). There is currently no way to get the value out excepting printing the debug representation.
    
    The wrapper is safe and can be stabilized soon as per discussion in #24263.
    
    cc @aturon
    r? @nagisa
rustc: ./piston-image-0.10.3
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling image v0.10.3 (file:///root/benchmarks/piston-image-0.10.3)
time: 0.043; rss: 57MB	parsing
Lines of code:             12000
Pre-expansion node count:  90272
time: 0.000; rss: 57MB	recursion limit
time: 0.000; rss: 57MB	crate injection
time: 0.000; rss: 57MB	plugin loading
time: 0.000; rss: 57MB	plugin registration
time: 0.077; rss: 95MB	expansion
time: 0.000; rss: 95MB	maybe building test harness
time: 0.001; rss: 95MB	maybe creating a macro crate
Post-expansion node count: 148999
time: 0.000; rss: 95MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 95MB	complete gated feature checking
time: 0.005; rss: 95MB	early lint checks
time: 0.001; rss: 95MB	AST validation
time: 0.021; rss: 97MB	name resolution
time: 0.014; rss: 110MB	lowering ast -> hir
time: 0.003; rss: 114MB	indexing hir
time: 0.002; rss: 114MB	attribute checking
time: 0.002; rss: 103MB	language item collection
time: 0.003; rss: 103MB	lifetime resolution
time: 0.000; rss: 103MB	looking for entry point
time: 0.000; rss: 103MB	looking for plugin registrar
time: 0.011; rss: 108MB	region resolution
time: 0.002; rss: 108MB	loop checking
time: 0.001; rss: 108MB	static item recursion checking
time: 0.058; rss: 108MB	compute_incremental_hashes_map
time: 0.000; rss: 108MB	load_dep_graph
time: 0.025; rss: 109MB	type collecting
time: 0.000; rss: 109MB	variance inference
time: 0.031; rss: 113MB	coherence checking
time: 0.093; rss: 114MB	wf checking
time: 0.144; rss: 118MB	item-types checking
time: 0.908; rss: 133MB	item-bodies checking
time: 0.000; rss: 133MB	drop-impl checking
time: 0.067; rss: 135MB	const checking
time: 0.012; rss: 135MB	privacy checking
time: 0.002; rss: 135MB	stability index
time: 0.009; rss: 135MB	intrinsic checking
time: 0.004; rss: 135MB	effect checking
time: 0.018; rss: 135MB	match checking
time: 0.011; rss: 135MB	liveness checking
time: 0.059; rss: 135MB	rvalue checking
time: 0.102; rss: 176MB	MIR dump
  time: 0.011; rss: 176MB	SimplifyCfg
  time: 0.024; rss: 176MB	QualifyAndPromoteConstants
  time: 0.024; rss: 176MB	TypeckMir
  time: 0.001; rss: 176MB	SimplifyBranches
  time: 0.007; rss: 176MB	SimplifyCfg
time: 0.068; rss: 176MB	MIR passes
time: 0.142; rss: 176MB	borrow checking
time: 0.004; rss: 176MB	reachability checking
time: 0.009; rss: 176MB	death checking
time: 0.010; rss: 178MB	stability checking
time: 0.000; rss: 178MB	unused lib feature checking
time: 0.073; rss: 178MB	lint checking
time: 0.000; rss: 178MB	resolving dependency formats
  time: 0.001; rss: 178MB	NoLandingPads
  time: 0.005; rss: 178MB	SimplifyCfg
  time: 0.012; rss: 178MB	EraseRegions
  time: 0.002; rss: 178MB	AddCallGuards
  time: 0.091; rss: 183MB	ElaborateDrops
  time: 0.001; rss: 183MB	NoLandingPads
  time: 0.009; rss: 183MB	SimplifyCfg
  time: 0.006; rss: 183MB	InstCombine
  time: 0.002; rss: 183MB	Deaggregator
  time: 0.000; rss: 183MB	CopyPropagation
  time: 0.002; rss: 183MB	AddCallGuards
  time: 0.000; rss: 183MB	PreTrans
time: 0.131; rss: 183MB	Prepare MIR codegen passes
  time: 0.073; rss: 185MB	write metadata
  time: 0.581; rss: 196MB	translation item collection
  time: 0.031; rss: 199MB	codegen unit partitioning
  time: 0.028; rss: 319MB	internalize symbols
time: 3.171; rss: 291MB	translation
time: 0.000; rss: 291MB	assert dep graph
time: 0.000; rss: 291MB	serialize dep graph
  time: 0.199; rss: 222MB	llvm function passes [0]
  time: 0.081; rss: 226MB	llvm module passes [0]
  time: 4.106; rss: 228MB	codegen passes [0]
  time: 0.001; rss: 228MB	codegen passes [0]
time: 4.685; rss: 228MB	LLVM passes
time: 0.000; rss: 228MB	serialize work products
time: 0.252; rss: 100MB	linking
done
