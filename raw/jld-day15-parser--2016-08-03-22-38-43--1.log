commit 0a3180baab7c361ee85958c88d971190649c3b70
Merge: a0b4e67 63f0c4d
Author: bors <bors@rust-lang.org>
Date:   Wed Aug 3 13:24:53 2016 -0700

    Auto merge of #35261 - eddyb:llvm-autoupgrade, r=nikomatsakis
    
    Support removed LLVM intrinsics by invoking its AutoUpgrade mechanism.
    
    Turns out that LLVM sometimes renames platform intrinsics or replaces them with first-class instructions.
    For example, signed minimum became `select (icmp SLT, a, b), a, b` where `a` and `b` are vectors.
    
    This is blocking the Servo rustup ([relevant failure](http://build.servo.org/builders/windows-dev/builds/226/steps/compile/logs/stdio)), as they're using a few such intrinsics.
    The fix in this PR is to invoke LLVM's own `AutoUpgrade` mechanism to do the replacements.
rustc: ./jld-day15-parser
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling day15 v0.1.0 (file:///root/benchmarks/jld-day15-parser)
time: 0.001; rss: 44MB	parsing
Lines of code:             72
Pre-expansion node count:  654
time: 0.000; rss: 48MB	configuration
time: 0.000; rss: 48MB	recursion limit
time: 0.000; rss: 48MB	crate injection
time: 0.000; rss: 48MB	plugin loading
time: 0.000; rss: 48MB	plugin registration
time: 0.020; rss: 83MB	expansion
time: 0.000; rss: 83MB	maybe building test harness
time: 0.000; rss: 83MB	assigning node ids
Post-expansion node count: 1155
time: 0.000; rss: 83MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 83MB	complete gated feature checking
time: 0.000; rss: 83MB	collecting defs
time: 0.004; rss: 87MB	external crate/lib resolution
time: 0.000; rss: 87MB	early lint checks
time: 0.000; rss: 87MB	AST validation
time: 0.001; rss: 87MB	name resolution
time: 0.000; rss: 87MB	lowering ast -> hir
time: 0.000; rss: 87MB	indexing hir
time: 0.000; rss: 87MB	attribute checking
time: 0.000; rss: 87MB	language item collection
time: 0.000; rss: 87MB	lifetime resolution
time: 0.000; rss: 87MB	looking for entry point
time: 0.000; rss: 87MB	looking for plugin registrar
time: 0.000; rss: 87MB	region resolution
time: 0.000; rss: 87MB	loop checking
time: 0.000; rss: 87MB	static item recursion checking
time: 0.000; rss: 87MB	load_dep_graph
time: 0.001; rss: 87MB	type collecting
time: 0.000; rss: 87MB	variance inference
time: 0.005; rss: 87MB	coherence checking
time: 0.006; rss: 87MB	wf checking
time: 0.000; rss: 87MB	item-types checking
time: 0.048; rss: 96MB	item-bodies checking
time: 0.000; rss: 96MB	drop-impl checking
time: 0.001; rss: 100MB	const checking
time: 0.000; rss: 100MB	privacy checking
time: 0.000; rss: 100MB	stability index
time: 0.000; rss: 100MB	intrinsic checking
time: 0.000; rss: 100MB	effect checking
time: 0.000; rss: 100MB	match checking
time: 0.000; rss: 100MB	liveness checking
time: 0.001; rss: 100MB	rvalue checking
time: 0.001; rss: 100MB	MIR dump
time: 0.001; rss: 100MB	MIR passes
time: 0.001; rss: 100MB	borrow checking
time: 0.000; rss: 100MB	reachability checking
time: 0.000; rss: 100MB	death checking
time: 0.000; rss: 100MB	stability checking
time: 0.000; rss: 100MB	unused lib feature checking
time: 0.004; rss: 100MB	lint checking
time: 0.002; rss: 100MB	resolving dependency formats
time: 0.002; rss: 100MB	Prepare MIR codegen passes
  time: 0.000; rss: 100MB	write metadata
  time: 0.621; rss: 106MB	translation item collection
  time: 0.004; rss: 106MB	codegen unit partitioning
  time: 0.007; rss: 131MB	internalize symbols
time: 3.046; rss: 131MB	translation
time: 0.000; rss: 131MB	assert dep graph
time: 0.000; rss: 131MB	serialize dep graph
  time: 0.013; rss: 108MB	llvm function passes [0]
  time: 0.001; rss: 108MB	llvm module passes [0]
  time: 0.267; rss: 113MB	codegen passes [0]
  time: 0.000; rss: 113MB	codegen passes [0]
time: 0.282; rss: 113MB	LLVM passes
  time: 0.119; rss: 108MB	running linker
time: 0.120; rss: 108MB	linking
done
