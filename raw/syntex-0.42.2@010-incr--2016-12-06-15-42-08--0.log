commit b5d0f90929ddaae89609e9bb229a9b8a27e27615
Merge: 1842efb cc6edb2
Author: bors <bors@rust-lang.org>
Date:   Tue Dec 6 17:38:26 2016 +0000

    Auto merge of #38036 - Mark-Simulacrum:polish-2, r=nagisa,eddyb
    
    Simplify calling find_implied_output_region.
    
    @nnethercote added the optimization that find_implied_output_region
    takes a closure as an optimization in #37014, but passing an iterator is
    simpler, and more ergonomic for callers.
rustc: ./syntex-0.42.2@010-incr@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.249; rss: 151MB	expansion
time: 0.000; rss: 151MB	maybe building test harness
time: 0.007; rss: 151MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 151MB	checking for inline asm in case the target doesn't support it
time: 0.014; rss: 151MB	complete gated feature checking
time: 0.025; rss: 151MB	early lint checks
time: 0.009; rss: 151MB	AST validation
time: 0.082; rss: 166MB	name resolution
time: 0.067; rss: 199MB	lowering ast -> hir
time: 0.011; rss: 192MB	indexing hir
time: 0.007; rss: 192MB	attribute checking
time: 0.002; rss: 153MB	language item collection
time: 0.013; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.047; rss: 176MB	region resolution
time: 0.008; rss: 176MB	loop checking
time: 0.002; rss: 176MB	static item recursion checking
time: 0.382; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.021; rss: 181MB	stability checking
time: 0.056; rss: 189MB	type collecting
time: 0.004; rss: 189MB	variance inference
time: 0.006; rss: 193MB	impl wf inference
time: 0.026; rss: 197MB	coherence checking
time: 0.089; rss: 199MB	wf checking
time: 0.201; rss: 207MB	item-types checking
time: 3.619; rss: 265MB	item-bodies checking
time: 0.000; rss: 265MB	drop-impl checking
time: 0.223; rss: 276MB	const checking
time: 0.068; rss: 276MB	privacy checking
time: 0.021; rss: 283MB	intrinsic checking
time: 0.016; rss: 283MB	effect checking
time: 0.050; rss: 283MB	match checking
time: 0.049; rss: 290MB	liveness checking
time: 0.178; rss: 292MB	rvalue checking
time: 0.372; rss: 481MB	MIR dump
  time: 0.059; rss: 482MB	SimplifyCfg
  time: 0.076; rss: 482MB	QualifyAndPromoteConstants
  time: 0.121; rss: 499MB	TypeckMir
  time: 0.005; rss: 499MB	SimplifyBranches
  time: 0.033; rss: 499MB	SimplifyCfg
time: 0.293; rss: 499MB	MIR cleanup and validation
time: 0.480; rss: 499MB	borrow checking
time: 0.024; rss: 499MB	reachability checking
time: 0.038; rss: 499MB	death checking
time: 0.000; rss: 499MB	unused lib feature checking
time: 0.178; rss: 499MB	lint checking
time: 0.000; rss: 499MB	resolving dependency formats
  time: 0.004; rss: 499MB	NoLandingPads
  time: 0.027; rss: 499MB	SimplifyCfg
  time: 0.066; rss: 508MB	EraseRegions
  time: 0.011; rss: 508MB	AddCallGuards
  time: 0.275; rss: 528MB	ElaborateDrops
  time: 0.004; rss: 528MB	NoLandingPads
  time: 0.053; rss: 528MB	SimplifyCfg
  time: 0.029; rss: 528MB	InstCombine
  time: 0.013; rss: 528MB	Deaggregator
  time: 0.004; rss: 528MB	CopyPropagation
  time: 0.035; rss: 528MB	SimplifyLocals
  time: 0.010; rss: 528MB	AddCallGuards
  time: 0.003; rss: 528MB	PreTrans
time: 0.532; rss: 528MB	MIR optimisations
  time: 0.066; rss: 537MB	write metadata
  time: 0.428; rss: 549MB	translation item collection
  time: 0.109; rss: 553MB	codegen unit partitioning
  time: 0.048; rss: 1457MB	internalize symbols
time: 12.379; rss: 1457MB	translation
time: 0.000; rss: 1457MB	assert dep graph
time: 1.440; rss: 1485MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1194MB	llvm function passes [1]
time: 0.000; rss: 1196MB	llvm module passes [1]
time: 0.001; rss: 1201MB	llvm function passes [0]
time: 0.000; rss: 1201MB	llvm module passes [0]
time: 0.002; rss: 1209MB	llvm function passes [2]
time: 0.000; rss: 1209MB	llvm module passes [2]
time: 0.002; rss: 1209MB	llvm function passes [3]
time: 0.000; rss: 1209MB	llvm module passes [3]
time: 0.004; rss: 1213MB	llvm function passes [5]
time: 0.001; rss: 1215MB	llvm function passes [11]
time: 0.004; rss: 1215MB	llvm module passes [5]
time: 0.009; rss: 1215MB	llvm function passes [6]
time: 0.004; rss: 1220MB	llvm module passes [11]
time: 0.014; rss: 1220MB	codegen passes [1]
time: 0.006; rss: 1224MB	llvm module passes [6]
time: 0.018; rss: 1224MB	llvm function passes [4]
time: 0.025; rss: 1228MB	codegen passes [0]
time: 0.008; rss: 1228MB	llvm module passes [4]
time: 0.013; rss: 1230MB	llvm function passes [15]
time: 0.037; rss: 1234MB	codegen passes [2]
time: 0.000; rss: 1234MB	llvm function passes [2]
time: 0.000; rss: 1234MB	llvm module passes [2]
time: 0.001; rss: 1234MB	codegen passes [2]
time: 0.003; rss: 1234MB	llvm function passes [2]
time: 0.001; rss: 1234MB	llvm module passes [2]
time: 0.008; rss: 1234MB	llvm module passes [15]
time: 0.030; rss: 1238MB	llvm function passes [0]
time: 0.012; rss: 1243MB	llvm module passes [0]
time: 0.071; rss: 1244MB	codegen passes [3]
time: 0.027; rss: 1244MB	llvm function passes [14]
time: 0.063; rss: 1244MB	llvm function passes [9]
time: 0.067; rss: 1244MB	llvm function passes [1]
time: 0.068; rss: 1244MB	llvm function passes [12]
time: 0.072; rss: 1244MB	codegen passes [11]
time: 0.012; rss: 1250MB	llvm module passes [14]
time: 0.009; rss: 1250MB	llvm module passes [1]
time: 0.015; rss: 1260MB	llvm function passes [11]
time: 0.001; rss: 1260MB	llvm function passes [17]
time: 0.000; rss: 1260MB	llvm module passes [11]
time: 0.000; rss: 1260MB	llvm module passes [17]
time: 0.000; rss: 1260MB	llvm function passes [16]
time: 0.010; rss: 1262MB	llvm module passes [16]
time: 0.031; rss: 1262MB	llvm module passes [12]
time: 0.012; rss: 1262MB	codegen passes [11]
time: 0.004; rss: 1262MB	codegen passes [16]
time: 0.016; rss: 1266MB	codegen passes [17]
time: 0.000; rss: 1266MB	llvm function passes [17]
time: 0.000; rss: 1266MB	llvm module passes [17]
time: 0.001; rss: 1266MB	codegen passes [17]
time: 0.077; rss: 1268MB	codegen passes [2]
time: 0.054; rss: 1268MB	llvm module passes [9]
time: 0.132; rss: 1268MB	llvm function passes [7]
time: 0.052; rss: 1287MB	llvm function passes [17]
time: 0.066; rss: 1291MB	llvm function passes [16]
time: 0.022; rss: 1296MB	llvm module passes [17]
time: 0.014; rss: 1296MB	llvm module passes [16]
time: 0.183; rss: 1296MB	codegen passes [5]
time: 0.070; rss: 1300MB	llvm module passes [7]
time: 0.247; rss: 1323MB	llvm function passes [8]
time: 0.139; rss: 1325MB	llvm function passes [11]
time: 0.011; rss: 1329MB	llvm function passes [23]
time: 0.021; rss: 1333MB	llvm function passes [22]
time: 0.008; rss: 1333MB	llvm module passes [22]
time: 0.031; rss: 1333MB	llvm module passes [11]
time: 0.022; rss: 1336MB	llvm module passes [23]
time: 0.074; rss: 1336MB	llvm function passes [21]
time: 0.095; rss: 1340MB	llvm function passes [20]
time: 0.015; rss: 1342MB	llvm module passes [20]
time: 0.307; rss: 1347MB	llvm function passes [10]
time: 0.173; rss: 1346MB	llvm function passes [19]
time: 0.035; rss: 1346MB	llvm module passes [21]
time: 0.193; rss: 1350MB	llvm function passes [18]
time: 0.025; rss: 1359MB	llvm function passes [25]
time: 0.129; rss: 1361MB	llvm module passes [8]
time: 0.013; rss: 1361MB	llvm module passes [25]
time: 0.080; rss: 1369MB	llvm module passes [19]
time: 0.076; rss: 1384MB	llvm module passes [18]
time: 0.066; rss: 1386MB	llvm function passes [26]
time: 0.038; rss: 1388MB	llvm function passes [27]
time: 0.002; rss: 1388MB	llvm module passes [27]
time: 0.400; rss: 1388MB	llvm function passes [3]
time: 0.153; rss: 1388MB	llvm module passes [10]
time: 0.034; rss: 1381MB	llvm module passes [26]
time: 0.225; rss: 1390MB	llvm function passes [24]
time: 0.322; rss: 1389MB	llvm function passes [5]
time: 0.061; rss: 1391MB	codegen passes [27]
time: 0.521; rss: 1385MB	llvm function passes [13]
time: 0.137; rss: 1385MB	llvm function passes [28]
time: 0.016; rss: 1390MB	llvm function passes [34]
time: 0.016; rss: 1398MB	llvm function passes [36]
time: 0.017; rss: 1398MB	codegen passes [37]
time: 0.051; rss: 1398MB	llvm module passes [28]
time: 0.015; rss: 1402MB	llvm module passes [36]
time: 0.230; rss: 1403MB	llvm function passes [29]
time: 0.115; rss: 1400MB	llvm module passes [24]
time: 0.212; rss: 1401MB	llvm function passes [30]
time: 0.073; rss: 1402MB	llvm module passes [34]
time: 0.313; rss: 1403MB	codegen passes [23]
time: 0.073; rss: 1403MB	llvm function passes [35]
time: 0.144; rss: 1402MB	llvm function passes [33]
time: 0.020; rss: 1402MB	llvm module passes [33]
time: 0.033; rss: 1405MB	llvm module passes [35]
time: 0.074; rss: 1402MB	llvm module passes [29]
time: 0.024; rss: 1401MB	codegen passes [36]
time: 0.236; rss: 1406MB	llvm module passes [5]
time: 0.123; rss: 1411MB	llvm module passes [30]
time: 0.643; rss: 1413MB	llvm function passes [2]
time: 0.684; rss: 1415MB	codegen passes [6]
time: 0.327; rss: 1415MB	llvm function passes [31]
time: 0.402; rss: 1414MB	llvm module passes [3]
time: 0.393; rss: 1414MB	llvm function passes [32]
time: 0.407; rss: 1424MB	llvm function passes [27]
time: 0.260; rss: 1440MB	llvm module passes [2]
time: 0.379; rss: 1445MB	codegen passes [34]
time: 0.165; rss: 1447MB	llvm module passes [27]
time: 0.240; rss: 1465MB	llvm module passes [32]
time: 0.826; rss: 1454MB	codegen passes [1]
time: 0.483; rss: 1497MB	llvm module passes [31]
time: 0.628; rss: 1499MB	codegen passes [35]
time: 1.062; rss: 1510MB	codegen passes [4]
time: 0.848; rss: 1499MB	llvm module passes [13]
time: 1.070; rss: 1480MB	codegen passes [22]
time: 1.485; rss: 1461MB	codegen passes [15]
time: 1.586; rss: 1448MB	codegen passes [0]
time: 1.502; rss: 1440MB	codegen passes [20]
time: 1.828; rss: 1448MB	codegen passes [14]
time: 1.233; rss: 1458MB	codegen passes [30]
time: 2.087; rss: 1466MB	codegen passes [12]
time: 2.006; rss: 1456MB	codegen passes [25]
time: 2.206; rss: 1465MB	codegen passes [16]
time: 2.165; rss: 1457MB	codegen passes [17]
time: 2.178; rss: 1469MB	codegen passes [26]
time: 2.190; rss: 1462MB	codegen passes [21]
time: 2.381; rss: 1525MB	codegen passes [33]
time: 2.194; rss: 1525MB	codegen passes [5]
time: 2.748; rss: 1508MB	codegen passes [11]
time: 2.294; rss: 1514MB	codegen passes [32]
time: 3.077; rss: 1511MB	codegen passes [9]
time: 3.509; rss: 1664MB	codegen passes [3]
time: 3.467; rss: 1640MB	codegen passes [28]
time: 3.361; rss: 1650MB	codegen passes [2]
time: 3.967; rss: 1704MB	codegen passes [27]
time: 4.120; rss: 1646MB	codegen passes [18]
time: 4.156; rss: 1614MB	codegen passes [7]
time: 4.385; rss: 1556MB	codegen passes [19]
time: 4.479; rss: 1554MB	codegen passes [29]
time: 4.104; rss: 1519MB	codegen passes [31]
time: 4.851; rss: 1511MB	codegen passes [10]
time: 5.261; rss: 1436MB	codegen passes [8]
time: 5.228; rss: 1390MB	codegen passes [24]
time: 4.997; rss: 1320MB	codegen passes [13]
time: 7.833; rss: 1317MB	LLVM passes
time: 0.000; rss: 1317MB	serialize work products
time: 1.061; rss: 290MB	linking
done
