commit 91b27ec9beb8455426da3efd26dfc9155058f5bd
Merge: 4406717 6dd3f61
Author: bors <bors@rust-lang.org>
Date:   Thu Jan 7 06:32:56 2016 +0000

    Auto merge of #30724 - nikomatsakis:feature-gate-defaulted-type-parameters, r=pnkfelix
    
    It was recently realized that we accept defaulted type parameters everywhere, without feature gate, even though the only place that we really *intended* to accept them were on types. This PR adds a lint warning unless the "type-parameter-defaults" feature is enabled. This should eventually become a hard error.
    
    This is a [breaking-change] in that new feature gates are required (or simply removing the defaults, which is probably a better choice as they have little effect at this time). Results of a [crater run][crater] suggest that approximately 5-15 crates are affected. I didn't do the measurement quite right so that run cannot distinguish "true" regressions from "non-root" regressions, but even the upper bound of 15 affected crates seems relatively minimal.
    
    [crater]: https://gist.github.com/nikomatsakis/760c6a67698bd24253bf
    
    cc @rust-lang/lang
    r? @pnkfelix
rustc: ./inflate-0.1.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling inflate v0.1.0 (file:///root/benchmarks/inflate-0.1.0)
time: 0.008; rss: 26MB	parsing
Lines of code:             956
Pre-expansion node count:  4761
time: 0.001; rss: 27MB	configuration 1
time: 0.000; rss: 27MB	recursion limit
time: 0.000; rss: 27MB	gated macro checking
time: 0.000; rss: 27MB	crate injection
time: 0.003; rss: 29MB	macro loading
time: 0.000; rss: 29MB	plugin loading
time: 0.000; rss: 29MB	plugin registration
time: 0.091; rss: 37MB	expansion
time: 0.001; rss: 37MB	complete gated feature checking 1
time: 0.009; rss: 37MB	configuration 2
time: 0.000; rss: 37MB	gated configuration checking
time: 0.005; rss: 37MB	maybe building test harness
time: 0.004; rss: 37MB	prelude injection
time: 0.000; rss: 37MB	checking that all macro invocations are gone
time: 0.000; rss: 37MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 37MB	complete gated feature checking 2
Post-expansion node count: 54798
time: 0.004; rss: 37MB	assigning node ids
time: 0.015; rss: 42MB	lowering ast -> hir
time: 0.004; rss: 42MB	indexing hir
time: 0.000; rss: 42MB	attribute checking
time: 0.003; rss: 42MB	early lint checks
time: 0.001; rss: 39MB	external crate/lib resolution
time: 0.001; rss: 39MB	language item collection
time: 0.014; rss: 47MB	resolution
time: 0.001; rss: 47MB	lifetime resolution
time: 0.000; rss: 47MB	looking for entry point
time: 0.000; rss: 47MB	looking for plugin registrar
time: 0.004; rss: 48MB	region resolution
time: 0.000; rss: 48MB	loop checking
time: 0.000; rss: 48MB	static item recursion checking
time: 0.001; rss: 48MB	type collecting
time: 0.000; rss: 48MB	variance inference
time: 0.010; rss: 62MB	coherence checking
time: 0.002; rss: 63MB	wf checking
time: 0.002; rss: 63MB	item-types checking
time: 27.106; rss: 86MB	item-bodies checking
time: 0.000; rss: 86MB	drop-impl checking
time: 0.015; rss: 87MB	const checking
time: 0.003; rss: 87MB	privacy checking
time: 0.000; rss: 87MB	stability index
time: 0.001; rss: 87MB	intrinsic checking
time: 0.001; rss: 87MB	effect checking
time: 0.004; rss: 87MB	match checking
time: 0.026; rss: 92MB	MIR dump
time: 0.315; rss: 92MB	liveness checking
time: 0.215; rss: 94MB	borrow checking
time: 0.010; rss: 94MB	rvalue checking
time: 0.000; rss: 94MB	reachability checking
time: 0.002; rss: 94MB	death checking
time: 0.003; rss: 94MB	stability checking
time: 0.000; rss: 94MB	unused lib feature checking
time: 0.018; rss: 96MB	lint checking
time: 0.000; rss: 96MB	resolving dependency formats
time: 0.002; rss: 96MB	erasing regions from MIR
  time: 0.002; rss: 124MB	write metadata
time: 0.377; rss: 119MB	translation
  time: 0.025; rss: 88MB	llvm function passes [0]
  time: 0.005; rss: 88MB	llvm module passes [0]
  time: 0.460; rss: 136MB	codegen passes [0]
  time: 0.000; rss: 121MB	codegen passes [0]
time: 0.534; rss: 121MB	LLVM passes
time: 0.035; rss: 119MB	linking
done
