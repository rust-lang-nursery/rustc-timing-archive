commit eeb062b8b1a1bb26151bed05ddd16fe55c979ee1
Merge: fd5603b 0e3334e
Author: bors <bors@rust-lang.org>
Date:   Wed Mar 16 14:20:36 2016 -0700

    Auto merge of #31746 - erickt:newline, r=sfackler
    
    syntax: Always pretty print a newline after doc comments
    
    Before this patch, code that had a doc comment as the first
    line, as in:
    
    ```rust
    /// Foo
    struct Foo;
    ```
    
    Was pretty printed into:
    
    ```rust
    ///Foostruct Foo;
    ```
    
    This makes sure that that there is always a trailing newline
    after a doc comment.
    
    Closes #31722
rustc: ./helloworld
/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc hello.rs -Ztime-passes -Zinput-stats
time: 0.000; rss: 32MB	parsing
Lines of code:             3
Pre-expansion node count:  8
time: 0.000; rss: 37MB	configuration 1
time: 0.000; rss: 37MB	recursion limit
time: 0.000; rss: 37MB	gated macro checking
time: 0.000; rss: 37MB	crate injection
time: 0.003; rss: 39MB	macro loading
time: 0.000; rss: 39MB	plugin loading
time: 0.000; rss: 39MB	plugin registration
time: 0.001; rss: 39MB	expansion
time: 0.000; rss: 39MB	complete gated feature checking 1
time: 0.000; rss: 39MB	configuration 2
time: 0.000; rss: 39MB	gated configuration checking
time: 0.000; rss: 39MB	maybe building test harness
time: 0.000; rss: 39MB	prelude injection
time: 0.000; rss: 39MB	checking that all macro invocations are gone
time: 0.000; rss: 39MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 39MB	complete gated feature checking 2
time: 0.000; rss: 39MB	const fn bodies and arguments
Post-expansion node count: 68
time: 0.000; rss: 39MB	assigning node ids
time: 0.000; rss: 39MB	lowering ast -> hir
time: 0.000; rss: 39MB	indexing hir
time: 0.000; rss: 39MB	attribute checking
time: 0.000; rss: 39MB	early lint checks
time: 0.001; rss: 39MB	external crate/lib resolution
time: 0.000; rss: 39MB	language item collection
time: 0.001; rss: 47MB	resolution
time: 0.000; rss: 47MB	lifetime resolution
time: 0.000; rss: 47MB	looking for entry point
time: 0.000; rss: 47MB	looking for plugin registrar
time: 0.000; rss: 47MB	region resolution
time: 0.000; rss: 47MB	loop checking
time: 0.000; rss: 47MB	static item recursion checking
time: 0.000; rss: 47MB	type collecting
time: 0.000; rss: 47MB	variance inference
time: 0.005; rss: 56MB	coherence checking
time: 0.000; rss: 56MB	wf checking
time: 0.000; rss: 56MB	item-types checking
time: 0.000; rss: 56MB	item-bodies checking
time: 0.000; rss: 56MB	drop-impl checking
time: 0.000; rss: 56MB	const checking
time: 0.000; rss: 56MB	privacy checking
time: 0.000; rss: 56MB	stability index
time: 0.000; rss: 56MB	intrinsic checking
time: 0.000; rss: 56MB	effect checking
time: 0.000; rss: 56MB	match checking
time: 0.000; rss: 56MB	liveness checking
time: 0.000; rss: 56MB	rvalue checking
time: 0.000; rss: 56MB	MIR dump
time: 0.000; rss: 56MB	MIR passes
time: 0.000; rss: 56MB	borrow checking
time: 0.000; rss: 56MB	reachability checking
time: 0.000; rss: 56MB	death checking
time: 0.000; rss: 56MB	stability checking
time: 0.000; rss: 56MB	unused lib feature checking
time: 0.000; rss: 56MB	lint checking
time: 0.001; rss: 56MB	resolving dependency formats
  time: 0.000; rss: 68MB	translation item collection
  time: 0.000; rss: 68MB	write metadata
time: 0.003; rss: 68MB	translation
  time: 0.000; rss: 68MB	llvm function passes [0]
  time: 0.000; rss: 68MB	llvm module passes [0]
  time: 0.001; rss: 73MB	codegen passes [0]
  time: 0.000; rss: 73MB	codegen passes [0]
time: 0.002; rss: 73MB	LLVM passes
  time: 0.094; rss: 73MB	running linker
time: 0.094; rss: 73MB	linking
done
