commit 63760acf31e605c8a91bb5cbcbcb4bfb95435e48
Merge: ed7c567 6ae8027
Author: bors <bors@rust-lang.org>
Date:   Sun Apr 17 19:11:20 2016 -0700

    Auto merge of #33064 - jseyfried:improve_resolve_performance, r=eddyb
    
    resolve: Improve performance
    
    This fixes #33061 by speeding up searchs through all traits in scope, a bottleneck in `resolve`.
    
    According to my measurements, this PR improves resolution performance by a factor of 3.4x on `librustc`, which almost completely reverses the 3.75x performance regression reported in #33061.
    
    r? @eddyb
rustc: ./regex.0.1.30
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling regex v0.1.30 (file:///root/benchmarks/regex.0.1.30)
time: 0.093; rss: 52MB	parsing
Lines of code:             8558
Pre-expansion node count:  58217
time: 0.011; rss: 52MB	configuration 1
time: 0.000; rss: 52MB	recursion limit
time: 0.001; rss: 52MB	gated macro checking
time: 0.000; rss: 52MB	crate injection
time: 0.003; rss: 55MB	macro loading
time: 0.000; rss: 55MB	plugin loading
time: 0.000; rss: 55MB	plugin registration
time: 0.058; rss: 60MB	expansion
time: 0.001; rss: 60MB	complete gated feature checking 1
time: 0.013; rss: 60MB	configuration 2
time: 0.000; rss: 60MB	gated configuration checking
time: 0.006; rss: 60MB	maybe building test harness
time: 0.006; rss: 60MB	prelude injection
time: 0.000; rss: 60MB	checking that all macro invocations are gone
time: 0.000; rss: 60MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 60MB	complete gated feature checking 2
time: 0.001; rss: 60MB	const fn bodies and arguments
Post-expansion node count: 68485
time: 0.006; rss: 60MB	assigning node ids
time: 0.013; rss: 69MB	lowering ast -> hir
time: 0.004; rss: 71MB	indexing hir
time: 0.001; rss: 71MB	attribute checking
time: 0.007; rss: 71MB	early lint checks
time: 0.001; rss: 63MB	external crate/lib resolution
time: 0.001; rss: 63MB	language item collection
time: 0.009; rss: 74MB	resolution
time: 0.001; rss: 74MB	lifetime resolution
time: 0.000; rss: 74MB	looking for entry point
time: 0.000; rss: 74MB	looking for plugin registrar
time: 0.009; rss: 76MB	region resolution
time: 0.001; rss: 76MB	loop checking
time: 0.001; rss: 76MB	static item recursion checking
time: 0.000; rss: 76MB	load_dep_graph
time: 0.007; rss: 87MB	type collecting
time: 0.000; rss: 87MB	variance inference
time: 0.024; rss: 98MB	coherence checking
time: 0.010; rss: 98MB	wf checking
time: 0.261; rss: 102MB	item-types checking
time: 0.206; rss: 114MB	item-bodies checking
time: 0.000; rss: 114MB	drop-impl checking
time: 0.029; rss: 116MB	const checking
time: 0.004; rss: 116MB	privacy checking
time: 0.001; rss: 116MB	stability index
time: 0.001; rss: 116MB	intrinsic checking
time: 0.001; rss: 116MB	effect checking
time: 0.003; rss: 116MB	match checking
time: 0.002; rss: 117MB	liveness checking
time: 0.007; rss: 117MB	rvalue checking
time: 0.016; rss: 118MB	MIR dump
time: 0.007; rss: 118MB	MIR passes
time: 0.019; rss: 119MB	borrow checking
time: 0.000; rss: 119MB	reachability checking
time: 0.003; rss: 119MB	death checking
time: 0.002; rss: 119MB	stability checking
time: 0.000; rss: 119MB	unused lib feature checking
time: 0.028; rss: 119MB	lint checking
time: 0.000; rss: 119MB	resolving dependency formats
time: 0.004; rss: 119MB	Prepare MIR codegen passes
  time: 0.069; rss: 135MB	translation item collection
  time: 0.001; rss: 135MB	codegen unit partitioning
  time: 0.140; rss: 183MB	write metadata
time: 0.728; rss: 183MB	translation
time: 0.000; rss: 183MB	assert dep graph
time: 0.000; rss: 183MB	serialize dep graph
  time: 0.035; rss: 122MB	llvm function passes [0]
  time: 0.017; rss: 124MB	llvm module passes [0]
  time: 0.609; rss: 128MB	codegen passes [0]
  time: 0.001; rss: 110MB	codegen passes [0]
time: 0.735; rss: 108MB	LLVM passes
time: 0.066; rss: 107MB	linking
done
