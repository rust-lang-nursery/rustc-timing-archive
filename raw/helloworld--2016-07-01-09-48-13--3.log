commit 16281888c0f319706cd07e3c569e0aeb5a66d3b6
Merge: 375fa6e 9e2bd92
Author: bors <bors@rust-lang.org>
Date:   Thu Jun 30 23:30:51 2016 -0700

    Auto merge of #34563 - alexcrichton:robust-mk, r=brson
    
    mk: Don't consider LLVM done until it's done
    
    Currently if an LLVM build is interrupted *after* it creates the llvm-config
    binary but before it's done it puts us in an inconsistent state where we think
    LLVM is compiled but it's not actually. This tweaks our logic to only consider
    LLVM done building once it's actually done building.
    
    This should hopefully alleviate problems on the bots where if we interrupt at
    the wrong time it doesn't corrupt the build directory.
rustc: ./helloworld
/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc hello.rs -Ztime-passes -Zinput-stats
time: 0.000; rss: 76MB	parsing
Lines of code:             3
Pre-expansion node count:  8
time: 0.000; rss: 76MB	configuration
time: 0.000; rss: 76MB	recursion limit
time: 0.000; rss: 76MB	crate injection
time: 0.000; rss: 76MB	plugin loading
time: 0.000; rss: 76MB	plugin registration
time: 0.019; rss: 114MB	expansion
time: 0.000; rss: 114MB	maybe building test harness
time: 0.000; rss: 114MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 114MB	complete gated feature checking
Post-expansion node count: 68
time: 0.000; rss: 114MB	assigning node ids
time: 0.000; rss: 114MB	collecting defs
time: 0.003; rss: 114MB	external crate/lib resolution
time: 0.000; rss: 114MB	early lint checks
time: 0.000; rss: 114MB	AST validation
time: 0.000; rss: 114MB	name resolution
time: 0.000; rss: 114MB	lowering ast -> hir
time: 0.000; rss: 114MB	indexing hir
time: 0.000; rss: 114MB	attribute checking
time: 0.000; rss: 114MB	language item collection
time: 0.000; rss: 114MB	lifetime resolution
time: 0.000; rss: 114MB	looking for entry point
time: 0.000; rss: 114MB	looking for plugin registrar
time: 0.000; rss: 114MB	region resolution
time: 0.000; rss: 114MB	loop checking
time: 0.000; rss: 114MB	static item recursion checking
time: 0.000; rss: 118MB	load_dep_graph
time: 0.000; rss: 118MB	type collecting
time: 0.000; rss: 118MB	variance inference
time: 0.005; rss: 118MB	coherence checking
time: 0.000; rss: 118MB	wf checking
time: 0.000; rss: 118MB	item-types checking
time: 0.000; rss: 118MB	item-bodies checking
time: 0.000; rss: 118MB	drop-impl checking
time: 0.000; rss: 118MB	const checking
time: 0.000; rss: 118MB	privacy checking
time: 0.000; rss: 118MB	stability index
time: 0.000; rss: 118MB	intrinsic checking
time: 0.000; rss: 118MB	effect checking
time: 0.000; rss: 118MB	match checking
time: 0.000; rss: 118MB	liveness checking
time: 0.000; rss: 118MB	rvalue checking
time: 0.000; rss: 118MB	MIR dump
time: 0.000; rss: 118MB	MIR passes
time: 0.000; rss: 122MB	borrow checking
time: 0.000; rss: 122MB	reachability checking
time: 0.000; rss: 122MB	death checking
time: 0.000; rss: 122MB	stability checking
time: 0.000; rss: 122MB	unused lib feature checking
time: 0.000; rss: 122MB	lint checking
time: 0.001; rss: 122MB	resolving dependency formats
time: 0.000; rss: 122MB	Prepare MIR codegen passes
  time: 0.000; rss: 122MB	write metadata
  time: 0.001; rss: 122MB	translation item collection
  time: 0.000; rss: 122MB	codegen unit partitioning
time: 0.014; rss: 122MB	translation
time: 0.000; rss: 122MB	assert dep graph
time: 0.000; rss: 122MB	serialize dep graph
  time: 0.001; rss: 122MB	llvm function passes [0]
  time: 0.001; rss: 122MB	llvm module passes [0]
  time: 0.011; rss: 127MB	codegen passes [0]
  time: 0.001; rss: 127MB	codegen passes [0]
time: 0.020; rss: 127MB	LLVM passes
  time: 0.106; rss: 127MB	running linker
time: 0.106; rss: 127MB	linking
done
