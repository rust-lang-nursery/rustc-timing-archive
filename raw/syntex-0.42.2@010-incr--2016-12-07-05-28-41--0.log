commit 5938eba4e30b766751483e93776a87a4db1681f4
Merge: 02ea82d d53f82c
Author: bors <bors@rust-lang.org>
Date:   Wed Dec 7 07:15:31 2016 +0000

    Auto merge of #38149 - bluss:is-empty, r=alexcrichton
    
    Forward more ExactSizeIterator methods and `is_empty` edits
    
    - Forward ExactSizeIterator methods in more places, like `&mut I` and `Box<I>` iterator impls.
    - Improve `VecDeque::is_empty` itself (see commit 4)
    - All the collections iterators now have `len` or `is_empty` forwarded if doing so is a benefit. In the remaining cases, they already use a simple size hint (using something like a stored `usize` value), which is sufficient for the default implementation of len and is_empty.
rustc: ./syntex-0.42.2@010-incr@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.241; rss: 151MB	expansion
time: 0.000; rss: 151MB	maybe building test harness
time: 0.006; rss: 151MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 151MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 151MB	complete gated feature checking
time: 0.023; rss: 151MB	early lint checks
time: 0.007; rss: 151MB	AST validation
time: 0.076; rss: 166MB	name resolution
time: 0.059; rss: 200MB	lowering ast -> hir
time: 0.010; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.048; rss: 177MB	region resolution
time: 0.008; rss: 177MB	loop checking
time: 0.002; rss: 177MB	static item recursion checking
time: 0.381; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.021; rss: 182MB	stability checking
time: 0.057; rss: 190MB	type collecting
time: 0.004; rss: 190MB	variance inference
time: 0.006; rss: 193MB	impl wf inference
time: 0.026; rss: 197MB	coherence checking
time: 0.086; rss: 200MB	wf checking
time: 0.198; rss: 208MB	item-types checking
time: 3.578; rss: 266MB	item-bodies checking
time: 0.000; rss: 266MB	drop-impl checking
time: 0.223; rss: 277MB	const checking
time: 0.059; rss: 277MB	privacy checking
time: 0.020; rss: 284MB	intrinsic checking
time: 0.016; rss: 284MB	effect checking
time: 0.052; rss: 284MB	match checking
time: 0.051; rss: 290MB	liveness checking
time: 0.183; rss: 292MB	rvalue checking
time: 0.373; rss: 482MB	MIR dump
  time: 0.056; rss: 483MB	SimplifyCfg
  time: 0.075; rss: 483MB	QualifyAndPromoteConstants
  time: 0.125; rss: 500MB	TypeckMir
  time: 0.005; rss: 500MB	SimplifyBranches
  time: 0.033; rss: 500MB	SimplifyCfg
time: 0.294; rss: 500MB	MIR cleanup and validation
time: 0.479; rss: 500MB	borrow checking
time: 0.024; rss: 500MB	reachability checking
time: 0.038; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.178; rss: 500MB	lint checking
time: 0.000; rss: 500MB	resolving dependency formats
  time: 0.004; rss: 500MB	NoLandingPads
  time: 0.027; rss: 500MB	SimplifyCfg
  time: 0.065; rss: 509MB	EraseRegions
  time: 0.011; rss: 509MB	AddCallGuards
  time: 0.273; rss: 529MB	ElaborateDrops
  time: 0.003; rss: 529MB	NoLandingPads
  time: 0.052; rss: 529MB	SimplifyCfg
  time: 0.028; rss: 528MB	InstCombine
  time: 0.012; rss: 528MB	Deaggregator
  time: 0.004; rss: 528MB	CopyPropagation
  time: 0.035; rss: 528MB	SimplifyLocals
  time: 0.010; rss: 528MB	AddCallGuards
  time: 0.003; rss: 528MB	PreTrans
time: 0.527; rss: 528MB	MIR optimisations
  time: 0.066; rss: 537MB	write metadata
  time: 0.392; rss: 549MB	translation item collection
  time: 0.071; rss: 556MB	codegen unit partitioning
  time: 0.048; rss: 1457MB	internalize symbols
time: 12.048; rss: 1457MB	translation
time: 0.000; rss: 1457MB	assert dep graph
time: 1.434; rss: 1485MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1195MB	llvm function passes [2]
time: 0.000; rss: 1199MB	llvm module passes [2]
time: 0.001; rss: 1203MB	llvm function passes [0]
time: 0.000; rss: 1203MB	llvm module passes [0]
time: 0.002; rss: 1212MB	llvm function passes [5]
time: 0.000; rss: 1212MB	llvm module passes [5]
time: 0.002; rss: 1212MB	codegen passes [2]
time: 0.001; rss: 1214MB	llvm function passes [7]
time: 0.001; rss: 1214MB	llvm module passes [7]
time: 0.004; rss: 1214MB	llvm function passes [4]
time: 0.004; rss: 1216MB	codegen passes [0]
time: 0.002; rss: 1216MB	llvm module passes [4]
time: 0.011; rss: 1218MB	llvm function passes [8]
time: 0.016; rss: 1222MB	llvm function passes [1]
time: 0.000; rss: 1222MB	llvm module passes [1]
time: 0.018; rss: 1222MB	llvm function passes [3]
time: 0.006; rss: 1222MB	llvm module passes [8]
time: 0.016; rss: 1225MB	codegen passes [7]
time: 0.018; rss: 1225MB	llvm function passes [0]
time: 0.008; rss: 1225MB	llvm module passes [3]
time: 0.008; rss: 1229MB	llvm module passes [0]
time: 0.022; rss: 1231MB	llvm function passes [13]
time: 0.000; rss: 1231MB	llvm function passes [15]
time: 0.000; rss: 1231MB	llvm module passes [15]
time: 0.008; rss: 1233MB	llvm module passes [13]
time: 0.044; rss: 1233MB	llvm function passes [18]
time: 0.029; rss: 1233MB	llvm function passes [7]
time: 0.038; rss: 1235MB	codegen passes [1]
time: 0.003; rss: 1235MB	llvm function passes [1]
time: 0.001; rss: 1235MB	llvm module passes [1]
time: 0.011; rss: 1235MB	llvm module passes [7]
time: 0.016; rss: 1235MB	llvm module passes [18]
time: 0.023; rss: 1235MB	codegen passes [15]
time: 0.059; rss: 1250MB	codegen passes [5]
time: 0.000; rss: 1250MB	llvm function passes [5]
time: 0.000; rss: 1250MB	llvm module passes [5]
time: 0.004; rss: 1250MB	codegen passes [5]
time: 0.076; rss: 1254MB	llvm function passes [12]
time: 0.000; rss: 1256MB	llvm function passes [6]
time: 0.000; rss: 1256MB	llvm module passes [6]
time: 0.001; rss: 1256MB	codegen passes [6]
time: 0.045; rss: 1279MB	llvm function passes [6]
time: 0.069; rss: 1282MB	llvm function passes [15]
time: 0.053; rss: 1282MB	llvm module passes [12]
time: 0.061; rss: 1282MB	codegen passes [1]
time: 0.057; rss: 1282MB	llvm function passes [17]
time: 0.015; rss: 1282MB	llvm module passes [15]
time: 0.081; rss: 1282MB	llvm function passes [47]
time: 0.000; rss: 1282MB	llvm module passes [47]
time: 0.022; rss: 1282MB	llvm module passes [6]
time: 0.014; rss: 1284MB	llvm module passes [17]
time: 0.091; rss: 1288MB	llvm function passes [46]
time: 0.000; rss: 1288MB	llvm module passes [46]
time: 0.163; rss: 1288MB	codegen passes [4]
time: 0.035; rss: 1293MB	codegen passes [47]
time: 0.010; rss: 1293MB	llvm function passes [30]
time: 0.004; rss: 1293MB	llvm module passes [30]
time: 0.028; rss: 1300MB	codegen passes [46]
time: 0.213; rss: 1310MB	llvm function passes [49]
time: 0.238; rss: 1310MB	llvm function passes [9]
time: 0.042; rss: 1310MB	llvm function passes [46]
time: 0.249; rss: 1310MB	llvm function passes [2]
time: 0.099; rss: 1317MB	llvm function passes [33]
time: 0.210; rss: 1317MB	llvm function passes [14]
time: 0.048; rss: 1317MB	llvm module passes [46]
time: 0.032; rss: 1317MB	llvm module passes [33]
time: 0.077; rss: 1317MB	llvm module passes [9]
time: 0.144; rss: 1319MB	llvm function passes [34]
time: 0.012; rss: 1360MB	llvm module passes [34]
time: 0.050; rss: 1366MB	llvm module passes [14]
time: 0.237; rss: 1378MB	llvm function passes [37]
time: 0.163; rss: 1393MB	llvm module passes [49]
time: 0.165; rss: 1393MB	llvm function passes [35]
time: 0.004; rss: 1393MB	llvm function passes [42]
time: 0.010; rss: 1396MB	llvm function passes [11]
time: 0.058; rss: 1399MB	llvm module passes [37]
time: 0.023; rss: 1399MB	llvm module passes [42]
time: 0.037; rss: 1397MB	llvm module passes [35]
time: 0.351; rss: 1395MB	llvm function passes [5]
time: 0.028; rss: 1395MB	llvm function passes [10]
time: 0.000; rss: 1395MB	llvm module passes [10]
time: 0.214; rss: 1398MB	llvm module passes [2]
time: 0.308; rss: 1398MB	llvm function passes [29]
time: 0.438; rss: 1398MB	llvm function passes [48]
time: 0.363; rss: 1398MB	llvm function passes [36]
time: 0.056; rss: 1398MB	codegen passes [10]
time: 0.129; rss: 1400MB	llvm function passes [43]
time: 0.328; rss: 1402MB	llvm function passes [4]
time: 0.023; rss: 1406MB	llvm module passes [43]
time: 0.306; rss: 1408MB	llvm function passes [31]
time: 0.144; rss: 1408MB	llvm function passes [41]
time: 0.264; rss: 1414MB	llvm function passes [32]
time: 0.081; rss: 1413MB	llvm module passes [29]
time: 0.278; rss: 1414MB	llvm function passes [38]
time: 0.002; rss: 1414MB	llvm module passes [38]
time: 0.072; rss: 1416MB	llvm module passes [36]
time: 0.160; rss: 1416MB	codegen passes [28]
time: 0.183; rss: 1410MB	llvm module passes [11]
time: 0.176; rss: 1408MB	codegen passes [42]
time: 0.113; rss: 1406MB	llvm module passes [4]
time: 0.067; rss: 1406MB	codegen passes [38]
time: 0.102; rss: 1408MB	llvm module passes [31]
time: 0.085; rss: 1408MB	llvm module passes [32]
time: 0.254; rss: 1411MB	llvm function passes [44]
time: 0.134; rss: 1412MB	llvm module passes [41]
time: 0.242; rss: 1412MB	llvm module passes [5]
time: 0.300; rss: 1409MB	llvm function passes [40]
time: 0.396; rss: 1406MB	codegen passes [30]
time: 0.536; rss: 1407MB	llvm function passes [47]
time: 0.118; rss: 1413MB	llvm module passes [44]
time: 0.630; rss: 1414MB	llvm function passes [1]
time: 0.409; rss: 1425MB	llvm function passes [45]
time: 0.205; rss: 1431MB	codegen passes [11]
time: 0.235; rss: 1448MB	llvm module passes [40]
time: 0.872; rss: 1450MB	codegen passes [8]
time: 0.192; rss: 1455MB	llvm module passes [1]
time: 0.362; rss: 1458MB	llvm module passes [47]
time: 0.338; rss: 1450MB	llvm module passes [45]
time: 0.702; rss: 1452MB	llvm module passes [48]
time: 1.232; rss: 1482MB	codegen passes [0]
time: 1.080; rss: 1482MB	codegen passes [33]
time: 1.492; rss: 1451MB	codegen passes [13]
time: 1.312; rss: 1461MB	codegen passes [3]
time: 1.430; rss: 1459MB	codegen passes [34]
time: 1.664; rss: 1474MB	codegen passes [7]
time: 1.008; rss: 1468MB	codegen passes [41]
time: 1.485; rss: 1447MB	codegen passes [46]
time: 1.388; rss: 1439MB	codegen passes [6]
time: 1.709; rss: 1431MB	codegen passes [18]
time: 1.792; rss: 1431MB	codegen passes [17]
time: 1.890; rss: 1427MB	codegen passes [15]
time: 1.982; rss: 1457MB	codegen passes [44]
time: 2.292; rss: 1463MB	codegen passes [43]
time: 2.281; rss: 1466MB	codegen passes [35]
time: 2.546; rss: 1532MB	codegen passes [4]
time: 2.849; rss: 1559MB	codegen passes [12]
time: 2.966; rss: 1612MB	codegen passes [5]
time: 3.401; rss: 1624MB	codegen passes [37]
time: 2.901; rss: 1599MB	codegen passes [1]
time: 3.437; rss: 1654MB	codegen passes [32]
time: 3.999; rss: 1638MB	codegen passes [14]
time: 3.998; rss: 1641MB	codegen passes [9]
time: 3.864; rss: 1656MB	codegen passes [45]
time: 3.875; rss: 1601MB	codegen passes [36]
time: 3.869; rss: 1568MB	codegen passes [29]
time: 4.650; rss: 1570MB	codegen passes [40]
time: 4.075; rss: 1546MB	codegen passes [31]
time: 4.790; rss: 1489MB	codegen passes [49]
time: 4.799; rss: 1459MB	codegen passes [2]
time: 4.909; rss: 1407MB	codegen passes [47]
time: 5.200; rss: 1343MB	codegen passes [48]
time: 7.890; rss: 1340MB	LLVM passes
time: 0.000; rss: 1340MB	serialize work products
time: 1.115; rss: 300MB	linking
done
