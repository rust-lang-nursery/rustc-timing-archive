commit e5ed0a5d78be74238af31631e7ecf311eb661586
Merge: 7c535c6 36f2af1
Author: bors <bors@rust-lang.org>
Date:   Sat Nov 19 23:39:25 2016 -0600

    Auto merge of #37842 - nikomatsakis:incremental-test, r=mw
    
    Add tests for incremental reuse scenarios
    
    These are microbenchmarks checking that we achieve the expected reuse in the scenarios covered by incremental beta.
    
    r? @michaelwoerister
rustc: ./syntex-0.42.2
cargo rustc -p syntex_syntax  -- -Ztime-passes -Zinput-stats
   Compiling syntex_syntax v0.42.0
time: 0.130; rss: 64MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 64MB	recursion limit
time: 0.000; rss: 64MB	crate injection
time: 0.000; rss: 64MB	plugin loading
time: 0.000; rss: 64MB	plugin registration
time: 0.322; rss: 137MB	expansion
time: 0.000; rss: 137MB	maybe building test harness
time: 0.006; rss: 137MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 137MB	checking for inline asm in case the target doesn't support it
time: 0.014; rss: 137MB	complete gated feature checking
time: 0.024; rss: 137MB	early lint checks
time: 0.007; rss: 137MB	AST validation
time: 0.101; rss: 152MB	name resolution
time: 0.089; rss: 177MB	lowering ast -> hir
time: 0.021; rss: 185MB	indexing hir
time: 0.006; rss: 185MB	attribute checking
time: 0.005; rss: 143MB	language item collection
time: 0.011; rss: 143MB	lifetime resolution
time: 0.000; rss: 143MB	looking for entry point
time: 0.000; rss: 143MB	looking for plugin registrar
time: 0.078; rss: 162MB	region resolution
time: 0.005; rss: 162MB	loop checking
time: 0.005; rss: 162MB	static item recursion checking
time: 0.331; rss: 163MB	compute_incremental_hashes_map
time: 0.000; rss: 163MB	load_dep_graph
time: 0.048; rss: 168MB	type collecting
time: 0.001; rss: 168MB	variance inference
time: 0.002; rss: 168MB	impl wf inference
time: 0.018; rss: 170MB	coherence checking
time: 0.091; rss: 172MB	wf checking
time: 0.182; rss: 174MB	item-types checking
time: 6.655; rss: 217MB	item-bodies checking
time: 0.000; rss: 217MB	drop-impl checking
time: 0.280; rss: 238MB	const checking
time: 0.050; rss: 238MB	privacy checking
time: 0.006; rss: 238MB	stability index
time: 0.018; rss: 238MB	intrinsic checking
time: 0.015; rss: 238MB	effect checking
time: 0.047; rss: 238MB	match checking
time: 0.081; rss: 231MB	liveness checking
time: 0.192; rss: 231MB	rvalue checking
time: 0.576; rss: 406MB	MIR dump
  time: 0.061; rss: 412MB	SimplifyCfg
  time: 0.075; rss: 412MB	QualifyAndPromoteConstants
  time: 0.109; rss: 412MB	TypeckMir
  time: 0.004; rss: 412MB	SimplifyBranches
  time: 0.031; rss: 412MB	SimplifyCfg
time: 0.281; rss: 412MB	MIR cleanup and validation
time: 0.576; rss: 415MB	borrow checking
time: 0.020; rss: 416MB	reachability checking
time: 0.041; rss: 416MB	death checking
time: 0.036; rss: 418MB	stability checking
time: 0.000; rss: 418MB	unused lib feature checking
time: 0.212; rss: 418MB	lint checking
time: 0.000; rss: 418MB	resolving dependency formats
  time: 0.003; rss: 418MB	NoLandingPads
  time: 0.027; rss: 418MB	SimplifyCfg
  time: 0.077; rss: 425MB	EraseRegions
  time: 0.012; rss: 425MB	AddCallGuards
  time: 0.303; rss: 444MB	ElaborateDrops
  time: 0.003; rss: 444MB	NoLandingPads
  time: 0.053; rss: 444MB	SimplifyCfg
  time: 0.030; rss: 444MB	InstCombine
  time: 0.013; rss: 444MB	Deaggregator
  time: 0.002; rss: 444MB	CopyPropagation
  time: 0.036; rss: 445MB	SimplifyLocals
  time: 0.010; rss: 445MB	AddCallGuards
  time: 0.003; rss: 445MB	PreTrans
time: 0.572; rss: 445MB	MIR optimisations
  time: 0.078; rss: 453MB	write metadata
  time: 0.429; rss: 466MB	translation item collection
  time: 0.071; rss: 473MB	codegen unit partitioning
  time: 0.048; rss: 718MB	internalize symbols
time: 5.000; rss: 718MB	translation
time: 0.000; rss: 718MB	assert dep graph
time: 0.000; rss: 718MB	serialize dep graph
  time: 0.532; rss: 412MB	llvm function passes [0]
  time: 0.261; rss: 421MB	llvm module passes [0]
  time: 10.434; rss: 410MB	codegen passes [0]
  time: 0.000; rss: 410MB	codegen passes [0]
time: 12.104; rss: 410MB	LLVM passes
time: 0.000; rss: 410MB	serialize work products
time: 0.346; rss: 99MB	linking
done
