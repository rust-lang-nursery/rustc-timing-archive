commit 6b076c2daa36d80c103812c1775cf099ea8ef0bf
Merge: 8e2a577 90afb85
Author: bors <bors@rust-lang.org>
Date:   Thu Feb 18 16:29:55 2016 +0000

    Auto merge of #31734 - aliclark:bsd-stat-fixes, r=alexcrichton
    
    In https://github.com/rust-lang/rust/issues/25155 the os::freebsd::raw stat was split for the x86 vs. x86-64 cases, which appears to have been done to implement the padding on the end of struct stat for the x86 case (the struct is otherwise the same notwistanding the size of long).
    
    This PR de-duplicates the struct using #[cfg(target_arch = "x86")] for the __unused field, which also fixes the definitions which had sinced changed with the LFS work d088b671872f1df6993ccca6fa6139ebed0a8cf3.
    
    Also changed definitions to c_long for dragonfly and freebsd where appropriate.
    
    Also removes some unused imports that the compiler was complaining about.
    
    dragonfly's long time_t:
    https://gitweb.dragonflybsd.org/dragonfly.git/blob/a2a57c243ff8016578bc559f8603fb25bbcf1768:/lib/libstand/machine/stdint.h
    
    freebsd's long time_t:
    https://svnweb.freebsd.org/base/release/10.1.0/sys/x86/include/_types.h?view=markup
    https://github.com/rust-lang/rust/blob/d088b671872f1df6993ccca6fa6139ebed0a8cf3/src/liblibc/lib.rs#L980
    
    freebsd's padding for i686 stat:
    https://svnweb.freebsd.org/base/release/10.1.0/sys/sys/stat.h?view=markup#l139
    https://github.com/rust-lang/rust/blob/d088b671872f1df6993ccca6fa6139ebed0a8cf3/src/liblibc/lib.rs#L1038
rustc: ./piston-image-0.3.11
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling lzw v0.8.0
   Compiling gcc v0.3.24
   Compiling rustc-serialize v0.3.18
   Compiling libc v0.2.7
   Compiling bitflags v0.4.0
   Compiling byteorder v0.3.13
   Compiling color_quant v1.0.0
   Compiling glob v0.2.10
   Compiling gif v0.5.1
   Compiling rand v0.3.14
   Compiling miniz-sys v0.1.7
   Compiling flate2 v0.2.13
   Compiling num v0.1.31
   Compiling png v0.3.1
   Compiling enum_primitive v0.0.1
   Compiling image v0.3.11 (file:///root/benchmarks/piston-image-0.3.11)
time: 0.047; rss: 48MB	parsing
Lines of code:             10676
Pre-expansion node count:  84646
time: 0.016; rss: 48MB	configuration 1
time: 0.000; rss: 48MB	recursion limit
time: 0.001; rss: 48MB	gated macro checking
time: 0.000; rss: 48MB	crate injection
time: 0.005; rss: 53MB	macro loading
time: 0.000; rss: 53MB	plugin loading
time: 0.000; rss: 53MB	plugin registration
time: 0.118; rss: 57MB	expansion
time: 0.004; rss: 57MB	complete gated feature checking 1
time: 0.027; rss: 57MB	configuration 2
time: 0.000; rss: 57MB	gated configuration checking
time: 0.013; rss: 57MB	maybe building test harness
time: 0.012; rss: 57MB	prelude injection
time: 0.001; rss: 57MB	checking that all macro invocations are gone
time: 0.000; rss: 57MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 57MB	complete gated feature checking 2
time: 0.001; rss: 57MB	const fn bodies and arguments
Post-expansion node count: 144338
time: 0.012; rss: 57MB	assigning node ids
time: 0.020; rss: 68MB	lowering ast -> hir
time: 0.005; rss: 70MB	indexing hir
time: 0.000; rss: 70MB	attribute checking
time: 0.011; rss: 70MB	early lint checks
time: 0.003; rss: 63MB	external crate/lib resolution
time: 0.001; rss: 63MB	language item collection
time: 0.028; rss: 80MB	resolution
time: 0.002; rss: 80MB	lifetime resolution
time: 0.000; rss: 80MB	looking for entry point
time: 0.000; rss: 80MB	looking for plugin registrar
time: 0.010; rss: 87MB	region resolution
time: 0.001; rss: 87MB	loop checking
time: 0.001; rss: 87MB	static item recursion checking
time: 0.010; rss: 91MB	type collecting
time: 0.000; rss: 91MB	variance inference
time: 0.029; rss: 108MB	coherence checking
time: 0.148; rss: 111MB	wf checking
time: 0.047; rss: 112MB	item-types checking
time: 1.356; rss: 142MB	item-bodies checking
time: 0.000; rss: 142MB	drop-impl checking
time: 0.067; rss: 144MB	const checking
time: 0.014; rss: 144MB	privacy checking
time: 0.001; rss: 144MB	stability index
time: 0.009; rss: 144MB	intrinsic checking
time: 0.003; rss: 144MB	effect checking
time: 0.024; rss: 144MB	match checking
time: 0.092; rss: 150MB	MIR dump
time: 0.000; rss: 150MB	MIR passes
time: 0.010; rss: 150MB	liveness checking
time: 0.142; rss: 150MB	borrow checking
time: 0.072; rss: 150MB	rvalue checking
time: 0.004; rss: 150MB	reachability checking
time: 0.009; rss: 150MB	death checking
time: 0.010; rss: 153MB	stability checking
time: 0.000; rss: 153MB	unused lib feature checking
time: 0.082; rss: 153MB	lint checking
time: 0.000; rss: 153MB	resolving dependency formats
time: 0.007; rss: 153MB	erasing regions from MIR
  time: 1.233; rss: 170MB	translation item collection
  time: 0.212; rss: 259MB	write metadata
time: 3.564; rss: 259MB	translation
  time: 0.093; rss: 162MB	llvm function passes [0]
  time: 0.040; rss: 164MB	llvm module passes [0]
  time: 1.698; rss: 170MB	codegen passes [0]
  time: 0.001; rss: 120MB	codegen passes [0]
time: 2.016; rss: 117MB	LLVM passes
time: 0.149; rss: 118MB	linking
done
