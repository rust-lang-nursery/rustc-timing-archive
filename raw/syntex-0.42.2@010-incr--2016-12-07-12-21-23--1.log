commit 209308439a1099b285520459f57e380f18793c07
Merge: 7846610 d6ec686
Author: bors <bors@rust-lang.org>
Date:   Wed Dec 7 16:32:48 2016 +0000

    Auto merge of #38105 - ollie27:rustdoc_deterministic_js, r=GuillaumeGomez
    
    rustdoc: Sort lines in search index and implementors js
    
    This means the files are generated deterministically even with rustdoc running in parallel.
    
    Fixes the first part of #30220.
rustc: ./syntex-0.42.2@010-incr@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.127; rss: 73MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 73MB	recursion limit
time: 0.000; rss: 73MB	crate injection
time: 0.000; rss: 73MB	plugin loading
time: 0.000; rss: 73MB	plugin registration
time: 0.330; rss: 147MB	expansion
time: 0.000; rss: 147MB	maybe building test harness
time: 0.006; rss: 147MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 147MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 147MB	complete gated feature checking
time: 0.024; rss: 147MB	early lint checks
time: 0.007; rss: 147MB	AST validation
time: 0.104; rss: 162MB	name resolution
time: 0.118; rss: 196MB	lowering ast -> hir
time: 0.011; rss: 188MB	indexing hir
time: 0.006; rss: 188MB	attribute checking
time: 0.002; rss: 150MB	language item collection
time: 0.014; rss: 152MB	lifetime resolution
time: 0.000; rss: 152MB	looking for entry point
time: 0.000; rss: 152MB	looking for plugin registrar
time: 0.086; rss: 173MB	region resolution
time: 0.008; rss: 173MB	loop checking
time: 0.002; rss: 173MB	static item recursion checking
time: 0.382; rss: 174MB	compute_incremental_hashes_map
time: 0.000; rss: 174MB	load_dep_graph
time: 0.009; rss: 175MB	stability index
time: 0.028; rss: 177MB	stability checking
time: 0.070; rss: 183MB	type collecting
time: 0.005; rss: 183MB	variance inference
time: 0.014; rss: 188MB	impl wf inference
time: 0.038; rss: 192MB	coherence checking
time: 0.090; rss: 195MB	wf checking
time: 0.217; rss: 203MB	item-types checking
time: 3.753; rss: 254MB	item-bodies checking
time: 0.000; rss: 254MB	drop-impl checking
time: 0.321; rss: 266MB	const checking
time: 0.059; rss: 267MB	privacy checking
time: 0.041; rss: 273MB	intrinsic checking
time: 0.016; rss: 273MB	effect checking
time: 0.051; rss: 273MB	match checking
time: 0.051; rss: 281MB	liveness checking
time: 0.184; rss: 281MB	rvalue checking
time: 0.584; rss: 454MB	MIR dump
  time: 0.065; rss: 460MB	SimplifyCfg
  time: 0.079; rss: 460MB	QualifyAndPromoteConstants
  time: 0.178; rss: 478MB	TypeckMir
  time: 0.005; rss: 478MB	SimplifyBranches
  time: 0.032; rss: 478MB	SimplifyCfg
time: 0.359; rss: 478MB	MIR cleanup and validation
time: 0.493; rss: 481MB	borrow checking
time: 0.024; rss: 481MB	reachability checking
time: 0.040; rss: 481MB	death checking
time: 0.000; rss: 481MB	unused lib feature checking
time: 0.183; rss: 481MB	lint checking
time: 0.000; rss: 481MB	resolving dependency formats
  time: 0.004; rss: 481MB	NoLandingPads
  time: 0.027; rss: 481MB	SimplifyCfg
  time: 0.078; rss: 488MB	EraseRegions
  time: 0.012; rss: 488MB	AddCallGuards
  time: 0.313; rss: 510MB	ElaborateDrops
  time: 0.004; rss: 510MB	NoLandingPads
  time: 0.054; rss: 511MB	SimplifyCfg
  time: 0.030; rss: 510MB	InstCombine
  time: 0.013; rss: 510MB	Deaggregator
  time: 0.004; rss: 510MB	CopyPropagation
  time: 0.037; rss: 510MB	SimplifyLocals
  time: 0.010; rss: 510MB	AddCallGuards
  time: 0.003; rss: 510MB	PreTrans
time: 0.589; rss: 510MB	MIR optimisations
  time: 0.083; rss: 519MB	write metadata
  time: 0.425; rss: 531MB	translation item collection
  time: 0.075; rss: 536MB	codegen unit partitioning
  time: 0.054; rss: 1440MB	internalize symbols
time: 14.087; rss: 1440MB	translation
time: 0.000; rss: 1440MB	assert dep graph
time: 2.050; rss: 1469MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.004; rss: 1181MB	llvm function passes [0]
time: 0.000; rss: 1181MB	llvm module passes [0]
time: 0.006; rss: 1181MB	llvm function passes [1]
time: 0.000; rss: 1181MB	llvm module passes [1]
time: 0.001; rss: 1181MB	llvm function passes [2]
time: 0.000; rss: 1181MB	llvm module passes [2]
time: 0.012; rss: 1182MB	codegen passes [0]
time: 0.005; rss: 1182MB	llvm function passes [3]
time: 0.000; rss: 1182MB	llvm module passes [3]
time: 0.001; rss: 1184MB	llvm function passes [0]
time: 0.006; rss: 1185MB	llvm function passes [5]
time: 0.001; rss: 1186MB	llvm module passes [5]
time: 0.006; rss: 1188MB	llvm module passes [0]
time: 0.019; rss: 1191MB	llvm function passes [4]
time: 0.037; rss: 1194MB	codegen passes [0]
time: 0.050; rss: 1195MB	codegen passes [1]
time: 0.000; rss: 1195MB	llvm function passes [1]
time: 0.000; rss: 1195MB	llvm module passes [1]
time: 0.001; rss: 1195MB	codegen passes [1]
time: 0.003; rss: 1196MB	llvm function passes [1]
time: 0.041; rss: 1196MB	llvm function passes [10]
time: 0.001; rss: 1196MB	llvm module passes [1]
time: 0.050; rss: 1196MB	codegen passes [2]
time: 0.063; rss: 1197MB	llvm function passes [6]
time: 0.039; rss: 1197MB	llvm module passes [4]
time: 0.001; rss: 1199MB	llvm function passes [17]
time: 0.000; rss: 1199MB	llvm module passes [17]
time: 0.006; rss: 1199MB	llvm module passes [6]
time: 0.014; rss: 1199MB	llvm module passes [10]
time: 0.001; rss: 1199MB	llvm function passes [15]
time: 0.000; rss: 1199MB	llvm module passes [15]
time: 0.000; rss: 1201MB	llvm function passes [18]
time: 0.000; rss: 1201MB	llvm module passes [18]
time: 0.048; rss: 1202MB	llvm function passes [0]
time: 0.007; rss: 1203MB	llvm module passes [0]
time: 0.100; rss: 1203MB	llvm function passes [9]
time: 0.106; rss: 1206MB	codegen passes [3]
time: 0.089; rss: 1210MB	llvm function passes [16]
time: 0.000; rss: 1211MB	llvm function passes [20]
time: 0.000; rss: 1211MB	llvm module passes [20]
time: 0.001; rss: 1211MB	codegen passes [20]
time: 0.058; rss: 1215MB	codegen passes [15]
time: 0.093; rss: 1215MB	codegen passes [18]
time: 0.109; rss: 1216MB	llvm function passes [12]
time: 0.077; rss: 1216MB	llvm module passes [9]
time: 0.063; rss: 1220MB	codegen passes [17]
time: 0.062; rss: 1220MB	llvm module passes [16]
time: 0.024; rss: 1220MB	llvm function passes [18]
time: 0.019; rss: 1221MB	llvm module passes [12]
time: 0.008; rss: 1222MB	llvm module passes [18]
time: 0.093; rss: 1223MB	llvm function passes [21]
time: 0.003; rss: 1223MB	llvm function passes [28]
time: 0.002; rss: 1224MB	llvm module passes [28]
time: 0.134; rss: 1226MB	llvm function passes [3]
time: 0.215; rss: 1227MB	llvm function passes [11]
time: 0.086; rss: 1227MB	llvm function passes [15]
time: 0.283; rss: 1228MB	llvm function passes [7]
time: 0.046; rss: 1232MB	llvm module passes [3]
time: 0.138; rss: 1239MB	llvm function passes [30]
time: 0.166; rss: 1240MB	llvm function passes [25]
time: 0.256; rss: 1242MB	codegen passes [1]
time: 0.004; rss: 1243MB	llvm function passes [37]
time: 0.000; rss: 1243MB	llvm function passes [1]
time: 0.000; rss: 1244MB	codegen passes [39]
time: 0.370; rss: 1244MB	codegen passes [5]
time: 0.012; rss: 1245MB	llvm module passes [1]
time: 0.160; rss: 1248MB	llvm function passes [26]
time: 0.051; rss: 1249MB	llvm module passes [30]
time: 0.016; rss: 1250MB	llvm module passes [26]
time: 0.018; rss: 1250MB	codegen passes [1]
time: 0.050; rss: 1251MB	llvm module passes [37]
time: 0.271; rss: 1251MB	llvm function passes [24]
time: 0.300; rss: 1252MB	llvm function passes [20]
time: 0.075; rss: 1253MB	llvm module passes [25]
time: 0.223; rss: 1254MB	llvm module passes [21]
time: 0.329; rss: 1255MB	llvm function passes [22]
time: 0.117; rss: 1254MB	llvm function passes [31]
time: 0.138; rss: 1251MB	llvm function passes [35]
time: 0.159; rss: 1252MB	llvm function passes [34]
time: 0.261; rss: 1251MB	llvm function passes [29]
time: 0.126; rss: 1252MB	llvm function passes [38]
time: 0.028; rss: 1253MB	llvm module passes [35]
time: 0.397; rss: 1255MB	llvm function passes [23]
time: 0.514; rss: 1256MB	llvm function passes [13]
time: 0.539; rss: 1257MB	llvm function passes [8]
time: 0.498; rss: 1257MB	llvm function passes [2]
time: 0.289; rss: 1257MB	llvm module passes [15]
time: 0.097; rss: 1257MB	llvm module passes [31]
time: 0.084; rss: 1262MB	llvm module passes [38]
time: 0.327; rss: 1265MB	llvm module passes [11]
time: 0.334; rss: 1272MB	llvm function passes [32]
time: 0.493; rss: 1272MB	llvm function passes [19]
time: 0.354; rss: 1274MB	llvm module passes [7]
time: 0.211; rss: 1281MB	llvm module passes [34]
time: 0.236; rss: 1281MB	llvm module passes [20]
time: 0.204; rss: 1281MB	llvm module passes [29]
time: 0.253; rss: 1283MB	codegen passes [37]
time: 0.375; rss: 1283MB	llvm function passes [33]
time: 0.102; rss: 1286MB	llvm module passes [19]
time: 0.379; rss: 1286MB	llvm function passes [36]
time: 0.301; rss: 1287MB	llvm module passes [22]
time: 0.335; rss: 1289MB	llvm module passes [24]
time: 0.581; rss: 1291MB	llvm function passes [17]
time: 0.197; rss: 1292MB	llvm module passes [32]
time: 0.276; rss: 1293MB	llvm module passes [2]
time: 0.475; rss: 1295MB	codegen passes [28]
time: 0.846; rss: 1307MB	llvm function passes [14]
time: 0.639; rss: 1309MB	llvm function passes [27]
time: 0.483; rss: 1318MB	llvm module passes [13]
time: 0.582; rss: 1322MB	llvm module passes [23]
time: 0.380; rss: 1324MB	llvm module passes [36]
time: 0.218; rss: 1329MB	llvm module passes [27]
time: 0.539; rss: 1335MB	llvm module passes [33]
time: 0.778; rss: 1347MB	llvm module passes [8]
time: 0.832; rss: 1363MB	codegen passes [26]
time: 1.140; rss: 1365MB	codegen passes [6]
time: 0.652; rss: 1365MB	llvm module passes [17]
time: 1.202; rss: 1385MB	codegen passes [4]
time: 0.664; rss: 1388MB	llvm module passes [14]
time: 0.901; rss: 1384MB	codegen passes [38]
time: 1.431; rss: 1398MB	codegen passes [18]
time: 1.449; rss: 1392MB	codegen passes [0]
time: 1.706; rss: 1388MB	codegen passes [10]
time: 1.565; rss: 1366MB	codegen passes [12]
time: 1.490; rss: 1398MB	codegen passes [31]
time: 1.800; rss: 1399MB	codegen passes [30]
time: 2.103; rss: 1411MB	codegen passes [9]
time: 2.015; rss: 1428MB	codegen passes [25]
time: 1.968; rss: 1428MB	codegen passes [29]
time: 2.229; rss: 1421MB	codegen passes [16]
time: 2.350; rss: 1429MB	codegen passes [21]
time: 3.033; rss: 1460MB	codegen passes [3]
time: 2.745; rss: 1453MB	codegen passes [35]
time: 2.996; rss: 1481MB	codegen passes [15]
time: 2.847; rss: 1490MB	codegen passes [34]
time: 2.811; rss: 1544MB	codegen passes [24]
time: 3.090; rss: 1549MB	codegen passes [11]
time: 3.359; rss: 1543MB	codegen passes [19]
time: 3.882; rss: 1645MB	codegen passes [2]
time: 3.942; rss: 1644MB	codegen passes [22]
time: 3.914; rss: 1616MB	codegen passes [32]
time: 3.961; rss: 1593MB	codegen passes [36]
time: 4.364; rss: 1583MB	codegen passes [7]
time: 4.561; rss: 1558MB	codegen passes [20]
time: 4.558; rss: 1555MB	codegen passes [33]
time: 4.137; rss: 1505MB	codegen passes [23]
time: 4.449; rss: 1491MB	codegen passes [27]
time: 4.861; rss: 1456MB	codegen passes [13]
time: 5.167; rss: 1465MB	codegen passes [8]
time: 5.023; rss: 1377MB	codegen passes [14]
time: 5.331; rss: 1302MB	codegen passes [17]
time: 8.420; rss: 1297MB	LLVM passes
time: 0.000; rss: 1297MB	serialize work products
time: 1.051; rss: 262MB	linking
done
