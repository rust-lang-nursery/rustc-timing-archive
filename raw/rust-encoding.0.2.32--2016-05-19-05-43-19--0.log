commit 0c5d651d0bb9e0471795bd743c8ecfd8f9a89844
Merge: 9c6904c b0a317d
Author: bors <bors@rust-lang.org>
Date:   Wed May 18 21:19:07 2016 -0700

    Auto merge of #33688 - jonathandturner:fix_old_school, r=nikomatsakis
    
    Fix for old school error issues, improvements to new school
    
    This PR:
    * Fixes some old school error issues, specifically #33559, #33543, #33366
    * Improves wording borrowck errors with match patterns
    * De-emphasize multi-line spans, so we don't color the single source character when we're trying to say "span starts here"
    * Rollup of #33392 (which should help fix #33390)
    
    r? @nikomatsakis
rustc: ./rust-encoding.0.2.32
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling encoding_index_tests v0.1.4 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-singlebyte v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-korean v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-tradchinese v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-japanese v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-simpchinese v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding v0.2.32 (file:///root/benchmarks/rust-encoding.0.2.32)
time: 0.024; rss: 51MB	parsing
Lines of code:             6441
Pre-expansion node count:  30537
time: 0.006; rss: 57MB	configuration 1
time: 0.000; rss: 57MB	recursion limit
time: 0.000; rss: 57MB	crate injection
time: 0.019; rss: 89MB	macro loading
time: 0.000; rss: 89MB	plugin loading
time: 0.000; rss: 89MB	plugin registration
time: 0.044; rss: 92MB	expansion
time: 0.006; rss: 92MB	configuration 2
time: 0.000; rss: 92MB	gated configuration checking
time: 0.003; rss: 92MB	maybe building test harness
time: 0.003; rss: 92MB	prelude injection
time: 0.000; rss: 92MB	checking that all macro invocations are gone
time: 0.000; rss: 92MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 92MB	complete gated feature checking
Post-expansion node count: 41376
time: 0.003; rss: 92MB	assigning node ids
time: 0.001; rss: 92MB	collecting defs
time: 0.001; rss: 92MB	external crate/lib resolution
time: 0.002; rss: 92MB	early lint checks
time: 0.008; rss: 94MB	name resolution
time: 0.005; rss: 96MB	lowering ast -> hir
time: 0.000; rss: 96MB	indexing hir
time: 0.000; rss: 96MB	attribute checking
time: 0.000; rss: 95MB	language item collection
time: 0.000; rss: 95MB	lifetime resolution
time: 0.000; rss: 95MB	looking for entry point
time: 0.000; rss: 95MB	looking for plugin registrar
time: 0.002; rss: 97MB	region resolution
time: 0.000; rss: 97MB	loop checking
time: 0.000; rss: 97MB	static item recursion checking
time: 0.000; rss: 97MB	load_dep_graph
time: 0.005; rss: 99MB	type collecting
time: 0.000; rss: 99MB	variance inference
time: 0.021; rss: 103MB	coherence checking
time: 0.023; rss: 103MB	wf checking
time: 0.015; rss: 103MB	item-types checking
time: 0.222; rss: 110MB	item-bodies checking
time: 0.000; rss: 110MB	drop-impl checking
time: 0.013; rss: 110MB	const checking
time: 0.002; rss: 110MB	privacy checking
time: 0.000; rss: 110MB	stability index
time: 0.002; rss: 110MB	intrinsic checking
time: 0.000; rss: 110MB	effect checking
time: 0.007; rss: 110MB	match checking
time: 0.002; rss: 110MB	liveness checking
time: 0.008; rss: 110MB	rvalue checking
time: 0.023; rss: 117MB	MIR dump
time: 0.014; rss: 116MB	MIR passes
time: 0.024; rss: 116MB	borrow checking
time: 0.000; rss: 116MB	reachability checking
time: 0.002; rss: 116MB	death checking
time: 0.002; rss: 116MB	stability checking
time: 0.000; rss: 116MB	unused lib feature checking
time: 0.024; rss: 116MB	lint checking
time: 0.000; rss: 116MB	resolving dependency formats
time: 0.004; rss: 116MB	Prepare MIR codegen passes
  time: 0.029; rss: 118MB	translation item collection
  time: 0.001; rss: 118MB	codegen unit partitioning
  time: 0.058; rss: 154MB	write metadata
time: 0.347; rss: 154MB	translation
time: 0.000; rss: 154MB	assert dep graph
time: 0.000; rss: 154MB	serialize dep graph
  time: 0.026; rss: 117MB	llvm function passes [0]
  time: 0.050; rss: 122MB	llvm module passes [0]
  time: 0.575; rss: 126MB	codegen passes [0]
  time: 0.000; rss: 111MB	codegen passes [0]
time: 0.716; rss: 111MB	LLVM passes
time: 0.054; rss: 109MB	linking
done
