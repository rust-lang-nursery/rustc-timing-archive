commit d64b7030658c839c60d7c7165e8be19283c3f28c
Merge: 2217bd7 49c6b3c
Author: bors <bors@rust-lang.org>
Date:   Fri Nov 25 20:19:47 2016 -0600

    Auto merge of #37960 - samestep:five, r=frewsxcv
    
    Use literal 5 instead of five in book section 4.1
    
    The other two code snippets in this sentence are valid code, so it makes more sense to use the literal `5` rather than the invalid symbol `five`.
rustc: ./issue-32278-big-array-of-strings
cargo rustc  -- -Ztime-passes -Zinput-stats
   Compiling issue-32278-big-array-of-strings v0.1.0 (file:///root/benchmarks/issue-32278-big-array-of-strings)
time: 0.115; rss: 58MB	parsing
Lines of code:             65577
Pre-expansion node count:  65552
time: 0.000; rss: 58MB	recursion limit
time: 0.000; rss: 58MB	crate injection
time: 0.000; rss: 58MB	plugin loading
time: 0.000; rss: 58MB	plugin registration
time: 0.024; rss: 84MB	expansion
time: 0.000; rss: 84MB	maybe building test harness
time: 0.001; rss: 84MB	maybe creating a macro crate
Post-expansion node count: 65565
time: 0.000; rss: 84MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 84MB	complete gated feature checking
time: 0.004; rss: 84MB	early lint checks
time: 0.000; rss: 84MB	AST validation
time: 0.002; rss: 84MB	name resolution
time: 0.013; rss: 92MB	lowering ast -> hir
time: 0.007; rss: 94MB	indexing hir
time: 0.000; rss: 94MB	attribute checking
time: 0.000; rss: 84MB	language item collection
time: 0.000; rss: 84MB	lifetime resolution
time: 0.000; rss: 84MB	looking for entry point
time: 0.000; rss: 84MB	looking for plugin registrar
time: 0.014; rss: 89MB	region resolution
time: 0.000; rss: 89MB	loop checking
time: 0.001; rss: 89MB	static item recursion checking
time: 0.019; rss: 89MB	compute_incremental_hashes_map
time: 0.000; rss: 89MB	load_dep_graph
time: 0.000; rss: 89MB	type collecting
time: 0.000; rss: 89MB	variance inference
time: 0.000; rss: 89MB	impl wf inference
time: 0.004; rss: 91MB	coherence checking
time: 0.000; rss: 91MB	wf checking
time: 0.885; rss: 103MB	item-types checking
time: 0.000; rss: 103MB	item-bodies checking
time: 0.000; rss: 103MB	drop-impl checking
time: 0.023; rss: 103MB	const checking
time: 0.001; rss: 103MB	privacy checking
time: 0.000; rss: 103MB	stability index
time: 0.000; rss: 103MB	intrinsic checking
time: 0.000; rss: 103MB	effect checking
time: 0.000; rss: 103MB	match checking
time: 0.000; rss: 103MB	liveness checking
time: 0.000; rss: 103MB	rvalue checking
time: 0.037; rss: 109MB	MIR dump
  time: 0.000; rss: 109MB	SimplifyCfg
  time: 0.001; rss: 109MB	QualifyAndPromoteConstants
  time: 0.001; rss: 109MB	TypeckMir
  time: 0.000; rss: 109MB	SimplifyBranches
  time: 0.000; rss: 109MB	SimplifyCfg
time: 0.001; rss: 109MB	MIR cleanup and validation
time: 0.001; rss: 109MB	borrow checking
time: 0.000; rss: 109MB	reachability checking
time: 0.000; rss: 109MB	death checking
time: 0.000; rss: 109MB	stability checking
time: 0.000; rss: 109MB	unused lib feature checking
time: 0.023; rss: 109MB	lint checking
time: 0.001; rss: 109MB	resolving dependency formats
  time: 0.000; rss: 109MB	NoLandingPads
  time: 0.000; rss: 109MB	SimplifyCfg
  time: 0.001; rss: 109MB	EraseRegions
  time: 0.000; rss: 109MB	AddCallGuards
  time: 0.000; rss: 109MB	ElaborateDrops
  time: 0.000; rss: 109MB	NoLandingPads
  time: 0.000; rss: 109MB	SimplifyCfg
  time: 0.000; rss: 109MB	InstCombine
  time: 0.000; rss: 109MB	Deaggregator
  time: 0.000; rss: 109MB	CopyPropagation
  time: 0.000; rss: 109MB	SimplifyLocals
  time: 0.000; rss: 109MB	AddCallGuards
  time: 0.000; rss: 109MB	PreTrans
time: 0.001; rss: 109MB	MIR optimisations
  time: 0.000; rss: 109MB	write metadata
  time: 0.000; rss: 109MB	translation item collection
  time: 0.000; rss: 109MB	codegen unit partitioning
  time: 0.001; rss: 121MB	internalize symbols
time: 0.056; rss: 121MB	translation
time: 0.000; rss: 121MB	assert dep graph
time: 0.000; rss: 121MB	serialize dep graph
  time: 0.008; rss: 90MB	llvm function passes [0]
  time: 0.000; rss: 90MB	llvm module passes [0]
  time: 0.202; rss: 90MB	codegen passes [0]
  time: 0.000; rss: 90MB	codegen passes [0]
time: 0.211; rss: 90MB	LLVM passes
time: 0.000; rss: 90MB	serialize work products
  time: 0.157; rss: 80MB	running linker
time: 0.159; rss: 80MB	linking
done
