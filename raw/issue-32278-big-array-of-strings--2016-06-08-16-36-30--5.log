commit 4b240fe96a8b8fcaa412624c398547dbc447a81e
Merge: d3e014e 1564e92
Author: bors <bors@rust-lang.org>
Date:   Wed Jun 8 07:43:29 2016 -0700

    Auto merge of #34083 - alexcrichton:dumb-hack, r=nrc
    
    rustc: Try to contain prepends to PATH
    
    This commit attempts to bring our prepends to PATH on Windows when loading
    plugins because we've been seeing quite a few issues with failing to spawn a
    process on Windows, the leading theory of which is that PATH is too large as a
    result of this. Currently this is mostly a stab in the dark as it's not
    confirmed to actually fix the problem, but it's probably not a bad change to
    have anyway!
    
    cc #33844
    Closes #17360
rustc: ./issue-32278-big-array-of-strings
/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc big-array-of-strings.rs -Ztime-passes -Zinput-stats
time: 0.148; rss: 68MB	parsing
Lines of code:             65577
Pre-expansion node count:  65552
time: 0.011; rss: 68MB	configuration 1
time: 0.000; rss: 68MB	recursion limit
time: 0.000; rss: 68MB	crate injection
time: 0.019; rss: 101MB	macro loading
time: 0.000; rss: 101MB	plugin loading
time: 0.000; rss: 101MB	plugin registration
time: 0.029; rss: 104MB	expansion
time: 0.000; rss: 104MB	gated configuration checking
time: 0.006; rss: 104MB	maybe building test harness
time: 0.005; rss: 104MB	prelude injection
time: 0.000; rss: 104MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 104MB	complete gated feature checking
Post-expansion node count: 65565
time: 0.006; rss: 104MB	assigning node ids
time: 0.001; rss: 104MB	collecting defs
time: 0.004; rss: 104MB	external crate/lib resolution
time: 0.008; rss: 104MB	early lint checks
time: 0.000; rss: 104MB	AST validation
time: 0.002; rss: 104MB	name resolution
time: 0.010; rss: 121MB	lowering ast -> hir
time: 0.002; rss: 124MB	indexing hir
time: 0.001; rss: 124MB	attribute checking
time: 0.001; rss: 114MB	language item collection
time: 0.001; rss: 114MB	lifetime resolution
time: 0.000; rss: 114MB	looking for entry point
time: 0.000; rss: 114MB	looking for plugin registrar
time: 0.007; rss: 121MB	region resolution
time: 0.001; rss: 121MB	loop checking
time: 0.001; rss: 121MB	static item recursion checking
time: 0.000; rss: 121MB	load_dep_graph
time: 0.000; rss: 121MB	type collecting
time: 0.000; rss: 121MB	variance inference
time: 0.005; rss: 123MB	coherence checking
time: 0.001; rss: 124MB	wf checking
time: 0.949; rss: 139MB	item-types checking
time: 0.000; rss: 139MB	item-bodies checking
time: 0.000; rss: 139MB	drop-impl checking
time: 0.019; rss: 143MB	const checking
time: 0.002; rss: 143MB	privacy checking
time: 0.001; rss: 143MB	stability index
time: 0.001; rss: 143MB	intrinsic checking
time: 0.001; rss: 143MB	effect checking
time: 0.001; rss: 143MB	match checking
time: 0.001; rss: 143MB	liveness checking
time: 0.000; rss: 143MB	rvalue checking
time: 0.057; rss: 150MB	MIR dump
time: 0.002; rss: 150MB	MIR passes
time: 0.001; rss: 150MB	borrow checking
time: 0.000; rss: 150MB	reachability checking
time: 0.001; rss: 150MB	death checking
time: 0.001; rss: 150MB	stability checking
time: 0.000; rss: 150MB	unused lib feature checking
time: 0.029; rss: 151MB	lint checking
time: 0.001; rss: 151MB	resolving dependency formats
time: 0.001; rss: 151MB	Prepare MIR codegen passes
  time: 0.000; rss: 152MB	write metadata
  time: 0.001; rss: 152MB	translation item collection
  time: 0.000; rss: 152MB	codegen unit partitioning
time: 0.090; rss: 152MB	translation
time: 0.000; rss: 152MB	assert dep graph
time: 0.000; rss: 152MB	serialize dep graph
  time: 0.003; rss: 107MB	llvm function passes [0]
  time: 0.000; rss: 107MB	llvm module passes [0]
  time: 0.162; rss: 109MB	codegen passes [0]
  time: 0.000; rss: 96MB	codegen passes [0]
time: 0.177; rss: 96MB	LLVM passes
  time: 0.183; rss: 96MB	running linker
time: 0.184; rss: 96MB	linking
done
