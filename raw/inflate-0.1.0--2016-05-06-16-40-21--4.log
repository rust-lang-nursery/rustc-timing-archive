commit 0cb9bc51759eed8ac12dc52456a2fbb7ddf495db
Merge: 102bab3 eeb2f6d
Author: bors <bors@rust-lang.org>
Date:   Fri May 6 11:57:16 2016 -0700

    Auto merge of #33472 - alexcrichton:fix-nightlies-again, r=brson
    
    mk: Try to fix nightlies again
    
    Looks like the real bug on nightlies is that the `llvm-pass` run-make test is
    not actually getting the value of `LLVM_CXXFLAGS` correct. Namely, it's blank!
    Now the only change #33093 which actually affected this is that the argument
    `$(LLVM_CXXFLAGS_$(2))` was moved up from a makefile rule into the definition of
    a variable. Sounds innocuous?
    
    Turns out the variable this was moved into is defined with `:=`, which means
    that it's not recursively expanded, which basically means that it's expanded
    immediately. Unfortunately part of this expansion involves running
    `llvm-config`, which doesn't exist at the start of distcheck build!
    
    This didn't show up on the bots because they run `make` *then* `make check`, and
    the first step builds llvm-config so the next time `make` is loaded everything
    is available. The distcheck bots, however, run just a plain `distcheck` so
    `make` doesn't exist ahead of time. You can see this in action where the
    distcheck bots start out with a bunch of "llvm-config not found" error messages.
    
    This commit just changes a few variables to be defined with `=` which
    essentially means they're lazily expanded. I did not run a full distcheck
    locally, but this makes the initial "llvm-config not found" error messages go
    away so I suspect that this is the fix.
    
    Closes #33379 (hopefully)
rustc: ./inflate-0.1.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling inflate v0.1.0 (file:///root/benchmarks/inflate-0.1.0)
time: 0.005; rss: 46MB	parsing
Lines of code:             956
Pre-expansion node count:  4761
time: 0.001; rss: 50MB	configuration 1
time: 0.000; rss: 50MB	recursion limit
time: 0.000; rss: 50MB	crate injection
time: 0.003; rss: 53MB	macro loading
time: 0.000; rss: 53MB	plugin loading
time: 0.000; rss: 53MB	plugin registration
time: 0.083; rss: 60MB	expansion
time: 0.009; rss: 60MB	configuration 2
time: 0.000; rss: 60MB	gated configuration checking
time: 0.004; rss: 60MB	maybe building test harness
time: 0.004; rss: 60MB	prelude injection
time: 0.000; rss: 60MB	checking that all macro invocations are gone
time: 0.000; rss: 60MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 60MB	complete gated feature checking
time: 0.000; rss: 60MB	const fn bodies and arguments
Post-expansion node count: 54797
time: 0.004; rss: 60MB	assigning node ids
time: 0.004; rss: 63MB	collecting defs
time: 0.001; rss: 63MB	external crate/lib resolution
time: 0.009; rss: 67MB	lowering ast -> hir
time: 0.001; rss: 67MB	indexing hir
time: 0.001; rss: 67MB	attribute checking
time: 0.003; rss: 67MB	early lint checks
time: 0.001; rss: 64MB	language item collection
time: 0.010; rss: 74MB	name resolution
time: 0.001; rss: 74MB	lifetime resolution
time: 0.000; rss: 74MB	looking for entry point
time: 0.000; rss: 74MB	looking for plugin registrar
time: 0.003; rss: 75MB	region resolution
time: 0.000; rss: 75MB	loop checking
time: 0.000; rss: 75MB	static item recursion checking
time: 0.000; rss: 75MB	load_dep_graph
time: 0.001; rss: 75MB	type collecting
time: 0.000; rss: 75MB	variance inference
time: 0.010; rss: 90MB	coherence checking
time: 0.002; rss: 90MB	wf checking
time: 0.002; rss: 90MB	item-types checking
time: 2.810; rss: 115MB	item-bodies checking
time: 0.000; rss: 115MB	drop-impl checking
time: 0.014; rss: 116MB	const checking
time: 0.001; rss: 116MB	privacy checking
time: 0.000; rss: 116MB	stability index
time: 0.000; rss: 116MB	intrinsic checking
time: 0.001; rss: 116MB	effect checking
time: 0.003; rss: 116MB	match checking
time: 0.060; rss: 115MB	liveness checking
time: 0.009; rss: 115MB	rvalue checking
time: 0.034; rss: 129MB	MIR dump
time: 0.012; rss: 125MB	MIR passes
time: 0.201; rss: 126MB	borrow checking
time: 0.000; rss: 126MB	reachability checking
time: 0.003; rss: 126MB	death checking
time: 0.002; rss: 126MB	stability checking
time: 0.000; rss: 126MB	unused lib feature checking
time: 0.023; rss: 127MB	lint checking
time: 0.000; rss: 127MB	resolving dependency formats
time: 0.005; rss: 128MB	Prepare MIR codegen passes
  time: 0.010; rss: 132MB	translation item collection
  time: 0.001; rss: 132MB	codegen unit partitioning
  time: 0.003; rss: 150MB	write metadata
time: 0.362; rss: 142MB	translation
time: 0.000; rss: 142MB	assert dep graph
time: 0.000; rss: 142MB	serialize dep graph
  time: 0.025; rss: 105MB	llvm function passes [0]
  time: 0.004; rss: 106MB	llvm module passes [0]
  time: 0.498; rss: 111MB	codegen passes [0]
  time: 0.000; rss: 100MB	codegen passes [0]
time: 0.570; rss: 100MB	LLVM passes
time: 0.058; rss: 99MB	linking
done
