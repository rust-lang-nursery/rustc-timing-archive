commit 7746a334da364e5e4c25360cd52e97691cbddc08
Merge: 90d9a51 a2434eb
Author: bors <bors@rust-lang.org>
Date:   Sat May 28 16:21:53 2016 -0700

    Auto merge of #33825 - alexcrichton:fix-beta, r=aturon
    
    mk: Fix bootstrapping cross-hosts on beta
    
    The beta builds are currently failing, unfortunately, due to what is presumably
    some odd behavior with our makefiles. The wrong bootstrap key is being used to
    generate the stage1 cross-compiled libraries, which fails the build.
    Interestingly enough if the targets are directly specified as part of the build
    then it works just fine! Just a bare `make` fails...
    
    Instead of trying to understand what's happening in the makefiles instead just
    tweak how we configure the bootstrap key in a way that's more likely to work.
rustc: ./regex.0.1.30
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling regex v0.1.30 (file:///root/benchmarks/regex.0.1.30)
time: 0.077; rss: 63MB	parsing
Lines of code:             8558
Pre-expansion node count:  57894
time: 0.012; rss: 63MB	configuration 1
time: 0.000; rss: 63MB	recursion limit
time: 0.000; rss: 63MB	crate injection
time: 0.018; rss: 91MB	macro loading
time: 0.000; rss: 91MB	plugin loading
time: 0.000; rss: 91MB	plugin registration
time: 0.073; rss: 98MB	expansion
time: 0.000; rss: 98MB	gated configuration checking
time: 0.008; rss: 98MB	maybe building test harness
time: 0.008; rss: 98MB	prelude injection
time: 0.001; rss: 98MB	checking that all macro invocations are gone
time: 0.000; rss: 98MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 98MB	complete gated feature checking
Post-expansion node count: 68033
time: 0.009; rss: 98MB	assigning node ids
time: 0.001; rss: 98MB	collecting defs
time: 0.001; rss: 98MB	external crate/lib resolution
time: 0.008; rss: 98MB	early lint checks
time: 0.008; rss: 100MB	name resolution
time: 0.011; rss: 110MB	lowering ast -> hir
time: 0.001; rss: 110MB	indexing hir
time: 0.001; rss: 110MB	attribute checking
time: 0.001; rss: 103MB	language item collection
time: 0.001; rss: 103MB	lifetime resolution
time: 0.000; rss: 103MB	looking for entry point
time: 0.000; rss: 103MB	looking for plugin registrar
time: 0.006; rss: 107MB	region resolution
time: 0.001; rss: 107MB	loop checking
time: 0.001; rss: 107MB	static item recursion checking
time: 0.000; rss: 107MB	load_dep_graph
time: 0.007; rss: 110MB	type collecting
time: 0.000; rss: 110MB	variance inference
time: 0.026; rss: 116MB	coherence checking
time: 0.015; rss: 116MB	wf checking
time: 0.357; rss: 122MB	item-types checking
time: 0.229; rss: 127MB	item-bodies checking
time: 0.000; rss: 127MB	drop-impl checking
time: 0.028; rss: 127MB	const checking
time: 0.003; rss: 127MB	privacy checking
time: 0.001; rss: 127MB	stability index
time: 0.002; rss: 127MB	intrinsic checking
time: 0.001; rss: 127MB	effect checking
time: 0.004; rss: 127MB	match checking
time: 0.002; rss: 127MB	liveness checking
time: 0.008; rss: 127MB	rvalue checking
time: 0.063; rss: 138MB	MIR dump
time: 0.022; rss: 138MB	MIR passes
time: 0.023; rss: 138MB	borrow checking
time: 0.000; rss: 138MB	reachability checking
time: 0.003; rss: 138MB	death checking
time: 0.002; rss: 138MB	stability checking
time: 0.000; rss: 138MB	unused lib feature checking
time: 0.030; rss: 138MB	lint checking
time: 0.000; rss: 138MB	resolving dependency formats
time: 0.005; rss: 140MB	Prepare MIR codegen passes
  time: 0.182; rss: 149MB	write metadata
  time: 0.097; rss: 151MB	translation item collection
  time: 0.001; rss: 151MB	codegen unit partitioning
time: 0.799; rss: 198MB	translation
time: 0.000; rss: 198MB	assert dep graph
time: 0.000; rss: 198MB	serialize dep graph
  time: 0.035; rss: 131MB	llvm function passes [0]
  time: 0.018; rss: 132MB	llvm module passes [0]
  time: 0.612; rss: 136MB	codegen passes [0]
  time: 0.001; rss: 118MB	codegen passes [0]
time: 0.741; rss: 115MB	LLVM passes
time: 0.067; rss: 114MB	linking
done
