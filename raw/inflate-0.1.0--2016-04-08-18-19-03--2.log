commit bf44003c970719743a9a9b199f6f22fa8e7fae85
Merge: 7e99694 94a387e
Author: bors <bors@rust-lang.org>
Date:   Fri Apr 8 12:22:11 2016 -0700

    Auto merge of #32810 - brson:relnotes, r=brson
    
    Release notes for 1.8
    
    cc @steveklabnik to me the highlights are compound assignment overloading, 32-bit MSVC builds being ready for use, and the cargo improvements.
    
    [Rendered](https://github.com/brson/rust/blob/relnotes/RELEASES.md).
rustc: ./inflate-0.1.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling inflate v0.1.0 (file:///root/benchmarks/inflate-0.1.0)
time: 0.004; rss: 38MB	parsing
Lines of code:             956
Pre-expansion node count:  4761
time: 0.001; rss: 42MB	configuration 1
time: 0.000; rss: 42MB	recursion limit
time: 0.000; rss: 42MB	gated macro checking
time: 0.000; rss: 42MB	crate injection
time: 0.003; rss: 44MB	macro loading
time: 0.000; rss: 44MB	plugin loading
time: 0.000; rss: 44MB	plugin registration
time: 0.089; rss: 51MB	expansion
time: 0.001; rss: 51MB	complete gated feature checking 1
time: 0.009; rss: 51MB	configuration 2
time: 0.000; rss: 51MB	gated configuration checking
time: 0.004; rss: 51MB	maybe building test harness
time: 0.004; rss: 51MB	prelude injection
time: 0.000; rss: 51MB	checking that all macro invocations are gone
time: 0.000; rss: 51MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 51MB	complete gated feature checking 2
time: 0.000; rss: 51MB	const fn bodies and arguments
Post-expansion node count: 54798
time: 0.004; rss: 51MB	assigning node ids
time: 0.017; rss: 57MB	lowering ast -> hir
time: 0.002; rss: 57MB	indexing hir
time: 0.000; rss: 57MB	attribute checking
time: 0.004; rss: 57MB	early lint checks
time: 0.001; rss: 54MB	external crate/lib resolution
time: 0.001; rss: 54MB	language item collection
time: 0.015; rss: 63MB	resolution
time: 0.001; rss: 63MB	lifetime resolution
time: 0.000; rss: 63MB	looking for entry point
time: 0.000; rss: 63MB	looking for plugin registrar
time: 0.003; rss: 64MB	region resolution
time: 0.000; rss: 64MB	loop checking
time: 0.000; rss: 64MB	static item recursion checking
time: 0.000; rss: 64MB	load_dep_graph
time: 0.001; rss: 64MB	type collecting
time: 0.000; rss: 64MB	variance inference
time: 0.010; rss: 78MB	coherence checking
time: 0.002; rss: 78MB	wf checking
time: 0.002; rss: 80MB	item-types checking
time: 2.824; rss: 100MB	item-bodies checking
time: 0.000; rss: 100MB	drop-impl checking
time: 0.013; rss: 101MB	const checking
time: 0.001; rss: 101MB	privacy checking
time: 0.000; rss: 101MB	stability index
time: 0.000; rss: 101MB	intrinsic checking
time: 0.001; rss: 101MB	effect checking
time: 0.003; rss: 101MB	match checking
time: 0.313; rss: 101MB	liveness checking
time: 0.009; rss: 101MB	rvalue checking
time: 0.032; rss: 114MB	MIR dump
time: 0.014; rss: 113MB	MIR passes
time: 0.204; rss: 112MB	borrow checking
time: 0.000; rss: 112MB	reachability checking
time: 0.003; rss: 112MB	death checking
time: 0.002; rss: 112MB	stability checking
time: 0.000; rss: 112MB	unused lib feature checking
time: 0.020; rss: 114MB	lint checking
time: 0.000; rss: 114MB	resolving dependency formats
time: 0.005; rss: 116MB	Prepare MIR codegen passes
  time: 0.010; rss: 128MB	translation item collection
  time: 0.003; rss: 143MB	write metadata
time: 0.362; rss: 131MB	translation
time: 0.000; rss: 131MB	assert dep graph
time: 0.000; rss: 131MB	serialize dep graph
  time: 0.026; rss: 103MB	llvm function passes [0]
  time: 0.005; rss: 103MB	llvm module passes [0]
  time: 0.493; rss: 109MB	codegen passes [0]
  time: 0.000; rss: 98MB	codegen passes [0]
time: 0.564; rss: 97MB	LLVM passes
time: 0.034; rss: 97MB	linking
done
