commit d508de6cf7c7bb9b5057ee63432dbbc899209101
Merge: d98da85 d37edef
Author: bors <bors@rust-lang.org>
Date:   Mon Jul 4 02:18:46 2016 -0700

    Auto merge of #34638 - zackmdavis:if_let_over_none_empty_block_arm, r=jseyfried
    
    prefer `if let` to match with `None => {}` arm in some places
    
    This is a spiritual succesor to #34268 / 8531d581, in which we replaced a
    number of matches of None to the unit value with `if let` conditionals
    where it was judged that this made for clearer/simpler code (as would be
    recommended by Manishearth/rust-clippy's `single_match` lint). The same
    rationale applies to matches of None to the empty block.
    
    ----
    
    r? @jseyfried
rustc: ./regex.0.1.30
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling regex v0.1.30 (file:///root/benchmarks/regex.0.1.30)
time: 0.080; rss: 94MB	parsing
Lines of code:             8558
Pre-expansion node count:  58076
time: 0.010; rss: 94MB	configuration
time: 0.000; rss: 94MB	recursion limit
time: 0.000; rss: 94MB	crate injection
time: 0.000; rss: 94MB	plugin loading
time: 0.000; rss: 94MB	plugin registration
time: 0.044; rss: 129MB	expansion
time: 0.000; rss: 129MB	maybe building test harness
time: 0.000; rss: 129MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 129MB	complete gated feature checking
Post-expansion node count: 68148
time: 0.006; rss: 129MB	assigning node ids
time: 0.001; rss: 129MB	collecting defs
time: 0.001; rss: 129MB	external crate/lib resolution
time: 0.006; rss: 129MB	early lint checks
time: 0.001; rss: 129MB	AST validation
time: 0.006; rss: 131MB	name resolution
time: 0.009; rss: 140MB	lowering ast -> hir
time: 0.002; rss: 143MB	indexing hir
time: 0.001; rss: 143MB	attribute checking
time: 0.001; rss: 135MB	language item collection
time: 0.001; rss: 135MB	lifetime resolution
time: 0.000; rss: 135MB	looking for entry point
time: 0.000; rss: 135MB	looking for plugin registrar
time: 0.006; rss: 139MB	region resolution
time: 0.001; rss: 139MB	loop checking
time: 0.001; rss: 139MB	static item recursion checking
time: 0.000; rss: 139MB	load_dep_graph
time: 0.011; rss: 142MB	type collecting
time: 0.000; rss: 142MB	variance inference
time: 0.025; rss: 147MB	coherence checking
time: 0.014; rss: 147MB	wf checking
time: 0.328; rss: 153MB	item-types checking
time: 0.202; rss: 157MB	item-bodies checking
time: 0.000; rss: 157MB	drop-impl checking
time: 0.027; rss: 159MB	const checking
time: 0.004; rss: 159MB	privacy checking
time: 0.001; rss: 159MB	stability index
time: 0.002; rss: 159MB	intrinsic checking
time: 0.001; rss: 159MB	effect checking
time: 0.004; rss: 159MB	match checking
time: 0.002; rss: 159MB	liveness checking
time: 0.008; rss: 159MB	rvalue checking
time: 0.054; rss: 171MB	MIR dump
time: 0.021; rss: 171MB	MIR passes
time: 0.022; rss: 171MB	borrow checking
time: 0.000; rss: 171MB	reachability checking
time: 0.003; rss: 171MB	death checking
time: 0.002; rss: 171MB	stability checking
time: 0.000; rss: 171MB	unused lib feature checking
time: 0.028; rss: 171MB	lint checking
time: 0.000; rss: 171MB	resolving dependency formats
time: 0.019; rss: 173MB	Prepare MIR codegen passes
  time: 0.173; rss: 182MB	write metadata
  time: 0.056; rss: 184MB	translation item collection
  time: 0.001; rss: 184MB	codegen unit partitioning
time: 1.557; rss: 230MB	translation
time: 0.000; rss: 230MB	assert dep graph
time: 0.000; rss: 230MB	serialize dep graph
  time: 0.415; rss: 163MB	llvm function passes [0]
  time: 0.188; rss: 164MB	llvm module passes [0]
  time: 6.007; rss: 168MB	codegen passes [0]
  time: 0.002; rss: 149MB	codegen passes [0]
time: 7.151; rss: 147MB	LLVM passes
time: 0.067; rss: 145MB	linking
done
