commit fe278a8a3218fd83d8bf21e82e2c0cc975d2fb64
Merge: 3b272bf 046c7f2
Author: bors <bors@rust-lang.org>
Date:   Tue Sep 6 20:06:34 2016 -0700

    Auto merge of #36252 - joshtriplett:union-field-never-used, r=sanxiyn
    
    Fix "field is never used" warning to take unions into account
    
    When compiling code containing a union with an unused field, rustc says
    "struct field is never used".
    
    Rather than saying "struct or union", or adding logic to determine the
    type of the item, just change the message to "field is never used",
    dropping the "struct".
    
    Update tests accordingly.
rustc: ./inflate-0.1.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling inflate v0.1.0 (file:///root/benchmarks/inflate-0.1.0)
time: 0.004; rss: 44MB	parsing
Lines of code:             956
Pre-expansion node count:  4740
time: 0.001; rss: 44MB	configuration
time: 0.000; rss: 44MB	recursion limit
time: 0.000; rss: 44MB	crate injection
time: 0.000; rss: 44MB	plugin loading
time: 0.000; rss: 44MB	plugin registration
time: 0.072; rss: 71MB	expansion
time: 0.000; rss: 71MB	maybe building test harness
time: 0.000; rss: 71MB	maybe creating a macro crate
time: 0.003; rss: 71MB	assigning node ids
Post-expansion node count: 55771
time: 0.000; rss: 71MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 71MB	complete gated feature checking
time: 0.005; rss: 71MB	collecting defs
time: 0.001; rss: 71MB	external crate/lib resolution
time: 0.002; rss: 71MB	early lint checks
time: 0.000; rss: 71MB	AST validation
time: 0.007; rss: 74MB	name resolution
time: 0.005; rss: 78MB	lowering ast -> hir
time: 0.001; rss: 80MB	indexing hir
time: 0.000; rss: 80MB	attribute checking
time: 0.001; rss: 77MB	language item collection
time: 0.001; rss: 77MB	lifetime resolution
time: 0.000; rss: 77MB	looking for entry point
time: 0.000; rss: 77MB	looking for plugin registrar
time: 0.004; rss: 78MB	region resolution
time: 0.000; rss: 78MB	loop checking
time: 0.000; rss: 78MB	static item recursion checking
time: 0.023; rss: 78MB	compute_incremental_hashes_map
time: 0.000; rss: 78MB	load_dep_graph
time: 0.001; rss: 79MB	type collecting
time: 0.000; rss: 79MB	variance inference
time: 0.008; rss: 80MB	coherence checking
time: 0.002; rss: 80MB	wf checking
time: 0.002; rss: 80MB	item-types checking
time: 2.348; rss: 97MB	item-bodies checking
time: 0.000; rss: 97MB	drop-impl checking
time: 0.016; rss: 97MB	const checking
time: 0.001; rss: 97MB	privacy checking
time: 0.000; rss: 97MB	stability index
time: 0.001; rss: 97MB	intrinsic checking
time: 0.001; rss: 97MB	effect checking
time: 0.004; rss: 97MB	match checking
time: 0.066; rss: 95MB	liveness checking
time: 0.011; rss: 95MB	rvalue checking
time: 0.036; rss: 115MB	MIR dump
time: 0.022; rss: 114MB	MIR passes
time: 0.205; rss: 113MB	borrow checking
time: 0.000; rss: 113MB	reachability checking
time: 0.003; rss: 113MB	death checking
time: 0.002; rss: 113MB	stability checking
time: 0.000; rss: 113MB	unused lib feature checking
time: 0.019; rss: 116MB	lint checking
time: 0.000; rss: 116MB	resolving dependency formats
time: 0.181; rss: 115MB	Prepare MIR codegen passes
  time: 0.003; rss: 116MB	write metadata
  time: 0.009; rss: 117MB	translation item collection
  time: 0.001; rss: 117MB	codegen unit partitioning
  time: 0.002; rss: 131MB	internalize symbols
time: 0.186; rss: 118MB	translation
time: 0.000; rss: 118MB	assert dep graph
time: 0.000; rss: 118MB	serialize dep graph
  time: 0.028; rss: 89MB	llvm function passes [0]
  time: 0.005; rss: 89MB	llvm module passes [0]
  time: 0.627; rss: 96MB	codegen passes [0]
  time: 0.000; rss: 96MB	codegen passes [0]
time: 0.695; rss: 96MB	LLVM passes
time: 0.000; rss: 96MB	serialize work products
time: 0.046; rss: 85MB	linking
done
