commit 26fd0117f9a5128d39a30ae36efc731042bd1fec
Merge: 3085ec7 a7220d9
Author: bors <bors@rust-lang.org>
Date:   Tue Jul 12 15:15:56 2016 -0700

    Auto merge of #34705 - alexcrichton:clean-deprecated, r=brson
    
    std: Clean out deprecated APIs
    
    This primarily removes a lot of `sync::Static*` APIs and rejiggers the
    associated implementations. While doing this it was discovered that the
    `is_poisoned` method can actually result in a data race for the Mutex/RwLock
    primitives, so the inner `Cell<bool>` was changed to an `AtomicBool` to prevent
    the associated data race. Otherwise the usage/gurantees should be the same
    they were before.
rustc: ./regex.0.1.30
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling regex v0.1.30 (file:///root/benchmarks/regex.0.1.30)
time: 0.066; rss: 98MB	parsing
Lines of code:             8558
Pre-expansion node count:  58076
time: 0.011; rss: 98MB	configuration
time: 0.000; rss: 98MB	recursion limit
time: 0.000; rss: 98MB	crate injection
time: 0.000; rss: 98MB	plugin loading
time: 0.000; rss: 98MB	plugin registration
time: 0.045; rss: 134MB	expansion
time: 0.000; rss: 134MB	maybe building test harness
time: 0.000; rss: 134MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 134MB	complete gated feature checking
Post-expansion node count: 68148
time: 0.006; rss: 134MB	assigning node ids
time: 0.001; rss: 135MB	collecting defs
time: 0.001; rss: 135MB	external crate/lib resolution
time: 0.006; rss: 135MB	early lint checks
time: 0.001; rss: 135MB	AST validation
time: 0.007; rss: 136MB	name resolution
time: 0.009; rss: 146MB	lowering ast -> hir
time: 0.002; rss: 148MB	indexing hir
time: 0.001; rss: 148MB	attribute checking
time: 0.001; rss: 140MB	language item collection
time: 0.001; rss: 140MB	lifetime resolution
time: 0.000; rss: 140MB	looking for entry point
time: 0.000; rss: 140MB	looking for plugin registrar
time: 0.006; rss: 142MB	region resolution
time: 0.001; rss: 142MB	loop checking
time: 0.002; rss: 142MB	static item recursion checking
time: 0.000; rss: 142MB	load_dep_graph
time: 0.011; rss: 143MB	type collecting
time: 0.000; rss: 143MB	variance inference
time: 0.025; rss: 148MB	coherence checking
time: 0.014; rss: 148MB	wf checking
time: 0.337; rss: 157MB	item-types checking
time: 0.205; rss: 162MB	item-bodies checking
time: 0.000; rss: 162MB	drop-impl checking
time: 0.027; rss: 164MB	const checking
time: 0.004; rss: 164MB	privacy checking
time: 0.001; rss: 164MB	stability index
time: 0.002; rss: 164MB	intrinsic checking
time: 0.001; rss: 164MB	effect checking
time: 0.004; rss: 164MB	match checking
time: 0.002; rss: 164MB	liveness checking
time: 0.008; rss: 164MB	rvalue checking
time: 0.052; rss: 174MB	MIR dump
time: 0.021; rss: 174MB	MIR passes
time: 0.022; rss: 174MB	borrow checking
time: 0.000; rss: 174MB	reachability checking
time: 0.003; rss: 174MB	death checking
time: 0.002; rss: 174MB	stability checking
time: 0.000; rss: 174MB	unused lib feature checking
time: 0.029; rss: 174MB	lint checking
time: 0.000; rss: 174MB	resolving dependency formats
time: 0.018; rss: 177MB	Prepare MIR codegen passes
  time: 0.174; rss: 189MB	write metadata
  time: 0.058; rss: 191MB	translation item collection
  time: 0.008; rss: 191MB	codegen unit partitioning
time: 1.529; rss: 237MB	translation
time: 0.000; rss: 237MB	assert dep graph
time: 0.000; rss: 237MB	serialize dep graph
  time: 0.410; rss: 168MB	llvm function passes [0]
  time: 0.188; rss: 166MB	llvm module passes [0]
  time: 6.031; rss: 170MB	codegen passes [0]
  time: 0.002; rss: 170MB	codegen passes [0]
time: 7.051; rss: 170MB	LLVM passes
time: 0.103; rss: 150MB	linking
done
