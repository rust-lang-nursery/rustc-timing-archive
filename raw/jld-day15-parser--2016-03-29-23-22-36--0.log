commit b678600ac94ee9cf3e679bb6128cd77b169231cb
Merge: ec666a5 694d883
Author: bors <bors@rust-lang.org>
Date:   Tue Mar 29 18:03:35 2016 -0700

    Auto merge of #32576 - alexcrichton:metadata-for-our-crates, r=brson
    
    mk: Fix cross-host builds
    
    The change in b20e748 had the unintended consequence of breaking cross-host
    builds as we apparently relied on the incorrect definition of this variable in
    the makefiles. That change, however, was required to get tests passing so we
    couldn't just revert it.
    
    This commit fixes the underlying bug by leaving the "more correct" definition of
    `LD_LIBRARY_PATH_ENV_TARGETDIR` (also fixing it with a hardcoded reference to
    `CFG_BUILD`) and updating the `RPATH_VAR` definition below. Turned out we
    already had special-casing logic for passing `--cfg stage1` during the
    well-we-print-this-as-stage0 build of a cross-host. That logic was just updated
    to pull from a different variable as opposed to relying on the definition of
    that variable to accommodate this.
    
    Closes #32568
rustc: ./jld-day15-parser
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling combine v1.2.1
   Compiling day15 v0.1.0 (file:///root/benchmarks/jld-day15-parser)
time: 0.001; rss: 37MB	parsing
Lines of code:             72
Pre-expansion node count:  673
time: 0.000; rss: 37MB	configuration 1
time: 0.000; rss: 37MB	recursion limit
time: 0.000; rss: 37MB	gated macro checking
time: 0.000; rss: 37MB	crate injection
time: 0.003; rss: 40MB	macro loading
time: 0.000; rss: 40MB	plugin loading
time: 0.000; rss: 40MB	plugin registration
time: 0.002; rss: 40MB	expansion
time: 0.000; rss: 40MB	complete gated feature checking 1
time: 0.000; rss: 40MB	configuration 2
time: 0.000; rss: 40MB	gated configuration checking
time: 0.000; rss: 40MB	maybe building test harness
time: 0.000; rss: 40MB	prelude injection
time: 0.000; rss: 40MB	checking that all macro invocations are gone
time: 0.000; rss: 40MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 40MB	complete gated feature checking 2
time: 0.000; rss: 40MB	const fn bodies and arguments
Post-expansion node count: 1176
time: 0.000; rss: 40MB	assigning node ids
time: 0.000; rss: 40MB	lowering ast -> hir
time: 0.000; rss: 40MB	indexing hir
time: 0.000; rss: 40MB	attribute checking
time: 0.000; rss: 40MB	early lint checks
time: 0.001; rss: 44MB	external crate/lib resolution
time: 0.000; rss: 44MB	language item collection
time: 0.001; rss: 49MB	resolution
time: 0.000; rss: 49MB	lifetime resolution
time: 0.000; rss: 49MB	looking for entry point
time: 0.000; rss: 49MB	looking for plugin registrar
time: 0.000; rss: 49MB	region resolution
time: 0.000; rss: 49MB	loop checking
time: 0.000; rss: 49MB	static item recursion checking
time: 0.001; rss: 53MB	type collecting
time: 0.000; rss: 53MB	variance inference
time: 0.005; rss: 57MB	coherence checking
time: 0.007; rss: 64MB	wf checking
time: 0.000; rss: 64MB	item-types checking
time: 1.611; rss: 143MB	item-bodies checking
time: 0.000; rss: 143MB	drop-impl checking
time: 0.001; rss: 143MB	const checking
time: 0.000; rss: 143MB	privacy checking
time: 0.000; rss: 143MB	stability index
time: 0.000; rss: 143MB	intrinsic checking
time: 0.000; rss: 143MB	effect checking
time: 0.000; rss: 143MB	match checking
time: 0.000; rss: 143MB	liveness checking
time: 0.002; rss: 143MB	rvalue checking
time: 0.001; rss: 143MB	MIR dump
time: 0.000; rss: 143MB	MIR passes
time: 0.001; rss: 143MB	borrow checking
time: 0.000; rss: 143MB	reachability checking
time: 0.000; rss: 143MB	death checking
time: 0.000; rss: 143MB	stability checking
time: 0.000; rss: 143MB	unused lib feature checking
time: 0.004; rss: 145MB	lint checking
time: 0.001; rss: 145MB	resolving dependency formats
  time: 13.565; rss: 188MB	translation item collection
  time: 0.000; rss: 224MB	write metadata
time: 42.362; rss: 224MB	translation
  time: 0.014; rss: 99MB	llvm function passes [0]
  time: 0.001; rss: 99MB	llvm module passes [0]
  time: 0.273; rss: 104MB	codegen passes [0]
  time: 0.000; rss: 97MB	codegen passes [0]
time: 0.296; rss: 97MB	LLVM passes
  time: 0.118; rss: 97MB	running linker
time: 0.119; rss: 97MB	linking
done
