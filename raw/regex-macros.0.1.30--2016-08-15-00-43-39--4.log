commit 47e6da2a01c284f383ad9658e33735f78e262ade
Merge: 13ff307 5f606f0
Author: bors <bors@rust-lang.org>
Date:   Sun Aug 14 18:36:33 2016 -0700

    Auto merge of #35427 - cardoe:arm-musl-targets, r=alexcrichton
    
    add GNU make files for arm-unknown-linux-musleabi
    
    For Yocto (Embedded Linux meta distro) Rust is provided via the [meta-rust layer](https://github.com/meta-rust/meta-rust). In this project there have been patches to add `arm-unknown-linux-musleabi`. Rust recently acquired that support via #35060 but only for rustbuild. meta-rust is currently only able to build Rust support with the existing GNU Makefiles. This adds `arm-unknown-linux-musleabi` support to Rust for the GNU Makefiles until meta-rust is able to sort out why using rustbuild does not work for it.
    
    /cc @srwalter @derekstraka @jmesmon @japaric
rustc: ./regex-macros.0.1.30
cd regex_macros && cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling regex_macros v0.1.17 (file:///root/benchmarks/regex-macros.0.1.30/regex_macros)
time: 0.002; rss: 44MB	parsing
Lines of code:             639
Pre-expansion node count:  2088
time: 0.000; rss: 44MB	configuration
time: 0.000; rss: 44MB	recursion limit
time: 0.000; rss: 44MB	crate injection
time: 0.000; rss: 44MB	plugin loading
time: 0.000; rss: 44MB	plugin registration
time: 0.031; rss: 85MB	expansion
time: 0.000; rss: 85MB	maybe building test harness
time: 0.003; rss: 85MB	assigning node ids
Post-expansion node count: 69587
time: 0.000; rss: 85MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 85MB	complete gated feature checking
time: 0.000; rss: 85MB	collecting defs
time: 0.087; rss: 174MB	external crate/lib resolution
time: 0.002; rss: 174MB	early lint checks
time: 0.000; rss: 174MB	AST validation
time: 0.021; rss: 183MB	name resolution
time: 0.004; rss: 187MB	lowering ast -> hir
time: 0.001; rss: 186MB	indexing hir
time: 0.000; rss: 186MB	attribute checking
time: 0.001; rss: 179MB	language item collection
time: 0.001; rss: 179MB	lifetime resolution
time: 0.000; rss: 179MB	looking for entry point
time: 0.000; rss: 179MB	looking for plugin registrar
time: 0.003; rss: 180MB	region resolution
time: 0.000; rss: 180MB	loop checking
time: 0.000; rss: 180MB	static item recursion checking
time: 0.000; rss: 180MB	load_dep_graph
time: 0.013; rss: 182MB	type collecting
time: 0.000; rss: 182MB	variance inference
time: 0.011; rss: 183MB	coherence checking
time: 0.008; rss: 185MB	wf checking
time: 0.001; rss: 185MB	item-types checking
time: 0.760; rss: 205MB	item-bodies checking
makefile:2: recipe for target 'all' failed
done
