commit 8da2bcac5db1e091b90cceb19d0496f0f7501c88
Merge: 115c6c8 0fc9f9a
Author: bors <bors@rust-lang.org>
Date:   Thu Apr 28 14:37:30 2016 -0700

    Auto merge of #33171 - michaelwoerister:collector-drop-glue, r=nikomatsakis
    
    Some preliminary work towards making trans "collector driven".
    
    The `trans::collector` already collects all translation items and `trans::partitioning` distributes these translation items into codegen units. The changes in this PR provide the following extensions to this functionality:
    
    1. Drop-glue is handled more accurately now, knowing about the difference between `DropGlueKind::Ty` and `DropGlueKind::TyContents`.
    2. The partitioning module now supports the `FixedUnitCount` strategy which more or less corresponds to the partitioning one gets via supplying `-Ccodegen-units` today.
    3. The partitioning scheme also takes care of assigned LLVM declarations to codegen units, not just definitions (declarations for external items not yet implemented).
    
    It's debatable whether declarations should be handled by the partitioning scheme or whether they should just be emitted on demand.
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.031; rss: 53MB	parsing
Lines of code:             9154
Pre-expansion node count:  45594
time: 0.008; rss: 57MB	configuration 1
time: 0.000; rss: 57MB	recursion limit
time: 0.000; rss: 57MB	crate injection
time: 0.004; rss: 61MB	macro loading
time: 0.000; rss: 61MB	plugin loading
time: 0.000; rss: 61MB	plugin registration
time: 0.187; rss: 70MB	expansion
time: 0.005; rss: 70MB	complete gated feature checking 1
time: 0.029; rss: 70MB	configuration 2
time: 0.000; rss: 70MB	gated configuration checking
time: 0.011; rss: 70MB	maybe building test harness
time: 0.008; rss: 70MB	prelude injection
time: 0.001; rss: 70MB	checking that all macro invocations are gone
time: 0.000; rss: 70MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 70MB	complete gated feature checking 2
time: 0.001; rss: 70MB	const fn bodies and arguments
Post-expansion node count: 107138
time: 0.008; rss: 70MB	assigning node ids
time: 0.003; rss: 72MB	collecting defs
time: 0.005; rss: 76MB	external crate/lib resolution
time: 0.011; rss: 81MB	lowering ast -> hir
time: 0.001; rss: 83MB	indexing hir
time: 0.001; rss: 83MB	attribute checking
time: 0.006; rss: 83MB	early lint checks
time: 0.001; rss: 76MB	language item collection
time: 0.023; rss: 94MB	name resolution
time: 0.002; rss: 94MB	lifetime resolution
time: 0.000; rss: 94MB	looking for entry point
time: 0.000; rss: 94MB	looking for plugin registrar
time: 0.006; rss: 96MB	region resolution
time: 0.001; rss: 96MB	loop checking
time: 0.001; rss: 96MB	static item recursion checking
time: 0.000; rss: 96MB	load_dep_graph
time: 0.018; rss: 106MB	type collecting
time: 0.000; rss: 106MB	variance inference
time: 0.043; rss: 121MB	coherence checking
time: 0.073; rss: 123MB	wf checking
time: 0.027; rss: 123MB	item-types checking
time: 0.463; rss: 146MB	item-bodies checking
time: 0.000; rss: 146MB	drop-impl checking
time: 0.037; rss: 148MB	const checking
time: 0.009; rss: 148MB	privacy checking
time: 0.001; rss: 148MB	stability index
time: 0.004; rss: 148MB	intrinsic checking
time: 0.002; rss: 148MB	effect checking
time: 0.011; rss: 148MB	match checking
time: 0.004; rss: 148MB	liveness checking
time: 0.032; rss: 148MB	rvalue checking
time: 0.049; rss: 156MB	MIR dump
time: 0.021; rss: 156MB	MIR passes
time: 0.064; rss: 156MB	borrow checking
time: 0.003; rss: 156MB	reachability checking
time: 0.006; rss: 156MB	death checking
time: 0.006; rss: 156MB	stability checking
time: 0.000; rss: 156MB	unused lib feature checking
time: 0.050; rss: 156MB	lint checking
time: 0.000; rss: 156MB	resolving dependency formats
time: 0.010; rss: 156MB	Prepare MIR codegen passes
  time: 0.172; rss: 166MB	translation item collection
  time: 0.009; rss: 168MB	codegen unit partitioning
  time: 0.137; rss: 295MB	write metadata
time: 1.449; rss: 295MB	translation
time: 0.001; rss: 295MB	assert dep graph
time: 0.000; rss: 295MB	serialize dep graph
  time: 0.097; rss: 173MB	llvm function passes [0]
  time: 0.047; rss: 174MB	llvm module passes [0]
  time: 1.627; rss: 178MB	codegen passes [0]
  time: 0.001; rss: 128MB	codegen passes [0]
time: 1.971; rss: 127MB	LLVM passes
time: 0.175; rss: 125MB	linking
done
