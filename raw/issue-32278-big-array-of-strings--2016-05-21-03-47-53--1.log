commit 91e907345c4258ff9787d70a4b8c56cb691a64b6
Merge: 500e5c1 5f295f2
Author: bors <bors@rust-lang.org>
Date:   Fri May 20 20:33:38 2016 -0700

    Auto merge of #33625 - alexcrichton:rustbuild-moar-tests, r=aturon
    
    rustbuild: Touch up some test suites
    
    This adds in some missing test suites, primarily a few pretty suites. It also starts optimizing tests by default as the current test suite does, but also recognizes `--disable-optimize-tests`.
    
    Currently the optimization of tests isn't recognized by crate tests because Cargo doesn't support the ability to compile an unoptimized test suite against an optimized library. Perhaps a feature to add, though!
rustc: ./issue-32278-big-array-of-strings
/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc big-array-of-strings.rs -Ztime-passes -Zinput-stats
time: 0.155; rss: 68MB	parsing
Lines of code:             65577
Pre-expansion node count:  65552
time: 0.012; rss: 68MB	configuration 1
time: 0.000; rss: 68MB	recursion limit
time: 0.000; rss: 68MB	crate injection
time: 0.020; rss: 101MB	macro loading
time: 0.000; rss: 101MB	plugin loading
time: 0.000; rss: 101MB	plugin registration
time: 0.042; rss: 108MB	expansion
time: 0.011; rss: 108MB	configuration 2
time: 0.000; rss: 108MB	gated configuration checking
time: 0.005; rss: 108MB	maybe building test harness
time: 0.005; rss: 108MB	prelude injection
time: 0.000; rss: 108MB	checking that all macro invocations are gone
time: 0.000; rss: 108MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 108MB	complete gated feature checking
Post-expansion node count: 65565
time: 0.006; rss: 108MB	assigning node ids
time: 0.001; rss: 108MB	collecting defs
time: 0.004; rss: 108MB	external crate/lib resolution
time: 0.008; rss: 108MB	early lint checks
time: 0.002; rss: 108MB	name resolution
time: 0.009; rss: 123MB	lowering ast -> hir
time: 0.002; rss: 123MB	indexing hir
time: 0.001; rss: 123MB	attribute checking
time: 0.001; rss: 108MB	language item collection
time: 0.001; rss: 108MB	lifetime resolution
time: 0.000; rss: 108MB	looking for entry point
time: 0.000; rss: 108MB	looking for plugin registrar
time: 0.007; rss: 118MB	region resolution
time: 0.001; rss: 118MB	loop checking
time: 0.001; rss: 118MB	static item recursion checking
time: 0.000; rss: 118MB	load_dep_graph
time: 0.000; rss: 118MB	type collecting
time: 0.000; rss: 118MB	variance inference
time: 0.005; rss: 120MB	coherence checking
time: 0.001; rss: 120MB	wf checking
time: 0.845; rss: 136MB	item-types checking
time: 0.000; rss: 136MB	item-bodies checking
time: 0.000; rss: 136MB	drop-impl checking
time: 0.021; rss: 139MB	const checking
time: 0.002; rss: 139MB	privacy checking
time: 0.001; rss: 139MB	stability index
time: 0.001; rss: 139MB	intrinsic checking
time: 0.001; rss: 139MB	effect checking
time: 0.001; rss: 139MB	match checking
time: 0.001; rss: 139MB	liveness checking
time: 0.000; rss: 139MB	rvalue checking
time: 0.056; rss: 146MB	MIR dump
time: 0.002; rss: 146MB	MIR passes
time: 0.001; rss: 146MB	borrow checking
time: 0.000; rss: 146MB	reachability checking
time: 0.001; rss: 146MB	death checking
time: 0.001; rss: 146MB	stability checking
time: 0.000; rss: 146MB	unused lib feature checking
time: 0.029; rss: 146MB	lint checking
time: 0.001; rss: 146MB	resolving dependency formats
time: 0.001; rss: 146MB	Prepare MIR codegen passes
  time: 0.001; rss: 147MB	translation item collection
  time: 0.000; rss: 147MB	codegen unit partitioning
  time: 0.000; rss: 162MB	write metadata
time: 0.091; rss: 148MB	translation
time: 0.000; rss: 148MB	assert dep graph
time: 0.000; rss: 148MB	serialize dep graph
  time: 0.003; rss: 107MB	llvm function passes [0]
  time: 0.000; rss: 107MB	llvm module passes [0]
  time: 0.161; rss: 108MB	codegen passes [0]
  time: 0.000; rss: 98MB	codegen passes [0]
time: 0.176; rss: 98MB	LLVM passes
  time: 0.188; rss: 98MB	running linker
time: 0.189; rss: 98MB	linking
done
