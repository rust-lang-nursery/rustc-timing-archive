commit 209308439a1099b285520459f57e380f18793c07
Merge: 7846610 d6ec686
Author: bors <bors@rust-lang.org>
Date:   Wed Dec 7 16:32:48 2016 +0000

    Auto merge of #38105 - ollie27:rustdoc_deterministic_js, r=GuillaumeGomez
    
    rustdoc: Sort lines in search index and implementors js
    
    This means the files are generated deterministically even with rustdoc running in parallel.
    
    Fixes the first part of #30220.
rustc: ./syntex-0.42.2@010-incr@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.125; rss: 63MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 63MB	recursion limit
time: 0.000; rss: 63MB	crate injection
time: 0.000; rss: 63MB	plugin loading
time: 0.000; rss: 63MB	plugin registration
time: 0.328; rss: 138MB	expansion
time: 0.000; rss: 138MB	maybe building test harness
time: 0.006; rss: 138MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 138MB	checking for inline asm in case the target doesn't support it
time: 0.013; rss: 138MB	complete gated feature checking
time: 0.024; rss: 138MB	early lint checks
time: 0.008; rss: 138MB	AST validation
time: 0.107; rss: 153MB	name resolution
time: 0.120; rss: 187MB	lowering ast -> hir
time: 0.011; rss: 180MB	indexing hir
time: 0.007; rss: 180MB	attribute checking
time: 0.002; rss: 142MB	language item collection
time: 0.015; rss: 143MB	lifetime resolution
time: 0.000; rss: 143MB	looking for entry point
time: 0.000; rss: 143MB	looking for plugin registrar
time: 0.099; rss: 163MB	region resolution
time: 0.009; rss: 163MB	loop checking
time: 0.002; rss: 163MB	static item recursion checking
time: 0.387; rss: 165MB	compute_incremental_hashes_map
time: 0.000; rss: 165MB	load_dep_graph
time: 0.010; rss: 165MB	stability index
time: 0.029; rss: 168MB	stability checking
time: 0.071; rss: 174MB	type collecting
time: 0.005; rss: 175MB	variance inference
time: 0.011; rss: 179MB	impl wf inference
time: 0.038; rss: 183MB	coherence checking
time: 0.090; rss: 186MB	wf checking
time: 0.218; rss: 195MB	item-types checking
time: 3.849; rss: 248MB	item-bodies checking
time: 0.000; rss: 248MB	drop-impl checking
time: 0.322; rss: 259MB	const checking
time: 0.062; rss: 259MB	privacy checking
time: 0.043; rss: 266MB	intrinsic checking
time: 0.017; rss: 266MB	effect checking
time: 0.054; rss: 266MB	match checking
time: 0.056; rss: 272MB	liveness checking
time: 0.193; rss: 273MB	rvalue checking
time: 0.594; rss: 446MB	MIR dump
  time: 0.062; rss: 452MB	SimplifyCfg
  time: 0.078; rss: 452MB	QualifyAndPromoteConstants
  time: 0.175; rss: 469MB	TypeckMir
  time: 0.005; rss: 469MB	SimplifyBranches
  time: 0.034; rss: 469MB	SimplifyCfg
time: 0.354; rss: 469MB	MIR cleanup and validation
time: 0.502; rss: 472MB	borrow checking
time: 0.025; rss: 472MB	reachability checking
time: 0.040; rss: 472MB	death checking
time: 0.000; rss: 472MB	unused lib feature checking
time: 0.182; rss: 472MB	lint checking
time: 0.000; rss: 472MB	resolving dependency formats
  time: 0.004; rss: 472MB	NoLandingPads
  time: 0.027; rss: 472MB	SimplifyCfg
  time: 0.082; rss: 480MB	EraseRegions
  time: 0.012; rss: 480MB	AddCallGuards
  time: 0.321; rss: 502MB	ElaborateDrops
  time: 0.004; rss: 502MB	NoLandingPads
  time: 0.055; rss: 502MB	SimplifyCfg
  time: 0.030; rss: 502MB	InstCombine
  time: 0.013; rss: 502MB	Deaggregator
  time: 0.003; rss: 502MB	CopyPropagation
  time: 0.037; rss: 502MB	SimplifyLocals
  time: 0.010; rss: 502MB	AddCallGuards
  time: 0.003; rss: 502MB	PreTrans
time: 0.602; rss: 502MB	MIR optimisations
  time: 0.084; rss: 511MB	write metadata
  time: 0.430; rss: 525MB	translation item collection
  time: 0.074; rss: 528MB	codegen unit partitioning
  time: 0.054; rss: 1431MB	internalize symbols
time: 14.359; rss: 1431MB	translation
time: 0.000; rss: 1431MB	assert dep graph
time: 2.070; rss: 1461MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.005; rss: 1172MB	llvm function passes [0]
time: 0.005; rss: 1172MB	llvm module passes [0]
time: 0.017; rss: 1172MB	llvm function passes [5]
time: 0.000; rss: 1172MB	llvm module passes [5]
time: 0.003; rss: 1172MB	llvm function passes [4]
time: 0.000; rss: 1173MB	llvm module passes [4]
time: 0.002; rss: 1173MB	llvm function passes [3]
time: 0.000; rss: 1175MB	llvm module passes [3]
time: 0.001; rss: 1175MB	llvm function passes [9]
time: 0.001; rss: 1175MB	llvm module passes [9]
time: 0.004; rss: 1177MB	llvm function passes [1]
time: 0.001; rss: 1178MB	llvm module passes [1]
time: 0.006; rss: 1180MB	codegen passes [5]
time: 0.023; rss: 1183MB	llvm function passes [6]
time: 0.024; rss: 1184MB	llvm function passes [5]
time: 0.047; rss: 1186MB	llvm function passes [2]
time: 0.027; rss: 1186MB	codegen passes [0]
time: 0.032; rss: 1187MB	llvm module passes [6]
time: 0.039; rss: 1189MB	llvm module passes [2]
time: 0.000; rss: 1189MB	llvm function passes [15]
time: 0.000; rss: 1189MB	llvm module passes [15]
time: 0.009; rss: 1189MB	llvm function passes [19]
time: 0.000; rss: 1189MB	llvm module passes [19]
time: 0.092; rss: 1190MB	codegen passes [3]
time: 0.001; rss: 1190MB	llvm function passes [3]
time: 0.000; rss: 1190MB	llvm module passes [3]
time: 0.009; rss: 1191MB	llvm function passes [16]
time: 0.001; rss: 1191MB	llvm module passes [16]
time: 0.080; rss: 1191MB	llvm function passes [10]
time: 0.098; rss: 1191MB	codegen passes [9]
time: 0.000; rss: 1192MB	llvm function passes [25]
time: 0.000; rss: 1192MB	llvm module passes [25]
time: 0.028; rss: 1192MB	codegen passes [15]
time: 0.001; rss: 1193MB	codegen passes [25]
time: 0.089; rss: 1194MB	llvm module passes [5]
time: 0.077; rss: 1196MB	llvm function passes [0]
time: 0.123; rss: 1197MB	codegen passes [4]
time: 0.036; rss: 1197MB	llvm module passes [10]
time: 0.037; rss: 1197MB	llvm function passes [14]
time: 0.000; rss: 1201MB	llvm function passes [13]
time: 0.000; rss: 1202MB	llvm module passes [13]
time: 0.143; rss: 1203MB	llvm function passes [11]
time: 0.004; rss: 1204MB	codegen passes [13]
time: 0.033; rss: 1204MB	llvm module passes [14]
time: 0.088; rss: 1206MB	codegen passes [3]
time: 0.057; rss: 1206MB	llvm function passes [21]
time: 0.005; rss: 1206MB	llvm function passes [3]
time: 0.002; rss: 1206MB	llvm module passes [3]
time: 0.064; rss: 1206MB	llvm function passes [4]
time: 0.098; rss: 1209MB	llvm module passes [0]
time: 0.070; rss: 1209MB	llvm function passes [27]
time: 0.072; rss: 1209MB	llvm function passes [30]
time: 0.142; rss: 1210MB	codegen passes [19]
time: 0.000; rss: 1210MB	llvm function passes [19]
time: 0.000; rss: 1210MB	llvm module passes [19]
time: 0.007; rss: 1211MB	llvm module passes [30]
time: 0.150; rss: 1213MB	llvm function passes [17]
time: 0.015; rss: 1213MB	codegen passes [19]
time: 0.087; rss: 1215MB	llvm module passes [4]
time: 0.186; rss: 1215MB	llvm function passes [9]
time: 0.040; rss: 1215MB	llvm function passes [38]
time: 0.196; rss: 1217MB	llvm function passes [15]
time: 0.008; rss: 1217MB	llvm module passes [38]
time: 0.097; rss: 1219MB	codegen passes [3]
time: 0.143; rss: 1220MB	llvm function passes [31]
time: 0.021; rss: 1220MB	llvm function passes [39]
time: 0.122; rss: 1227MB	llvm module passes [27]
time: 0.107; rss: 1229MB	codegen passes [40]
time: 0.221; rss: 1231MB	llvm function passes [26]
time: 0.052; rss: 1231MB	llvm module passes [39]
time: 0.284; rss: 1234MB	llvm function passes [18]
time: 0.025; rss: 1237MB	llvm module passes [26]
time: 0.213; rss: 1237MB	llvm function passes [32]
time: 0.253; rss: 1237MB	llvm function passes [23]
time: 0.161; rss: 1238MB	llvm module passes [17]
time: 0.222; rss: 1238MB	llvm function passes [35]
time: 0.135; rss: 1239MB	llvm module passes [15]
time: 0.337; rss: 1242MB	llvm function passes [25]
time: 0.272; rss: 1244MB	llvm module passes [21]
time: 0.342; rss: 1247MB	codegen passes [16]
time: 0.192; rss: 1247MB	llvm module passes [9]
time: 0.272; rss: 1249MB	llvm function passes [36]
time: 0.509; rss: 1252MB	llvm function passes [7]
time: 0.517; rss: 1253MB	llvm function passes [8]
time: 0.027; rss: 1253MB	llvm module passes [36]
time: 0.318; rss: 1253MB	llvm function passes [33]
time: 0.524; rss: 1254MB	codegen passes [1]
time: 0.372; rss: 1254MB	llvm module passes [11]
time: 0.127; rss: 1254MB	llvm module passes [32]
time: 0.232; rss: 1258MB	llvm module passes [31]
time: 0.235; rss: 1258MB	codegen passes [38]
time: 0.364; rss: 1258MB	llvm function passes [37]
time: 0.061; rss: 1258MB	llvm module passes [33]
time: 0.160; rss: 1261MB	llvm module passes [35]
time: 0.514; rss: 1264MB	llvm function passes [24]
time: 0.435; rss: 1264MB	llvm function passes [34]
time: 0.429; rss: 1264MB	llvm function passes [29]
time: 0.264; rss: 1266MB	llvm module passes [18]
time: 0.274; rss: 1276MB	llvm module passes [25]
time: 0.572; rss: 1278MB	llvm function passes [22]
time: 0.262; rss: 1283MB	llvm module passes [7]
time: 0.372; rss: 1285MB	llvm module passes [23]
time: 0.528; rss: 1287MB	llvm function passes [28]
time: 0.733; rss: 1288MB	llvm function passes [12]
time: 0.250; rss: 1293MB	llvm module passes [37]
time: 0.715; rss: 1304MB	llvm function passes [13]
time: 0.277; rss: 1311MB	llvm module passes [29]
time: 0.340; rss: 1313MB	llvm module passes [24]
time: 0.191; rss: 1315MB	llvm module passes [28]
time: 0.711; rss: 1316MB	codegen passes [6]
time: 0.358; rss: 1316MB	llvm module passes [22]
time: 0.450; rss: 1316MB	llvm module passes [34]
time: 0.614; rss: 1316MB	llvm module passes [8]
time: 1.019; rss: 1316MB	llvm function passes [20]
time: 0.330; rss: 1316MB	llvm module passes [12]
time: 0.657; rss: 1322MB	codegen passes [39]
time: 0.806; rss: 1335MB	codegen passes [30]
time: 0.546; rss: 1339MB	llvm module passes [13]
time: 1.336; rss: 1380MB	codegen passes [14]
time: 0.803; rss: 1379MB	llvm module passes [20]
time: 1.451; rss: 1377MB	codegen passes [10]
time: 1.475; rss: 1391MB	codegen passes [2]
time: 1.314; rss: 1394MB	codegen passes [27]
time: 1.243; rss: 1389MB	codegen passes [4]
time: 1.505; rss: 1395MB	codegen passes [31]
time: 1.630; rss: 1413MB	codegen passes [33]
time: 1.855; rss: 1427MB	codegen passes [0]
time: 2.176; rss: 1424MB	codegen passes [5]
time: 2.139; rss: 1428MB	codegen passes [32]
time: 2.032; rss: 1428MB	codegen passes [21]
time: 2.264; rss: 1421MB	codegen passes [17]
time: 2.482; rss: 1418MB	codegen passes [36]
time: 2.398; rss: 1413MB	codegen passes [35]
time: 2.144; rss: 1409MB	codegen passes [15]
time: 2.775; rss: 1433MB	codegen passes [26]
time: 3.592; rss: 1557MB	codegen passes [9]
time: 3.152; rss: 1540MB	codegen passes [23]
time: 3.764; rss: 1570MB	codegen passes [11]
time: 3.686; rss: 1536MB	codegen passes [18]
time: 3.596; rss: 1586MB	codegen passes [28]
time: 4.164; rss: 1603MB	codegen passes [25]
time: 4.224; rss: 1618MB	codegen passes [37]
time: 4.228; rss: 1574MB	codegen passes [7]
time: 4.076; rss: 1557MB	codegen passes [22]
time: 4.058; rss: 1537MB	codegen passes [24]
time: 4.781; rss: 1529MB	codegen passes [34]
time: 4.650; rss: 1487MB	codegen passes [29]
time: 4.350; rss: 1451MB	codegen passes [12]
time: 4.784; rss: 1427MB	codegen passes [8]
time: 4.694; rss: 1364MB	codegen passes [13]
time: 4.719; rss: 1292MB	codegen passes [20]
time: 8.419; rss: 1291MB	LLVM passes
time: 0.000; rss: 1291MB	serialize work products
time: 1.050; rss: 261MB	linking
done
