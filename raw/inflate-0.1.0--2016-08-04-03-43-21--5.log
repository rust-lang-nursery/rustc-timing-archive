commit 271d048523b6c1b0e773d9e5cc76bbb997cc180c
Merge: 40f3ee2 5c88efc
Author: bors <bors@rust-lang.org>
Date:   Wed Aug 3 22:56:33 2016 -0700

    Auto merge of #35015 - petrochenkov:forearg, r=nikomatsakis
    
    Properly enforce the "patterns aren't allowed in foreign functions" rule
    
    Cases like `arg @ PATTERN` or `mut arg` were missing.
    Apply the same rule to function pointer types.
    
    Closes https://github.com/rust-lang/rust/issues/35203
    [breaking-change], no breakage in sane code is expected though
    r? @nikomatsakis
    
    This is somewhat related to https://github.com/rust-lang/rfcs/pull/1685 (cc @matklad).
    The goal is to eventually support full pattern syntax where it makes sense (function body may present) and to support *only* the following forms - `TYPE`, `ident: TYPE`, `_: TYPE` - where patterns don't make sense (function body doesn't present), i.e. in foreign functions and function pointer types.
rustc: ./inflate-0.1.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling inflate v0.1.0 (file:///root/benchmarks/inflate-0.1.0)
time: 0.004; rss: 46MB	parsing
Lines of code:             956
Pre-expansion node count:  4738
time: 0.001; rss: 50MB	configuration
time: 0.000; rss: 50MB	recursion limit
time: 0.000; rss: 50MB	crate injection
time: 0.000; rss: 50MB	plugin loading
time: 0.000; rss: 50MB	plugin registration
time: 0.092; rss: 90MB	expansion
time: 0.000; rss: 90MB	maybe building test harness
time: 0.004; rss: 90MB	assigning node ids
Post-expansion node count: 55769
time: 0.000; rss: 90MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 90MB	complete gated feature checking
time: 0.005; rss: 90MB	collecting defs
time: 0.001; rss: 90MB	external crate/lib resolution
time: 0.003; rss: 90MB	early lint checks
time: 0.000; rss: 90MB	AST validation
time: 0.010; rss: 92MB	name resolution
time: 0.007; rss: 96MB	lowering ast -> hir
time: 0.001; rss: 98MB	indexing hir
time: 0.001; rss: 98MB	attribute checking
time: 0.001; rss: 96MB	language item collection
time: 0.001; rss: 96MB	lifetime resolution
time: 0.000; rss: 96MB	looking for entry point
time: 0.000; rss: 96MB	looking for plugin registrar
time: 0.003; rss: 96MB	region resolution
time: 0.000; rss: 96MB	loop checking
time: 0.000; rss: 96MB	static item recursion checking
time: 0.000; rss: 96MB	load_dep_graph
time: 0.002; rss: 98MB	type collecting
time: 0.000; rss: 98MB	variance inference
time: 0.010; rss: 99MB	coherence checking
time: 0.002; rss: 99MB	wf checking
time: 0.002; rss: 99MB	item-types checking
time: 3.445; rss: 116MB	item-bodies checking
time: 0.000; rss: 116MB	drop-impl checking
time: 0.016; rss: 116MB	const checking
time: 0.001; rss: 116MB	privacy checking
time: 0.000; rss: 116MB	stability index
time: 0.001; rss: 116MB	intrinsic checking
time: 0.001; rss: 116MB	effect checking
time: 0.005; rss: 116MB	match checking
time: 0.065; rss: 114MB	liveness checking
time: 0.011; rss: 114MB	rvalue checking
time: 0.039; rss: 128MB	MIR dump
time: 0.023; rss: 127MB	MIR passes
time: 0.225; rss: 128MB	borrow checking
time: 0.000; rss: 128MB	reachability checking
time: 0.003; rss: 128MB	death checking
time: 0.003; rss: 128MB	stability checking
time: 0.000; rss: 128MB	unused lib feature checking
time: 0.021; rss: 129MB	lint checking
time: 0.000; rss: 129MB	resolving dependency formats
time: 0.123; rss: 126MB	Prepare MIR codegen passes
  time: 0.003; rss: 127MB	write metadata
  time: 0.010; rss: 129MB	translation item collection
  time: 0.001; rss: 129MB	codegen unit partitioning
  time: 0.002; rss: 147MB	internalize symbols
time: 0.389; rss: 141MB	translation
time: 0.000; rss: 141MB	assert dep graph
time: 0.000; rss: 141MB	serialize dep graph
  time: 0.025; rss: 109MB	llvm function passes [0]
  time: 0.005; rss: 110MB	llvm module passes [0]
  time: 0.491; rss: 115MB	codegen passes [0]
  time: 0.000; rss: 115MB	codegen passes [0]
time: 0.549; rss: 115MB	LLVM passes
time: 0.034; rss: 104MB	linking
done
