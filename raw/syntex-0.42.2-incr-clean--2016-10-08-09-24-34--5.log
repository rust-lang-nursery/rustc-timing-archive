commit b5fcca5cd76f9e4bcf2a31f7b3a9a7a0deb6fe3b
Merge: 195dbfa f171d98
Author: bors <bors@rust-lang.org>
Date:   Sat Oct 8 02:23:47 2016 -0700

    Auto merge of #37015 - ahmedcharles:sudo, r=alexcrichton
    
    Prevent accidentally running 'make install' as sudo.
    
    r? @alexcrichton
    
    I missed this in the previous PR, but this seems to work. It should probably go in a rollup, but I don't know how to do those. :/
rustc: ./syntex-0.42.2-incr-clean
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax -- -Ztime-passes -Zinput-stats -Z incremental-info
   Compiling syntex_syntax v0.42.0
time: 0.108; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  224033
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.270; rss: 144MB	expansion
time: 0.000; rss: 144MB	maybe building test harness
time: 0.006; rss: 144MB	maybe creating a macro crate
Post-expansion node count: 641571
time: 0.000; rss: 144MB	checking for inline asm in case the target doesn't support it
time: 0.013; rss: 144MB	complete gated feature checking
time: 0.024; rss: 144MB	early lint checks
time: 0.007; rss: 144MB	AST validation
time: 0.083; rss: 159MB	name resolution
time: 0.050; rss: 201MB	lowering ast -> hir
time: 0.009; rss: 210MB	indexing hir
time: 0.006; rss: 210MB	attribute checking
time: 0.005; rss: 160MB	language item collection
time: 0.012; rss: 160MB	lifetime resolution
time: 0.000; rss: 160MB	looking for entry point
time: 0.000; rss: 160MB	looking for plugin registrar
time: 0.044; rss: 171MB	region resolution
time: 0.006; rss: 171MB	loop checking
time: 0.006; rss: 171MB	static item recursion checking
time: 0.264; rss: 172MB	compute_incremental_hashes_map
time: 0.000; rss: 172MB	load_dep_graph
time: 0.043; rss: 176MB	type collecting
time: 0.001; rss: 176MB	variance inference
time: 0.040; rss: 180MB	coherence checking
time: 0.101; rss: 182MB	wf checking
time: 0.192; rss: 187MB	item-types checking
time: 3.932; rss: 239MB	item-bodies checking
time: 0.000; rss: 239MB	drop-impl checking
time: 0.314; rss: 239MB	const checking
time: 0.054; rss: 239MB	privacy checking
time: 0.007; rss: 239MB	stability index
time: 0.021; rss: 239MB	intrinsic checking
time: 0.018; rss: 239MB	effect checking
time: 0.056; rss: 239MB	match checking
time: 0.055; rss: 236MB	liveness checking
time: 0.284; rss: 236MB	rvalue checking
time: 0.412; rss: 425MB	MIR dump
  time: 0.057; rss: 426MB	SimplifyCfg
  time: 0.081; rss: 426MB	QualifyAndPromoteConstants
  time: 0.110; rss: 426MB	TypeckMir
  time: 0.004; rss: 426MB	SimplifyBranches
  time: 0.031; rss: 426MB	SimplifyCfg
time: 0.283; rss: 426MB	MIR passes
time: 0.690; rss: 426MB	borrow checking
time: 0.022; rss: 426MB	reachability checking
time: 0.045; rss: 426MB	death checking
time: 0.041; rss: 428MB	stability checking
time: 0.000; rss: 428MB	unused lib feature checking
time: 0.220; rss: 428MB	lint checking
time: 0.000; rss: 428MB	resolving dependency formats
  time: 0.003; rss: 428MB	NoLandingPads
  time: 0.026; rss: 428MB	SimplifyCfg
  time: 0.071; rss: 437MB	EraseRegions
  time: 0.011; rss: 437MB	AddCallGuards
  time: 1.042; rss: 455MB	ElaborateDrops
  time: 0.003; rss: 455MB	NoLandingPads
  time: 0.052; rss: 455MB	SimplifyCfg
  time: 0.030; rss: 455MB	InstCombine
  time: 0.012; rss: 455MB	Deaggregator
  time: 0.003; rss: 455MB	CopyPropagation
  time: 0.009; rss: 455MB	AddCallGuards
  time: 0.003; rss: 455MB	PreTrans
time: 1.267; rss: 455MB	Prepare MIR codegen passes
  time: 0.262; rss: 463MB	write metadata
  time: 0.471; rss: 471MB	translation item collection
  time: 0.068; rss: 479MB	codegen unit partitioning
  time: 0.059; rss: 725MB	internalize symbols
time: 5.032; rss: 604MB	translation
time: 0.000; rss: 604MB	assert dep graph
time: 0.000; rss: 604MB	serialize dep graph
incremental: re-using 0 out of 1 modules
  time: 0.509; rss: 411MB	llvm function passes [0]
  time: 0.241; rss: 418MB	llvm module passes [0]
  time: 9.983; rss: 416MB	codegen passes [0]
  time: 0.001; rss: 416MB	codegen passes [0]
time: 11.481; rss: 416MB	LLVM passes
time: 0.000; rss: 416MB	serialize work products
time: 0.656; rss: 107MB	linking
done
