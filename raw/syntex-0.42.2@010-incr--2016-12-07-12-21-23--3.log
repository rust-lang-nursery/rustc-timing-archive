commit 209308439a1099b285520459f57e380f18793c07
Merge: 7846610 d6ec686
Author: bors <bors@rust-lang.org>
Date:   Wed Dec 7 16:32:48 2016 +0000

    Auto merge of #38105 - ollie27:rustdoc_deterministic_js, r=GuillaumeGomez
    
    rustdoc: Sort lines in search index and implementors js
    
    This means the files are generated deterministically even with rustdoc running in parallel.
    
    Fixes the first part of #30220.
rustc: ./syntex-0.42.2@010-incr@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.126; rss: 67MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 67MB	recursion limit
time: 0.000; rss: 67MB	crate injection
time: 0.000; rss: 67MB	plugin loading
time: 0.000; rss: 67MB	plugin registration
time: 0.337; rss: 142MB	expansion
time: 0.000; rss: 142MB	maybe building test harness
time: 0.007; rss: 142MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 142MB	checking for inline asm in case the target doesn't support it
time: 0.014; rss: 142MB	complete gated feature checking
time: 0.026; rss: 142MB	early lint checks
time: 0.009; rss: 142MB	AST validation
time: 0.109; rss: 157MB	name resolution
time: 0.127; rss: 190MB	lowering ast -> hir
time: 0.012; rss: 183MB	indexing hir
time: 0.007; rss: 183MB	attribute checking
time: 0.002; rss: 145MB	language item collection
time: 0.014; rss: 147MB	lifetime resolution
time: 0.000; rss: 147MB	looking for entry point
time: 0.000; rss: 147MB	looking for plugin registrar
time: 0.097; rss: 167MB	region resolution
time: 0.009; rss: 167MB	loop checking
time: 0.002; rss: 167MB	static item recursion checking
time: 0.387; rss: 168MB	compute_incremental_hashes_map
time: 0.000; rss: 168MB	load_dep_graph
time: 0.010; rss: 169MB	stability index
time: 0.029; rss: 171MB	stability checking
time: 0.072; rss: 177MB	type collecting
time: 0.005; rss: 178MB	variance inference
time: 0.014; rss: 182MB	impl wf inference
time: 0.038; rss: 186MB	coherence checking
time: 0.089; rss: 189MB	wf checking
time: 0.216; rss: 198MB	item-types checking
time: 4.018; rss: 250MB	item-bodies checking
time: 0.000; rss: 250MB	drop-impl checking
time: 0.325; rss: 262MB	const checking
time: 0.069; rss: 262MB	privacy checking
time: 0.041; rss: 268MB	intrinsic checking
time: 0.017; rss: 268MB	effect checking
time: 0.051; rss: 268MB	match checking
time: 0.055; rss: 277MB	liveness checking
time: 0.187; rss: 277MB	rvalue checking
time: 0.585; rss: 449MB	MIR dump
  time: 0.063; rss: 455MB	SimplifyCfg
  time: 0.082; rss: 455MB	QualifyAndPromoteConstants
  time: 0.184; rss: 472MB	TypeckMir
  time: 0.005; rss: 472MB	SimplifyBranches
  time: 0.033; rss: 472MB	SimplifyCfg
time: 0.368; rss: 472MB	MIR cleanup and validation
time: 0.499; rss: 475MB	borrow checking
time: 0.024; rss: 475MB	reachability checking
time: 0.040; rss: 475MB	death checking
time: 0.000; rss: 475MB	unused lib feature checking
time: 0.181; rss: 475MB	lint checking
time: 0.000; rss: 475MB	resolving dependency formats
  time: 0.004; rss: 475MB	NoLandingPads
  time: 0.027; rss: 475MB	SimplifyCfg
  time: 0.081; rss: 483MB	EraseRegions
  time: 0.012; rss: 483MB	AddCallGuards
  time: 0.316; rss: 505MB	ElaborateDrops
  time: 0.004; rss: 505MB	NoLandingPads
  time: 0.054; rss: 505MB	SimplifyCfg
  time: 0.030; rss: 505MB	InstCombine
  time: 0.013; rss: 505MB	Deaggregator
  time: 0.003; rss: 505MB	CopyPropagation
  time: 0.036; rss: 505MB	SimplifyLocals
  time: 0.010; rss: 505MB	AddCallGuards
  time: 0.003; rss: 505MB	PreTrans
time: 0.594; rss: 505MB	MIR optimisations
  time: 0.087; rss: 514MB	write metadata
  time: 0.420; rss: 529MB	translation item collection
  time: 0.075; rss: 532MB	codegen unit partitioning
  time: 0.054; rss: 1435MB	internalize symbols
time: 13.855; rss: 1435MB	translation
time: 0.000; rss: 1435MB	assert dep graph
time: 2.106; rss: 1465MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1175MB	llvm function passes [1]
time: 0.000; rss: 1175MB	llvm module passes [1]
time: 0.000; rss: 1175MB	llvm function passes [2]
time: 0.000; rss: 1175MB	llvm module passes [2]
time: 0.001; rss: 1177MB	llvm function passes [8]
time: 0.002; rss: 1178MB	llvm function passes [3]
time: 0.000; rss: 1178MB	llvm module passes [3]
time: 0.001; rss: 1178MB	llvm module passes [8]
time: 0.002; rss: 1178MB	codegen passes [1]
time: 0.008; rss: 1179MB	llvm function passes [0]
time: 0.000; rss: 1179MB	llvm module passes [0]
time: 0.007; rss: 1183MB	llvm function passes [6]
time: 0.012; rss: 1183MB	codegen passes [2]
time: 0.001; rss: 1183MB	llvm module passes [6]
time: 0.020; rss: 1188MB	llvm function passes [12]
time: 0.033; rss: 1189MB	llvm function passes [1]
time: 0.014; rss: 1189MB	llvm function passes [10]
time: 0.009; rss: 1190MB	llvm module passes [12]
time: 0.043; rss: 1190MB	llvm function passes [5]
time: 0.043; rss: 1190MB	llvm function passes [4]
time: 0.030; rss: 1192MB	codegen passes [8]
time: 0.017; rss: 1192MB	llvm module passes [5]
time: 0.048; rss: 1192MB	codegen passes [0]
time: 0.000; rss: 1192MB	llvm function passes [0]
time: 0.000; rss: 1192MB	llvm module passes [0]
time: 0.018; rss: 1192MB	llvm module passes [4]
time: 0.001; rss: 1193MB	codegen passes [0]
time: 0.003; rss: 1193MB	llvm function passes [0]
time: 0.002; rss: 1193MB	llvm module passes [0]
time: 0.030; rss: 1197MB	llvm module passes [10]
time: 0.052; rss: 1198MB	llvm module passes [1]
time: 0.081; rss: 1199MB	llvm function passes [2]
time: 0.084; rss: 1200MB	codegen passes [3]
time: 0.001; rss: 1200MB	llvm function passes [16]
time: 0.000; rss: 1200MB	llvm module passes [16]
time: 0.001; rss: 1200MB	llvm function passes [3]
time: 0.000; rss: 1200MB	llvm module passes [3]
time: 0.008; rss: 1205MB	codegen passes [3]
time: 0.000; rss: 1205MB	llvm function passes [3]
time: 0.000; rss: 1205MB	llvm module passes [3]
time: 0.004; rss: 1206MB	codegen passes [3]
time: 0.011; rss: 1209MB	llvm function passes [18]
time: 0.004; rss: 1210MB	llvm module passes [18]
time: 0.072; rss: 1210MB	llvm function passes [13]
time: 0.001; rss: 1210MB	codegen passes [18]
time: 0.083; rss: 1212MB	codegen passes [16]
time: 0.105; rss: 1213MB	llvm module passes [2]
time: 0.116; rss: 1217MB	llvm function passes [14]
time: 0.061; rss: 1218MB	llvm function passes [19]
time: 0.181; rss: 1219MB	codegen passes [6]
time: 0.149; rss: 1218MB	llvm function passes [15]
time: 0.063; rss: 1219MB	llvm module passes [13]
time: 0.232; rss: 1220MB	llvm function passes [7]
time: 0.073; rss: 1221MB	llvm function passes [23]
time: 0.086; rss: 1223MB	llvm function passes [6]
time: 0.203; rss: 1226MB	llvm function passes [3]
time: 0.025; rss: 1226MB	llvm module passes [6]
time: 0.063; rss: 1226MB	llvm function passes [25]
time: 0.199; rss: 1226MB	llvm function passes [17]
time: 0.004; rss: 1227MB	llvm module passes [25]
time: 0.015; rss: 1228MB	llvm module passes [17]
time: 0.035; rss: 1229MB	llvm function passes [30]
time: 0.140; rss: 1231MB	llvm function passes [24]
time: 0.073; rss: 1231MB	llvm module passes [23]
time: 0.166; rss: 1232MB	llvm module passes [14]
time: 0.391; rss: 1233MB	llvm function passes [9]
time: 0.228; rss: 1236MB	llvm function passes [16]
time: 0.070; rss: 1236MB	llvm module passes [30]
time: 0.005; rss: 1236MB	llvm function passes [38]
time: 0.000; rss: 1236MB	llvm module passes [38]
time: 0.061; rss: 1239MB	llvm function passes [27]
time: 0.002; rss: 1239MB	llvm module passes [27]
time: 0.223; rss: 1239MB	llvm module passes [19]
time: 0.043; rss: 1240MB	llvm function passes [36]
time: 0.002; rss: 1240MB	llvm module passes [36]
time: 0.125; rss: 1240MB	llvm module passes [3]
time: 0.095; rss: 1241MB	llvm module passes [24]
time: 0.031; rss: 1241MB	codegen passes [38]
time: 0.083; rss: 1243MB	llvm function passes [34]
time: 0.067; rss: 1244MB	llvm function passes [37]
time: 0.296; rss: 1244MB	llvm function passes [18]
time: 0.246; rss: 1251MB	llvm function passes [29]
time: 0.388; rss: 1252MB	codegen passes [0]
time: 0.320; rss: 1252MB	llvm function passes [22]
time: 0.301; rss: 1253MB	llvm module passes [15]
time: 0.202; rss: 1253MB	llvm function passes [33]
time: 0.074; rss: 1255MB	llvm module passes [37]
time: 0.123; rss: 1255MB	codegen passes [39]
time: 0.078; rss: 1258MB	llvm module passes [29]
time: 0.178; rss: 1264MB	llvm module passes [16]
time: 0.326; rss: 1266MB	llvm function passes [31]
time: 0.532; rss: 1264MB	llvm function passes [8]
time: 0.597; rss: 1269MB	llvm function passes [11]
time: 0.172; rss: 1269MB	llvm module passes [34]
time: 0.322; rss: 1270MB	llvm function passes [32]
time: 0.119; rss: 1270MB	llvm module passes [33]
time: 0.473; rss: 1281MB	llvm module passes [7]
time: 0.360; rss: 1283MB	llvm function passes [35]
time: 0.394; rss: 1284MB	llvm function passes [28]
time: 0.287; rss: 1284MB	llvm module passes [18]
time: 0.570; rss: 1285MB	llvm function passes [21]
time: 0.621; rss: 1295MB	llvm function passes [20]
time: 0.341; rss: 1298MB	codegen passes [27]
time: 0.303; rss: 1310MB	llvm module passes [31]
time: 0.412; rss: 1312MB	codegen passes [36]
time: 0.705; rss: 1313MB	llvm function passes [26]
time: 0.246; rss: 1316MB	llvm module passes [35]
time: 0.401; rss: 1317MB	llvm module passes [8]
time: 0.426; rss: 1320MB	llvm module passes [11]
time: 0.557; rss: 1317MB	llvm module passes [22]
time: 0.310; rss: 1323MB	llvm module passes [20]
time: 0.529; rss: 1321MB	llvm module passes [32]
time: 0.390; rss: 1324MB	llvm module passes [21]
time: 0.491; rss: 1327MB	llvm module passes [28]
time: 0.892; rss: 1335MB	llvm module passes [9]
time: 1.198; rss: 1337MB	codegen passes [5]
time: 0.971; rss: 1351MB	codegen passes [25]
time: 1.273; rss: 1346MB	codegen passes [4]
time: 0.891; rss: 1348MB	codegen passes [37]
time: 0.796; rss: 1356MB	llvm module passes [26]
time: 1.554; rss: 1364MB	codegen passes [10]
time: 1.254; rss: 1379MB	codegen passes [24]
time: 1.906; rss: 1430MB	codegen passes [12]
time: 1.600; rss: 1427MB	codegen passes [30]
time: 1.733; rss: 1415MB	codegen passes [1]
time: 1.652; rss: 1411MB	codegen passes [23]
time: 1.837; rss: 1397MB	codegen passes [6]
time: 1.629; rss: 1386MB	codegen passes [13]
time: 2.299; rss: 1408MB	codegen passes [19]
time: 2.278; rss: 1400MB	codegen passes [34]
time: 2.531; rss: 1415MB	codegen passes [14]
time: 2.333; rss: 1426MB	codegen passes [29]
time: 2.718; rss: 1438MB	codegen passes [17]
time: 2.918; rss: 1484MB	codegen passes [33]
time: 3.087; rss: 1489MB	codegen passes [16]
time: 3.207; rss: 1526MB	codegen passes [2]
time: 2.769; rss: 1502MB	codegen passes [18]
time: 3.099; rss: 1496MB	codegen passes [3]
time: 3.703; rss: 1532MB	codegen passes [15]
time: 3.970; rss: 1552MB	codegen passes [31]
time: 3.819; rss: 1622MB	codegen passes [20]
time: 3.855; rss: 1628MB	codegen passes [22]
time: 3.820; rss: 1576MB	codegen passes [35]
time: 4.083; rss: 1538MB	codegen passes [7]
time: 4.106; rss: 1532MB	codegen passes [21]
time: 3.969; rss: 1531MB	codegen passes [28]
time: 4.447; rss: 1479MB	codegen passes [32]
time: 4.927; rss: 1461MB	codegen passes [11]
time: 4.726; rss: 1417MB	codegen passes [9]
time: 4.922; rss: 1368MB	codegen passes [26]
time: 5.405; rss: 1292MB	codegen passes [8]
time: 8.269; rss: 1292MB	LLVM passes
time: 0.000; rss: 1292MB	serialize work products
time: 1.055; rss: 260MB	linking
done
