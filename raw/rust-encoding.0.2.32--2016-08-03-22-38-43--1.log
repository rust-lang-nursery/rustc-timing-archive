commit 0a3180baab7c361ee85958c88d971190649c3b70
Merge: a0b4e67 63f0c4d
Author: bors <bors@rust-lang.org>
Date:   Wed Aug 3 13:24:53 2016 -0700

    Auto merge of #35261 - eddyb:llvm-autoupgrade, r=nikomatsakis
    
    Support removed LLVM intrinsics by invoking its AutoUpgrade mechanism.
    
    Turns out that LLVM sometimes renames platform intrinsics or replaces them with first-class instructions.
    For example, signed minimum became `select (icmp SLT, a, b), a, b` where `a` and `b` are vectors.
    
    This is blocking the Servo rustup ([relevant failure](http://build.servo.org/builders/windows-dev/builds/226/steps/compile/logs/stdio)), as they're using a few such intrinsics.
    The fix in this PR is to invoke LLVM's own `AutoUpgrade` mechanism to do the replacements.
rustc: ./rust-encoding.0.2.32
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling encoding v0.2.32 (file:///root/benchmarks/rust-encoding.0.2.32)
time: 0.025; rss: 50MB	parsing
Lines of code:             6441
Pre-expansion node count:  30069
time: 0.003; rss: 54MB	configuration
time: 0.000; rss: 54MB	recursion limit
time: 0.000; rss: 54MB	crate injection
time: 0.000; rss: 54MB	plugin loading
time: 0.000; rss: 54MB	plugin registration
time: 0.046; rss: 92MB	expansion
time: 0.000; rss: 92MB	maybe building test harness
time: 0.003; rss: 92MB	assigning node ids
Post-expansion node count: 40757
time: 0.000; rss: 92MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 92MB	complete gated feature checking
time: 0.001; rss: 92MB	collecting defs
time: 0.001; rss: 92MB	external crate/lib resolution
time: 0.002; rss: 92MB	early lint checks
time: 0.000; rss: 92MB	AST validation
time: 0.005; rss: 94MB	name resolution
time: 0.004; rss: 96MB	lowering ast -> hir
time: 0.000; rss: 96MB	indexing hir
time: 0.000; rss: 96MB	attribute checking
time: 0.000; rss: 95MB	language item collection
time: 0.001; rss: 95MB	lifetime resolution
time: 0.000; rss: 95MB	looking for entry point
time: 0.000; rss: 95MB	looking for plugin registrar
time: 0.002; rss: 97MB	region resolution
time: 0.000; rss: 97MB	loop checking
time: 0.000; rss: 97MB	static item recursion checking
time: 0.000; rss: 97MB	load_dep_graph
time: 0.012; rss: 99MB	type collecting
time: 0.000; rss: 99MB	variance inference
time: 0.022; rss: 103MB	coherence checking
time: 0.024; rss: 103MB	wf checking
time: 0.016; rss: 103MB	item-types checking
time: 0.226; rss: 112MB	item-bodies checking
time: 0.000; rss: 112MB	drop-impl checking
time: 0.013; rss: 112MB	const checking
time: 0.002; rss: 112MB	privacy checking
time: 0.000; rss: 112MB	stability index
time: 0.002; rss: 112MB	intrinsic checking
time: 0.000; rss: 112MB	effect checking
time: 0.008; rss: 112MB	match checking
time: 0.002; rss: 112MB	liveness checking
time: 0.008; rss: 112MB	rvalue checking
time: 0.024; rss: 118MB	MIR dump
time: 0.016; rss: 118MB	MIR passes
time: 0.024; rss: 118MB	borrow checking
time: 0.000; rss: 118MB	reachability checking
time: 0.002; rss: 118MB	death checking
time: 0.002; rss: 118MB	stability checking
time: 0.000; rss: 118MB	unused lib feature checking
time: 0.025; rss: 121MB	lint checking
time: 0.000; rss: 121MB	resolving dependency formats
time: 0.027; rss: 121MB	Prepare MIR codegen passes
  time: 0.057; rss: 125MB	write metadata
  time: 0.033; rss: 126MB	translation item collection
  time: 0.003; rss: 127MB	codegen unit partitioning
  time: 0.006; rss: 154MB	internalize symbols
time: 0.360; rss: 154MB	translation
time: 0.000; rss: 154MB	assert dep graph
time: 0.000; rss: 154MB	serialize dep graph
  time: 0.025; rss: 117MB	llvm function passes [0]
  time: 0.049; rss: 121MB	llvm module passes [0]
  time: 0.575; rss: 126MB	codegen passes [0]
  time: 0.000; rss: 125MB	codegen passes [0]
time: 0.694; rss: 125MB	LLVM passes
time: 0.053; rss: 108MB	linking
done
