commit d00c2454157713e77729989c715b96ee31c6b278
Merge: eaf71f8 a65b201
Author: bors <bors@rust-lang.org>
Date:   Fri Aug 26 03:29:45 2016 -0700

    Auto merge of #35975 - jonathandturner:error_buffering, r=alexcrichton
    
    Buffer unix and lock windows to prevent message interleaving
    
    When cargo does a build on multiple processes, multiple crates may error at the same time.  If this happens, currently you'll see interleaving of the error messages, which makes for an unreadable message.
    
    Example:
    
    ```
        --> --> src/bin/multithread-unix.rs:16:35src/bin/singlethread.rs:16:24
    
          ||
    
    1616  | |     Server::new(&addr).workers(8).    Server::new(&addr).serveserve(|r: Request| {(|r: Request| {
    
          | |                                                          ^^^^^^^^^^ expected struct `std::io::Error`, found () expected struct `std::io::Error`, found ()
    
          ||
    
          = = notenote: expected type `std::io::Error`: expected type `std::io::Error`
    
          = = notenote:    found type `()`:    found type `()`
    
          = = notenote: required because of the requirements on the impl of `futures_minihttp::Service<futures_minihttp::Request, futures_minihttp::Response>` for `[closure@src/bin/multithread-unix.rs:16:41: 22:6]`: required because of the requirements on the impl of `futures_minihttp::Service<futures_minihttp::Request, futures_minihttp::Response>` for `[closure@src/bin/singlethread.rs:16:30: 22:6]`
    
    error: aborting due to previous error
    
    error: aborting due to previous error
    ```
    
    This patch uses two techniques to prevent this interleaving.  On Unix systems, since they use the text-based ANSI protocol for coloring, we can safely buffer up whole messages before we emit.  This PR does this buffering, and emits the whole message at once.
    
    On Windows, term must use the Windows terminal API to color the output.  This disallows us from using the same buffering technique.  Instead, here we grab a Windows mutex (thanks to @alexcrichton for the lock code).  This lock only works in Windows and will hold a mutex for the duration of a message output.
    
    r? @nikomatsakis
rustc: ./piston-image-0.3.11
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling gcc v0.3.35
   Compiling byteorder v0.3.13
   Compiling glob v0.2.11
   Compiling rustc-serialize v0.3.19
   Compiling bitflags v0.7.0
   Compiling lzw v0.8.0
   Compiling color_quant v1.0.0
   Compiling num-traits v0.1.35
   Compiling libc v0.2.15
   Compiling gif v0.5.1
   Compiling rand v0.3.14
   Compiling miniz-sys v0.1.7
   Compiling num-integer v0.1.32
   Compiling num-iter v0.1.32
   Compiling flate2 v0.2.14
   Compiling num-bigint v0.1.35
   Compiling num-complex v0.1.35
   Compiling num-rational v0.1.35
   Compiling num v0.1.35
   Compiling png v0.3.1
   Compiling enum_primitive v0.0.1
makefile:2: recipe for target 'all' failed
done
