commit a94642c6f50476cbabbaa27a89ca0fcbf6c89f1a
Merge: 97842f5 dc97023
Author: bors <bors@rust-lang.org>
Date:   Sat Feb 13 06:47:29 2016 +0000

    Auto merge of #31557 - retep998:house-directory, r=alexcrichton
    
    This is the simple solution. I know @nodakai was working on a more complex solution that overhauled the `fill_utf16_buf` stuff.
    
    r? @alexcrichton
rustc: ./jld-day15-parser
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling combine v1.2.0
   Compiling day15 v0.1.0 (file:///root/benchmarks/jld-day15-parser)
time: 0.001; rss: 36MB	parsing
Lines of code:             72
Pre-expansion node count:  673
time: 0.000; rss: 36MB	configuration 1
time: 0.000; rss: 36MB	recursion limit
time: 0.000; rss: 36MB	gated macro checking
time: 0.000; rss: 36MB	crate injection
time: 0.003; rss: 39MB	macro loading
time: 0.000; rss: 39MB	plugin loading
time: 0.000; rss: 39MB	plugin registration
time: 0.002; rss: 39MB	expansion
time: 0.000; rss: 39MB	complete gated feature checking 1
time: 0.000; rss: 39MB	configuration 2
time: 0.000; rss: 39MB	gated configuration checking
time: 0.000; rss: 39MB	maybe building test harness
time: 0.000; rss: 39MB	prelude injection
time: 0.000; rss: 39MB	checking that all macro invocations are gone
time: 0.000; rss: 39MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 39MB	complete gated feature checking 2
time: 0.000; rss: 39MB	const fn bodies and arguments
Post-expansion node count: 1176
time: 0.000; rss: 39MB	assigning node ids
time: 0.000; rss: 39MB	lowering ast -> hir
time: 0.000; rss: 39MB	indexing hir
time: 0.000; rss: 39MB	attribute checking
time: 0.000; rss: 39MB	early lint checks
time: 0.002; rss: 43MB	external crate/lib resolution
time: 0.000; rss: 43MB	language item collection
time: 0.001; rss: 47MB	resolution
time: 0.000; rss: 47MB	lifetime resolution
time: 0.000; rss: 47MB	looking for entry point
time: 0.000; rss: 47MB	looking for plugin registrar
time: 0.000; rss: 47MB	region resolution
time: 0.000; rss: 47MB	loop checking
time: 0.000; rss: 47MB	static item recursion checking
time: 0.001; rss: 52MB	type collecting
time: 0.000; rss: 52MB	variance inference
time: 0.005; rss: 56MB	coherence checking
time: 0.007; rss: 62MB	wf checking
time: 0.000; rss: 62MB	item-types checking
time: 3.691; rss: 149MB	item-bodies checking
time: 0.000; rss: 149MB	drop-impl checking
time: 0.001; rss: 148MB	const checking
time: 0.000; rss: 148MB	privacy checking
time: 0.000; rss: 148MB	stability index
time: 0.000; rss: 148MB	intrinsic checking
time: 0.000; rss: 148MB	effect checking
time: 0.000; rss: 148MB	match checking
time: 0.001; rss: 148MB	MIR dump
time: 0.000; rss: 148MB	MIR passes
time: 0.000; rss: 148MB	liveness checking
time: 0.001; rss: 148MB	borrow checking
time: 0.002; rss: 148MB	rvalue checking
time: 0.000; rss: 148MB	reachability checking
time: 0.000; rss: 148MB	death checking
time: 0.000; rss: 148MB	stability checking
time: 0.000; rss: 148MB	unused lib feature checking
time: 0.003; rss: 148MB	lint checking
time: 0.001; rss: 147MB	resolving dependency formats
time: 0.000; rss: 147MB	erasing regions from MIR
  time: 13.425; rss: 181MB	translation item collection
  time: 0.000; rss: 204MB	write metadata
time: 37.196; rss: 204MB	translation
  time: 0.015; rss: 97MB	llvm function passes [0]
  time: 0.002; rss: 97MB	llvm module passes [0]
  time: 0.285; rss: 109MB	codegen passes [0]
  time: 0.000; rss: 101MB	codegen passes [0]
time: 0.311; rss: 101MB	LLVM passes
  time: 0.104; rss: 105MB	running linker
time: 0.105; rss: 105MB	linking
done
