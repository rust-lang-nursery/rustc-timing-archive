commit bff06afbc5eb980cbfa2fa4f35e0c431828d3471
Merge: 4344f14 d17f0b0
Author: bors <bors@rust-lang.org>
Date:   Sat Oct 8 12:36:11 2016 -0700

    Auto merge of #37027 - alexcrichton:less-deps-in-bootstrap, r=japaric
    
    rustbuild: Optimize build times slightly
    
    As the entry point for building the Rust compiler, a good user experience hinges
    on this compiling quickly to get to the meat of the problem. To that end use
    `#[cfg]`-specific dependencies to avoid building Windows crates on Unix and drop
    the `regex` crate for now which was easily replacable with some string
    searching.
rustc: ./piston-image-0.10.3
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling color_quant v1.0.0
   Compiling gcc v0.3.35
   Compiling scoped_threadpool v0.1.7
   Compiling rustc-serialize v0.3.19
   Compiling lzw v0.10.0
   Compiling byteorder v0.5.3
   Compiling num-traits v0.1.35
   Compiling glob v0.2.11
   Compiling inflate v0.1.1
   Compiling libc v0.2.16
   Compiling gif v0.9.0
   Compiling bitflags v0.7.0
   Compiling num-integer v0.1.32
   Compiling miniz-sys v0.1.7
   Compiling rand v0.3.14
   Compiling num_cpus v0.2.13
   Compiling num-iter v0.1.32
   Compiling num v0.1.35
   Compiling enum_primitive v0.1.0
   Compiling flate2 v0.2.14
   Compiling deque v0.3.1
   Compiling rayon v0.4.2
   Compiling jpeg-decoder v0.1.6
   Compiling png v0.5.2
   Compiling num-bigint v0.1.35
   Compiling num-rational v0.1.35
   Compiling image v0.10.3 (file:///root/benchmarks/piston-image-0.10.3)
time: 0.043; rss: 56MB	parsing
Lines of code:             12000
Pre-expansion node count:  90272
time: 0.000; rss: 56MB	recursion limit
time: 0.000; rss: 56MB	crate injection
time: 0.000; rss: 56MB	plugin loading
time: 0.000; rss: 56MB	plugin registration
time: 0.081; rss: 94MB	expansion
time: 0.000; rss: 94MB	maybe building test harness
time: 0.002; rss: 94MB	maybe creating a macro crate
Post-expansion node count: 148999
time: 0.000; rss: 94MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 94MB	complete gated feature checking
time: 0.006; rss: 94MB	early lint checks
time: 0.002; rss: 94MB	AST validation
time: 0.021; rss: 96MB	name resolution
time: 0.014; rss: 109MB	lowering ast -> hir
time: 0.003; rss: 113MB	indexing hir
time: 0.002; rss: 113MB	attribute checking
time: 0.002; rss: 101MB	language item collection
time: 0.003; rss: 101MB	lifetime resolution
time: 0.000; rss: 101MB	looking for entry point
time: 0.000; rss: 101MB	looking for plugin registrar
time: 0.011; rss: 107MB	region resolution
time: 0.002; rss: 107MB	loop checking
time: 0.001; rss: 107MB	static item recursion checking
time: 0.055; rss: 107MB	compute_incremental_hashes_map
time: 0.000; rss: 107MB	load_dep_graph
time: 0.018; rss: 107MB	type collecting
time: 0.000; rss: 107MB	variance inference
time: 0.030; rss: 111MB	coherence checking
time: 0.092; rss: 113MB	wf checking
time: 0.141; rss: 117MB	item-types checking
time: 0.899; rss: 132MB	item-bodies checking
time: 0.000; rss: 132MB	drop-impl checking
time: 0.066; rss: 132MB	const checking
time: 0.012; rss: 132MB	privacy checking
time: 0.001; rss: 132MB	stability index
time: 0.008; rss: 132MB	intrinsic checking
time: 0.003; rss: 132MB	effect checking
time: 0.017; rss: 132MB	match checking
time: 0.011; rss: 132MB	liveness checking
time: 0.059; rss: 132MB	rvalue checking
time: 0.102; rss: 175MB	MIR dump
  time: 0.011; rss: 175MB	SimplifyCfg
  time: 0.024; rss: 175MB	QualifyAndPromoteConstants
  time: 0.024; rss: 175MB	TypeckMir
  time: 0.001; rss: 175MB	SimplifyBranches
  time: 0.005; rss: 175MB	SimplifyCfg
time: 0.064; rss: 175MB	MIR passes
time: 0.142; rss: 175MB	borrow checking
time: 0.004; rss: 175MB	reachability checking
time: 0.009; rss: 175MB	death checking
time: 0.010; rss: 177MB	stability checking
time: 0.000; rss: 177MB	unused lib feature checking
time: 0.071; rss: 177MB	lint checking
time: 0.000; rss: 177MB	resolving dependency formats
  time: 0.001; rss: 177MB	NoLandingPads
  time: 0.005; rss: 177MB	SimplifyCfg
  time: 0.013; rss: 177MB	EraseRegions
  time: 0.002; rss: 177MB	AddCallGuards
  time: 0.089; rss: 181MB	ElaborateDrops
  time: 0.001; rss: 181MB	NoLandingPads
  time: 0.009; rss: 181MB	SimplifyCfg
  time: 0.006; rss: 181MB	InstCombine
  time: 0.002; rss: 181MB	Deaggregator
  time: 0.000; rss: 181MB	CopyPropagation
  time: 0.001; rss: 181MB	AddCallGuards
  time: 0.000; rss: 181MB	PreTrans
time: 0.129; rss: 181MB	Prepare MIR codegen passes
  time: 0.074; rss: 183MB	write metadata
  time: 0.457; rss: 195MB	translation item collection
  time: 0.031; rss: 198MB	codegen unit partitioning
  time: 0.027; rss: 318MB	internalize symbols
time: 2.887; rss: 290MB	translation
time: 0.000; rss: 290MB	assert dep graph
time: 0.000; rss: 290MB	serialize dep graph
  time: 0.201; rss: 221MB	llvm function passes [0]
  time: 0.084; rss: 224MB	llvm module passes [0]
  time: 4.101; rss: 226MB	codegen passes [0]
  time: 0.001; rss: 226MB	codegen passes [0]
time: 4.686; rss: 226MB	LLVM passes
time: 0.000; rss: 226MB	serialize work products
time: 0.253; rss: 99MB	linking
done
