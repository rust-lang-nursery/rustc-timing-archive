commit b33873f5411d4ad6a3bd5a4a18dffce8a960a316
Merge: 391939b f9cc166
Author: bors <bors@rust-lang.org>
Date:   Fri Nov 11 20:46:59 2016 -0800

    Auto merge of #37469 - meh:fix-term, r=alexcrichton
    
    Fix terminfo database search path
    
    This is more consistent with what every other program does, I happened to have `TERMINFO` set as `/usr/share/terminfo` but had the actual database in `~/.terminfo`, regardless of that every other terminfo/ncurses based software picked up the one in the home correctly.
    
    This just puts the path in `TERMINFO` at the top of the search paths, and moves the home checking to the default search paths section.
rustc: ./piston-image-0.10.3
cargo rustc  -- -Ztime-passes -Zinput-stats
   Compiling image v0.10.3 (file:///root/benchmarks/piston-image-0.10.3)
time: 0.038; rss: 54MB	parsing
Lines of code:             12000
Pre-expansion node count:  90152
time: 0.000; rss: 54MB	recursion limit
time: 0.000; rss: 54MB	crate injection
time: 0.000; rss: 54MB	plugin loading
time: 0.000; rss: 54MB	plugin registration
time: 0.064; rss: 94MB	expansion
time: 0.000; rss: 94MB	maybe building test harness
time: 0.001; rss: 94MB	maybe creating a macro crate
Post-expansion node count: 148881
time: 0.000; rss: 94MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 94MB	complete gated feature checking
time: 0.005; rss: 94MB	early lint checks
time: 0.001; rss: 94MB	AST validation
time: 0.019; rss: 98MB	name resolution
time: 0.012; rss: 106MB	lowering ast -> hir
time: 0.002; rss: 111MB	indexing hir
time: 0.001; rss: 111MB	attribute checking
time: 0.001; rss: 100MB	language item collection
time: 0.002; rss: 100MB	lifetime resolution
time: 0.000; rss: 100MB	looking for entry point
time: 0.000; rss: 100MB	looking for plugin registrar
time: 0.009; rss: 106MB	region resolution
time: 0.001; rss: 106MB	loop checking
time: 0.001; rss: 106MB	static item recursion checking
time: 0.051; rss: 106MB	compute_incremental_hashes_map
time: 0.000; rss: 106MB	load_dep_graph
time: 0.015; rss: 108MB	type collecting
time: 0.000; rss: 108MB	variance inference
time: 0.015; rss: 110MB	coherence checking
time: 0.065; rss: 111MB	wf checking
time: 0.135; rss: 114MB	item-types checking
time: 0.703; rss: 124MB	item-bodies checking
time: 0.000; rss: 124MB	drop-impl checking
time: 0.048; rss: 129MB	const checking
time: 0.008; rss: 129MB	privacy checking
time: 0.001; rss: 129MB	stability index
time: 0.006; rss: 129MB	intrinsic checking
time: 0.003; rss: 129MB	effect checking
time: 0.014; rss: 129MB	match checking
time: 0.009; rss: 129MB	liveness checking
time: 0.038; rss: 129MB	rvalue checking
time: 0.090; rss: 172MB	MIR dump
  time: 0.011; rss: 172MB	SimplifyCfg
  time: 0.020; rss: 172MB	QualifyAndPromoteConstants
  time: 0.021; rss: 172MB	TypeckMir
  time: 0.001; rss: 172MB	SimplifyBranches
  time: 0.004; rss: 172MB	SimplifyCfg
time: 0.057; rss: 172MB	MIR cleanup and validation
time: 0.106; rss: 172MB	borrow checking
time: 0.003; rss: 172MB	reachability checking
time: 0.007; rss: 172MB	death checking
time: 0.007; rss: 174MB	stability checking
time: 0.000; rss: 174MB	unused lib feature checking
time: 0.063; rss: 174MB	lint checking
time: 0.000; rss: 174MB	resolving dependency formats
  time: 0.001; rss: 174MB	NoLandingPads
  time: 0.005; rss: 174MB	SimplifyCfg
  time: 0.010; rss: 174MB	EraseRegions
  time: 0.002; rss: 174MB	AddCallGuards
  time: 0.041; rss: 178MB	ElaborateDrops
  time: 0.001; rss: 178MB	NoLandingPads
  time: 0.009; rss: 178MB	SimplifyCfg
  time: 0.006; rss: 178MB	InstCombine
  time: 0.002; rss: 178MB	Deaggregator
  time: 0.000; rss: 178MB	CopyPropagation
  time: 0.007; rss: 178MB	SimplifyLocals
  time: 0.002; rss: 178MB	AddCallGuards
  time: 0.000; rss: 178MB	PreTrans
time: 0.086; rss: 178MB	MIR optimisations
  time: 0.015; rss: 180MB	write metadata
  time: 0.398; rss: 193MB	translation item collection
  time: 0.026; rss: 195MB	codegen unit partitioning
  time: 0.023; rss: 317MB	internalize symbols
time: 2.399; rss: 317MB	translation
time: 0.000; rss: 317MB	assert dep graph
time: 0.000; rss: 317MB	serialize dep graph
  time: 0.211; rss: 230MB	llvm function passes [0]
  time: 0.082; rss: 233MB	llvm module passes [0]
  time: 4.195; rss: 231MB	codegen passes [0]
  time: 0.000; rss: 231MB	codegen passes [0]
time: 4.789; rss: 231MB	LLVM passes
time: 0.000; rss: 231MB	serialize work products
time: 0.127; rss: 100MB	linking
done
