commit bca365e688f0424fb99d38d477a9b7863bb070d3
Merge: 02aa428 a449bdb
Author: bors <bors@rust-lang.org>
Date:   Wed Nov 9 08:51:23 2016 -0800

    Auto merge of #36520 - estebank:dataless-enum, r=brson
    
    Reword error when data-less enum variant called as function
    
    Given a file like:
    
    ``` rust
    enum Test {
        Variant,
        Variant2 {a: u32},
    }
    
    fn main(){
        let x = Test::Variant("Hello");
        let y = Test::Variant2("World");
    }
    ```
    
    Both errors now look similar:
    
    ``` bash
    error[E0423]: `Test::Variant2` is the name of a struct or struct variant, but this expression uses it like a function name
      --> file3.rs:10:13
       |
    10 |     let y = Test::Variant2("Hello");
       |             ^^^^^^^^^^^^^^ struct called like a function
       |
       = help: did you mean to write: `Test::Variant2 { /* fields */ }`?
    
    error: `Test::Variant` is the name of a data-less enum, but this expression uses it like a function name
     --> file3.rs:9:13
      |
    9 |     let x = Test::Variant("World");
      |             ^^^^^^^^^^^^^^^^^^^^^^ data-less enum called like a function
      |
      = help: did you mean to write: `Test::Variant`?
    note: defined here
     --> file3.rs:2:5
      |
    2 |     Variant,
      |     ^^^^^^^
    
    error: aborting due to previous error
    ```
    
    Re: #28533
rustc: ./html5ever-2016-08-25
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling html5ever v0.5.4 (file:///root/benchmarks/html5ever-2016-08-25)
time: 0.023; rss: 48MB	parsing
Lines of code:             8210
Pre-expansion node count:  52238
time: 0.000; rss: 48MB	recursion limit
time: 0.000; rss: 48MB	crate injection
time: 0.000; rss: 48MB	plugin loading
time: 0.000; rss: 48MB	plugin registration
time: 0.669; rss: 102MB	expansion
time: 0.000; rss: 102MB	maybe building test harness
time: 0.002; rss: 102MB	maybe creating a macro crate
Post-expansion node count: 163524
time: 0.000; rss: 102MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 102MB	complete gated feature checking
time: 0.008; rss: 102MB	early lint checks
time: 0.002; rss: 102MB	AST validation
time: 0.018; rss: 105MB	name resolution
time: 0.012; rss: 113MB	lowering ast -> hir
time: 0.002; rss: 118MB	indexing hir
time: 0.002; rss: 118MB	attribute checking
time: 0.001; rss: 97MB	language item collection
time: 0.002; rss: 97MB	lifetime resolution
time: 0.000; rss: 97MB	looking for entry point
time: 0.000; rss: 97MB	looking for plugin registrar
time: 0.013; rss: 106MB	region resolution
time: 0.001; rss: 106MB	loop checking
time: 0.001; rss: 106MB	static item recursion checking
time: 0.021; rss: 107MB	compute_incremental_hashes_map
time: 0.000; rss: 107MB	load_dep_graph
time: 0.008; rss: 108MB	type collecting
time: 0.000; rss: 108MB	variance inference
time: 0.022; rss: 112MB	coherence checking
time: 0.021; rss: 113MB	wf checking
time: 0.321; rss: 119MB	item-types checking
time: 0.474; rss: 134MB	item-bodies checking
time: 0.000; rss: 134MB	drop-impl checking
time: 0.068; rss: 138MB	const checking
time: 0.006; rss: 138MB	privacy checking
time: 0.001; rss: 138MB	stability index
time: 0.003; rss: 138MB	intrinsic checking
time: 0.002; rss: 138MB	effect checking
time: 0.015; rss: 138MB	match checking
time: 0.012; rss: 132MB	liveness checking
time: 0.025; rss: 132MB	rvalue checking
time: 0.117; rss: 177MB	MIR dump
  time: 0.008; rss: 178MB	SimplifyCfg
  time: 0.014; rss: 178MB	QualifyAndPromoteConstants
  time: 0.023; rss: 178MB	TypeckMir
  time: 0.000; rss: 178MB	SimplifyBranches
  time: 0.004; rss: 178MB	SimplifyCfg
time: 0.049; rss: 178MB	MIR cleanup and validation
time: 0.088; rss: 180MB	borrow checking
time: 0.002; rss: 180MB	reachability checking
time: 0.005; rss: 180MB	death checking
time: 0.007; rss: 180MB	stability checking
time: 0.000; rss: 180MB	unused lib feature checking
time: 0.064; rss: 180MB	lint checking
time: 0.000; rss: 180MB	resolving dependency formats
  time: 0.000; rss: 180MB	NoLandingPads
  time: 0.004; rss: 180MB	SimplifyCfg
  time: 0.009; rss: 180MB	EraseRegions
  time: 0.001; rss: 180MB	AddCallGuards
  time: 0.075; rss: 188MB	ElaborateDrops
  time: 0.000; rss: 188MB	NoLandingPads
  time: 0.007; rss: 183MB	SimplifyCfg
  time: 0.007; rss: 181MB	InstCombine
  time: 0.001; rss: 181MB	Deaggregator
  time: 0.000; rss: 181MB	CopyPropagation
  time: 0.007; rss: 179MB	SimplifyLocals
  time: 0.001; rss: 179MB	AddCallGuards
  time: 0.000; rss: 179MB	PreTrans
time: 0.114; rss: 179MB	MIR optimisations
  time: 0.011; rss: 181MB	write metadata
  time: 0.045; rss: 183MB	translation item collection
  time: 0.005; rss: 183MB	codegen unit partitioning
  time: 0.005; rss: 197MB	internalize symbols
time: 0.293; rss: 197MB	translation
time: 0.000; rss: 197MB	assert dep graph
time: 0.000; rss: 197MB	serialize dep graph
  time: 0.020; rss: 106MB	llvm function passes [0]
  time: 0.012; rss: 107MB	llvm module passes [0]
  time: 0.476; rss: 109MB	codegen passes [0]
  time: 0.000; rss: 109MB	codegen passes [0]
time: 0.547; rss: 109MB	LLVM passes
time: 0.000; rss: 109MB	serialize work products
time: 0.025; rss: 92MB	linking
done
