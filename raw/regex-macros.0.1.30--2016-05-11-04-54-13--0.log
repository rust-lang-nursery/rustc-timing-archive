commit c7ab8840c8cfcd62e9f7212371ed3e31ad2ae73a
Merge: 80ec1b9 42eb703
Author: bors <bors@rust-lang.org>
Date:   Tue May 10 23:40:09 2016 -0700

    Auto merge of #33425 - eddyb:rift, r=nikomatsakis
    
    Split the type context into a global and a local (inference-only) one.
    
    After this change, each `InferCtxt` creates its own local type interner for types with inference by-products.
    Most of the code which handles both a global and a local interner uses `'gcx` and `'tcx` for them.
    A reference to the type context in that situation (e.g. `infcx.tcx`) is `TyCtxt<'a, 'gcx, 'tcx>`.
    The global type context which used to be `&'a TyCtxt<'tcx>` is now `TyCtxt<'a, 'tcx, 'tcx>`.
    
    In order to minimize the number of extra lifetime parameters, many functions became methods.
    Where possible (some inherent impls), lifetime parameters were added on the impl, not each method.
    
    As inference by-products no longer escape their inference contexts, memory usage is lower.
    Example of `-Z time-passes` excerpt for `librustc`, stage1 (~100MB gains):
    Before "rustc: Split local type contexts interners from the global one.":
    ```
    time: 0.395; rss: 335MB item-types checking
    time: 15.392; rss: 472MB        item-bodies checking
    time: 0.000; rss: 472MB drop-impl checking
    time: 1.140; rss: 478MB const checking
    time: 0.139; rss: 478MB privacy checking
    time: 0.024; rss: 478MB stability index
    time: 0.072; rss: 478MB intrinsic checking
    time: 0.038; rss: 478MB effect checking
    time: 0.255; rss: 478MB match checking
    time: 0.128; rss: 484MB liveness checking
    time: 1.372; rss: 484MB rvalue checking
    time: 1.404; rss: 597MB MIR dump
    time: 0.809; rss: 599MB MIR passes
    ```
    After:
    ```
    time: 0.467; rss: 337MB item-types checking
    time: 17.443; rss: 395MB        item-bodies checking
    time: 0.000; rss: 395MB drop-impl checking
    time: 1.423; rss: 401MB const checking
    time: 0.141; rss: 401MB privacy checking
    time: 0.024; rss: 401MB stability index
    time: 0.116; rss: 401MB intrinsic checking
    time: 0.038; rss: 401MB effect checking
    time: 0.382; rss: 401MB match checking
    time: 0.132; rss: 407MB liveness checking
    time: 1.678; rss: 407MB rvalue checking
    time: 1.614; rss: 503MB MIR dump
    time: 0.957; rss: 512MB MIR passes
    ```
    
    **NOTE**: Functions changed to methods weren't re-indented to keep this PR easier to review.
    Once approved, the changes will be mechanically performed.
    However, indentation changes of function arguments are there - and I believe there's a way to hide whitespace-only changes in diffs on GitHub.
rustc: ./regex-macros.0.1.30
cd regex_macros && cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling regex v0.1.30 (file:///root/benchmarks/regex-macros.0.1.30/regex_macros)
   Compiling regex_macros v0.1.17 (file:///root/benchmarks/regex-macros.0.1.30/regex_macros)
time: 0.002; rss: 47MB	parsing
Lines of code:             639
Pre-expansion node count:  2170
time: 0.001; rss: 47MB	configuration 1
time: 0.000; rss: 47MB	recursion limit
time: 0.000; rss: 47MB	crate injection
time: 0.003; rss: 53MB	macro loading
time: 0.000; rss: 53MB	plugin loading
time: 0.000; rss: 53MB	plugin registration
time: 0.032; rss: 60MB	expansion
time: 0.010; rss: 60MB	configuration 2
time: 0.000; rss: 60MB	gated configuration checking
time: 0.005; rss: 60MB	maybe building test harness
time: 0.005; rss: 60MB	prelude injection
time: 0.000; rss: 60MB	checking that all macro invocations are gone
time: 0.000; rss: 60MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 60MB	complete gated feature checking
Post-expansion node count: 69741
time: 0.004; rss: 60MB	assigning node ids
time: 0.000; rss: 60MB	collecting defs
time: 0.085; rss: 97MB	external crate/lib resolution
time: 0.003; rss: 97MB	early lint checks
time: 0.011; rss: 117MB	name resolution
time: 0.006; rss: 124MB	lowering ast -> hir
time: 0.001; rss: 124MB	indexing hir
time: 0.001; rss: 124MB	attribute checking
time: 0.001; rss: 120MB	language item collection
time: 0.000; rss: 120MB	lifetime resolution
time: 0.000; rss: 120MB	looking for entry point
time: 0.000; rss: 120MB	looking for plugin registrar
time: 0.002; rss: 121MB	region resolution
time: 0.000; rss: 121MB	loop checking
time: 0.000; rss: 121MB	static item recursion checking
time: 0.000; rss: 121MB	load_dep_graph
time: 0.016; rss: 158MB	type collecting
time: 0.000; rss: 158MB	variance inference
time: 0.011; rss: 164MB	coherence checking
time: 0.007; rss: 165MB	wf checking
time: 0.001; rss: 165MB	item-types checking
time: 1.160; rss: 195MB	item-bodies checking
makefile:2: recipe for target 'all' failed
done
