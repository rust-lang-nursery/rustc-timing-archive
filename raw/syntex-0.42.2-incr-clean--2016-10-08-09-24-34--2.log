commit b5fcca5cd76f9e4bcf2a31f7b3a9a7a0deb6fe3b
Merge: 195dbfa f171d98
Author: bors <bors@rust-lang.org>
Date:   Sat Oct 8 02:23:47 2016 -0700

    Auto merge of #37015 - ahmedcharles:sudo, r=alexcrichton
    
    Prevent accidentally running 'make install' as sudo.
    
    r? @alexcrichton
    
    I missed this in the previous PR, but this seems to work. It should probably go in a rollup, but I don't know how to do those. :/
rustc: ./syntex-0.42.2-incr-clean
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax -- -Ztime-passes -Zinput-stats -Z incremental-info
   Compiling syntex_syntax v0.42.0
time: 0.109; rss: 76MB	parsing
Lines of code:             33687
Pre-expansion node count:  224033
time: 0.000; rss: 76MB	recursion limit
time: 0.000; rss: 76MB	crate injection
time: 0.000; rss: 76MB	plugin loading
time: 0.000; rss: 76MB	plugin registration
time: 0.272; rss: 145MB	expansion
time: 0.000; rss: 145MB	maybe building test harness
time: 0.007; rss: 145MB	maybe creating a macro crate
Post-expansion node count: 641571
time: 0.000; rss: 145MB	checking for inline asm in case the target doesn't support it
time: 0.014; rss: 145MB	complete gated feature checking
time: 0.024; rss: 145MB	early lint checks
time: 0.008; rss: 145MB	AST validation
time: 0.085; rss: 160MB	name resolution
time: 0.051; rss: 203MB	lowering ast -> hir
time: 0.009; rss: 211MB	indexing hir
time: 0.007; rss: 211MB	attribute checking
time: 0.006; rss: 162MB	language item collection
time: 0.012; rss: 162MB	lifetime resolution
time: 0.000; rss: 162MB	looking for entry point
time: 0.000; rss: 162MB	looking for plugin registrar
time: 0.046; rss: 173MB	region resolution
time: 0.006; rss: 173MB	loop checking
time: 0.006; rss: 173MB	static item recursion checking
time: 0.265; rss: 174MB	compute_incremental_hashes_map
time: 0.000; rss: 174MB	load_dep_graph
time: 0.044; rss: 177MB	type collecting
time: 0.001; rss: 177MB	variance inference
time: 0.039; rss: 182MB	coherence checking
time: 0.100; rss: 183MB	wf checking
time: 0.192; rss: 188MB	item-types checking
time: 3.942; rss: 241MB	item-bodies checking
time: 0.000; rss: 241MB	drop-impl checking
time: 0.313; rss: 242MB	const checking
time: 0.056; rss: 242MB	privacy checking
time: 0.007; rss: 242MB	stability index
time: 0.022; rss: 242MB	intrinsic checking
time: 0.019; rss: 242MB	effect checking
time: 0.059; rss: 242MB	match checking
time: 0.056; rss: 237MB	liveness checking
time: 0.282; rss: 237MB	rvalue checking
time: 0.420; rss: 427MB	MIR dump
  time: 0.057; rss: 428MB	SimplifyCfg
  time: 0.081; rss: 428MB	QualifyAndPromoteConstants
  time: 0.109; rss: 428MB	TypeckMir
  time: 0.004; rss: 428MB	SimplifyBranches
  time: 0.031; rss: 428MB	SimplifyCfg
time: 0.283; rss: 428MB	MIR passes
time: 0.677; rss: 428MB	borrow checking
time: 0.022; rss: 428MB	reachability checking
time: 0.046; rss: 428MB	death checking
time: 0.043; rss: 430MB	stability checking
time: 0.000; rss: 430MB	unused lib feature checking
time: 0.222; rss: 430MB	lint checking
time: 0.000; rss: 430MB	resolving dependency formats
  time: 0.003; rss: 430MB	NoLandingPads
  time: 0.027; rss: 430MB	SimplifyCfg
  time: 0.072; rss: 438MB	EraseRegions
  time: 0.011; rss: 438MB	AddCallGuards
  time: 1.038; rss: 457MB	ElaborateDrops
  time: 0.003; rss: 457MB	NoLandingPads
  time: 0.052; rss: 457MB	SimplifyCfg
  time: 0.031; rss: 457MB	InstCombine
  time: 0.012; rss: 457MB	Deaggregator
  time: 0.003; rss: 457MB	CopyPropagation
  time: 0.009; rss: 457MB	AddCallGuards
  time: 0.003; rss: 457MB	PreTrans
time: 1.264; rss: 457MB	Prepare MIR codegen passes
  time: 0.263; rss: 464MB	write metadata
  time: 0.466; rss: 475MB	translation item collection
  time: 0.068; rss: 479MB	codegen unit partitioning
  time: 0.059; rss: 724MB	internalize symbols
time: 5.149; rss: 603MB	translation
time: 0.000; rss: 603MB	assert dep graph
time: 0.000; rss: 603MB	serialize dep graph
incremental: re-using 0 out of 1 modules
  time: 0.515; rss: 412MB	llvm function passes [0]
  time: 0.256; rss: 420MB	llvm module passes [0]
  time: 10.071; rss: 413MB	codegen passes [0]
  time: 0.001; rss: 415MB	codegen passes [0]
time: 11.590; rss: 415MB	LLVM passes
time: 0.000; rss: 415MB	serialize work products
time: 0.659; rss: 107MB	linking
done
