commit 6dc035ed911672c6a1f7afc9eed15fb08e574e5b
Merge: 98a3502 0b2746c
Author: bors <bors@rust-lang.org>
Date:   Sat Oct 15 19:49:12 2016 -0700

    Auto merge of #37098 - ollie27:rustdoc_playground, r=GuillaumeGomez
    
    rustdoc: Improve playground run buttons
    
    The main change is to stop using javascript to generate the URLs and use
    rustdoc instead.
    
    This also adds run buttons to the error index examples.
    
    You can test the changes at https://ollie27.github.io/rust_doc_test/.
    
    Fixes #36621
    Fixes #36910
rustc: ./rust-encoding-0.3.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling encoding_index_tests v0.1.5 (file:///root/benchmarks/rust-encoding-0.3.0)
   Compiling encoding-types v0.2.0 (file:///root/benchmarks/rust-encoding-0.3.0)
   Compiling encoding-index-singlebyte v1.20160120.0 (file:///root/benchmarks/rust-encoding-0.3.0)
   Compiling encoding-index-korean v1.20141219.6 (file:///root/benchmarks/rust-encoding-0.3.0)
   Compiling encoding-index-tradchinese v1.20141219.6 (file:///root/benchmarks/rust-encoding-0.3.0)
   Compiling encoding-index-simpchinese v1.20160120.0 (file:///root/benchmarks/rust-encoding-0.3.0)
   Compiling encoding-index-japanese v1.20141219.6 (file:///root/benchmarks/rust-encoding-0.3.0)
   Compiling encoding v0.3.0-dev (file:///root/benchmarks/rust-encoding-0.3.0)
time: 0.019; rss: 49MB	parsing
Lines of code:             5757
Pre-expansion node count:  26615
time: 0.000; rss: 49MB	recursion limit
time: 0.000; rss: 49MB	crate injection
time: 0.000; rss: 49MB	plugin loading
time: 0.000; rss: 49MB	plugin registration
time: 0.040; rss: 73MB	expansion
time: 0.000; rss: 73MB	maybe building test harness
time: 0.000; rss: 73MB	maybe creating a macro crate
Post-expansion node count: 37904
time: 0.000; rss: 73MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 73MB	complete gated feature checking
time: 0.001; rss: 73MB	early lint checks
time: 0.000; rss: 73MB	AST validation
time: 0.005; rss: 76MB	name resolution
time: 0.004; rss: 77MB	lowering ast -> hir
time: 0.000; rss: 77MB	indexing hir
time: 0.000; rss: 77MB	attribute checking
time: 0.000; rss: 76MB	language item collection
time: 0.000; rss: 76MB	lifetime resolution
time: 0.000; rss: 76MB	looking for entry point
time: 0.000; rss: 76MB	looking for plugin registrar
time: 0.002; rss: 77MB	region resolution
time: 0.000; rss: 77MB	loop checking
time: 0.000; rss: 77MB	static item recursion checking
time: 0.014; rss: 78MB	compute_incremental_hashes_map
time: 0.000; rss: 78MB	load_dep_graph
time: 0.009; rss: 80MB	type collecting
time: 0.000; rss: 80MB	variance inference
time: 0.016; rss: 82MB	coherence checking
time: 0.012; rss: 82MB	wf checking
time: 0.009; rss: 83MB	item-types checking
time: 0.137; rss: 88MB	item-bodies checking
time: 0.000; rss: 88MB	drop-impl checking
time: 0.009; rss: 90MB	const checking
time: 0.001; rss: 90MB	privacy checking
time: 0.000; rss: 90MB	stability index
time: 0.001; rss: 90MB	intrinsic checking
time: 0.000; rss: 90MB	effect checking
time: 0.006; rss: 90MB	match checking
time: 0.001; rss: 90MB	liveness checking
time: 0.006; rss: 90MB	rvalue checking
time: 0.018; rss: 97MB	MIR dump
  time: 0.002; rss: 97MB	SimplifyCfg
  time: 0.003; rss: 97MB	QualifyAndPromoteConstants
  time: 0.004; rss: 97MB	TypeckMir
  time: 0.000; rss: 97MB	SimplifyBranches
  time: 0.001; rss: 97MB	SimplifyCfg
time: 0.011; rss: 97MB	MIR passes
time: 0.019; rss: 97MB	borrow checking
time: 0.000; rss: 97MB	reachability checking
time: 0.001; rss: 97MB	death checking
time: 0.002; rss: 97MB	stability checking
time: 0.000; rss: 97MB	unused lib feature checking
time: 0.015; rss: 97MB	lint checking
time: 0.000; rss: 97MB	resolving dependency formats
  time: 0.000; rss: 97MB	NoLandingPads
  time: 0.001; rss: 97MB	SimplifyCfg
  time: 0.002; rss: 97MB	EraseRegions
  time: 0.000; rss: 97MB	AddCallGuards
  time: 0.022; rss: 99MB	ElaborateDrops
  time: 0.000; rss: 99MB	NoLandingPads
  time: 0.001; rss: 99MB	SimplifyCfg
  time: 0.001; rss: 99MB	InstCombine
  time: 0.001; rss: 99MB	Deaggregator
  time: 0.000; rss: 99MB	CopyPropagation
  time: 0.000; rss: 99MB	AddCallGuards
  time: 0.000; rss: 99MB	PreTrans
time: 0.030; rss: 99MB	Prepare MIR codegen passes
  time: 0.015; rss: 99MB	write metadata
  time: 0.184; rss: 207MB	translation item collection
  time: 0.003; rss: 207MB	codegen unit partitioning
  time: 0.003; rss: 230MB	internalize symbols
time: 0.472; rss: 223MB	translation
time: 0.000; rss: 220MB	assert dep graph
time: 0.000; rss: 220MB	serialize dep graph
  time: 0.025; rss: 112MB	llvm function passes [0]
  time: 0.055; rss: 118MB	llvm module passes [0]
  time: 0.621; rss: 124MB	codegen passes [0]
  time: 0.001; rss: 123MB	codegen passes [0]
time: 0.756; rss: 123MB	LLVM passes
time: 0.000; rss: 123MB	serialize work products
time: 0.077; rss: 94MB	linking
done
