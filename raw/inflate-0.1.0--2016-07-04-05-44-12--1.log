commit d508de6cf7c7bb9b5057ee63432dbbc899209101
Merge: d98da85 d37edef
Author: bors <bors@rust-lang.org>
Date:   Mon Jul 4 02:18:46 2016 -0700

    Auto merge of #34638 - zackmdavis:if_let_over_none_empty_block_arm, r=jseyfried
    
    prefer `if let` to match with `None => {}` arm in some places
    
    This is a spiritual succesor to #34268 / 8531d581, in which we replaced a
    number of matches of None to the unit value with `if let` conditionals
    where it was judged that this made for clearer/simpler code (as would be
    recommended by Manishearth/rust-clippy's `single_match` lint). The same
    rationale applies to matches of None to the empty block.
    
    ----
    
    r? @jseyfried
rustc: ./inflate-0.1.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling inflate v0.1.0 (file:///root/benchmarks/inflate-0.1.0)
time: 0.006; rss: 84MB	parsing
Lines of code:             956
Pre-expansion node count:  4738
time: 0.001; rss: 84MB	configuration
time: 0.000; rss: 84MB	recursion limit
time: 0.000; rss: 84MB	crate injection
time: 0.000; rss: 84MB	plugin loading
time: 0.000; rss: 84MB	plugin registration
time: 0.131; rss: 124MB	expansion
time: 0.000; rss: 124MB	maybe building test harness
time: 0.000; rss: 124MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 124MB	complete gated feature checking
Post-expansion node count: 55769
time: 0.004; rss: 124MB	assigning node ids
time: 0.005; rss: 124MB	collecting defs
time: 0.001; rss: 124MB	external crate/lib resolution
time: 0.003; rss: 124MB	early lint checks
time: 0.000; rss: 124MB	AST validation
time: 0.007; rss: 126MB	name resolution
time: 0.006; rss: 128MB	lowering ast -> hir
time: 0.001; rss: 130MB	indexing hir
time: 0.000; rss: 130MB	attribute checking
time: 0.001; rss: 128MB	language item collection
time: 0.001; rss: 128MB	lifetime resolution
time: 0.000; rss: 128MB	looking for entry point
time: 0.000; rss: 128MB	looking for plugin registrar
time: 0.004; rss: 131MB	region resolution
time: 0.000; rss: 131MB	loop checking
time: 0.000; rss: 131MB	static item recursion checking
time: 0.000; rss: 131MB	load_dep_graph
time: 0.002; rss: 133MB	type collecting
time: 0.000; rss: 133MB	variance inference
time: 0.010; rss: 134MB	coherence checking
time: 0.002; rss: 134MB	wf checking
time: 0.003; rss: 134MB	item-types checking
time: 3.411; rss: 149MB	item-bodies checking
time: 0.000; rss: 149MB	drop-impl checking
time: 0.015; rss: 149MB	const checking
time: 0.001; rss: 149MB	privacy checking
time: 0.000; rss: 149MB	stability index
time: 0.001; rss: 149MB	intrinsic checking
time: 0.001; rss: 149MB	effect checking
time: 0.005; rss: 149MB	match checking
time: 0.064; rss: 147MB	liveness checking
time: 0.011; rss: 147MB	rvalue checking
time: 0.038; rss: 162MB	MIR dump
time: 0.023; rss: 160MB	MIR passes
time: 0.205; rss: 160MB	borrow checking
time: 0.000; rss: 160MB	reachability checking
time: 0.003; rss: 160MB	death checking
time: 0.002; rss: 159MB	stability checking
time: 0.000; rss: 159MB	unused lib feature checking
time: 0.021; rss: 160MB	lint checking
time: 0.000; rss: 160MB	resolving dependency formats
time: 0.123; rss: 158MB	Prepare MIR codegen passes
  time: 0.003; rss: 159MB	write metadata
  time: 0.010; rss: 161MB	translation item collection
  time: 0.000; rss: 161MB	codegen unit partitioning
time: 0.825; rss: 177MB	translation
time: 0.000; rss: 177MB	assert dep graph
time: 0.000; rss: 177MB	serialize dep graph
  time: 0.295; rss: 143MB	llvm function passes [0]
  time: 0.075; rss: 143MB	llvm module passes [0]
  time: 4.587; rss: 151MB	codegen passes [0]
  time: 0.001; rss: 137MB	codegen passes [0]
time: 5.268; rss: 137MB	LLVM passes
time: 0.035; rss: 136MB	linking
done
