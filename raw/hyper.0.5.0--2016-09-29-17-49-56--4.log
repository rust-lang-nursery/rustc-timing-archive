commit 289f3a4ca79916d6445b452fc19a18a1e42a879a
Merge: ff67da6 13a2dd9
Author: bors <bors@rust-lang.org>
Date:   Thu Sep 29 11:20:02 2016 -0700

    Auto merge of #36377 - tormol:encode_utf, r=alexcrichton
    
    Change encode_utf{8,16}() to write to a buffer and panic if it's too small
    
    cc #27784
    
    Should the "A buffer that's too small" examples be removed and replaced by tests?
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.026; rss: 49MB	parsing
Lines of code:             9003
Pre-expansion node count:  44129
time: 0.000; rss: 49MB	recursion limit
time: 0.000; rss: 49MB	crate injection
time: 0.000; rss: 49MB	plugin loading
time: 0.000; rss: 49MB	plugin registration
time: 0.102; rss: 87MB	expansion
time: 0.000; rss: 87MB	maybe building test harness
time: 0.001; rss: 87MB	maybe creating a macro crate
Post-expansion node count: 101371
time: 0.000; rss: 87MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 87MB	complete gated feature checking
time: 0.003; rss: 87MB	early lint checks
time: 0.001; rss: 87MB	AST validation
time: 0.017; rss: 91MB	name resolution
time: 0.009; rss: 95MB	lowering ast -> hir
time: 0.002; rss: 97MB	indexing hir
time: 0.001; rss: 97MB	attribute checking
time: 0.001; rss: 91MB	language item collection
time: 0.002; rss: 91MB	lifetime resolution
time: 0.000; rss: 91MB	looking for entry point
time: 0.000; rss: 91MB	looking for plugin registrar
time: 0.006; rss: 96MB	region resolution
time: 0.001; rss: 96MB	loop checking
time: 0.001; rss: 96MB	static item recursion checking
time: 0.040; rss: 96MB	compute_incremental_hashes_map
time: 0.000; rss: 96MB	load_dep_graph
time: 0.023; rss: 97MB	type collecting
time: 0.000; rss: 97MB	variance inference
time: 0.034; rss: 102MB	coherence checking
time: 0.051; rss: 103MB	wf checking
time: 0.022; rss: 103MB	item-types checking
time: 0.357; rss: 113MB	item-bodies checking
time: 0.000; rss: 113MB	drop-impl checking
time: 0.035; rss: 114MB	const checking
time: 0.008; rss: 114MB	privacy checking
time: 0.001; rss: 114MB	stability index
time: 0.003; rss: 114MB	intrinsic checking
time: 0.002; rss: 114MB	effect checking
time: 0.009; rss: 114MB	match checking
time: 0.005; rss: 114MB	liveness checking
time: 0.025; rss: 114MB	rvalue checking
time: 0.049; rss: 132MB	MIR dump
  time: 0.007; rss: 133MB	SimplifyCfg
  time: 0.012; rss: 133MB	QualifyAndPromoteConstants
  time: 0.014; rss: 133MB	TypeckMir
  time: 0.001; rss: 133MB	SimplifyBranches
  time: 0.004; rss: 133MB	SimplifyCfg
time: 0.038; rss: 133MB	MIR passes
time: 0.062; rss: 133MB	borrow checking
time: 0.003; rss: 133MB	reachability checking
time: 0.006; rss: 133MB	death checking
time: 0.006; rss: 133MB	stability checking
time: 0.000; rss: 133MB	unused lib feature checking
time: 0.041; rss: 133MB	lint checking
time: 0.000; rss: 133MB	resolving dependency formats
  time: 0.001; rss: 133MB	NoLandingPads
  time: 0.003; rss: 133MB	SimplifyCfg
  time: 0.009; rss: 135MB	EraseRegions
  time: 0.001; rss: 135MB	AddCallGuards
  time: 0.050; rss: 137MB	ElaborateDrops
  time: 0.001; rss: 137MB	NoLandingPads
  time: 0.005; rss: 137MB	SimplifyCfg
  time: 0.003; rss: 137MB	InstCombine
  time: 0.003; rss: 137MB	Deaggregator
  time: 0.001; rss: 137MB	CopyPropagation
  time: 0.001; rss: 137MB	AddCallGuards
  time: 0.000; rss: 137MB	PreTrans
time: 0.079; rss: 137MB	Prepare MIR codegen passes
  time: 0.043; rss: 139MB	write metadata
  time: 0.146; rss: 147MB	translation item collection
  time: 0.018; rss: 149MB	codegen unit partitioning
  time: 0.017; rss: 202MB	internalize symbols
time: 1.125; rss: 191MB	translation
time: 0.000; rss: 190MB	assert dep graph
time: 0.000; rss: 190MB	serialize dep graph
  time: 0.085; rss: 147MB	llvm function passes [0]
  time: 0.042; rss: 151MB	llvm module passes [0]
  time: 1.622; rss: 154MB	codegen passes [0]
  time: 0.001; rss: 152MB	codegen passes [0]
time: 1.887; rss: 152MB	LLVM passes
time: 0.000; rss: 152MB	serialize work products
time: 0.139; rss: 94MB	linking
done
