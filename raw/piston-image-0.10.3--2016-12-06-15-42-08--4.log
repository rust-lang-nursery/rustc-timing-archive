commit b5d0f90929ddaae89609e9bb229a9b8a27e27615
Merge: 1842efb cc6edb2
Author: bors <bors@rust-lang.org>
Date:   Tue Dec 6 17:38:26 2016 +0000

    Auto merge of #38036 - Mark-Simulacrum:polish-2, r=nagisa,eddyb
    
    Simplify calling find_implied_output_region.
    
    @nnethercote added the optimization that find_implied_output_region
    takes a closure as an optimization in #37014, but passing an iterator is
    simpler, and more ergonomic for callers.
rustc: ./piston-image-0.10.3
cargo rustc  -- -Ztime-passes -Zinput-stats
time: 0.038; rss: 54MB	parsing
Lines of code:             12000
Pre-expansion node count:  90152
time: 0.000; rss: 54MB	recursion limit
time: 0.000; rss: 54MB	crate injection
time: 0.000; rss: 54MB	plugin loading
time: 0.000; rss: 54MB	plugin registration
time: 0.068; rss: 96MB	expansion
time: 0.000; rss: 96MB	maybe building test harness
time: 0.001; rss: 96MB	maybe creating a macro crate
Post-expansion node count: 148881
time: 0.000; rss: 96MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 96MB	complete gated feature checking
time: 0.006; rss: 96MB	early lint checks
time: 0.001; rss: 96MB	AST validation
time: 0.017; rss: 98MB	name resolution
time: 0.015; rss: 108MB	lowering ast -> hir
time: 0.003; rss: 110MB	indexing hir
time: 0.002; rss: 110MB	attribute checking
time: 0.001; rss: 99MB	language item collection
time: 0.003; rss: 99MB	lifetime resolution
time: 0.000; rss: 99MB	looking for entry point
time: 0.000; rss: 99MB	looking for plugin registrar
time: 0.010; rss: 106MB	region resolution
time: 0.002; rss: 106MB	loop checking
time: 0.000; rss: 106MB	static item recursion checking
time: 0.059; rss: 106MB	compute_incremental_hashes_map
time: 0.000; rss: 106MB	load_dep_graph
time: 0.002; rss: 106MB	stability index
time: 0.004; rss: 106MB	stability checking
time: 0.015; rss: 108MB	type collecting
time: 0.000; rss: 108MB	variance inference
time: 0.000; rss: 108MB	impl wf inference
time: 0.013; rss: 110MB	coherence checking
time: 0.064; rss: 111MB	wf checking
time: 0.135; rss: 114MB	item-types checking
time: 0.679; rss: 125MB	item-bodies checking
time: 0.000; rss: 125MB	drop-impl checking
time: 0.045; rss: 129MB	const checking
time: 0.010; rss: 129MB	privacy checking
time: 0.005; rss: 129MB	intrinsic checking
time: 0.002; rss: 129MB	effect checking
time: 0.013; rss: 129MB	match checking
time: 0.008; rss: 129MB	liveness checking
time: 0.037; rss: 129MB	rvalue checking
time: 0.085; rss: 170MB	MIR dump
  time: 0.011; rss: 170MB	SimplifyCfg
  time: 0.019; rss: 170MB	QualifyAndPromoteConstants
  time: 0.022; rss: 170MB	TypeckMir
  time: 0.001; rss: 170MB	SimplifyBranches
  time: 0.004; rss: 170MB	SimplifyCfg
time: 0.058; rss: 170MB	MIR cleanup and validation
time: 0.101; rss: 170MB	borrow checking
time: 0.003; rss: 170MB	reachability checking
time: 0.007; rss: 170MB	death checking
time: 0.000; rss: 170MB	unused lib feature checking
time: 0.057; rss: 170MB	lint checking
time: 0.000; rss: 170MB	resolving dependency formats
  time: 0.000; rss: 170MB	NoLandingPads
  time: 0.005; rss: 170MB	SimplifyCfg
  time: 0.011; rss: 170MB	EraseRegions
  time: 0.002; rss: 170MB	AddCallGuards
  time: 0.041; rss: 176MB	ElaborateDrops
  time: 0.001; rss: 176MB	NoLandingPads
  time: 0.009; rss: 176MB	SimplifyCfg
  time: 0.006; rss: 176MB	InstCombine
  time: 0.002; rss: 176MB	Deaggregator
  time: 0.000; rss: 176MB	CopyPropagation
  time: 0.007; rss: 176MB	SimplifyLocals
  time: 0.002; rss: 176MB	AddCallGuards
  time: 0.000; rss: 176MB	PreTrans
time: 0.086; rss: 176MB	MIR optimisations
  time: 0.016; rss: 178MB	write metadata
  time: 0.398; rss: 221MB	translation item collection
  time: 0.020; rss: 221MB	codegen unit partitioning
  time: 0.020; rss: 337MB	internalize symbols
time: 2.312; rss: 337MB	translation
time: 0.000; rss: 337MB	assert dep graph
time: 0.000; rss: 337MB	serialize dep graph
  time: 0.206; rss: 232MB	llvm function passes [0]
  time: 0.092; rss: 235MB	llvm module passes [0]
  time: 4.162; rss: 234MB	codegen passes [0]
  time: 0.000; rss: 234MB	codegen passes [0]
time: 4.756; rss: 234MB	LLVM passes
time: 0.000; rss: 234MB	serialize work products
time: 0.129; rss: 107MB	linking
done
