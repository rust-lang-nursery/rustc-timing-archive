commit 303892ee156e5c31222b10786e661abb24dcf241
Merge: 074f49a 58f1b9c
Author: bors <bors@rust-lang.org>
Date:   Sat Jan 30 00:25:44 2016 +0000

    Auto merge of #30448 - alexcrichton:llvmup, r=nikomatsakis
    
    These commits perform a few high-level changes with the goal of enabling i686 MSVC unwinding:
    
    * LLVM is upgraded to pick up the new exception handling instructions and intrinsics for MSVC. This puts us somewhere along the 3.8 branch, but we should still be compatible with LLVM 3.7 for non-MSVC targets.
    * All unwinding for MSVC targets (both 32 and 64-bit) are implemented in terms of this new LLVM support. I would like to also extend this to Windows GNU targets to drop the runtime dependencies we have on MinGW, but I'd like to land this first.
    * Some tests were fixed up for i686 MSVC here and there where necessary. The full test suite should be passing now for that target.
    
    In terms of landing this I plan to have this go through first, then verify that i686 MSVC works, then I'll enable `make check` on the bots for that target instead of just `make` as-is today.
    
    Closes #25869
rustc: ./regex-macros.0.1.30
cd regex_macros && cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling regex v0.1.30 (file:///root/benchmarks/regex-macros.0.1.30/regex_macros)
   Compiling regex_macros v0.1.17 (file:///root/benchmarks/regex-macros.0.1.30/regex_macros)
time: 0.002; rss: 37MB	parsing
Lines of code:             639
Pre-expansion node count:  2170
time: 0.001; rss: 37MB	configuration 1
time: 0.000; rss: 37MB	recursion limit
time: 0.000; rss: 37MB	gated macro checking
time: 0.000; rss: 37MB	crate injection
time: 0.003; rss: 40MB	macro loading
time: 0.000; rss: 40MB	plugin loading
time: 0.000; rss: 40MB	plugin registration
time: 0.035; rss: 46MB	expansion
time: 0.001; rss: 46MB	complete gated feature checking 1
time: 0.011; rss: 46MB	configuration 2
time: 0.000; rss: 46MB	gated configuration checking
time: 0.005; rss: 46MB	maybe building test harness
time: 0.005; rss: 46MB	prelude injection
time: 0.000; rss: 46MB	checking that all macro invocations are gone
time: 0.000; rss: 46MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 46MB	complete gated feature checking 2
Post-expansion node count: 76201
time: 0.005; rss: 46MB	assigning node ids
time: 0.004; rss: 50MB	lowering ast -> hir
time: 0.001; rss: 50MB	indexing hir
time: 0.000; rss: 50MB	attribute checking
time: 0.002; rss: 50MB	early lint checks
time: 0.054; rss: 81MB	external crate/lib resolution
time: 0.001; rss: 81MB	language item collection
makefile:2: recipe for target 'all' failed
done
