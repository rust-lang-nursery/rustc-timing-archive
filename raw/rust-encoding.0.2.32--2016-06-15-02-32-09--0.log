commit 1a942f60f085be7450f340b33eae16570633eb27
Merge: 6b45117 0c742d2
Author: bors <bors@rust-lang.org>
Date:   Tue Jun 14 17:11:05 2016 -0700

    Auto merge of #34245 - ollie27:rustdoc_redirect_rename, r=alexcrichton
    
    rustdoc: Fix redirect pages for renamed reexports
    
    We need to use the name of the target not the name of the current item
    when creating the link.
    
    An example in `std` is [`std::sys::ext`](https://doc.rust-lang.org/nightly/std/sys/ext/index.html).
rustc: ./rust-encoding.0.2.32
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling encoding_index_tests v0.1.4 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-korean v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-singlebyte v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-japanese v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-tradchinese v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding-index-simpchinese v1.20141219.5 (file:///root/benchmarks/rust-encoding.0.2.32)
   Compiling encoding v0.2.32 (file:///root/benchmarks/rust-encoding.0.2.32)
time: 0.023; rss: 51MB	parsing
Lines of code:             6441
Pre-expansion node count:  30015
time: 0.003; rss: 55MB	configuration 1
time: 0.000; rss: 55MB	recursion limit
time: 0.000; rss: 55MB	crate injection
time: 0.000; rss: 55MB	plugin loading
time: 0.000; rss: 55MB	plugin registration
time: 0.072; rss: 91MB	expansion
time: 0.000; rss: 91MB	gated configuration checking
time: 0.000; rss: 91MB	maybe building test harness
time: 0.000; rss: 91MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 91MB	complete gated feature checking
Post-expansion node count: 40313
time: 0.003; rss: 91MB	assigning node ids
time: 0.001; rss: 91MB	collecting defs
time: 0.001; rss: 91MB	external crate/lib resolution
time: 0.002; rss: 91MB	early lint checks
time: 0.000; rss: 91MB	AST validation
time: 0.008; rss: 93MB	name resolution
time: 0.005; rss: 95MB	lowering ast -> hir
time: 0.000; rss: 95MB	indexing hir
time: 0.000; rss: 95MB	attribute checking
time: 0.000; rss: 93MB	language item collection
time: 0.001; rss: 93MB	lifetime resolution
time: 0.000; rss: 93MB	looking for entry point
time: 0.000; rss: 93MB	looking for plugin registrar
time: 0.002; rss: 95MB	region resolution
time: 0.000; rss: 95MB	loop checking
time: 0.000; rss: 95MB	static item recursion checking
time: 0.000; rss: 95MB	load_dep_graph
time: 0.012; rss: 98MB	type collecting
time: 0.000; rss: 98MB	variance inference
time: 0.022; rss: 102MB	coherence checking
time: 0.024; rss: 102MB	wf checking
time: 0.015; rss: 103MB	item-types checking
time: 0.218; rss: 111MB	item-bodies checking
time: 0.000; rss: 111MB	drop-impl checking
time: 0.013; rss: 111MB	const checking
time: 0.002; rss: 111MB	privacy checking
time: 0.000; rss: 111MB	stability index
time: 0.002; rss: 111MB	intrinsic checking
time: 0.000; rss: 111MB	effect checking
time: 0.008; rss: 111MB	match checking
time: 0.001; rss: 111MB	liveness checking
time: 0.008; rss: 111MB	rvalue checking
time: 0.023; rss: 117MB	MIR dump
time: 0.015; rss: 118MB	MIR passes
time: 0.024; rss: 118MB	borrow checking
time: 0.000; rss: 118MB	reachability checking
time: 0.002; rss: 118MB	death checking
time: 0.002; rss: 118MB	stability checking
time: 0.000; rss: 118MB	unused lib feature checking
time: 0.024; rss: 118MB	lint checking
time: 0.000; rss: 118MB	resolving dependency formats
time: 0.027; rss: 119MB	Prepare MIR codegen passes
  time: 0.056; rss: 119MB	write metadata
  time: 0.027; rss: 122MB	translation item collection
  time: 0.001; rss: 122MB	codegen unit partitioning
time: 0.357; rss: 158MB	translation
time: 0.000; rss: 158MB	assert dep graph
time: 0.000; rss: 158MB	serialize dep graph
  time: 0.026; rss: 118MB	llvm function passes [0]
  time: 0.050; rss: 122MB	llvm module passes [0]
  time: 0.581; rss: 126MB	codegen passes [0]
  time: 0.001; rss: 110MB	codegen passes [0]
time: 0.723; rss: 109MB	LLVM passes
time: 0.053; rss: 107MB	linking
done
