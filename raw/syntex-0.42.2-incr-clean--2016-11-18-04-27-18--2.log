commit 509d14fc70d673bd01c7721481f63cb1bc503103
Merge: 35e8924 8918ddf
Author: bors <bors@rust-lang.org>
Date:   Thu Nov 17 20:56:03 2016 -0800

    Auto merge of #37846 - jseyfried:fix_proc_macro_dep, r=alexcrichton
    
    Fix bug in proc_macro dependency loading
    
    Fixes #37839.
    r? @alexcrichton
rustc: ./syntex-0.42.2-incr-clean
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
   Compiling syntex_syntax v0.42.0
time: 0.092; rss: 71MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 71MB	recursion limit
time: 0.000; rss: 71MB	crate injection
time: 0.000; rss: 71MB	plugin loading
time: 0.000; rss: 71MB	plugin registration
time: 0.235; rss: 146MB	expansion
time: 0.000; rss: 146MB	maybe building test harness
time: 0.006; rss: 146MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 146MB	checking for inline asm in case the target doesn't support it
time: 0.013; rss: 146MB	complete gated feature checking
time: 0.023; rss: 146MB	early lint checks
time: 0.007; rss: 146MB	AST validation
time: 0.076; rss: 160MB	name resolution
time: 0.044; rss: 185MB	lowering ast -> hir
time: 0.008; rss: 196MB	indexing hir
time: 0.006; rss: 196MB	attribute checking
time: 0.005; rss: 152MB	language item collection
time: 0.010; rss: 152MB	lifetime resolution
time: 0.000; rss: 152MB	looking for entry point
time: 0.000; rss: 152MB	looking for plugin registrar
time: 0.040; rss: 172MB	region resolution
time: 0.005; rss: 172MB	loop checking
time: 0.005; rss: 172MB	static item recursion checking
time: 0.337; rss: 172MB	compute_incremental_hashes_map
time: 0.000; rss: 172MB	load_dep_graph
time: 0.048; rss: 170MB	type collecting
time: 0.001; rss: 170MB	variance inference
time: 0.002; rss: 170MB	impl wf inference
time: 0.018; rss: 173MB	coherence checking
time: 0.088; rss: 176MB	wf checking
time: 0.180; rss: 181MB	item-types checking
time: 6.259; rss: 233MB	item-bodies checking
time: 0.000; rss: 233MB	drop-impl checking
time: 0.216; rss: 254MB	const checking
time: 0.048; rss: 254MB	privacy checking
time: 0.006; rss: 254MB	stability index
time: 0.017; rss: 254MB	intrinsic checking
time: 0.014; rss: 254MB	effect checking
time: 0.045; rss: 254MB	match checking
time: 0.050; rss: 256MB	liveness checking
time: 0.176; rss: 256MB	rvalue checking
time: 0.357; rss: 438MB	MIR dump
  time: 0.057; rss: 439MB	SimplifyCfg
  time: 0.073; rss: 439MB	QualifyAndPromoteConstants
  time: 0.105; rss: 439MB	TypeckMir
  time: 0.004; rss: 439MB	SimplifyBranches
  time: 0.030; rss: 440MB	SimplifyCfg
time: 0.269; rss: 440MB	MIR cleanup and validation
time: 0.544; rss: 440MB	borrow checking
time: 0.020; rss: 440MB	reachability checking
time: 0.039; rss: 440MB	death checking
time: 0.031; rss: 445MB	stability checking
time: 0.000; rss: 445MB	unused lib feature checking
time: 0.196; rss: 445MB	lint checking
time: 0.000; rss: 445MB	resolving dependency formats
  time: 0.003; rss: 445MB	NoLandingPads
  time: 0.026; rss: 445MB	SimplifyCfg
  time: 0.061; rss: 453MB	EraseRegions
  time: 0.011; rss: 453MB	AddCallGuards
  time: 0.271; rss: 464MB	ElaborateDrops
  time: 0.003; rss: 464MB	NoLandingPads
  time: 0.051; rss: 464MB	SimplifyCfg
  time: 0.028; rss: 464MB	InstCombine
  time: 0.012; rss: 464MB	Deaggregator
  time: 0.002; rss: 464MB	CopyPropagation
  time: 0.033; rss: 464MB	SimplifyLocals
  time: 0.010; rss: 464MB	AddCallGuards
  time: 0.002; rss: 464MB	PreTrans
time: 0.514; rss: 464MB	MIR optimisations
  time: 0.060; rss: 476MB	write metadata
  time: 0.394; rss: 487MB	translation item collection
  time: 0.066; rss: 500MB	codegen unit partitioning
  time: 0.048; rss: 741MB	internalize symbols
time: 4.361; rss: 741MB	translation
time: 0.000; rss: 741MB	assert dep graph
time: 0.000; rss: 741MB	serialize dep graph
incremental: re-using 0 out of 1 modules
  time: 0.524; rss: 418MB	llvm function passes [0]
  time: 0.247; rss: 427MB	llvm module passes [0]
  time: 10.345; rss: 427MB	codegen passes [0]
  time: 0.000; rss: 427MB	codegen passes [0]
time: 11.895; rss: 427MB	LLVM passes
time: 0.000; rss: 427MB	serialize work products
time: 0.341; rss: 105MB	linking
done
