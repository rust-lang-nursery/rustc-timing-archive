commit 689c6c48ecd3d89d120c6aecf8b69222920e4520
Merge: 022cb6d bbf2c3c
Author: bors <bors@rust-lang.org>
Date:   Fri Sep 2 03:01:48 2016 -0700

    Auto merge of #36024 - japaric:mips64, r=alexcrichton
    
    add mips64-gnu and mips64el-gnu targets
    
    With this commit one can build no_core (and probably no_std as well)
    Rust programs for these targets. It's not yet possible to cross compile
    std for these targets because rust-lang/libc doesn't know about the
    mips64 architecture.
    
    These targets have been tested by cross compiling the "smallest hello"
    program (see code below) and then running it under QEMU.
    
    ``` rust
    
    extern {
        fn puts(_: *const u8);
    }
    
    fn start(_: isize, _: *const *const u8) -> isize {
        unsafe {
            let msg = b"Hello, world!\0";
            puts(msg as *const _ as *const u8);
        }
        0
    }
    
    trait Copy {}
    
    trait Sized {}
    ```
    
    cc #36015
    r? @alexcrichton
    cc @brson
    
    The cabi stuff is likely wrong. I just copied cabi_mips source and changed some `4`s to `8`s and `32`s to `64`s. It was enough to get libc's `puts` to work but I'd like someone familiar with this module to check it.
rustc: ./futures-rs-test-all
cargo rustc --test all --verbose -- -Ztime-passes -Zinput-stats
       Fresh log v0.3.6
   Compiling futures v0.1.0 (file:///root/benchmarks/futures-rs-test-all)
     Running `/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc tests/all.rs --crate-name all --crate-type bin -g -Ztime-passes -Zinput-stats --test -C metadata=449e6fc7d003a0bc -C extra-filename=-449e6fc7d003a0bc --out-dir /root/benchmarks/futures-rs-test-all/target/debug --emit=dep-info,link -L dependency=/root/benchmarks/futures-rs-test-all/target/debug -L dependency=/root/benchmarks/futures-rs-test-all/target/debug/deps --extern log=/root/benchmarks/futures-rs-test-all/target/debug/deps/liblog-30a8a27ec161f1be.rlib --extern futures=/root/benchmarks/futures-rs-test-all/target/debug/libfutures.rlib`
time: 0.003; rss: 45MB	parsing
Lines of code:             412
Pre-expansion node count:  5522
time: 0.000; rss: 45MB	configuration
time: 0.000; rss: 45MB	recursion limit
time: 0.000; rss: 45MB	crate injection
time: 0.000; rss: 45MB	plugin loading
time: 0.000; rss: 45MB	plugin registration
time: 0.023; rss: 64MB	expansion
time: 0.000; rss: 64MB	maybe building test harness
time: 0.000; rss: 68MB	assigning node ids
Post-expansion node count: 10613
time: 0.000; rss: 68MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 68MB	complete gated feature checking
time: 0.000; rss: 68MB	collecting defs
time: 0.005; rss: 69MB	external crate/lib resolution
time: 0.000; rss: 69MB	early lint checks
time: 0.000; rss: 69MB	AST validation
time: 0.001; rss: 69MB	name resolution
time: 0.001; rss: 69MB	lowering ast -> hir
time: 0.000; rss: 73MB	indexing hir
time: 0.000; rss: 73MB	attribute checking
time: 0.000; rss: 73MB	language item collection
time: 0.000; rss: 73MB	lifetime resolution
time: 0.000; rss: 73MB	looking for entry point
time: 0.000; rss: 73MB	looking for plugin registrar
time: 0.001; rss: 73MB	region resolution
time: 0.000; rss: 73MB	loop checking
time: 0.000; rss: 73MB	static item recursion checking
time: 0.001; rss: 73MB	compute_incremental_hashes_map
time: 0.000; rss: 73MB	load_dep_graph
time: 0.005; rss: 73MB	type collecting
time: 0.000; rss: 73MB	variance inference
time: 0.004; rss: 73MB	coherence checking
time: 0.014; rss: 75MB	wf checking
time: 0.003; rss: 75MB	item-types checking
time: 0.153; rss: 81MB	item-bodies checking
time: 0.000; rss: 81MB	drop-impl checking
time: 0.005; rss: 83MB	const checking
time: 0.000; rss: 83MB	privacy checking
time: 0.000; rss: 83MB	stability index
time: 0.000; rss: 83MB	intrinsic checking
time: 0.000; rss: 83MB	effect checking
time: 0.001; rss: 83MB	match checking
time: 0.001; rss: 84MB	liveness checking
time: 0.004; rss: 84MB	rvalue checking
time: 0.007; rss: 85MB	MIR dump
time: 0.005; rss: 85MB	MIR passes
time: 0.008; rss: 85MB	borrow checking
time: 0.000; rss: 85MB	reachability checking
time: 0.000; rss: 85MB	death checking
time: 0.000; rss: 85MB	stability checking
time: 0.000; rss: 85MB	unused lib feature checking
time: 0.003; rss: 85MB	lint checking
time: 0.002; rss: 85MB	resolving dependency formats
time: 0.016; rss: 87MB	Prepare MIR codegen passes
  time: 0.000; rss: 87MB	write metadata
  time: 0.191; rss: 96MB	translation item collection
  time: 0.021; rss: 96MB	codegen unit partitioning
  time: 0.042; rss: 150MB	internalize symbols
time: 1.456; rss: 150MB	translation
time: 0.000; rss: 150MB	assert dep graph
time: 0.000; rss: 150MB	serialize dep graph
  time: 0.084; rss: 134MB	llvm function passes [0]
  time: 0.026; rss: 135MB	llvm module passes [0]
  time: 1.758; rss: 139MB	codegen passes [0]
  time: 0.000; rss: 139MB	codegen passes [0]
time: 1.869; rss: 139MB	LLVM passes
time: 0.000; rss: 139MB	serialize work products
  time: 0.202; rss: 86MB	running linker
time: 0.204; rss: 86MB	linking
done
