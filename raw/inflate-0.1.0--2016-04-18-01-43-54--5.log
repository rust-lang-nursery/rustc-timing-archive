commit 63760acf31e605c8a91bb5cbcbcb4bfb95435e48
Merge: ed7c567 6ae8027
Author: bors <bors@rust-lang.org>
Date:   Sun Apr 17 19:11:20 2016 -0700

    Auto merge of #33064 - jseyfried:improve_resolve_performance, r=eddyb
    
    resolve: Improve performance
    
    This fixes #33061 by speeding up searchs through all traits in scope, a bottleneck in `resolve`.
    
    According to my measurements, this PR improves resolution performance by a factor of 3.4x on `librustc`, which almost completely reverses the 3.75x performance regression reported in #33061.
    
    r? @eddyb
rustc: ./inflate-0.1.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling inflate v0.1.0 (file:///root/benchmarks/inflate-0.1.0)
time: 0.006; rss: 36MB	parsing
Lines of code:             956
Pre-expansion node count:  4761
time: 0.001; rss: 37MB	configuration 1
time: 0.000; rss: 37MB	recursion limit
time: 0.000; rss: 37MB	gated macro checking
time: 0.000; rss: 37MB	crate injection
time: 0.003; rss: 39MB	macro loading
time: 0.000; rss: 39MB	plugin loading
time: 0.000; rss: 39MB	plugin registration
time: 0.091; rss: 47MB	expansion
time: 0.001; rss: 47MB	complete gated feature checking 1
time: 0.009; rss: 47MB	configuration 2
time: 0.000; rss: 47MB	gated configuration checking
time: 0.004; rss: 47MB	maybe building test harness
time: 0.004; rss: 47MB	prelude injection
time: 0.000; rss: 47MB	checking that all macro invocations are gone
time: 0.000; rss: 47MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 47MB	complete gated feature checking 2
time: 0.000; rss: 47MB	const fn bodies and arguments
Post-expansion node count: 54798
time: 0.004; rss: 47MB	assigning node ids
time: 0.018; rss: 53MB	lowering ast -> hir
time: 0.002; rss: 54MB	indexing hir
time: 0.000; rss: 54MB	attribute checking
time: 0.004; rss: 54MB	early lint checks
time: 0.001; rss: 50MB	external crate/lib resolution
time: 0.001; rss: 50MB	language item collection
time: 0.014; rss: 60MB	resolution
time: 0.001; rss: 60MB	lifetime resolution
time: 0.000; rss: 60MB	looking for entry point
time: 0.000; rss: 60MB	looking for plugin registrar
time: 0.004; rss: 61MB	region resolution
time: 0.000; rss: 61MB	loop checking
time: 0.000; rss: 61MB	static item recursion checking
time: 0.000; rss: 61MB	load_dep_graph
time: 0.001; rss: 62MB	type collecting
time: 0.000; rss: 62MB	variance inference
time: 0.010; rss: 76MB	coherence checking
time: 0.002; rss: 76MB	wf checking
time: 0.002; rss: 76MB	item-types checking
time: 2.864; rss: 97MB	item-bodies checking
time: 0.000; rss: 97MB	drop-impl checking
time: 0.014; rss: 98MB	const checking
time: 0.002; rss: 98MB	privacy checking
time: 0.000; rss: 98MB	stability index
time: 0.000; rss: 98MB	intrinsic checking
time: 0.001; rss: 98MB	effect checking
time: 0.003; rss: 98MB	match checking
time: 0.310; rss: 98MB	liveness checking
time: 0.009; rss: 98MB	rvalue checking
time: 0.036; rss: 111MB	MIR dump
time: 0.013; rss: 108MB	MIR passes
time: 0.211; rss: 110MB	borrow checking
time: 0.000; rss: 110MB	reachability checking
time: 0.004; rss: 110MB	death checking
time: 0.003; rss: 110MB	stability checking
time: 0.000; rss: 110MB	unused lib feature checking
time: 0.021; rss: 112MB	lint checking
time: 0.000; rss: 112MB	resolving dependency formats
time: 0.006; rss: 112MB	Prepare MIR codegen passes
  time: 0.011; rss: 125MB	translation item collection
  time: 0.000; rss: 125MB	codegen unit partitioning
  time: 0.003; rss: 142MB	write metadata
time: 0.364; rss: 133MB	translation
time: 0.000; rss: 133MB	assert dep graph
time: 0.000; rss: 133MB	serialize dep graph
  time: 0.026; rss: 100MB	llvm function passes [0]
  time: 0.004; rss: 101MB	llvm module passes [0]
  time: 0.496; rss: 106MB	codegen passes [0]
  time: 0.000; rss: 95MB	codegen passes [0]
time: 0.569; rss: 95MB	LLVM passes
time: 0.034; rss: 93MB	linking
done
