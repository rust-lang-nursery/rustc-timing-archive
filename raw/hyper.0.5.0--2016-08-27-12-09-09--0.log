commit 11946956a6352f49c6aadc1c13c39757a046e0c2
Merge: 099b9fd 8295c50
Author: bors <bors@rust-lang.org>
Date:   Sat Aug 27 07:52:20 2016 -0700

    Auto merge of #35969 - bluss:memrchr-alignment, r=nagisa
    
    memrchr: Correct aligned offset computation
    
    The memrchr fallback did not compute the offset correctly. It was
    intentioned to land on usize-aligned addresses but did not.
    This was suspected to have resulted in a crash on ARMv7!
    
    This bug affected non-linux platforms.
    
    I think like this, if we have a slice with pointer `ptr` and length
    `len`, we want to find the last usize-aligned offset in the slice.
    The correct computation should be:
    
    For example if ptr = 1 and len = 6, and `size_of::<usize>()` is 4:
    
    ```
    [ x x x x x x ]
      1 2 3 4 5 6
            ^-- last aligned address at offset 3 from the start.
    ```
    
    The last aligned address is ptr + len - (ptr + len) % usize_size.
    
    Compute offset from the start as:
    
    offset = len - (ptr + len) % usize_size = 6 - (1 + 6) % 4 = 6 - 3 = 3.
    
    I believe the function's return value was always correct previously, if
    the platform supported unaligned addresses.
    
    Fixes #35967
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling lazy_static v0.1.16
   Compiling rustc-serialize v0.3.19
   Compiling gcc v0.3.35
   Compiling log v0.3.6
   Compiling matches v0.1.2
   Compiling libc v0.2.15
   Compiling winapi-build v0.1.1
   Compiling winapi v0.2.8
   Compiling bitflags v0.3.3
   Compiling libc v0.1.12
   Compiling pkg-config v0.3.8
   Compiling kernel32-sys v0.2.2
   Compiling traitobject v0.0.1
   Compiling unicase v0.1.0
   Compiling httparse v0.1.6
   Compiling mime v0.0.11
   Compiling typeable v0.1.2
   Compiling num_cpus v0.2.13
   Compiling rand v0.3.14
   Compiling time v0.1.35
   Compiling openssl-sys v0.6.7
   Compiling openssl v0.6.7
   Compiling uuid v0.1.18
   Compiling url v0.2.38
   Compiling cookie v0.1.21
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.027; rss: 50MB	parsing
Lines of code:             9154
Pre-expansion node count:  44838
time: 0.003; rss: 50MB	configuration
time: 0.000; rss: 50MB	recursion limit
time: 0.000; rss: 50MB	crate injection
time: 0.000; rss: 50MB	plugin loading
time: 0.000; rss: 50MB	plugin registration
time: 0.093; rss: 77MB	expansion
time: 0.000; rss: 77MB	maybe building test harness
time: 0.005; rss: 77MB	assigning node ids
Post-expansion node count: 101581
time: 0.000; rss: 77MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 77MB	complete gated feature checking
time: 0.003; rss: 77MB	collecting defs
time: 0.011; rss: 85MB	external crate/lib resolution
time: 0.004; rss: 85MB	early lint checks
time: 0.001; rss: 85MB	AST validation
time: 0.019; rss: 91MB	name resolution
time: 0.008; rss: 97MB	lowering ast -> hir
time: 0.002; rss: 99MB	indexing hir
time: 0.001; rss: 99MB	attribute checking
time: 0.001; rss: 93MB	language item collection
time: 0.002; rss: 93MB	lifetime resolution
time: 0.000; rss: 93MB	looking for entry point
time: 0.000; rss: 93MB	looking for plugin registrar
time: 0.006; rss: 96MB	region resolution
time: 0.001; rss: 96MB	loop checking
time: 0.001; rss: 96MB	static item recursion checking
time: 0.013; rss: 96MB	compute_incremental_hashes_map
time: 0.000; rss: 96MB	load_dep_graph
time: 0.023; rss: 98MB	type collecting
time: 0.000; rss: 98MB	variance inference
time: 0.037; rss: 104MB	coherence checking
time: 0.059; rss: 105MB	wf checking
time: 0.029; rss: 105MB	item-types checking
time: 0.374; rss: 117MB	item-bodies checking
time: 0.000; rss: 117MB	drop-impl checking
time: 0.037; rss: 119MB	const checking
time: 0.006; rss: 119MB	privacy checking
time: 0.001; rss: 119MB	stability index
time: 0.005; rss: 119MB	intrinsic checking
time: 0.002; rss: 119MB	effect checking
time: 0.013; rss: 119MB	match checking
time: 0.005; rss: 120MB	liveness checking
time: 0.026; rss: 119MB	rvalue checking
time: 0.053; rss: 135MB	MIR dump
time: 0.040; rss: 135MB	MIR passes
time: 0.061; rss: 135MB	borrow checking
time: 0.003; rss: 135MB	reachability checking
time: 0.005; rss: 137MB	death checking
time: 0.005; rss: 137MB	stability checking
time: 0.000; rss: 137MB	unused lib feature checking
time: 0.041; rss: 137MB	lint checking
time: 0.000; rss: 137MB	resolving dependency formats
time: 0.077; rss: 139MB	Prepare MIR codegen passes
  time: 0.053; rss: 144MB	write metadata
  time: 0.130; rss: 148MB	translation item collection
  time: 0.019; rss: 150MB	codegen unit partitioning
  time: 0.035; rss: 215MB	internalize symbols
time: 1.416; rss: 206MB	translation
time: 0.000; rss: 206MB	assert dep graph
time: 0.000; rss: 206MB	serialize dep graph
  time: 0.103; rss: 155MB	llvm function passes [0]
  time: 0.047; rss: 158MB	llvm module passes [0]
  time: 1.836; rss: 162MB	codegen passes [0]
  time: 0.001; rss: 163MB	codegen passes [0]
time: 2.147; rss: 163MB	LLVM passes
time: 0.000; rss: 163MB	serialize work products
time: 0.155; rss: 96MB	linking
done
