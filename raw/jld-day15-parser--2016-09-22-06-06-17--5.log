commit 6ad10844db51b950306d49070932562246e06616
Merge: 1cf592f e4b1842
Author: bors <bors@rust-lang.org>
Date:   Wed Sep 21 22:40:51 2016 -0700

    Auto merge of #36585 - jonathandturner:misc_error_touchups, r=nrc
    
    Add the ability to merge spans to codemap
    
    This PR adds the ability to merge Spans.  To do so, it builds on the Codemap's ability to verify the locations of spans, namely that following can be verified:
    
    * the expn_id of both spans much match
    * the lhs span needs to end on the same line the rhs span begins
    * the lhs span must start at or before the rhs span
    
    If all of these are met, a new span is returned that is min(lo), max(hi) of the two spans.
    
    This PR also removes an older Span merge, as this new functionality subsumes it.
    
    r? @nrc
rustc: ./jld-day15-parser
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling combine v1.3.0
   Compiling day15 v0.1.0 (file:///root/benchmarks/jld-day15-parser)
time: 0.001; rss: 43MB	parsing
Lines of code:             72
Pre-expansion node count:  654
time: 0.000; rss: 43MB	recursion limit
time: 0.000; rss: 43MB	crate injection
time: 0.000; rss: 43MB	plugin loading
time: 0.000; rss: 43MB	plugin registration
time: 0.018; rss: 67MB	expansion
time: 0.000; rss: 67MB	maybe building test harness
time: 0.000; rss: 67MB	maybe creating a macro crate
time: 0.000; rss: 67MB	assigning node ids
Post-expansion node count: 1155
time: 0.000; rss: 67MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 67MB	complete gated feature checking
time: 0.000; rss: 67MB	collecting defs
time: 0.003; rss: 67MB	external crate/lib resolution
time: 0.000; rss: 67MB	early lint checks
time: 0.000; rss: 67MB	AST validation
time: 0.001; rss: 67MB	name resolution
time: 0.000; rss: 67MB	lowering ast -> hir
time: 0.000; rss: 67MB	indexing hir
time: 0.000; rss: 67MB	attribute checking
time: 0.000; rss: 67MB	language item collection
time: 0.000; rss: 67MB	lifetime resolution
time: 0.000; rss: 67MB	looking for entry point
time: 0.000; rss: 67MB	looking for plugin registrar
time: 0.000; rss: 67MB	region resolution
time: 0.000; rss: 67MB	loop checking
time: 0.000; rss: 67MB	static item recursion checking
time: 0.000; rss: 71MB	compute_incremental_hashes_map
time: 0.000; rss: 71MB	load_dep_graph
time: 0.001; rss: 71MB	type collecting
time: 0.000; rss: 71MB	variance inference
time: 0.004; rss: 71MB	coherence checking
time: 0.005; rss: 71MB	wf checking
time: 0.000; rss: 71MB	item-types checking
time: 0.032; rss: 77MB	item-bodies checking
time: 0.000; rss: 77MB	drop-impl checking
time: 0.001; rss: 77MB	const checking
time: 0.000; rss: 77MB	privacy checking
time: 0.000; rss: 77MB	stability index
time: 0.000; rss: 77MB	intrinsic checking
time: 0.000; rss: 77MB	effect checking
time: 0.000; rss: 77MB	match checking
time: 0.000; rss: 77MB	liveness checking
time: 0.000; rss: 77MB	rvalue checking
time: 0.001; rss: 77MB	MIR dump
  time: 0.000; rss: 77MB	SimplifyCfg
  time: 0.000; rss: 77MB	QualifyAndPromoteConstants
  time: 0.000; rss: 77MB	TypeckMir
  time: 0.000; rss: 77MB	SimplifyBranches
  time: 0.000; rss: 77MB	SimplifyCfg
time: 0.001; rss: 77MB	MIR passes
time: 0.001; rss: 77MB	borrow checking
time: 0.000; rss: 77MB	reachability checking
time: 0.000; rss: 77MB	death checking
time: 0.000; rss: 77MB	stability checking
time: 0.000; rss: 77MB	unused lib feature checking
time: 0.003; rss: 77MB	lint checking
time: 0.001; rss: 77MB	resolving dependency formats
  time: 0.000; rss: 77MB	NoLandingPads
  time: 0.000; rss: 77MB	SimplifyCfg
  time: 0.000; rss: 77MB	EraseRegions
  time: 0.000; rss: 77MB	AddCallGuards
  time: 0.001; rss: 77MB	ElaborateDrops
  time: 0.000; rss: 77MB	NoLandingPads
  time: 0.000; rss: 77MB	SimplifyCfg
  time: 0.003; rss: 77MB	Deaggregator
  time: 0.000; rss: 77MB	AddCallGuards
  time: 0.000; rss: 77MB	PreTrans
time: 0.005; rss: 77MB	Prepare MIR codegen passes
  time: 0.000; rss: 81MB	write metadata
  time: 0.195; rss: 88MB	translation item collection
  time: 0.003; rss: 88MB	codegen unit partitioning
  time: 0.006; rss: 98MB	internalize symbols
time: 0.760; rss: 98MB	translation
time: 0.000; rss: 98MB	assert dep graph
time: 0.000; rss: 98MB	serialize dep graph
  time: 0.018; rss: 90MB	llvm function passes [0]
  time: 0.001; rss: 90MB	llvm module passes [0]
  time: 0.351; rss: 97MB	codegen passes [0]
  time: 0.000; rss: 96MB	codegen passes [0]
time: 0.371; rss: 96MB	LLVM passes
time: 0.000; rss: 96MB	serialize work products
  time: 0.124; rss: 86MB	running linker
time: 0.125; rss: 86MB	linking
done
