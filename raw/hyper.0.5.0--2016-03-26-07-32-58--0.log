commit c9b6ba800aba1e4caf8548904d2957f5cfda2758
Merge: d322f99 ed28247
Author: bors <bors@rust-lang.org>
Date:   Sat Mar 26 03:31:56 2016 -0700

    Auto merge of #32468 - cardoe:llvm-check, r=alexcrichton
    
    configure: update required LLVM version
    
    Rust 1.7.0 and newer appears to require LLVM 3.6.0 or newer when
    building against a version that's out of the tree with the --llvm-root
    flag.
    
    Signed-off-by: Doug Goldstein <cardoe@cardoe.com>
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling bitflags v0.3.3
   Compiling winapi v0.2.6
   Compiling pkg-config v0.3.8
   Compiling libc v0.2.8
   Compiling httparse v0.1.6
   Compiling winapi-build v0.1.1
   Compiling gcc v0.3.26
   Compiling lazy_static v0.1.15
   Compiling matches v0.1.2
   Compiling traitobject v0.0.1
   Compiling typeable v0.1.2
   Compiling libc v0.1.12
   Compiling unicase v0.1.0
   Compiling kernel32-sys v0.2.1
   Compiling rustc-serialize v0.3.18
   Compiling rand v0.3.14
   Compiling log v0.3.5
   Compiling num_cpus v0.2.11
   Compiling time v0.1.34
   Compiling openssl-sys v0.6.7
   Compiling mime v0.0.11
   Compiling openssl v0.6.7
   Compiling uuid v0.1.18
   Compiling url v0.2.38
   Compiling cookie v0.1.21
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.030; rss: 46MB	parsing
Lines of code:             9154
Pre-expansion node count:  45594
time: 0.009; rss: 46MB	configuration 1
time: 0.000; rss: 46MB	recursion limit
time: 0.000; rss: 46MB	gated macro checking
time: 0.000; rss: 46MB	crate injection
time: 0.005; rss: 52MB	macro loading
time: 0.000; rss: 52MB	plugin loading
time: 0.000; rss: 52MB	plugin registration
time: 0.188; rss: 61MB	expansion
time: 0.006; rss: 61MB	complete gated feature checking 1
time: 0.034; rss: 61MB	configuration 2
time: 0.000; rss: 61MB	gated configuration checking
time: 0.013; rss: 61MB	maybe building test harness
time: 0.011; rss: 61MB	prelude injection
time: 0.001; rss: 61MB	checking that all macro invocations are gone
time: 0.000; rss: 61MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 61MB	complete gated feature checking 2
time: 0.001; rss: 61MB	const fn bodies and arguments
Post-expansion node count: 106887
time: 0.010; rss: 61MB	assigning node ids
time: 0.011; rss: 67MB	lowering ast -> hir
time: 0.005; rss: 69MB	indexing hir
time: 0.001; rss: 69MB	attribute checking
time: 0.007; rss: 69MB	early lint checks
time: 0.004; rss: 66MB	external crate/lib resolution
time: 0.001; rss: 66MB	language item collection
time: 0.024; rss: 84MB	resolution
time: 0.002; rss: 84MB	lifetime resolution
time: 0.000; rss: 84MB	looking for entry point
time: 0.000; rss: 84MB	looking for plugin registrar
time: 0.006; rss: 85MB	region resolution
time: 0.001; rss: 85MB	loop checking
time: 0.001; rss: 85MB	static item recursion checking
time: 0.013; rss: 89MB	type collecting
time: 0.000; rss: 89MB	variance inference
time: 0.524; rss: 113MB	coherence checking
time: 0.078; rss: 113MB	wf checking
time: 0.029; rss: 115MB	item-types checking
time: 0.491; rss: 134MB	item-bodies checking
time: 0.000; rss: 134MB	drop-impl checking
time: 0.037; rss: 136MB	const checking
time: 0.009; rss: 137MB	privacy checking
time: 0.001; rss: 137MB	stability index
time: 0.004; rss: 137MB	intrinsic checking
time: 0.002; rss: 137MB	effect checking
time: 0.012; rss: 137MB	match checking
time: 0.005; rss: 137MB	liveness checking
time: 0.032; rss: 137MB	rvalue checking
time: 0.048; rss: 144MB	MIR dump
time: 0.028; rss: 144MB	MIR passes
time: 0.065; rss: 144MB	borrow checking
time: 0.003; rss: 144MB	reachability checking
time: 0.006; rss: 144MB	death checking
time: 0.006; rss: 144MB	stability checking
time: 0.000; rss: 144MB	unused lib feature checking
time: 0.047; rss: 144MB	lint checking
time: 0.000; rss: 144MB	resolving dependency formats
  time: 0.185; rss: 160MB	translation item collection
  time: 0.137; rss: 287MB	write metadata
time: 1.466; rss: 287MB	translation
  time: 0.096; rss: 167MB	llvm function passes [0]
  time: 0.047; rss: 170MB	llvm module passes [0]
  time: 1.634; rss: 173MB	codegen passes [0]
  time: 0.001; rss: 121MB	codegen passes [0]
time: 1.972; rss: 120MB	LLVM passes
time: 0.171; rss: 118MB	linking
done
