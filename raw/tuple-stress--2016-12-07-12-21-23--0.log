commit 209308439a1099b285520459f57e380f18793c07
Merge: 7846610 d6ec686
Author: bors <bors@rust-lang.org>
Date:   Wed Dec 7 16:32:48 2016 +0000

    Auto merge of #38105 - ollie27:rustdoc_deterministic_js, r=GuillaumeGomez
    
    rustdoc: Sort lines in search index and implementors js
    
    This means the files are generated deterministically even with rustdoc running in parallel.
    
    Fixes the first part of #30220.
rustc: ./tuple-stress
cargo rustc  -- -Ztime-passes -Zinput-stats
time: 0.621; rss: 133MB	parsing
Lines of code:             65571
Pre-expansion node count:  393241
time: 0.000; rss: 133MB	recursion limit
time: 0.000; rss: 133MB	crate injection
time: 0.000; rss: 133MB	plugin loading
time: 0.000; rss: 133MB	plugin registration
time: 0.094; rss: 156MB	expansion
time: 0.000; rss: 156MB	maybe building test harness
time: 0.005; rss: 156MB	maybe creating a macro crate
Post-expansion node count: 393303
time: 0.000; rss: 156MB	checking for inline asm in case the target doesn't support it
time: 0.005; rss: 156MB	complete gated feature checking
time: 0.033; rss: 156MB	early lint checks
time: 0.005; rss: 156MB	AST validation
time: 0.012; rss: 156MB	name resolution
time: 0.043; rss: 199MB	lowering ast -> hir
time: 0.026; rss: 213MB	indexing hir
time: 0.005; rss: 213MB	attribute checking
time: 0.002; rss: 137MB	language item collection
time: 0.002; rss: 137MB	lifetime resolution
time: 0.000; rss: 137MB	looking for entry point
time: 0.000; rss: 137MB	looking for plugin registrar
time: 0.058; rss: 160MB	region resolution
time: 0.002; rss: 160MB	loop checking
time: 0.004; rss: 160MB	static item recursion checking
time: 0.210; rss: 160MB	compute_incremental_hashes_map
time: 0.000; rss: 160MB	load_dep_graph
time: 0.002; rss: 160MB	stability index
time: 0.002; rss: 160MB	stability checking
time: 0.002; rss: 160MB	type collecting
time: 0.000; rss: 160MB	variance inference
time: 0.000; rss: 160MB	impl wf inference
time: 0.003; rss: 162MB	coherence checking
time: 0.002; rss: 162MB	wf checking
time: 0.630; rss: 204MB	item-types checking
time: 0.004; rss: 205MB	item-bodies checking
time: 0.000; rss: 205MB	drop-impl checking
time: 0.206; rss: 215MB	const checking
time: 0.004; rss: 215MB	privacy checking
time: 0.002; rss: 215MB	intrinsic checking
time: 0.002; rss: 215MB	effect checking
time: 0.000; rss: 215MB	match checking
time: 0.003; rss: 215MB	liveness checking
time: 0.002; rss: 215MB	rvalue checking
time: 0.378; rss: 273MB	MIR dump
  time: 0.000; rss: 273MB	SimplifyCfg
  time: 0.012; rss: 273MB	QualifyAndPromoteConstants
  time: 0.036; rss: 273MB	TypeckMir
  time: 0.000; rss: 273MB	SimplifyBranches
  time: 0.000; rss: 273MB	SimplifyCfg
time: 0.048; rss: 273MB	MIR cleanup and validation
time: 0.004; rss: 273MB	borrow checking
time: 0.000; rss: 273MB	reachability checking
time: 0.004; rss: 273MB	death checking
time: 0.000; rss: 273MB	unused lib feature checking
time: 0.198; rss: 273MB	lint checking
time: 0.001; rss: 273MB	resolving dependency formats
  time: 0.000; rss: 273MB	NoLandingPads
  time: 0.000; rss: 273MB	SimplifyCfg
  time: 0.007; rss: 273MB	EraseRegions
  time: 0.000; rss: 273MB	AddCallGuards
  time: 0.000; rss: 273MB	ElaborateDrops
  time: 0.000; rss: 273MB	NoLandingPads
  time: 0.000; rss: 273MB	SimplifyCfg
  time: 0.007; rss: 273MB	InstCombine
  time: 0.000; rss: 273MB	Deaggregator
  time: 0.000; rss: 273MB	CopyPropagation
  time: 0.009; rss: 273MB	SimplifyLocals
  time: 0.000; rss: 273MB	AddCallGuards
  time: 0.000; rss: 273MB	PreTrans
time: 0.023; rss: 273MB	MIR optimisations
  time: 0.000; rss: 273MB	write metadata
  time: 0.006; rss: 273MB	translation item collection
  time: 0.000; rss: 273MB	codegen unit partitioning
  time: 0.000; rss: 300MB	internalize symbols
time: 0.330; rss: 300MB	translation
time: 0.000; rss: 300MB	assert dep graph
time: 0.000; rss: 300MB	serialize dep graph
  time: 0.027; rss: 126MB	llvm function passes [0]
  time: 0.000; rss: 126MB	llvm module passes [0]
  time: 0.337; rss: 121MB	codegen passes [0]
  time: 0.000; rss: 121MB	codegen passes [0]
time: 0.366; rss: 121MB	LLVM passes
time: 0.000; rss: 121MB	serialize work products
  time: 0.083; rss: 91MB	running linker
time: 0.084; rss: 91MB	linking
done
