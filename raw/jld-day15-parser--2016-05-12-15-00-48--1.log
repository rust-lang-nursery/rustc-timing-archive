commit 4ec5ce5e44823c29d4f641f764e53d57e8b28a6a
Merge: e88defe bb9062a
Author: bors <bors@rust-lang.org>
Date:   Thu May 12 14:31:54 2016 -0700

    Auto merge of #33282 - alexcrichton:rustbuild-crate-tests, r=brson
    
    rustbuild: Add support for crate tests + doctests
    
    This commit adds support to rustbuild to run crate unit tests (those defined by
    `#[test]`) as well as documentation tests. All tests are powered by `cargo test`
    under the hood.
    
    Each step requires the `libtest` library is built for that corresponding stage.
    Ideally the `test` crate would be a dev-dependency, but for now it's just easier
    to ensure that we sequence everything in the right order.
    
    Currently no filtering is implemented, so there's not actually a method of
    testing *only* libstd or *only* libcore, but rather entire swaths of crates are
    tested all at once.
    
    A few points of note here are:
    
    * The `coretest` and `collectionstest` crates are just listed as `[[test]]`
      entires for `cargo test` to naturally pick up. This mean that `cargo test -p
      core` actually runs all the tests for libcore.
    * Libraries that aren't tested all mention `test = false` in their `Cargo.toml`
    * Crates aren't currently allowed to have dev-dependencies due to
      rust-lang/cargo#860, but we can likely alleviate this restriction once
      workspaces are implemented.
    
    cc #31590
rustc: ./jld-day15-parser
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling day15 v0.1.0 (file:///root/benchmarks/jld-day15-parser)
time: 0.001; rss: 44MB	parsing
Lines of code:             72
Pre-expansion node count:  673
time: 0.000; rss: 44MB	configuration 1
time: 0.000; rss: 44MB	recursion limit
time: 0.000; rss: 44MB	crate injection
time: 0.003; rss: 51MB	macro loading
time: 0.000; rss: 51MB	plugin loading
time: 0.000; rss: 51MB	plugin registration
time: 0.002; rss: 51MB	expansion
time: 0.000; rss: 51MB	configuration 2
time: 0.000; rss: 51MB	gated configuration checking
time: 0.000; rss: 51MB	maybe building test harness
time: 0.000; rss: 51MB	prelude injection
time: 0.000; rss: 51MB	checking that all macro invocations are gone
time: 0.000; rss: 51MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 51MB	complete gated feature checking
Post-expansion node count: 1176
time: 0.000; rss: 51MB	assigning node ids
time: 0.000; rss: 51MB	collecting defs
time: 0.004; rss: 55MB	external crate/lib resolution
time: 0.000; rss: 55MB	early lint checks
time: 0.001; rss: 59MB	name resolution
time: 0.000; rss: 59MB	lowering ast -> hir
time: 0.000; rss: 59MB	indexing hir
time: 0.000; rss: 59MB	attribute checking
time: 0.000; rss: 59MB	language item collection
time: 0.000; rss: 59MB	lifetime resolution
time: 0.000; rss: 59MB	looking for entry point
time: 0.000; rss: 59MB	looking for plugin registrar
time: 0.000; rss: 59MB	region resolution
time: 0.000; rss: 59MB	loop checking
time: 0.000; rss: 59MB	static item recursion checking
time: 0.000; rss: 59MB	load_dep_graph
time: 0.001; rss: 63MB	type collecting
time: 0.000; rss: 63MB	variance inference
time: 0.005; rss: 73MB	coherence checking
time: 0.007; rss: 77MB	wf checking
time: 0.000; rss: 77MB	item-types checking
time: 1.586; rss: 113MB	item-bodies checking
time: 0.000; rss: 113MB	drop-impl checking
time: 0.001; rss: 113MB	const checking
time: 0.000; rss: 113MB	privacy checking
time: 0.000; rss: 113MB	stability index
time: 0.000; rss: 113MB	intrinsic checking
time: 0.000; rss: 113MB	effect checking
time: 0.000; rss: 113MB	match checking
time: 0.000; rss: 113MB	liveness checking
time: 0.000; rss: 113MB	rvalue checking
time: 0.001; rss: 114MB	MIR dump
time: 0.001; rss: 114MB	MIR passes
time: 0.001; rss: 114MB	borrow checking
time: 0.000; rss: 114MB	reachability checking
time: 0.000; rss: 114MB	death checking
time: 0.000; rss: 114MB	stability checking
time: 0.000; rss: 114MB	unused lib feature checking
time: 0.004; rss: 115MB	lint checking
time: 0.002; rss: 115MB	resolving dependency formats
time: 0.000; rss: 115MB	Prepare MIR codegen passes
  time: 14.531; rss: 126MB	translation item collection
  time: 0.001; rss: 126MB	codegen unit partitioning
  time: 0.000; rss: 153MB	write metadata
time: 47.284; rss: 153MB	translation
time: 0.000; rss: 153MB	assert dep graph
time: 0.000; rss: 153MB	serialize dep graph
  time: 0.014; rss: 106MB	llvm function passes [0]
  time: 0.001; rss: 106MB	llvm module passes [0]
  time: 0.275; rss: 112MB	codegen passes [0]
  time: 0.000; rss: 107MB	codegen passes [0]
time: 0.298; rss: 106MB	LLVM passes
  time: 0.118; rss: 106MB	running linker
time: 0.118; rss: 106MB	linking
done
