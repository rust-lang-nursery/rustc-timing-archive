commit 28bcafa4565f8676325c20dd2e700dfa7f08d4e1
Merge: 29e8ac5 c84ab39
Author: bors <bors@rust-lang.org>
Date:   Tue Feb 16 07:01:34 2016 +0000

    Auto merge of #31668 - cuviper:lfs, r=alexcrichton
    
    This follows the pattern already used for stat functions from #31551.  Now
    `ftruncate`, `lseek`, and `readdir_r` use their explicit 64-bit variants for
    LFS support, using wider `off_t` and `dirent` types.  This also updates to
    `open64`, which uses no different types but implies the `O_LARGEFILE` flag.
    
    Non-Linux platforms just map their normal functions to the 64-bit names.
    
    r? @alexcrichton
rustc: ./regex.0.1.30
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling regex v0.1.30 (file:///root/benchmarks/regex.0.1.30)
time: 0.095; rss: 44MB	parsing
Lines of code:             8558
Pre-expansion node count:  58217
time: 0.011; rss: 44MB	configuration 1
time: 0.000; rss: 44MB	recursion limit
time: 0.001; rss: 44MB	gated macro checking
time: 0.000; rss: 44MB	crate injection
time: 0.003; rss: 48MB	macro loading
time: 0.000; rss: 48MB	plugin loading
time: 0.000; rss: 48MB	plugin registration
time: 0.060; rss: 50MB	expansion
time: 0.001; rss: 50MB	complete gated feature checking 1
time: 0.013; rss: 50MB	configuration 2
time: 0.000; rss: 50MB	gated configuration checking
time: 0.006; rss: 50MB	maybe building test harness
time: 0.006; rss: 50MB	prelude injection
time: 0.001; rss: 50MB	checking that all macro invocations are gone
time: 0.000; rss: 50MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 50MB	complete gated feature checking 2
time: 0.001; rss: 50MB	const fn bodies and arguments
Post-expansion node count: 68727
time: 0.007; rss: 50MB	assigning node ids
time: 0.008; rss: 58MB	lowering ast -> hir
time: 0.002; rss: 61MB	indexing hir
time: 0.000; rss: 61MB	attribute checking
time: 0.007; rss: 61MB	early lint checks
time: 0.001; rss: 53MB	external crate/lib resolution
time: 0.001; rss: 53MB	language item collection
time: 0.008; rss: 61MB	resolution
time: 0.001; rss: 61MB	lifetime resolution
time: 0.000; rss: 61MB	looking for entry point
time: 0.000; rss: 61MB	looking for plugin registrar
time: 0.009; rss: 63MB	region resolution
time: 0.001; rss: 63MB	loop checking
time: 0.001; rss: 63MB	static item recursion checking
time: 0.003; rss: 66MB	type collecting
time: 0.000; rss: 66MB	variance inference
time: 0.022; rss: 81MB	coherence checking
time: 0.010; rss: 82MB	wf checking
time: 0.085; rss: 87MB	item-types checking
time: 0.204; rss: 99MB	item-bodies checking
time: 0.000; rss: 99MB	drop-impl checking
time: 0.030; rss: 100MB	const checking
time: 0.005; rss: 100MB	privacy checking
time: 0.000; rss: 100MB	stability index
time: 0.001; rss: 100MB	intrinsic checking
time: 0.001; rss: 100MB	effect checking
time: 0.003; rss: 100MB	match checking
time: 0.016; rss: 101MB	MIR dump
time: 0.000; rss: 101MB	MIR passes
time: 0.002; rss: 101MB	liveness checking
time: 0.019; rss: 101MB	borrow checking
time: 0.007; rss: 101MB	rvalue checking
time: 0.000; rss: 101MB	reachability checking
time: 0.002; rss: 101MB	death checking
time: 0.002; rss: 101MB	stability checking
time: 0.000; rss: 101MB	unused lib feature checking
time: 0.027; rss: 101MB	lint checking
time: 0.000; rss: 101MB	resolving dependency formats
time: 0.002; rss: 101MB	erasing regions from MIR
  time: 0.065; rss: 115MB	translation item collection
  time: 0.142; rss: 158MB	write metadata
time: 0.683; rss: 158MB	translation
  time: 0.036; rss: 110MB	llvm function passes [0]
  time: 0.019; rss: 110MB	llvm module passes [0]
  time: 0.618; rss: 115MB	codegen passes [0]
  time: 0.001; rss: 95MB	codegen passes [0]
time: 0.750; rss: 94MB	LLVM passes
time: 0.067; rss: 92MB	linking
done
