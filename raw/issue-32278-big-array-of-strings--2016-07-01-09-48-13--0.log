commit 16281888c0f319706cd07e3c569e0aeb5a66d3b6
Merge: 375fa6e 9e2bd92
Author: bors <bors@rust-lang.org>
Date:   Thu Jun 30 23:30:51 2016 -0700

    Auto merge of #34563 - alexcrichton:robust-mk, r=brson
    
    mk: Don't consider LLVM done until it's done
    
    Currently if an LLVM build is interrupted *after* it creates the llvm-config
    binary but before it's done it puts us in an inconsistent state where we think
    LLVM is compiled but it's not actually. This tweaks our logic to only consider
    LLVM done building once it's actually done building.
    
    This should hopefully alleviate problems on the bots where if we interrupt at
    the wrong time it doesn't corrupt the build directory.
rustc: ./issue-32278-big-array-of-strings
/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc big-array-of-strings.rs -Ztime-passes -Zinput-stats
time: 0.177; rss: 101MB	parsing
Lines of code:             65577
Pre-expansion node count:  65552
time: 0.012; rss: 101MB	configuration
time: 0.000; rss: 101MB	recursion limit
time: 0.000; rss: 101MB	crate injection
time: 0.000; rss: 101MB	plugin loading
time: 0.000; rss: 101MB	plugin registration
time: 0.029; rss: 134MB	expansion
time: 0.000; rss: 134MB	maybe building test harness
time: 0.000; rss: 134MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 134MB	complete gated feature checking
Post-expansion node count: 65565
time: 0.007; rss: 134MB	assigning node ids
time: 0.001; rss: 134MB	collecting defs
time: 0.004; rss: 134MB	external crate/lib resolution
time: 0.008; rss: 134MB	early lint checks
time: 0.001; rss: 134MB	AST validation
time: 0.002; rss: 134MB	name resolution
time: 0.007; rss: 151MB	lowering ast -> hir
time: 0.002; rss: 155MB	indexing hir
time: 0.001; rss: 155MB	attribute checking
time: 0.001; rss: 148MB	language item collection
time: 0.001; rss: 148MB	lifetime resolution
time: 0.000; rss: 148MB	looking for entry point
time: 0.000; rss: 148MB	looking for plugin registrar
time: 0.008; rss: 154MB	region resolution
time: 0.001; rss: 154MB	loop checking
time: 0.002; rss: 154MB	static item recursion checking
time: 0.000; rss: 154MB	load_dep_graph
time: 0.000; rss: 154MB	type collecting
time: 0.000; rss: 154MB	variance inference
time: 0.005; rss: 156MB	coherence checking
time: 0.001; rss: 156MB	wf checking
time: 0.950; rss: 173MB	item-types checking
time: 0.000; rss: 173MB	item-bodies checking
time: 0.000; rss: 173MB	drop-impl checking
time: 0.020; rss: 177MB	const checking
time: 0.002; rss: 177MB	privacy checking
time: 0.001; rss: 177MB	stability index
time: 0.001; rss: 177MB	intrinsic checking
time: 0.001; rss: 177MB	effect checking
time: 0.001; rss: 177MB	match checking
time: 0.001; rss: 177MB	liveness checking
time: 0.000; rss: 177MB	rvalue checking
time: 0.052; rss: 183MB	MIR dump
time: 0.002; rss: 183MB	MIR passes
time: 0.001; rss: 183MB	borrow checking
time: 0.000; rss: 183MB	reachability checking
time: 0.001; rss: 183MB	death checking
time: 0.001; rss: 183MB	stability checking
time: 0.000; rss: 183MB	unused lib feature checking
time: 0.030; rss: 183MB	lint checking
time: 0.001; rss: 183MB	resolving dependency formats
time: 0.001; rss: 183MB	Prepare MIR codegen passes
  time: 0.000; rss: 184MB	write metadata
  time: 0.001; rss: 184MB	translation item collection
  time: 0.000; rss: 184MB	codegen unit partitioning
time: 0.803; rss: 193MB	translation
time: 0.000; rss: 193MB	assert dep graph
time: 0.000; rss: 193MB	serialize dep graph
  time: 0.044; rss: 140MB	llvm function passes [0]
  time: 0.001; rss: 140MB	llvm module passes [0]
  time: 1.479; rss: 141MB	codegen passes [0]
  time: 0.001; rss: 129MB	codegen passes [0]
time: 1.617; rss: 129MB	LLVM passes
  time: 0.187; rss: 129MB	running linker
time: 0.188; rss: 129MB	linking
done
