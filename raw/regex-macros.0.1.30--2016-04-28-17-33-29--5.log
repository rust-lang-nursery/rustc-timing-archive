commit 8da2bcac5db1e091b90cceb19d0496f0f7501c88
Merge: 115c6c8 0fc9f9a
Author: bors <bors@rust-lang.org>
Date:   Thu Apr 28 14:37:30 2016 -0700

    Auto merge of #33171 - michaelwoerister:collector-drop-glue, r=nikomatsakis
    
    Some preliminary work towards making trans "collector driven".
    
    The `trans::collector` already collects all translation items and `trans::partitioning` distributes these translation items into codegen units. The changes in this PR provide the following extensions to this functionality:
    
    1. Drop-glue is handled more accurately now, knowing about the difference between `DropGlueKind::Ty` and `DropGlueKind::TyContents`.
    2. The partitioning module now supports the `FixedUnitCount` strategy which more or less corresponds to the partitioning one gets via supplying `-Ccodegen-units` today.
    3. The partitioning scheme also takes care of assigned LLVM declarations to codegen units, not just definitions (declarations for external items not yet implemented).
    
    It's debatable whether declarations should be handled by the partitioning scheme or whether they should just be emitted on demand.
rustc: ./regex-macros.0.1.30
cd regex_macros && cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling regex_macros v0.1.17 (file:///root/benchmarks/regex-macros.0.1.30/regex_macros)
time: 0.002; rss: 46MB	parsing
Lines of code:             639
Pre-expansion node count:  2170
time: 0.001; rss: 46MB	configuration 1
time: 0.000; rss: 46MB	recursion limit
time: 0.000; rss: 46MB	crate injection
time: 0.003; rss: 53MB	macro loading
time: 0.000; rss: 53MB	plugin loading
time: 0.000; rss: 53MB	plugin registration
time: 0.032; rss: 60MB	expansion
time: 0.001; rss: 60MB	complete gated feature checking 1
time: 0.010; rss: 60MB	configuration 2
time: 0.000; rss: 60MB	gated configuration checking
time: 0.005; rss: 60MB	maybe building test harness
time: 0.005; rss: 60MB	prelude injection
time: 0.000; rss: 60MB	checking that all macro invocations are gone
time: 0.000; rss: 60MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 60MB	complete gated feature checking 2
time: 0.000; rss: 60MB	const fn bodies and arguments
Post-expansion node count: 69741
time: 0.004; rss: 60MB	assigning node ids
time: 0.000; rss: 60MB	collecting defs
time: 0.076; rss: 96MB	external crate/lib resolution
time: 0.005; rss: 102MB	lowering ast -> hir
time: 0.001; rss: 105MB	indexing hir
time: 0.001; rss: 105MB	attribute checking
time: 0.003; rss: 105MB	early lint checks
time: 0.001; rss: 101MB	language item collection
time: 0.011; rss: 120MB	name resolution
time: 0.001; rss: 120MB	lifetime resolution
time: 0.000; rss: 120MB	looking for entry point
time: 0.000; rss: 120MB	looking for plugin registrar
time: 0.002; rss: 122MB	region resolution
time: 0.000; rss: 122MB	loop checking
time: 0.000; rss: 122MB	static item recursion checking
time: 0.000; rss: 122MB	load_dep_graph
time: 0.015; rss: 158MB	type collecting
time: 0.000; rss: 158MB	variance inference
time: 0.010; rss: 160MB	coherence checking
time: 0.007; rss: 163MB	wf checking
time: 0.001; rss: 163MB	item-types checking
time: 0.972; rss: 204MB	item-bodies checking
makefile:2: recipe for target 'all' failed
done
