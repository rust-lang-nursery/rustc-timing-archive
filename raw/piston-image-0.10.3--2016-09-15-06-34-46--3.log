commit e2c64d16906dbb29763d6cbf022164a09247ef9f
Merge: 16ff9e2 7bd25a3
Author: bors <bors@rust-lang.org>
Date:   Thu Sep 15 02:43:01 2016 -0700

    Auto merge of #36372 - sfackler:sum-prod-overflow, r=alexcrichton
    
    Inherit overflow checks for sum and product
    
    We have previously documented the fact that these will panic on overflow, but I think this behavior is what people actually want/expect. `#[rustc_inherit_overflow_checks]` didn't exist when we discussed these for stabilization.
    
    r? @alexcrichton
    
    Closes #35807
rustc: ./piston-image-0.10.3
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling image v0.10.3 (file:///root/benchmarks/piston-image-0.10.3)
time: 0.045; rss: 57MB	parsing
Lines of code:             12000
Pre-expansion node count:  90272
time: 0.000; rss: 57MB	recursion limit
time: 0.000; rss: 57MB	crate injection
time: 0.000; rss: 57MB	plugin loading
time: 0.000; rss: 57MB	plugin registration
time: 0.069; rss: 87MB	expansion
time: 0.000; rss: 87MB	maybe building test harness
time: 0.002; rss: 87MB	maybe creating a macro crate
time: 0.008; rss: 87MB	assigning node ids
Post-expansion node count: 149551
time: 0.000; rss: 87MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 87MB	complete gated feature checking
time: 0.004; rss: 87MB	collecting defs
time: 0.011; rss: 92MB	external crate/lib resolution
time: 0.006; rss: 96MB	early lint checks
time: 0.002; rss: 96MB	AST validation
time: 0.022; rss: 100MB	name resolution
time: 0.015; rss: 111MB	lowering ast -> hir
time: 0.003; rss: 115MB	indexing hir
time: 0.002; rss: 115MB	attribute checking
time: 0.002; rss: 105MB	language item collection
time: 0.003; rss: 105MB	lifetime resolution
time: 0.000; rss: 105MB	looking for entry point
time: 0.000; rss: 105MB	looking for plugin registrar
time: 0.012; rss: 111MB	region resolution
time: 0.002; rss: 111MB	loop checking
time: 0.002; rss: 111MB	static item recursion checking
time: 0.058; rss: 111MB	compute_incremental_hashes_map
time: 0.000; rss: 111MB	load_dep_graph
time: 0.025; rss: 112MB	type collecting
time: 0.000; rss: 112MB	variance inference
time: 0.033; rss: 116MB	coherence checking
time: 0.099; rss: 117MB	wf checking
time: 0.218; rss: 124MB	item-types checking
time: 0.936; rss: 137MB	item-bodies checking
time: 0.000; rss: 137MB	drop-impl checking
time: 0.071; rss: 137MB	const checking
time: 0.011; rss: 137MB	privacy checking
time: 0.001; rss: 137MB	stability index
time: 0.010; rss: 137MB	intrinsic checking
time: 0.003; rss: 137MB	effect checking
time: 0.025; rss: 137MB	match checking
time: 0.011; rss: 138MB	liveness checking
time: 0.067; rss: 138MB	rvalue checking
time: 0.111; rss: 182MB	MIR dump
  time: 0.012; rss: 182MB	SimplifyCfg
  time: 0.025; rss: 182MB	QualifyAndPromoteConstants
  time: 0.028; rss: 182MB	TypeckMir
  time: 0.001; rss: 182MB	SimplifyBranches
  time: 0.007; rss: 182MB	SimplifyCfg
time: 0.073; rss: 182MB	MIR passes
time: 0.143; rss: 182MB	borrow checking
time: 0.004; rss: 182MB	reachability checking
time: 0.008; rss: 182MB	death checking
time: 0.010; rss: 182MB	stability checking
time: 0.000; rss: 182MB	unused lib feature checking
time: 0.075; rss: 182MB	lint checking
time: 0.000; rss: 182MB	resolving dependency formats
  time: 0.001; rss: 182MB	NoLandingPads
  time: 0.005; rss: 182MB	SimplifyCfg
  time: 0.012; rss: 184MB	EraseRegions
  time: 0.002; rss: 184MB	AddCallGuards
  time: 0.134; rss: 188MB	ElaborateDrops
  time: 0.001; rss: 188MB	NoLandingPads
  time: 0.009; rss: 188MB	SimplifyCfg
  time: 0.002; rss: 188MB	Deaggregator
  time: 0.001; rss: 188MB	AddCallGuards
  time: 0.000; rss: 188MB	PreTrans
time: 0.168; rss: 188MB	Prepare MIR codegen passes
  time: 0.081; rss: 189MB	write metadata
  time: 0.530; rss: 201MB	translation item collection
  time: 0.030; rss: 205MB	codegen unit partitioning
  time: 0.052; rss: 327MB	internalize symbols
time: 3.449; rss: 301MB	translation
time: 0.000; rss: 301MB	assert dep graph
time: 0.000; rss: 301MB	serialize dep graph
  time: 0.200; rss: 225MB	llvm function passes [0]
  time: 0.082; rss: 229MB	llvm module passes [0]
  time: 3.996; rss: 231MB	codegen passes [0]
  time: 0.001; rss: 232MB	codegen passes [0]
time: 4.579; rss: 231MB	LLVM passes
time: 0.000; rss: 231MB	serialize work products
time: 0.256; rss: 105MB	linking
done
