commit 700d3e23748c10c4203491856186333dd2952ebf
Merge: 855fb61 a70e42a
Author: bors <bors@rust-lang.org>
Date:   Sun May 1 20:39:33 2016 -0700

    Auto merge of #33190 - jseyfried:improve_diagnostics, r=nrc
    
    resolve: improve diagnostics and lay groundwork for resolving before ast->hir
    
    This PR improves diagnostics in `resolve` and lays some groundwork for resolving before ast->hir.
    
    More specifically,
     - It removes an API in `resolve` intended for external refactoring tools (see #27493) that appears not to be in active use. The API is incompatible with resolving before ast->hir, but could be rewritten in a more compatible and less intrusive way.
     - It improves the diagnostics for pattern bindings that conflict with `const`s.
     - It improves the diagnostics for modules used as expressions (fixes #33186).
     - It refactors away some uses of the hir map, which is unavavailable before ast->hir lowering.
    
    r? @eddyb
rustc: ./jld-day15-parser
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling combine v1.3.0
   Compiling day15 v0.1.0 (file:///root/benchmarks/jld-day15-parser)
time: 0.001; rss: 44MB	parsing
Lines of code:             72
Pre-expansion node count:  673
time: 0.000; rss: 44MB	configuration 1
time: 0.000; rss: 44MB	recursion limit
time: 0.000; rss: 44MB	crate injection
time: 0.003; rss: 51MB	macro loading
time: 0.000; rss: 51MB	plugin loading
time: 0.000; rss: 51MB	plugin registration
time: 0.002; rss: 51MB	expansion
time: 0.000; rss: 51MB	configuration 2
time: 0.000; rss: 51MB	gated configuration checking
time: 0.000; rss: 51MB	maybe building test harness
time: 0.000; rss: 51MB	prelude injection
time: 0.000; rss: 51MB	checking that all macro invocations are gone
time: 0.000; rss: 51MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 51MB	complete gated feature checking
time: 0.000; rss: 51MB	const fn bodies and arguments
Post-expansion node count: 1176
time: 0.000; rss: 51MB	assigning node ids
time: 0.000; rss: 51MB	collecting defs
time: 0.002; rss: 55MB	external crate/lib resolution
time: 0.000; rss: 55MB	lowering ast -> hir
time: 0.000; rss: 55MB	indexing hir
time: 0.000; rss: 55MB	attribute checking
time: 0.000; rss: 55MB	early lint checks
time: 0.000; rss: 55MB	language item collection
time: 0.001; rss: 59MB	name resolution
time: 0.000; rss: 59MB	lifetime resolution
time: 0.000; rss: 59MB	looking for entry point
time: 0.000; rss: 59MB	looking for plugin registrar
time: 0.000; rss: 59MB	region resolution
time: 0.000; rss: 59MB	loop checking
time: 0.000; rss: 59MB	static item recursion checking
time: 0.000; rss: 59MB	load_dep_graph
time: 0.001; rss: 63MB	type collecting
time: 0.000; rss: 63MB	variance inference
time: 0.005; rss: 73MB	coherence checking
time: 0.007; rss: 77MB	wf checking
time: 0.000; rss: 77MB	item-types checking
time: 1.506; rss: 152MB	item-bodies checking
time: 0.000; rss: 152MB	drop-impl checking
time: 0.001; rss: 152MB	const checking
time: 0.000; rss: 152MB	privacy checking
time: 0.000; rss: 152MB	stability index
time: 0.000; rss: 152MB	intrinsic checking
time: 0.000; rss: 152MB	effect checking
time: 0.000; rss: 152MB	match checking
time: 0.000; rss: 152MB	liveness checking
time: 0.002; rss: 152MB	rvalue checking
time: 0.001; rss: 153MB	MIR dump
time: 0.000; rss: 153MB	MIR passes
time: 0.001; rss: 153MB	borrow checking
time: 0.000; rss: 153MB	reachability checking
time: 0.000; rss: 153MB	death checking
time: 0.000; rss: 153MB	stability checking
time: 0.000; rss: 153MB	unused lib feature checking
time: 0.004; rss: 154MB	lint checking
time: 0.001; rss: 154MB	resolving dependency formats
time: 0.000; rss: 155MB	Prepare MIR codegen passes
  time: 12.102; rss: 189MB	translation item collection
  time: 0.001; rss: 189MB	codegen unit partitioning
  time: 0.000; rss: 226MB	write metadata
time: 38.101; rss: 226MB	translation
time: 0.000; rss: 226MB	assert dep graph
time: 0.000; rss: 226MB	serialize dep graph
  time: 0.014; rss: 105MB	llvm function passes [0]
  time: 0.001; rss: 105MB	llvm module passes [0]
  time: 0.273; rss: 111MB	codegen passes [0]
  time: 0.000; rss: 105MB	codegen passes [0]
time: 0.296; rss: 104MB	LLVM passes
  time: 0.115; rss: 104MB	running linker
time: 0.115; rss: 104MB	linking
done
