commit 5938eba4e30b766751483e93776a87a4db1681f4
Merge: 02ea82d d53f82c
Author: bors <bors@rust-lang.org>
Date:   Wed Dec 7 07:15:31 2016 +0000

    Auto merge of #38149 - bluss:is-empty, r=alexcrichton
    
    Forward more ExactSizeIterator methods and `is_empty` edits
    
    - Forward ExactSizeIterator methods in more places, like `&mut I` and `Box<I>` iterator impls.
    - Improve `VecDeque::is_empty` itself (see commit 4)
    - All the collections iterators now have `len` or `is_empty` forwarded if doing so is a benefit. In the remaining cases, they already use a simple size hint (using something like a stored `usize` value), which is sufficient for the default implementation of len and is_empty.
rustc: ./syntex-0.42.2@010-incr@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.240; rss: 151MB	expansion
time: 0.000; rss: 151MB	maybe building test harness
time: 0.006; rss: 151MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 151MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 151MB	complete gated feature checking
time: 0.023; rss: 151MB	early lint checks
time: 0.007; rss: 151MB	AST validation
time: 0.075; rss: 166MB	name resolution
time: 0.058; rss: 199MB	lowering ast -> hir
time: 0.010; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 153MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.045; rss: 176MB	region resolution
time: 0.007; rss: 176MB	loop checking
time: 0.002; rss: 176MB	static item recursion checking
time: 0.381; rss: 177MB	compute_incremental_hashes_map
time: 0.000; rss: 177MB	load_dep_graph
time: 0.009; rss: 177MB	stability index
time: 0.021; rss: 181MB	stability checking
time: 0.055; rss: 189MB	type collecting
time: 0.004; rss: 189MB	variance inference
time: 0.006; rss: 193MB	impl wf inference
time: 0.026; rss: 196MB	coherence checking
time: 0.090; rss: 199MB	wf checking
time: 0.197; rss: 207MB	item-types checking
time: 3.592; rss: 265MB	item-bodies checking
time: 0.000; rss: 265MB	drop-impl checking
time: 0.223; rss: 276MB	const checking
time: 0.066; rss: 276MB	privacy checking
time: 0.021; rss: 283MB	intrinsic checking
time: 0.016; rss: 283MB	effect checking
time: 0.049; rss: 283MB	match checking
time: 0.049; rss: 290MB	liveness checking
time: 0.179; rss: 292MB	rvalue checking
time: 0.368; rss: 481MB	MIR dump
  time: 0.060; rss: 482MB	SimplifyCfg
  time: 0.080; rss: 482MB	QualifyAndPromoteConstants
  time: 0.127; rss: 499MB	TypeckMir
  time: 0.004; rss: 499MB	SimplifyBranches
  time: 0.033; rss: 499MB	SimplifyCfg
time: 0.304; rss: 499MB	MIR cleanup and validation
time: 0.479; rss: 500MB	borrow checking
time: 0.025; rss: 500MB	reachability checking
time: 0.043; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.179; rss: 500MB	lint checking
time: 0.000; rss: 500MB	resolving dependency formats
  time: 0.004; rss: 500MB	NoLandingPads
  time: 0.027; rss: 500MB	SimplifyCfg
  time: 0.064; rss: 509MB	EraseRegions
  time: 0.011; rss: 509MB	AddCallGuards
  time: 0.271; rss: 528MB	ElaborateDrops
  time: 0.004; rss: 528MB	NoLandingPads
  time: 0.052; rss: 528MB	SimplifyCfg
  time: 0.028; rss: 528MB	InstCombine
  time: 0.012; rss: 528MB	Deaggregator
  time: 0.004; rss: 528MB	CopyPropagation
  time: 0.035; rss: 528MB	SimplifyLocals
  time: 0.010; rss: 528MB	AddCallGuards
  time: 0.003; rss: 528MB	PreTrans
time: 0.523; rss: 528MB	MIR optimisations
  time: 0.064; rss: 538MB	write metadata
  time: 0.391; rss: 551MB	translation item collection
  time: 0.071; rss: 555MB	codegen unit partitioning
  time: 0.048; rss: 1457MB	internalize symbols
time: 12.074; rss: 1457MB	translation
time: 0.000; rss: 1457MB	assert dep graph
time: 1.398; rss: 1485MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1199MB	llvm function passes [0]
time: 0.000; rss: 1201MB	llvm module passes [0]
time: 0.001; rss: 1211MB	llvm function passes [1]
time: 0.000; rss: 1214MB	llvm module passes [1]
time: 0.002; rss: 1216MB	llvm function passes [5]
time: 0.000; rss: 1216MB	llvm module passes [5]
time: 0.003; rss: 1216MB	llvm function passes [2]
time: 0.001; rss: 1216MB	llvm function passes [7]
time: 0.000; rss: 1216MB	llvm module passes [2]
time: 0.002; rss: 1216MB	codegen passes [0]
time: 0.001; rss: 1216MB	llvm module passes [7]
time: 0.005; rss: 1216MB	codegen passes [1]
time: 0.015; rss: 1216MB	llvm function passes [8]
time: 0.017; rss: 1220MB	llvm function passes [9]
time: 0.014; rss: 1220MB	codegen passes [5]
time: 0.005; rss: 1220MB	llvm module passes [9]
time: 0.016; rss: 1220MB	llvm function passes [1]
time: 0.021; rss: 1227MB	codegen passes [7]
time: 0.026; rss: 1227MB	llvm function passes [3]
time: 0.022; rss: 1227MB	codegen passes [2]
time: 0.009; rss: 1229MB	llvm module passes [1]
time: 0.038; rss: 1229MB	llvm function passes [0]
time: 0.031; rss: 1231MB	llvm module passes [8]
time: 0.029; rss: 1234MB	llvm function passes [10]
time: 0.032; rss: 1234MB	llvm module passes [3]
time: 0.012; rss: 1236MB	llvm module passes [10]
time: 0.035; rss: 1236MB	llvm module passes [0]
time: 0.058; rss: 1236MB	llvm function passes [5]
time: 0.000; rss: 1240MB	llvm function passes [11]
time: 0.000; rss: 1244MB	llvm module passes [11]
time: 0.001; rss: 1246MB	codegen passes [11]
time: 0.003; rss: 1248MB	llvm function passes [11]
time: 0.001; rss: 1248MB	llvm module passes [11]
time: 0.073; rss: 1252MB	llvm function passes [2]
time: 0.039; rss: 1259MB	llvm module passes [5]
time: 0.124; rss: 1269MB	llvm function passes [6]
time: 0.024; rss: 1269MB	llvm module passes [2]
time: 0.026; rss: 1273MB	llvm function passes [14]
time: 0.096; rss: 1277MB	codegen passes [8]
time: 0.001; rss: 1277MB	llvm function passes [8]
time: 0.000; rss: 1277MB	llvm module passes [8]
time: 0.017; rss: 1276MB	llvm function passes [15]
time: 0.000; rss: 1276MB	llvm module passes [15]
time: 0.016; rss: 1278MB	llvm module passes [14]
time: 0.016; rss: 1280MB	codegen passes [8]
time: 0.000; rss: 1280MB	llvm function passes [8]
time: 0.000; rss: 1280MB	llvm module passes [8]
time: 0.017; rss: 1282MB	codegen passes [15]
time: 0.086; rss: 1282MB	codegen passes [11]
time: 0.004; rss: 1282MB	codegen passes [8]
time: 0.000; rss: 1282MB	llvm function passes [8]
time: 0.000; rss: 1282MB	llvm module passes [8]
time: 0.001; rss: 1282MB	codegen passes [8]
time: 0.069; rss: 1291MB	llvm module passes [6]
time: 0.204; rss: 1294MB	llvm function passes [4]
time: 0.202; rss: 1298MB	llvm function passes [7]
time: 0.067; rss: 1304MB	llvm function passes [8]
time: 0.079; rss: 1302MB	llvm function passes [15]
time: 0.031; rss: 1305MB	llvm module passes [15]
time: 0.041; rss: 1305MB	llvm function passes [20]
time: 0.070; rss: 1305MB	llvm function passes [19]
time: 0.049; rss: 1305MB	llvm module passes [8]
time: 0.010; rss: 1307MB	llvm module passes [20]
time: 0.045; rss: 1316MB	llvm function passes [23]
time: 0.142; rss: 1319MB	llvm function passes [17]
time: 0.129; rss: 1319MB	llvm module passes [4]
time: 0.011; rss: 1323MB	llvm function passes [21]
time: 0.004; rss: 1324MB	llvm module passes [21]
time: 0.058; rss: 1327MB	llvm module passes [19]
time: 0.024; rss: 1327MB	llvm module passes [23]
time: 0.145; rss: 1327MB	llvm function passes [18]
time: 0.234; rss: 1335MB	llvm function passes [13]
time: 0.144; rss: 1335MB	llvm module passes [7]
time: 0.038; rss: 1335MB	llvm function passes [22]
time: 0.020; rss: 1339MB	llvm function passes [25]
time: 0.017; rss: 1345MB	llvm module passes [22]
time: 0.012; rss: 1347MB	llvm module passes [25]
time: 0.061; rss: 1349MB	llvm module passes [17]
time: 0.074; rss: 1359MB	llvm module passes [18]
time: 0.063; rss: 1361MB	llvm module passes [13]
time: 0.031; rss: 1361MB	llvm function passes [26]
time: 0.236; rss: 1363MB	llvm function passes [16]
time: 0.020; rss: 1365MB	llvm module passes [26]
time: 0.070; rss: 1391MB	llvm function passes [28]
time: 0.001; rss: 1391MB	llvm module passes [28]
time: 0.075; rss: 1399MB	llvm module passes [16]
time: 0.049; rss: 1411MB	codegen passes [28]
time: 0.125; rss: 1411MB	llvm function passes [29]
time: 0.000; rss: 1411MB	llvm function passes [28]
time: 0.000; rss: 1411MB	llvm module passes [28]
time: 0.003; rss: 1410MB	codegen passes [28]
time: 0.000; rss: 1409MB	codegen passes [28]
time: 0.009; rss: 1410MB	llvm function passes [36]
time: 0.005; rss: 1409MB	llvm module passes [36]
time: 0.161; rss: 1409MB	llvm function passes [27]
time: 0.244; rss: 1412MB	llvm function passes [24]
time: 0.437; rss: 1412MB	llvm function passes [11]
time: 0.062; rss: 1416MB	llvm module passes [29]
time: 0.109; rss: 1416MB	llvm function passes [31]
time: 0.107; rss: 1410MB	llvm function passes [35]
time: 0.590; rss: 1405MB	llvm function passes [12]
time: 0.037; rss: 1405MB	llvm module passes [31]
time: 0.082; rss: 1405MB	llvm module passes [27]
time: 0.180; rss: 1402MB	llvm function passes [32]
time: 0.129; rss: 1406MB	llvm module passes [24]
time: 0.092; rss: 1411MB	llvm module passes [35]
time: 0.214; rss: 1411MB	llvm function passes [33]
time: 0.016; rss: 1411MB	llvm module passes [33]
time: 0.638; rss: 1410MB	codegen passes [3]
time: 0.382; rss: 1411MB	codegen passes [21]
time: 0.183; rss: 1396MB	llvm module passes [11]
time: 0.163; rss: 1421MB	llvm module passes [32]
time: 0.385; rss: 1420MB	llvm function passes [30]
time: 0.299; rss: 1464MB	codegen passes [35]
time: 0.561; rss: 1463MB	llvm function passes [34]
time: 0.520; rss: 1462MB	codegen passes [36]
time: 0.249; rss: 1466MB	llvm module passes [30]
time: 0.637; rss: 1462MB	llvm module passes [12]
time: 1.006; rss: 1474MB	codegen passes [2]
time: 1.312; rss: 1457MB	codegen passes [1]
time: 0.374; rss: 1457MB	llvm module passes [34]
time: 1.374; rss: 1447MB	codegen passes [9]
time: 1.321; rss: 1450MB	codegen passes [10]
time: 1.087; rss: 1461MB	codegen passes [22]
time: 1.261; rss: 1469MB	codegen passes [20]
time: 1.771; rss: 1424MB	codegen passes [0]
time: 1.727; rss: 1450MB	codegen passes [25]
time: 2.132; rss: 1470MB	codegen passes [14]
time: 1.794; rss: 1489MB	codegen passes [31]
time: 1.672; rss: 1484MB	codegen passes [33]
time: 2.252; rss: 1478MB	codegen passes [8]
time: 1.883; rss: 1494MB	codegen passes [11]
time: 2.409; rss: 1482MB	codegen passes [26]
time: 2.488; rss: 1485MB	codegen passes [23]
time: 2.481; rss: 1494MB	codegen passes [19]
time: 2.562; rss: 1523MB	codegen passes [32]
time: 2.889; rss: 1561MB	codegen passes [15]
time: 3.259; rss: 1548MB	codegen passes [5]
time: 3.201; rss: 1607MB	codegen passes [17]
time: 3.401; rss: 1624MB	codegen passes [29]
time: 3.784; rss: 1626MB	codegen passes [13]
time: 3.808; rss: 1631MB	codegen passes [16]
time: 3.689; rss: 1616MB	codegen passes [34]
time: 4.120; rss: 1585MB	codegen passes [6]
time: 4.286; rss: 1543MB	codegen passes [18]
time: 4.256; rss: 1549MB	codegen passes [27]
time: 4.666; rss: 1563MB	codegen passes [30]
time: 4.953; rss: 1512MB	codegen passes [24]
time: 4.805; rss: 1440MB	codegen passes [7]
time: 5.056; rss: 1392MB	codegen passes [4]
time: 5.018; rss: 1321MB	codegen passes [12]
time: 7.584; rss: 1319MB	LLVM passes
time: 0.000; rss: 1319MB	serialize work products
time: 1.040; rss: 296MB	linking
done
