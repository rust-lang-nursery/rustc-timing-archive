commit 98a3502da1456b209ff031604cabbbcb9d0eddf1
Merge: 5bfe107 a61d85b
Author: bors <bors@rust-lang.org>
Date:   Sat Oct 15 15:38:52 2016 -0700

    Auto merge of #37152 - arielb1:drop-cache, r=pnkfelix
    
    add a per-param-env cache to `impls_bound`
    
    There used to be only a global cache, which led to uncached calls to
    trait selection when there were type parameters.
    
    This causes a 20% decrease in borrow-checking time and an overall 0.5% performance increase during bootstrapping (as borrow-checking tends to be a tiny part of compilation time).
    
    Fixes #37106 (drop elaboration times are now ~half of borrow checking,
    so might still be worthy of optimization, but not critical).
    
    r? @pnkfelix
rustc: ./piston-image-0.10.3
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling lzw v0.10.0
   Compiling libc v0.2.16
   Compiling scoped_threadpool v0.1.7
   Compiling bitflags v0.7.0
   Compiling byteorder v0.5.3
   Compiling num-traits v0.1.35
   Compiling glob v0.2.11
   Compiling color_quant v1.0.0
   Compiling gcc v0.3.35
   Compiling rustc-serialize v0.3.19
   Compiling inflate v0.1.1
   Compiling gif v0.9.0
   Compiling num_cpus v0.2.13
   Compiling rand v0.3.14
   Compiling num-integer v0.1.32
   Compiling miniz-sys v0.1.7
   Compiling num-iter v0.1.32
   Compiling num v0.1.35
   Compiling enum_primitive v0.1.0
   Compiling flate2 v0.2.14
   Compiling deque v0.3.1
   Compiling rayon v0.4.2
   Compiling jpeg-decoder v0.1.6
   Compiling num-bigint v0.1.35
   Compiling num-rational v0.1.35
   Compiling png v0.5.2
   Compiling image v0.10.3 (file:///root/benchmarks/piston-image-0.10.3)
time: 0.070; rss: 49MB	parsing
Lines of code:             12000
Pre-expansion node count:  90272
time: 0.000; rss: 49MB	recursion limit
time: 0.000; rss: 49MB	crate injection
time: 0.000; rss: 49MB	plugin loading
time: 0.000; rss: 49MB	plugin registration
time: 0.095; rss: 87MB	expansion
time: 0.000; rss: 87MB	maybe building test harness
time: 0.001; rss: 87MB	maybe creating a macro crate
Post-expansion node count: 148999
time: 0.000; rss: 87MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 87MB	complete gated feature checking
time: 0.005; rss: 87MB	early lint checks
time: 0.001; rss: 87MB	AST validation
time: 0.029; rss: 91MB	name resolution
time: 0.033; rss: 103MB	lowering ast -> hir
time: 0.008; rss: 105MB	indexing hir
time: 0.002; rss: 105MB	attribute checking
time: 0.002; rss: 94MB	language item collection
time: 0.003; rss: 94MB	lifetime resolution
time: 0.000; rss: 94MB	looking for entry point
time: 0.000; rss: 94MB	looking for plugin registrar
time: 0.020; rss: 99MB	region resolution
time: 0.001; rss: 99MB	loop checking
time: 0.001; rss: 99MB	static item recursion checking
time: 0.055; rss: 99MB	compute_incremental_hashes_map
time: 0.000; rss: 99MB	load_dep_graph
time: 0.017; rss: 101MB	type collecting
time: 0.000; rss: 101MB	variance inference
time: 0.030; rss: 105MB	coherence checking
time: 0.093; rss: 106MB	wf checking
time: 0.158; rss: 111MB	item-types checking
time: 0.940; rss: 121MB	item-bodies checking
time: 0.000; rss: 121MB	drop-impl checking
time: 0.059; rss: 122MB	const checking
time: 0.011; rss: 122MB	privacy checking
time: 0.001; rss: 122MB	stability index
time: 0.008; rss: 122MB	intrinsic checking
time: 0.003; rss: 122MB	effect checking
time: 0.018; rss: 122MB	match checking
time: 0.011; rss: 122MB	liveness checking
time: 0.049; rss: 123MB	rvalue checking
time: 0.171; rss: 162MB	MIR dump
  time: 0.012; rss: 164MB	SimplifyCfg
  time: 0.024; rss: 164MB	QualifyAndPromoteConstants
  time: 0.026; rss: 164MB	TypeckMir
  time: 0.001; rss: 164MB	SimplifyBranches
  time: 0.005; rss: 164MB	SimplifyCfg
time: 0.067; rss: 164MB	MIR passes
time: 0.128; rss: 164MB	borrow checking
time: 0.004; rss: 164MB	reachability checking
time: 0.010; rss: 165MB	death checking
time: 0.010; rss: 165MB	stability checking
time: 0.000; rss: 165MB	unused lib feature checking
time: 0.073; rss: 165MB	lint checking
time: 0.000; rss: 165MB	resolving dependency formats
  time: 0.001; rss: 165MB	NoLandingPads
  time: 0.005; rss: 165MB	SimplifyCfg
  time: 0.017; rss: 166MB	EraseRegions
  time: 0.002; rss: 166MB	AddCallGuards
  time: 0.052; rss: 169MB	ElaborateDrops
  time: 0.001; rss: 169MB	NoLandingPads
  time: 0.009; rss: 170MB	SimplifyCfg
  time: 0.006; rss: 170MB	InstCombine
  time: 0.002; rss: 170MB	Deaggregator
  time: 0.001; rss: 170MB	CopyPropagation
  time: 0.002; rss: 170MB	AddCallGuards
  time: 0.000; rss: 170MB	PreTrans
time: 0.096; rss: 170MB	Prepare MIR codegen passes
  time: 0.081; rss: 173MB	write metadata
  time: 0.480; rss: 186MB	translation item collection
  time: 0.032; rss: 190MB	codegen unit partitioning
  time: 0.025; rss: 307MB	internalize symbols
time: 3.161; rss: 280MB	translation
time: 0.000; rss: 280MB	assert dep graph
time: 0.000; rss: 280MB	serialize dep graph
  time: 0.207; rss: 215MB	llvm function passes [0]
  time: 0.085; rss: 218MB	llvm module passes [0]
  time: 4.146; rss: 219MB	codegen passes [0]
  time: 0.001; rss: 220MB	codegen passes [0]
time: 4.845; rss: 220MB	LLVM passes
time: 0.000; rss: 220MB	serialize work products
time: 0.258; rss: 94MB	linking
done
