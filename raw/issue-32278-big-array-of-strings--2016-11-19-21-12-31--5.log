commit 0bd2ce62b27e2b9a7dfe92fc23d9098854008089
Merge: bfa709a 30daedf
Author: bors <bors@rust-lang.org>
Date:   Sat Nov 19 16:39:25 2016 -0600

    Auto merge of #37831 - rkruppe:llvm-attr-fwdcompat, r=eddyb
    
    [LLVM 4.0] Use llvm::Attribute APIs instead of "raw value" APIs
    
    The latter will be removed in LLVM 4.0 (see https://github.com/llvm-mirror/llvm/commit/4a6fc8bacf11d8066da72cf8481467167877ed16).
    
    The librustc_llvm API remains mostly unchanged, except that llvm::Attribute is no longer a bitflag but represents only a *single* attribute.
    The ability to store many attributes in a small number of bits and modify them without interacting with LLVM is only used in rustc_trans::abi and closely related modules, and only attributes for function arguments are considered there.
    Thus rustc_trans::abi now has its own bit-packed representation of argument attributes, which are translated to rustc_llvm::Attribute when applying the attributes.
    
    cc #37609
rustc: ./issue-32278-big-array-of-strings
cargo rustc  -- -Ztime-passes -Zinput-stats
   Compiling issue-32278-big-array-of-strings v0.1.0 (file:///root/benchmarks/issue-32278-big-array-of-strings)
time: 0.102; rss: 60MB	parsing
Lines of code:             65577
Pre-expansion node count:  65552
time: 0.000; rss: 60MB	recursion limit
time: 0.000; rss: 60MB	crate injection
time: 0.000; rss: 60MB	plugin loading
time: 0.000; rss: 60MB	plugin registration
time: 0.025; rss: 83MB	expansion
time: 0.000; rss: 83MB	maybe building test harness
time: 0.001; rss: 87MB	maybe creating a macro crate
Post-expansion node count: 65565
time: 0.000; rss: 87MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 87MB	complete gated feature checking
time: 0.005; rss: 87MB	early lint checks
time: 0.000; rss: 87MB	AST validation
time: 0.003; rss: 87MB	name resolution
time: 0.005; rss: 96MB	lowering ast -> hir
time: 0.001; rss: 100MB	indexing hir
time: 0.001; rss: 100MB	attribute checking
time: 0.000; rss: 88MB	language item collection
time: 0.000; rss: 88MB	lifetime resolution
time: 0.000; rss: 88MB	looking for entry point
time: 0.000; rss: 88MB	looking for plugin registrar
time: 0.006; rss: 95MB	region resolution
time: 0.001; rss: 95MB	loop checking
time: 0.001; rss: 95MB	static item recursion checking
time: 0.020; rss: 95MB	compute_incremental_hashes_map
time: 0.000; rss: 95MB	load_dep_graph
time: 0.000; rss: 95MB	type collecting
time: 0.000; rss: 95MB	variance inference
time: 0.000; rss: 95MB	impl wf inference
time: 0.004; rss: 97MB	coherence checking
time: 0.000; rss: 97MB	wf checking
time: 0.781; rss: 108MB	item-types checking
time: 0.000; rss: 108MB	item-bodies checking
time: 0.000; rss: 108MB	drop-impl checking
time: 0.022; rss: 107MB	const checking
time: 0.001; rss: 107MB	privacy checking
time: 0.000; rss: 107MB	stability index
time: 0.000; rss: 107MB	intrinsic checking
time: 0.000; rss: 107MB	effect checking
time: 0.000; rss: 107MB	match checking
time: 0.000; rss: 107MB	liveness checking
time: 0.000; rss: 107MB	rvalue checking
time: 0.033; rss: 113MB	MIR dump
  time: 0.000; rss: 113MB	SimplifyCfg
  time: 0.001; rss: 113MB	QualifyAndPromoteConstants
  time: 0.000; rss: 113MB	TypeckMir
  time: 0.000; rss: 113MB	SimplifyBranches
  time: 0.000; rss: 113MB	SimplifyCfg
time: 0.001; rss: 113MB	MIR cleanup and validation
time: 0.001; rss: 113MB	borrow checking
time: 0.000; rss: 113MB	reachability checking
time: 0.000; rss: 113MB	death checking
time: 0.000; rss: 113MB	stability checking
time: 0.000; rss: 113MB	unused lib feature checking
time: 0.025; rss: 113MB	lint checking
time: 0.001; rss: 114MB	resolving dependency formats
  time: 0.000; rss: 114MB	NoLandingPads
  time: 0.000; rss: 114MB	SimplifyCfg
  time: 0.001; rss: 114MB	EraseRegions
  time: 0.000; rss: 114MB	AddCallGuards
  time: 0.000; rss: 114MB	ElaborateDrops
  time: 0.000; rss: 114MB	NoLandingPads
  time: 0.000; rss: 114MB	SimplifyCfg
  time: 0.000; rss: 114MB	InstCombine
  time: 0.000; rss: 114MB	Deaggregator
  time: 0.000; rss: 114MB	CopyPropagation
  time: 0.000; rss: 114MB	SimplifyLocals
  time: 0.000; rss: 114MB	AddCallGuards
  time: 0.000; rss: 114MB	PreTrans
time: 0.001; rss: 114MB	MIR optimisations
  time: 0.000; rss: 114MB	write metadata
  time: 0.000; rss: 114MB	translation item collection
  time: 0.000; rss: 114MB	codegen unit partitioning
  time: 0.001; rss: 125MB	internalize symbols
time: 0.055; rss: 125MB	translation
time: 0.000; rss: 125MB	assert dep graph
time: 0.000; rss: 125MB	serialize dep graph
  time: 0.008; rss: 86MB	llvm function passes [0]
  time: 0.000; rss: 86MB	llvm module passes [0]
  time: 0.197; rss: 86MB	codegen passes [0]
  time: 0.000; rss: 86MB	codegen passes [0]
time: 0.207; rss: 86MB	LLVM passes
time: 0.000; rss: 86MB	serialize work products
  time: 0.163; rss: 76MB	running linker
time: 0.164; rss: 76MB	linking
done
