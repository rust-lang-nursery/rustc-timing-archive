commit adb4279e549f51d287140658c1c64b51d7715bfa
Merge: 6a495f7 d38db82
Author: bors <bors@rust-lang.org>
Date:   Fri Dec 9 07:08:29 2016 +0000

    Auto merge of #38256 - alexcrichton:distcheck, r=brson
    
    rustbuild: Implement distcheck
    
    This commit implements the `distcheck` target for rustbuild which is only ever
    run on our nightly bots. This essentially just creates a tarball, un-tars it,
    and then runs a full build, validating that the release tarballs do indeed have
    everything they need to build Rust.
rustc: ./syntex-0.42.2@010-incr@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.242; rss: 152MB	expansion
time: 0.000; rss: 152MB	maybe building test harness
time: 0.006; rss: 152MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 152MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 152MB	complete gated feature checking
time: 0.023; rss: 152MB	early lint checks
time: 0.007; rss: 152MB	AST validation
time: 0.075; rss: 166MB	name resolution
time: 0.058; rss: 200MB	lowering ast -> hir
time: 0.010; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.045; rss: 177MB	region resolution
time: 0.007; rss: 177MB	loop checking
time: 0.002; rss: 177MB	static item recursion checking
time: 0.382; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.021; rss: 182MB	stability checking
time: 0.056; rss: 190MB	type collecting
time: 0.004; rss: 190MB	variance inference
time: 0.006; rss: 193MB	impl wf inference
time: 0.026; rss: 197MB	coherence checking
time: 0.088; rss: 200MB	wf checking
time: 0.197; rss: 208MB	item-types checking
time: 3.564; rss: 266MB	item-bodies checking
time: 0.000; rss: 266MB	drop-impl checking
time: 0.215; rss: 277MB	const checking
time: 0.057; rss: 277MB	privacy checking
time: 0.020; rss: 284MB	intrinsic checking
time: 0.016; rss: 284MB	effect checking
time: 0.049; rss: 284MB	match checking
time: 0.049; rss: 291MB	liveness checking
time: 0.175; rss: 293MB	rvalue checking
time: 0.364; rss: 482MB	MIR dump
  time: 0.057; rss: 483MB	SimplifyCfg
  time: 0.074; rss: 483MB	QualifyAndPromoteConstants
  time: 0.120; rss: 500MB	TypeckMir
  time: 0.004; rss: 500MB	SimplifyBranches
  time: 0.033; rss: 500MB	SimplifyCfg
time: 0.289; rss: 500MB	MIR cleanup and validation
time: 0.478; rss: 501MB	borrow checking
time: 0.025; rss: 501MB	reachability checking
time: 0.043; rss: 501MB	death checking
time: 0.000; rss: 501MB	unused lib feature checking
time: 0.190; rss: 501MB	lint checking
time: 0.000; rss: 501MB	resolving dependency formats
  time: 0.004; rss: 501MB	NoLandingPads
  time: 0.029; rss: 501MB	SimplifyCfg
  time: 0.069; rss: 509MB	EraseRegions
  time: 0.011; rss: 509MB	AddCallGuards
  time: 0.272; rss: 529MB	ElaborateDrops
  time: 0.004; rss: 529MB	NoLandingPads
  time: 0.053; rss: 529MB	SimplifyCfg
  time: 0.028; rss: 529MB	InstCombine
  time: 0.012; rss: 529MB	Deaggregator
  time: 0.003; rss: 529MB	CopyPropagation
  time: 0.034; rss: 529MB	SimplifyLocals
  time: 0.010; rss: 529MB	AddCallGuards
  time: 0.003; rss: 529MB	PreTrans
time: 0.530; rss: 529MB	MIR optimisations
  time: 0.065; rss: 538MB	write metadata
  time: 0.399; rss: 550MB	translation item collection
  time: 0.071; rss: 554MB	codegen unit partitioning
  time: 0.053; rss: 1455MB	internalize symbols
time: 12.989; rss: 1455MB	translation
time: 0.000; rss: 1455MB	assert dep graph
time: 2.115; rss: 1483MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1192MB	llvm function passes [0]
time: 0.000; rss: 1192MB	llvm module passes [0]
time: 0.001; rss: 1204MB	llvm function passes [1]
time: 0.000; rss: 1204MB	llvm module passes [1]
time: 0.003; rss: 1208MB	llvm function passes [5]
time: 0.005; rss: 1213MB	llvm function passes [4]
time: 0.000; rss: 1213MB	llvm module passes [4]
time: 0.005; rss: 1213MB	llvm function passes [3]
time: 0.002; rss: 1213MB	llvm module passes [5]
time: 0.000; rss: 1213MB	llvm module passes [3]
time: 0.008; rss: 1216MB	codegen passes [1]
time: 0.009; rss: 1216MB	llvm function passes [6]
time: 0.001; rss: 1216MB	llvm function passes [1]
time: 0.000; rss: 1216MB	llvm module passes [1]
time: 0.006; rss: 1218MB	llvm module passes [6]
time: 0.019; rss: 1218MB	codegen passes [0]
time: 0.020; rss: 1218MB	llvm function passes [2]
time: 0.016; rss: 1229MB	llvm module passes [2]
time: 0.030; rss: 1229MB	codegen passes [4]
time: 0.020; rss: 1229MB	llvm function passes [0]
time: 0.031; rss: 1229MB	llvm function passes [8]
time: 0.009; rss: 1229MB	llvm module passes [0]
time: 0.039; rss: 1234MB	codegen passes [1]
time: 0.043; rss: 1235MB	codegen passes [3]
time: 0.011; rss: 1240MB	llvm module passes [8]
time: 0.000; rss: 1245MB	llvm function passes [12]
time: 0.000; rss: 1245MB	llvm module passes [12]
time: 0.001; rss: 1245MB	codegen passes [12]
time: 0.003; rss: 1245MB	llvm function passes [12]
time: 0.001; rss: 1245MB	llvm module passes [12]
time: 0.029; rss: 1257MB	llvm function passes [1]
time: 0.000; rss: 1263MB	llvm function passes [41]
time: 0.001; rss: 1265MB	llvm module passes [41]
time: 0.008; rss: 1265MB	llvm module passes [1]
time: 0.004; rss: 1265MB	codegen passes [41]
time: 0.000; rss: 1265MB	llvm function passes [41]
time: 0.000; rss: 1265MB	llvm module passes [41]
time: 0.001; rss: 1265MB	codegen passes [41]
time: 0.067; rss: 1267MB	llvm function passes [9]
time: 0.030; rss: 1278MB	llvm function passes [47]
time: 0.000; rss: 1278MB	llvm module passes [47]
time: 0.134; rss: 1281MB	llvm function passes [7]
time: 0.057; rss: 1281MB	llvm function passes [46]
time: 0.000; rss: 1281MB	llvm module passes [46]
time: 0.145; rss: 1285MB	codegen passes [5]
time: 0.105; rss: 1287MB	llvm function passes [3]
time: 0.069; rss: 1287MB	llvm function passes [44]
time: 0.096; rss: 1287MB	codegen passes [12]
time: 0.014; rss: 1287MB	llvm module passes [44]
time: 0.106; rss: 1287MB	llvm function passes [49]
time: 0.192; rss: 1291MB	llvm function passes [10]
time: 0.016; rss: 1291MB	llvm module passes [49]
time: 0.117; rss: 1290MB	llvm function passes [41]
time: 0.072; rss: 1290MB	llvm module passes [7]
time: 0.139; rss: 1288MB	llvm function passes [45]
time: 0.022; rss: 1288MB	llvm module passes [41]
time: 0.090; rss: 1287MB	llvm module passes [3]
time: 0.032; rss: 1285MB	llvm module passes [45]
time: 0.085; rss: 1285MB	llvm function passes [33]
time: 0.023; rss: 1285MB	llvm module passes [33]
time: 0.165; rss: 1283MB	codegen passes [46]
time: 0.003; rss: 1282MB	llvm function passes [28]
time: 0.152; rss: 1281MB	llvm function passes [12]
time: 0.229; rss: 1281MB	llvm module passes [9]
time: 0.253; rss: 1281MB	llvm function passes [48]
time: 0.022; rss: 1281MB	llvm module passes [28]
time: 0.209; rss: 1283MB	llvm function passes [5]
time: 0.252; rss: 1283MB	codegen passes [47]
time: 0.000; rss: 1283MB	llvm function passes [47]
time: 0.000; rss: 1283MB	llvm module passes [47]
time: 0.027; rss: 1283MB	llvm function passes [24]
time: 0.003; rss: 1284MB	codegen passes [47]
time: 0.000; rss: 1284MB	codegen passes [47]
time: 0.009; rss: 1285MB	llvm function passes [15]
time: 0.004; rss: 1284MB	llvm module passes [15]
time: 0.074; rss: 1284MB	llvm function passes [35]
time: 0.019; rss: 1284MB	llvm module passes [24]
time: 0.048; rss: 1284MB	llvm function passes [19]
time: 0.021; rss: 1285MB	llvm function passes [16]
time: 0.002; rss: 1286MB	llvm module passes [16]
time: 0.022; rss: 1286MB	llvm module passes [19]
time: 0.065; rss: 1288MB	llvm module passes [5]
time: 0.073; rss: 1288MB	llvm function passes [38]
time: 0.347; rss: 1293MB	llvm function passes [43]
time: 0.158; rss: 1294MB	llvm function passes [39]
time: 0.147; rss: 1295MB	llvm module passes [12]
time: 0.038; rss: 1295MB	llvm module passes [38]
time: 0.432; rss: 1298MB	llvm function passes [11]
time: 0.022; rss: 1298MB	llvm module passes [39]
time: 0.349; rss: 1298MB	llvm function passes [42]
time: 0.464; rss: 1298MB	llvm function passes [4]
time: 0.171; rss: 1300MB	llvm function passes [21]
time: 0.030; rss: 1306MB	llvm module passes [21]
time: 0.444; rss: 1309MB	llvm function passes [40]
time: 0.165; rss: 1314MB	codegen passes [16]
time: 0.220; rss: 1316MB	llvm module passes [35]
time: 0.421; rss: 1319MB	llvm module passes [10]
time: 0.371; rss: 1319MB	llvm function passes [34]
time: 0.184; rss: 1321MB	llvm module passes [43]
time: 0.330; rss: 1331MB	llvm function passes [25]
time: 0.298; rss: 1333MB	codegen passes [28]
time: 0.368; rss: 1333MB	llvm function passes [36]
time: 0.387; rss: 1335MB	llvm module passes [48]
time: 0.105; rss: 1336MB	llvm module passes [34]
time: 0.385; rss: 1338MB	llvm function passes [20]
time: 0.491; rss: 1346MB	llvm function passes [46]
time: 0.331; rss: 1347MB	llvm module passes [11]
time: 0.330; rss: 1347MB	llvm module passes [42]
time: 0.393; rss: 1345MB	llvm module passes [4]
time: 0.145; rss: 1346MB	llvm module passes [20]
time: 0.297; rss: 1344MB	llvm module passes [36]
time: 0.239; rss: 1348MB	llvm module passes [46]
time: 0.723; rss: 1349MB	llvm function passes [37]
time: 1.041; rss: 1356MB	codegen passes [6]
time: 0.406; rss: 1350MB	llvm module passes [25]
time: 0.624; rss: 1359MB	llvm module passes [40]
time: 1.182; rss: 1387MB	codegen passes [1]
time: 0.806; rss: 1386MB	codegen passes [38]
time: 1.277; rss: 1379MB	codegen passes [0]
time: 1.224; rss: 1374MB	codegen passes [2]
time: 1.059; rss: 1385MB	codegen passes [15]
time: 0.721; rss: 1399MB	llvm module passes [37]
time: 1.866; rss: 1414MB	codegen passes [8]
time: 1.513; rss: 1436MB	codegen passes [39]
time: 1.560; rss: 1454MB	codegen passes [34]
time: 1.879; rss: 1447MB	codegen passes [3]
time: 1.955; rss: 1422MB	codegen passes [12]
time: 1.997; rss: 1420MB	codegen passes [24]
time: 2.163; rss: 1432MB	codegen passes [41]
time: 2.200; rss: 1428MB	codegen passes [21]
time: 2.328; rss: 1422MB	codegen passes [49]
time: 2.388; rss: 1420MB	codegen passes [44]
time: 2.237; rss: 1430MB	codegen passes [35]
time: 2.620; rss: 1421MB	codegen passes [19]
time: 2.721; rss: 1473MB	codegen passes [33]
time: 3.213; rss: 1590MB	codegen passes [5]
time: 3.355; rss: 1574MB	codegen passes [9]
time: 3.492; rss: 1562MB	codegen passes [45]
time: 3.738; rss: 1629MB	codegen passes [36]
time: 4.078; rss: 1649MB	codegen passes [48]
time: 3.819; rss: 1613MB	codegen passes [43]
time: 4.096; rss: 1644MB	codegen passes [42]
time: 4.246; rss: 1621MB	codegen passes [20]
time: 4.595; rss: 1591MB	codegen passes [7]
time: 3.912; rss: 1545MB	codegen passes [40]
time: 4.735; rss: 1544MB	codegen passes [25]
time: 4.229; rss: 1485MB	codegen passes [46]
time: 4.786; rss: 1474MB	codegen passes [4]
time: 5.022; rss: 1424MB	codegen passes [10]
time: 4.703; rss: 1376MB	codegen passes [37]
time: 5.429; rss: 1301MB	codegen passes [11]
time: 8.410; rss: 1300MB	LLVM passes
time: 0.000; rss: 1300MB	serialize work products
time: 1.058; rss: 267MB	linking
done
