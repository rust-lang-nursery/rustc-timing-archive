commit 9b2becaf6e20463253a80cbcb5ec2ecefb949d1e
Merge: f352550 02cbc0e
Author: bors <bors@rust-lang.org>
Date:   Tue Jun 7 06:31:32 2016 -0700

    Auto merge of #34128 - eddyb:mir-trans-fixes, r=luqmana
    
    [MIR] Fix MIR trans edge cases that showed up on crater.
    
    These fixes cover all of the [regressions found by crater](https://gist.github.com/nikomatsakis/88ce89ed06ef7f7f19bfd1e221d7f7ec) (for #34096).
    
    Two of them were `Pair` edge cases (ZSTs and constants) causing LLVM assertions, the other one was  causing stack overflows in debug scripts compiled in debug mode, due to the `fn_ret_cast` `alloca` ending up in a loop.
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling log v0.3.6
   Compiling winapi v0.2.7
   Compiling libc v0.2.11
   Compiling rustc-serialize v0.3.19
   Compiling traitobject v0.0.1
   Compiling unicase v0.1.0
   Compiling gcc v0.3.28
   Compiling matches v0.1.2
   Compiling bitflags v0.3.3
   Compiling typeable v0.1.2
   Compiling libc v0.1.12
   Compiling lazy_static v0.1.16
   Compiling pkg-config v0.3.8
   Compiling httparse v0.1.6
   Compiling winapi-build v0.1.1
   Compiling mime v0.0.11
   Compiling kernel32-sys v0.2.2
   Compiling rand v0.3.14
   Compiling num_cpus v0.2.12
   Compiling time v0.1.35
   Compiling openssl-sys v0.6.7
   Compiling openssl v0.6.7
   Compiling uuid v0.1.18
   Compiling url v0.2.38
   Compiling cookie v0.1.21
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.048; rss: 51MB	parsing
Lines of code:             9154
Pre-expansion node count:  44646
time: 0.007; rss: 52MB	configuration 1
time: 0.000; rss: 52MB	recursion limit
time: 0.000; rss: 52MB	crate injection
time: 0.025; rss: 87MB	macro loading
time: 0.000; rss: 87MB	plugin loading
time: 0.000; rss: 87MB	plugin registration
time: 0.254; rss: 96MB	expansion
time: 0.000; rss: 96MB	gated configuration checking
time: 0.014; rss: 96MB	maybe building test harness
time: 0.011; rss: 96MB	prelude injection
time: 0.000; rss: 96MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 96MB	complete gated feature checking
Post-expansion node count: 101566
time: 0.010; rss: 97MB	assigning node ids
time: 0.003; rss: 98MB	collecting defs
time: 0.012; rss: 109MB	external crate/lib resolution
time: 0.007; rss: 109MB	early lint checks
time: 0.001; rss: 109MB	AST validation
time: 0.025; rss: 113MB	name resolution
time: 0.023; rss: 119MB	lowering ast -> hir
time: 0.004; rss: 120MB	indexing hir
time: 0.001; rss: 120MB	attribute checking
time: 0.001; rss: 113MB	language item collection
time: 0.002; rss: 113MB	lifetime resolution
time: 0.000; rss: 113MB	looking for entry point
time: 0.000; rss: 113MB	looking for plugin registrar
time: 0.012; rss: 115MB	region resolution
time: 0.001; rss: 115MB	loop checking
time: 0.001; rss: 115MB	static item recursion checking
time: 0.000; rss: 115MB	load_dep_graph
time: 0.045; rss: 118MB	type collecting
time: 0.001; rss: 118MB	variance inference
time: 0.052; rss: 126MB	coherence checking
time: 0.116; rss: 127MB	wf checking
time: 0.040; rss: 127MB	item-types checking
time: 0.598; rss: 137MB	item-bodies checking
time: 0.000; rss: 137MB	drop-impl checking
time: 0.048; rss: 138MB	const checking
time: 0.009; rss: 138MB	privacy checking
time: 0.001; rss: 138MB	stability index
time: 0.007; rss: 138MB	intrinsic checking
time: 0.002; rss: 138MB	effect checking
time: 0.016; rss: 138MB	match checking
time: 0.004; rss: 138MB	liveness checking
time: 0.034; rss: 138MB	rvalue checking
time: 0.095; rss: 150MB	MIR dump
time: 0.048; rss: 151MB	MIR passes
time: 0.079; rss: 151MB	borrow checking
time: 0.003; rss: 151MB	reachability checking
time: 0.006; rss: 151MB	death checking
time: 0.006; rss: 151MB	stability checking
time: 0.000; rss: 151MB	unused lib feature checking
time: 0.055; rss: 151MB	lint checking
time: 0.000; rss: 151MB	resolving dependency formats
time: 0.102; rss: 153MB	Prepare MIR codegen passes
  time: 0.145; rss: 161MB	write metadata
  time: 0.200; rss: 164MB	translation item collection
  time: 0.010; rss: 165MB	codegen unit partitioning
time: 1.975; rss: 283MB	translation
time: 0.001; rss: 283MB	assert dep graph
time: 0.000; rss: 283MB	serialize dep graph
  time: 0.097; rss: 177MB	llvm function passes [0]
  time: 0.050; rss: 178MB	llvm module passes [0]
  time: 1.621; rss: 180MB	codegen passes [0]
  time: 0.001; rss: 131MB	codegen passes [0]
time: 1.973; rss: 131MB	LLVM passes
time: 0.178; rss: 129MB	linking
done
