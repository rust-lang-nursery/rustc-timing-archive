commit c0b8c438203ada8768f2f8ea7c750131744f97ef
Merge: 0894b06 605bc04
Author: bors <bors@rust-lang.org>
Date:   Sun Apr 3 08:58:59 2016 -0700

    Auto merge of #32210 - Aatch:mir-traversal, r=nikomatsakis
    
    rBreak Critical Edges and other MIR work
    
    This PR is built on top of #32080.
    
    This adds the basic depth-first traversals for MIR, preorder, postorder and reverse postorder. The MIR blocks are now translated using reverse postorder. There is also a transform for breaking critical edges, which includes the edges from `invoke`d calls (`Drop` and `Call`), to account for the fact that we can't add code after an `invoke`. It also stops generating the intermediate block (since the transform essentially does it if necessary already).
    
    The kinds of cases this deals with are difficult to produce, so the test is the one I managed to get. However, it seems to bootstrap with `-Z orbit`, which it didn't before my changes.
rustc: ./regex.0.1.30
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling regex v0.1.30 (file:///root/benchmarks/regex.0.1.30)
time: 0.060; rss: 51MB	parsing
Lines of code:             8558
Pre-expansion node count:  58217
time: 0.011; rss: 51MB	configuration 1
time: 0.000; rss: 51MB	recursion limit
time: 0.001; rss: 51MB	gated macro checking
time: 0.000; rss: 51MB	crate injection
time: 0.003; rss: 54MB	macro loading
time: 0.000; rss: 54MB	plugin loading
time: 0.000; rss: 54MB	plugin registration
time: 0.057; rss: 57MB	expansion
time: 0.001; rss: 57MB	complete gated feature checking 1
time: 0.013; rss: 57MB	configuration 2
time: 0.000; rss: 57MB	gated configuration checking
time: 0.006; rss: 57MB	maybe building test harness
time: 0.006; rss: 57MB	prelude injection
time: 0.001; rss: 57MB	checking that all macro invocations are gone
time: 0.000; rss: 57MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 57MB	complete gated feature checking 2
time: 0.001; rss: 57MB	const fn bodies and arguments
Post-expansion node count: 68485
time: 0.006; rss: 57MB	assigning node ids
time: 0.009; rss: 68MB	lowering ast -> hir
time: 0.002; rss: 70MB	indexing hir
time: 0.001; rss: 70MB	attribute checking
time: 0.007; rss: 70MB	early lint checks
time: 0.001; rss: 62MB	external crate/lib resolution
time: 0.001; rss: 62MB	language item collection
time: 0.009; rss: 73MB	resolution
time: 0.001; rss: 73MB	lifetime resolution
time: 0.000; rss: 73MB	looking for entry point
time: 0.000; rss: 73MB	looking for plugin registrar
time: 0.005; rss: 77MB	region resolution
time: 0.001; rss: 77MB	loop checking
time: 0.001; rss: 77MB	static item recursion checking
time: 0.008; rss: 87MB	type collecting
time: 0.000; rss: 87MB	variance inference
time: 0.068; rss: 98MB	coherence checking
time: 0.010; rss: 98MB	wf checking
time: 0.263; rss: 103MB	item-types checking
time: 0.199; rss: 117MB	item-bodies checking
time: 0.000; rss: 117MB	drop-impl checking
time: 0.024; rss: 117MB	const checking
time: 0.003; rss: 117MB	privacy checking
time: 0.001; rss: 117MB	stability index
time: 0.001; rss: 117MB	intrinsic checking
time: 0.001; rss: 117MB	effect checking
time: 0.003; rss: 117MB	match checking
time: 0.002; rss: 117MB	liveness checking
time: 0.007; rss: 117MB	rvalue checking
time: 0.015; rss: 119MB	MIR dump
time: 0.006; rss: 119MB	MIR passes
time: 0.019; rss: 119MB	borrow checking
time: 0.000; rss: 119MB	reachability checking
time: 0.003; rss: 119MB	death checking
time: 0.002; rss: 119MB	stability checking
time: 0.000; rss: 119MB	unused lib feature checking
time: 0.029; rss: 119MB	lint checking
time: 0.000; rss: 119MB	resolving dependency formats
time: 0.004; rss: 121MB	Prepare MIR codegen passes
  time: 0.057; rss: 131MB	translation item collection
  time: 0.130; rss: 186MB	write metadata
time: 0.625; rss: 186MB	translation
  time: 0.036; rss: 121MB	llvm function passes [0]
  time: 0.018; rss: 121MB	llvm module passes [0]
  time: 0.612; rss: 126MB	codegen passes [0]
  time: 0.001; rss: 106MB	codegen passes [0]
time: 0.739; rss: 104MB	LLVM passes
time: 0.065; rss: 103MB	linking
done
