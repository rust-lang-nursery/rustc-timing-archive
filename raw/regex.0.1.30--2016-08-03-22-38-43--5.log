commit 0a3180baab7c361ee85958c88d971190649c3b70
Merge: a0b4e67 63f0c4d
Author: bors <bors@rust-lang.org>
Date:   Wed Aug 3 13:24:53 2016 -0700

    Auto merge of #35261 - eddyb:llvm-autoupgrade, r=nikomatsakis
    
    Support removed LLVM intrinsics by invoking its AutoUpgrade mechanism.
    
    Turns out that LLVM sometimes renames platform intrinsics or replaces them with first-class instructions.
    For example, signed minimum became `select (icmp SLT, a, b), a, b` where `a` and `b` are vectors.
    
    This is blocking the Servo rustup ([relevant failure](http://build.servo.org/builders/windows-dev/builds/226/steps/compile/logs/stdio)), as they're using a few such intrinsics.
    The fix in this PR is to invoke LLVM's own `AutoUpgrade` mechanism to do the replacements.
rustc: ./regex.0.1.30
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling regex v0.1.30 (file:///root/benchmarks/regex.0.1.30)
time: 0.064; rss: 62MB	parsing
Lines of code:             8558
Pre-expansion node count:  58076
time: 0.010; rss: 62MB	configuration
time: 0.000; rss: 62MB	recursion limit
time: 0.000; rss: 62MB	crate injection
time: 0.000; rss: 62MB	plugin loading
time: 0.000; rss: 62MB	plugin registration
time: 0.037; rss: 97MB	expansion
time: 0.000; rss: 97MB	maybe building test harness
time: 0.006; rss: 97MB	assigning node ids
Post-expansion node count: 68148
time: 0.000; rss: 97MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 97MB	complete gated feature checking
time: 0.001; rss: 98MB	collecting defs
time: 0.001; rss: 98MB	external crate/lib resolution
time: 0.006; rss: 98MB	early lint checks
time: 0.001; rss: 98MB	AST validation
time: 0.007; rss: 99MB	name resolution
time: 0.009; rss: 109MB	lowering ast -> hir
time: 0.002; rss: 111MB	indexing hir
time: 0.001; rss: 111MB	attribute checking
time: 0.001; rss: 102MB	language item collection
time: 0.001; rss: 102MB	lifetime resolution
time: 0.000; rss: 102MB	looking for entry point
time: 0.000; rss: 102MB	looking for plugin registrar
time: 0.006; rss: 105MB	region resolution
time: 0.001; rss: 105MB	loop checking
time: 0.001; rss: 105MB	static item recursion checking
time: 0.000; rss: 105MB	load_dep_graph
time: 0.011; rss: 107MB	type collecting
time: 0.000; rss: 107MB	variance inference
time: 0.027; rss: 111MB	coherence checking
time: 0.014; rss: 112MB	wf checking
time: 0.329; rss: 120MB	item-types checking
time: 0.207; rss: 125MB	item-bodies checking
time: 0.000; rss: 125MB	drop-impl checking
time: 0.028; rss: 127MB	const checking
time: 0.004; rss: 127MB	privacy checking
time: 0.001; rss: 127MB	stability index
time: 0.002; rss: 127MB	intrinsic checking
time: 0.001; rss: 127MB	effect checking
time: 0.004; rss: 127MB	match checking
time: 0.002; rss: 127MB	liveness checking
time: 0.008; rss: 127MB	rvalue checking
time: 0.052; rss: 137MB	MIR dump
time: 0.022; rss: 137MB	MIR passes
time: 0.022; rss: 137MB	borrow checking
time: 0.000; rss: 137MB	reachability checking
time: 0.003; rss: 137MB	death checking
time: 0.002; rss: 137MB	stability checking
time: 0.000; rss: 137MB	unused lib feature checking
time: 0.030; rss: 137MB	lint checking
time: 0.000; rss: 137MB	resolving dependency formats
time: 0.018; rss: 140MB	Prepare MIR codegen passes
  time: 0.171; rss: 151MB	write metadata
  time: 0.058; rss: 153MB	translation item collection
  time: 0.008; rss: 153MB	codegen unit partitioning
  time: 0.016; rss: 199MB	internalize symbols
time: 0.717; rss: 199MB	translation
time: 0.000; rss: 199MB	assert dep graph
time: 0.000; rss: 199MB	serialize dep graph
  time: 0.033; rss: 129MB	llvm function passes [0]
  time: 0.017; rss: 130MB	llvm module passes [0]
  time: 0.605; rss: 133MB	codegen passes [0]
  time: 0.001; rss: 133MB	codegen passes [0]
time: 0.706; rss: 132MB	LLVM passes
time: 0.061; rss: 113MB	linking
done
