commit 4bc929013396eede8a22a3e7932fb3a63d2a11da
Merge: fb12219 84415ea
Author: bors <bors@rust-lang.org>
Date:   Sun Nov 20 13:50:47 2016 -0600

    Auto merge of #37862 - shepmaster:llvm-4.0-always-set-eh-personality, r=eddyb
    
    [LLVM 4.0] Set EH personality when resuming stack unwinding
    
    To resume stack unwinding, the LLVM `resume` instruction must be used.
    
    In order to use this instruction, the calling function must have an
    exception handling personality set.
    
    LLVM 4.0 adds a new IR validation check to ensure a personality is
    always set in these cases.
    
    This was introduced in [r277360](https://reviews.llvm.org/rL277360).
rustc: ./syntex-0.42.2-incr-clean
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
   Compiling syntex_syntax v0.42.0
time: 0.092; rss: 71MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 71MB	recursion limit
time: 0.000; rss: 71MB	crate injection
time: 0.000; rss: 71MB	plugin loading
time: 0.000; rss: 71MB	plugin registration
time: 0.236; rss: 146MB	expansion
time: 0.000; rss: 146MB	maybe building test harness
time: 0.006; rss: 146MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 146MB	checking for inline asm in case the target doesn't support it
time: 0.013; rss: 146MB	complete gated feature checking
time: 0.023; rss: 146MB	early lint checks
time: 0.007; rss: 146MB	AST validation
time: 0.076; rss: 161MB	name resolution
time: 0.044; rss: 186MB	lowering ast -> hir
time: 0.008; rss: 196MB	indexing hir
time: 0.006; rss: 196MB	attribute checking
time: 0.005; rss: 152MB	language item collection
time: 0.010; rss: 152MB	lifetime resolution
time: 0.000; rss: 152MB	looking for entry point
time: 0.000; rss: 152MB	looking for plugin registrar
time: 0.040; rss: 172MB	region resolution
time: 0.005; rss: 172MB	loop checking
time: 0.005; rss: 172MB	static item recursion checking
time: 0.328; rss: 173MB	compute_incremental_hashes_map
time: 0.000; rss: 173MB	load_dep_graph
time: 0.048; rss: 170MB	type collecting
time: 0.001; rss: 170MB	variance inference
time: 0.002; rss: 170MB	impl wf inference
time: 0.018; rss: 173MB	coherence checking
time: 0.087; rss: 176MB	wf checking
time: 0.178; rss: 182MB	item-types checking
time: 6.133; rss: 234MB	item-bodies checking
time: 0.000; rss: 234MB	drop-impl checking
time: 0.214; rss: 255MB	const checking
time: 0.048; rss: 255MB	privacy checking
time: 0.006; rss: 255MB	stability index
time: 0.017; rss: 255MB	intrinsic checking
time: 0.014; rss: 255MB	effect checking
time: 0.044; rss: 255MB	match checking
time: 0.049; rss: 255MB	liveness checking
time: 0.177; rss: 255MB	rvalue checking
time: 0.354; rss: 438MB	MIR dump
  time: 0.056; rss: 440MB	SimplifyCfg
  time: 0.071; rss: 440MB	QualifyAndPromoteConstants
  time: 0.104; rss: 440MB	TypeckMir
  time: 0.004; rss: 440MB	SimplifyBranches
  time: 0.030; rss: 440MB	SimplifyCfg
time: 0.265; rss: 440MB	MIR cleanup and validation
time: 0.540; rss: 440MB	borrow checking
time: 0.019; rss: 440MB	reachability checking
time: 0.039; rss: 440MB	death checking
time: 0.030; rss: 442MB	stability checking
time: 0.000; rss: 442MB	unused lib feature checking
time: 0.193; rss: 442MB	lint checking
time: 0.000; rss: 442MB	resolving dependency formats
  time: 0.003; rss: 442MB	NoLandingPads
  time: 0.026; rss: 442MB	SimplifyCfg
  time: 0.060; rss: 451MB	EraseRegions
  time: 0.010; rss: 451MB	AddCallGuards
  time: 0.268; rss: 466MB	ElaborateDrops
  time: 0.003; rss: 466MB	NoLandingPads
  time: 0.051; rss: 467MB	SimplifyCfg
  time: 0.028; rss: 467MB	InstCombine
  time: 0.012; rss: 467MB	Deaggregator
  time: 0.002; rss: 467MB	CopyPropagation
  time: 0.033; rss: 467MB	SimplifyLocals
  time: 0.009; rss: 467MB	AddCallGuards
  time: 0.002; rss: 467MB	PreTrans
time: 0.510; rss: 467MB	MIR optimisations
  time: 0.060; rss: 476MB	write metadata
  time: 0.394; rss: 489MB	translation item collection
  time: 0.065; rss: 498MB	codegen unit partitioning
  time: 0.047; rss: 741MB	internalize symbols
time: 4.430; rss: 741MB	translation
time: 0.000; rss: 741MB	assert dep graph
time: 0.000; rss: 741MB	serialize dep graph
incremental: re-using 0 out of 1 modules
  time: 0.529; rss: 418MB	llvm function passes [0]
  time: 0.247; rss: 428MB	llvm module passes [0]
  time: 10.343; rss: 421MB	codegen passes [0]
  time: 0.000; rss: 421MB	codegen passes [0]
time: 11.857; rss: 421MB	LLVM passes
time: 0.000; rss: 421MB	serialize work products
time: 0.342; rss: 105MB	linking
done
