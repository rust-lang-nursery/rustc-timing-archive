commit 2dbf600d159a5c65b53419f1669834d1f81496a7
Merge: 86995dc 92aa7e4
Author: bors <bors@rust-lang.org>
Date:   Sun Sep 4 23:50:04 2016 -0700

    Auto merge of #36242 - semarie:local-rebuild, r=alexcrichton
    
    Use libraries from local-rust-root directory in configure when using …
    
    …--enable-local-rebuild
    
    When using --enable-local-rebuild configure options, the configure
    script will test rustc version. But when running it, it will not use the
    libraries in the local-rust-root directory.
    
    So use `LD_LIBRARY_PATH` environment variable to correct it.
    
    Under OpenBSD, we use `--enable-local-rebuild` for rebuilding rustc-1.11.0 using rustc-1.11.0. But as it is in use in -current (the developpment branch of OpenBSD), system libraries could easily have ABI/API changes. The (unofficial) bootstrap (rustc-1.11.0 used for building rustc-1.11.0) include several system libraries to permit it to run. The build system use libraries in stage0/lib directory. But the configure script doesn't.
    
    Due to my special use of `--enable-local-rebuild`, I dunno if this PR is suitable for inclusion. But it corrects a difference between build and configure use of the binary.
    
    r? @alexcrichton
rustc: ./rust-encoding-0.3.0
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling encoding_index_tests v0.1.5 (file:///root/benchmarks/rust-encoding-0.3.0)
   Compiling encoding-types v0.2.0 (file:///root/benchmarks/rust-encoding-0.3.0)
   Compiling encoding-index-japanese v1.20141219.6 (file:///root/benchmarks/rust-encoding-0.3.0)
   Compiling encoding-index-singlebyte v1.20160120.0 (file:///root/benchmarks/rust-encoding-0.3.0)
   Compiling encoding-index-simpchinese v1.20160120.0 (file:///root/benchmarks/rust-encoding-0.3.0)
   Compiling encoding-index-korean v1.20141219.6 (file:///root/benchmarks/rust-encoding-0.3.0)
   Compiling encoding-index-tradchinese v1.20141219.6 (file:///root/benchmarks/rust-encoding-0.3.0)
   Compiling encoding v0.3.0-dev (file:///root/benchmarks/rust-encoding-0.3.0)
time: 0.020; rss: 48MB	parsing
Lines of code:             6066
Pre-expansion node count:  28489
time: 0.002; rss: 49MB	configuration
time: 0.000; rss: 49MB	recursion limit
time: 0.000; rss: 49MB	crate injection
time: 0.000; rss: 49MB	plugin loading
time: 0.000; rss: 49MB	plugin registration
time: 0.038; rss: 73MB	expansion
time: 0.000; rss: 73MB	maybe building test harness
time: 0.000; rss: 73MB	maybe creating a macro crate
time: 0.002; rss: 73MB	assigning node ids
Post-expansion node count: 39145
time: 0.000; rss: 73MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 73MB	complete gated feature checking
time: 0.001; rss: 73MB	collecting defs
time: 0.001; rss: 74MB	external crate/lib resolution
time: 0.001; rss: 74MB	early lint checks
time: 0.000; rss: 74MB	AST validation
time: 0.004; rss: 77MB	name resolution
time: 0.004; rss: 81MB	lowering ast -> hir
time: 0.001; rss: 81MB	indexing hir
time: 0.000; rss: 81MB	attribute checking
time: 0.000; rss: 80MB	language item collection
time: 0.001; rss: 80MB	lifetime resolution
time: 0.000; rss: 80MB	looking for entry point
time: 0.000; rss: 80MB	looking for plugin registrar
time: 0.002; rss: 81MB	region resolution
time: 0.000; rss: 81MB	loop checking
time: 0.000; rss: 81MB	static item recursion checking
time: 0.005; rss: 82MB	compute_incremental_hashes_map
time: 0.000; rss: 82MB	load_dep_graph
time: 0.010; rss: 83MB	type collecting
time: 0.000; rss: 83MB	variance inference
time: 0.016; rss: 84MB	coherence checking
time: 0.014; rss: 87MB	wf checking
time: 0.011; rss: 87MB	item-types checking
time: 0.150; rss: 92MB	item-bodies checking
time: 0.000; rss: 92MB	drop-impl checking
time: 0.011; rss: 92MB	const checking
time: 0.001; rss: 92MB	privacy checking
time: 0.000; rss: 92MB	stability index
time: 0.002; rss: 92MB	intrinsic checking
time: 0.000; rss: 92MB	effect checking
time: 0.007; rss: 92MB	match checking
time: 0.001; rss: 92MB	liveness checking
time: 0.007; rss: 92MB	rvalue checking
time: 0.020; rss: 103MB	MIR dump
time: 0.013; rss: 103MB	MIR passes
time: 0.021; rss: 103MB	borrow checking
time: 0.000; rss: 103MB	reachability checking
time: 0.001; rss: 103MB	death checking
time: 0.002; rss: 103MB	stability checking
time: 0.000; rss: 103MB	unused lib feature checking
time: 0.016; rss: 103MB	lint checking
time: 0.000; rss: 103MB	resolving dependency formats
time: 0.027; rss: 104MB	Prepare MIR codegen passes
  time: 0.021; rss: 106MB	write metadata
  time: 0.248; rss: 231MB	translation item collection
  time: 0.002; rss: 231MB	codegen unit partitioning
  time: 0.005; rss: 255MB	internalize symbols
time: 0.586; rss: 247MB	translation
time: 0.000; rss: 247MB	assert dep graph
time: 0.000; rss: 247MB	serialize dep graph
  time: 0.026; rss: 122MB	llvm function passes [0]
  time: 0.058; rss: 127MB	llvm module passes [0]
  time: 0.642; rss: 133MB	codegen passes [0]
  time: 0.001; rss: 133MB	codegen passes [0]
time: 0.790; rss: 133MB	LLVM passes
time: 0.000; rss: 133MB	serialize work products
time: 0.082; rss: 102MB	linking
done
