commit 8e05e7ee3c19a5594b79d67c8390cef78970be7c
Merge: 030bc49 48b3dd1
Author: bors <bors@rust-lang.org>
Date:   Sat Oct 15 06:08:55 2016 -0700

    Auto merge of #37100 - dikaiosune:master, r=eddyb
    
    Change Substs to type alias for Slice<Kind> for interning
    
    This changes the definition of `librustc::ty::subst::Substs` to be a type alias to `Slice<Kind>`. `Substs` was already interned, but can now make use of the efficient `PartialEq` and `Hash` impls on `librustc::ty::Slice`.
    
    I'm working on collecting some timing data for this, will update when it's done.
    
    I chose to leave the impls on `Substs<'tcx>` even though it's now just a type alias to `Slice<Kind<'tcx>>` because it has the smallest footprint on other portions of the compiler which depend on its API. It turns out to be a pretty huge diff if you change where Substs's methods live :smile:. That said, I'm not necessarily sure it's the *best* implementation but it's probably the easiest/smallest to review.
    
    Many thanks to @eddyb for both suggesting this as a project for learning more about the compiler, and the tireless ~~handholding~~ mentorship he provided.
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.026; rss: 50MB	parsing
Lines of code:             9003
Pre-expansion node count:  44129
time: 0.000; rss: 50MB	recursion limit
time: 0.000; rss: 50MB	crate injection
time: 0.000; rss: 50MB	plugin loading
time: 0.000; rss: 50MB	plugin registration
time: 0.099; rss: 87MB	expansion
time: 0.000; rss: 87MB	maybe building test harness
time: 0.001; rss: 87MB	maybe creating a macro crate
Post-expansion node count: 101371
time: 0.000; rss: 87MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 87MB	complete gated feature checking
time: 0.003; rss: 87MB	early lint checks
time: 0.001; rss: 87MB	AST validation
time: 0.015; rss: 91MB	name resolution
time: 0.008; rss: 95MB	lowering ast -> hir
time: 0.002; rss: 97MB	indexing hir
time: 0.001; rss: 97MB	attribute checking
time: 0.001; rss: 91MB	language item collection
time: 0.002; rss: 91MB	lifetime resolution
time: 0.000; rss: 91MB	looking for entry point
time: 0.000; rss: 91MB	looking for plugin registrar
time: 0.006; rss: 95MB	region resolution
time: 0.001; rss: 95MB	loop checking
time: 0.001; rss: 95MB	static item recursion checking
time: 0.038; rss: 95MB	compute_incremental_hashes_map
time: 0.000; rss: 95MB	load_dep_graph
time: 0.016; rss: 96MB	type collecting
time: 0.000; rss: 96MB	variance inference
time: 0.032; rss: 101MB	coherence checking
time: 0.047; rss: 102MB	wf checking
time: 0.021; rss: 102MB	item-types checking
time: 0.350; rss: 114MB	item-bodies checking
time: 0.000; rss: 114MB	drop-impl checking
time: 0.032; rss: 113MB	const checking
time: 0.006; rss: 113MB	privacy checking
time: 0.001; rss: 113MB	stability index
time: 0.003; rss: 113MB	intrinsic checking
time: 0.002; rss: 113MB	effect checking
time: 0.009; rss: 113MB	match checking
time: 0.005; rss: 113MB	liveness checking
time: 0.023; rss: 113MB	rvalue checking
time: 0.049; rss: 132MB	MIR dump
  time: 0.006; rss: 132MB	SimplifyCfg
  time: 0.011; rss: 132MB	QualifyAndPromoteConstants
  time: 0.013; rss: 132MB	TypeckMir
  time: 0.001; rss: 132MB	SimplifyBranches
  time: 0.003; rss: 132MB	SimplifyCfg
time: 0.035; rss: 132MB	MIR passes
time: 0.059; rss: 132MB	borrow checking
time: 0.003; rss: 132MB	reachability checking
time: 0.005; rss: 132MB	death checking
time: 0.005; rss: 132MB	stability checking
time: 0.000; rss: 132MB	unused lib feature checking
time: 0.040; rss: 134MB	lint checking
time: 0.000; rss: 134MB	resolving dependency formats
  time: 0.001; rss: 134MB	NoLandingPads
  time: 0.003; rss: 134MB	SimplifyCfg
  time: 0.008; rss: 134MB	EraseRegions
  time: 0.001; rss: 134MB	AddCallGuards
  time: 0.049; rss: 136MB	ElaborateDrops
  time: 0.001; rss: 136MB	NoLandingPads
  time: 0.005; rss: 136MB	SimplifyCfg
  time: 0.003; rss: 136MB	InstCombine
  time: 0.003; rss: 136MB	Deaggregator
  time: 0.000; rss: 136MB	CopyPropagation
  time: 0.001; rss: 136MB	AddCallGuards
  time: 0.000; rss: 136MB	PreTrans
time: 0.075; rss: 136MB	Prepare MIR codegen passes
  time: 0.043; rss: 140MB	write metadata
  time: 0.132; rss: 146MB	translation item collection
  time: 0.016; rss: 150MB	codegen unit partitioning
  time: 0.015; rss: 205MB	internalize symbols
time: 1.083; rss: 193MB	translation
time: 0.000; rss: 193MB	assert dep graph
time: 0.000; rss: 193MB	serialize dep graph
  time: 0.085; rss: 148MB	llvm function passes [0]
  time: 0.041; rss: 149MB	llvm module passes [0]
  time: 1.595; rss: 153MB	codegen passes [0]
  time: 0.001; rss: 152MB	codegen passes [0]
time: 1.858; rss: 152MB	LLVM passes
time: 0.000; rss: 152MB	serialize work products
time: 0.139; rss: 94MB	linking
done
