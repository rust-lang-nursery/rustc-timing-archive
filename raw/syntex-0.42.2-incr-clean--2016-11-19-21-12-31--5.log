commit 0bd2ce62b27e2b9a7dfe92fc23d9098854008089
Merge: bfa709a 30daedf
Author: bors <bors@rust-lang.org>
Date:   Sat Nov 19 16:39:25 2016 -0600

    Auto merge of #37831 - rkruppe:llvm-attr-fwdcompat, r=eddyb
    
    [LLVM 4.0] Use llvm::Attribute APIs instead of "raw value" APIs
    
    The latter will be removed in LLVM 4.0 (see https://github.com/llvm-mirror/llvm/commit/4a6fc8bacf11d8066da72cf8481467167877ed16).
    
    The librustc_llvm API remains mostly unchanged, except that llvm::Attribute is no longer a bitflag but represents only a *single* attribute.
    The ability to store many attributes in a small number of bits and modify them without interacting with LLVM is only used in rustc_trans::abi and closely related modules, and only attributes for function arguments are considered there.
    Thus rustc_trans::abi now has its own bit-packed representation of argument attributes, which are translated to rustc_llvm::Attribute when applying the attributes.
    
    cc #37609
rustc: ./syntex-0.42.2-incr-clean
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
   Compiling syntex_syntax v0.42.0
time: 0.132; rss: 65MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 65MB	recursion limit
time: 0.000; rss: 65MB	crate injection
time: 0.000; rss: 65MB	plugin loading
time: 0.000; rss: 65MB	plugin registration
time: 0.321; rss: 137MB	expansion
time: 0.000; rss: 137MB	maybe building test harness
time: 0.006; rss: 137MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 137MB	checking for inline asm in case the target doesn't support it
time: 0.014; rss: 137MB	complete gated feature checking
time: 0.023; rss: 137MB	early lint checks
time: 0.007; rss: 137MB	AST validation
time: 0.102; rss: 154MB	name resolution
time: 0.088; rss: 178MB	lowering ast -> hir
time: 0.020; rss: 186MB	indexing hir
time: 0.006; rss: 186MB	attribute checking
time: 0.005; rss: 143MB	language item collection
time: 0.011; rss: 143MB	lifetime resolution
time: 0.000; rss: 143MB	looking for entry point
time: 0.000; rss: 143MB	looking for plugin registrar
time: 0.077; rss: 163MB	region resolution
time: 0.005; rss: 163MB	loop checking
time: 0.005; rss: 163MB	static item recursion checking
time: 0.334; rss: 164MB	compute_incremental_hashes_map
time: 0.000; rss: 164MB	load_dep_graph
time: 0.050; rss: 163MB	type collecting
time: 0.001; rss: 163MB	variance inference
time: 0.002; rss: 163MB	impl wf inference
time: 0.019; rss: 166MB	coherence checking
time: 0.091; rss: 168MB	wf checking
time: 0.183; rss: 173MB	item-types checking
time: 6.474; rss: 218MB	item-bodies checking
time: 0.000; rss: 218MB	drop-impl checking
time: 0.285; rss: 237MB	const checking
time: 0.051; rss: 237MB	privacy checking
time: 0.006; rss: 237MB	stability index
time: 0.018; rss: 237MB	intrinsic checking
time: 0.015; rss: 237MB	effect checking
time: 0.047; rss: 237MB	match checking
time: 0.069; rss: 241MB	liveness checking
time: 0.191; rss: 241MB	rvalue checking
time: 0.590; rss: 407MB	MIR dump
  time: 0.060; rss: 413MB	SimplifyCfg
  time: 0.076; rss: 414MB	QualifyAndPromoteConstants
  time: 0.108; rss: 414MB	TypeckMir
  time: 0.004; rss: 414MB	SimplifyBranches
  time: 0.031; rss: 414MB	SimplifyCfg
time: 0.280; rss: 414MB	MIR cleanup and validation
time: 0.579; rss: 417MB	borrow checking
time: 0.020; rss: 417MB	reachability checking
time: 0.041; rss: 417MB	death checking
time: 0.036; rss: 420MB	stability checking
time: 0.000; rss: 420MB	unused lib feature checking
time: 0.208; rss: 420MB	lint checking
time: 0.000; rss: 420MB	resolving dependency formats
  time: 0.003; rss: 420MB	NoLandingPads
  time: 0.027; rss: 420MB	SimplifyCfg
  time: 0.078; rss: 426MB	EraseRegions
  time: 0.012; rss: 426MB	AddCallGuards
  time: 0.309; rss: 446MB	ElaborateDrops
  time: 0.003; rss: 446MB	NoLandingPads
  time: 0.054; rss: 447MB	SimplifyCfg
  time: 0.030; rss: 446MB	InstCombine
  time: 0.013; rss: 446MB	Deaggregator
  time: 0.002; rss: 446MB	CopyPropagation
  time: 0.036; rss: 447MB	SimplifyLocals
  time: 0.010; rss: 447MB	AddCallGuards
  time: 0.003; rss: 447MB	PreTrans
time: 0.579; rss: 447MB	MIR optimisations
  time: 0.082; rss: 454MB	write metadata
  time: 0.421; rss: 463MB	translation item collection
  time: 0.070; rss: 472MB	codegen unit partitioning
  time: 0.048; rss: 719MB	internalize symbols
time: 5.067; rss: 719MB	translation
time: 0.000; rss: 719MB	assert dep graph
time: 0.000; rss: 719MB	serialize dep graph
incremental: re-using 0 out of 1 modules
  time: 0.532; rss: 410MB	llvm function passes [0]
  time: 0.257; rss: 419MB	llvm module passes [0]
  time: 10.479; rss: 419MB	codegen passes [0]
  time: 0.000; rss: 419MB	codegen passes [0]
time: 12.143; rss: 419MB	LLVM passes
time: 0.000; rss: 419MB	serialize work products
time: 0.346; rss: 100MB	linking
done
