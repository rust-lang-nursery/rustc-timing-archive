commit ead9212c3304fe0ebb77a483c0b52b174e8e9526
Merge: a3bc191 80a7a3c
Author: bors <bors@rust-lang.org>
Date:   Mon Oct 10 17:18:01 2016 -0700

    Auto merge of #36707 - achanda:ip_type, r=alexcrichton
    
    Add two functions to check type of given address
    
    The is_v4 function returns true if the given IP is v4. The is_v6
    function returns true if the IP is v6.
rustc: ./syntex-0.42.2-incr-clean
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax -- -Ztime-passes -Zinput-stats -Z incremental-info
   Compiling winapi-build v0.1.1
   Compiling log v0.3.6
   Compiling bitflags v0.5.0
   Compiling rustc-serialize v0.3.19
   Compiling unicode-xid v0.0.3
   Compiling winapi v0.2.8
   Compiling libc v0.2.15
   Compiling kernel32-sys v0.2.2
   Compiling term v0.4.4
   Compiling syntex_pos v0.42.0
   Compiling syntex_errors v0.42.0
   Compiling syntex_syntax v0.42.0
time: 0.108; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  224033
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.271; rss: 145MB	expansion
time: 0.000; rss: 145MB	maybe building test harness
time: 0.006; rss: 145MB	maybe creating a macro crate
Post-expansion node count: 641571
time: 0.000; rss: 145MB	checking for inline asm in case the target doesn't support it
time: 0.013; rss: 145MB	complete gated feature checking
time: 0.024; rss: 145MB	early lint checks
time: 0.007; rss: 145MB	AST validation
time: 0.084; rss: 160MB	name resolution
time: 0.050; rss: 203MB	lowering ast -> hir
time: 0.009; rss: 211MB	indexing hir
time: 0.006; rss: 211MB	attribute checking
time: 0.005; rss: 162MB	language item collection
time: 0.012; rss: 162MB	lifetime resolution
time: 0.000; rss: 162MB	looking for entry point
time: 0.000; rss: 162MB	looking for plugin registrar
time: 0.045; rss: 173MB	region resolution
time: 0.006; rss: 173MB	loop checking
time: 0.006; rss: 173MB	static item recursion checking
time: 0.265; rss: 176MB	compute_incremental_hashes_map
time: 0.000; rss: 176MB	load_dep_graph
time: 0.044; rss: 174MB	type collecting
time: 0.001; rss: 174MB	variance inference
time: 0.040; rss: 178MB	coherence checking
time: 0.098; rss: 180MB	wf checking
time: 0.193; rss: 184MB	item-types checking
time: 3.963; rss: 240MB	item-bodies checking
time: 0.000; rss: 240MB	drop-impl checking
time: 0.316; rss: 241MB	const checking
time: 0.054; rss: 241MB	privacy checking
time: 0.007; rss: 241MB	stability index
time: 0.021; rss: 241MB	intrinsic checking
time: 0.018; rss: 241MB	effect checking
time: 0.057; rss: 241MB	match checking
time: 0.054; rss: 236MB	liveness checking
time: 0.289; rss: 236MB	rvalue checking
time: 0.418; rss: 426MB	MIR dump
  time: 0.057; rss: 430MB	SimplifyCfg
  time: 0.081; rss: 430MB	QualifyAndPromoteConstants
  time: 0.109; rss: 430MB	TypeckMir
  time: 0.004; rss: 430MB	SimplifyBranches
  time: 0.031; rss: 430MB	SimplifyCfg
time: 0.283; rss: 430MB	MIR passes
time: 0.687; rss: 430MB	borrow checking
time: 0.022; rss: 430MB	reachability checking
time: 0.044; rss: 430MB	death checking
time: 0.041; rss: 430MB	stability checking
time: 0.000; rss: 430MB	unused lib feature checking
time: 0.217; rss: 430MB	lint checking
time: 0.000; rss: 430MB	resolving dependency formats
  time: 0.003; rss: 430MB	NoLandingPads
  time: 0.027; rss: 430MB	SimplifyCfg
  time: 0.072; rss: 443MB	EraseRegions
  time: 0.011; rss: 443MB	AddCallGuards
  time: 1.058; rss: 457MB	ElaborateDrops
  time: 0.003; rss: 457MB	NoLandingPads
  time: 0.052; rss: 457MB	SimplifyCfg
  time: 0.030; rss: 457MB	InstCombine
  time: 0.012; rss: 457MB	Deaggregator
  time: 0.003; rss: 457MB	CopyPropagation
  time: 0.009; rss: 457MB	AddCallGuards
  time: 0.003; rss: 457MB	PreTrans
time: 1.283; rss: 457MB	Prepare MIR codegen passes
  time: 0.263; rss: 465MB	write metadata
  time: 0.463; rss: 475MB	translation item collection
  time: 0.066; rss: 482MB	codegen unit partitioning
  time: 0.057; rss: 724MB	internalize symbols
time: 5.096; rss: 603MB	translation
time: 0.000; rss: 603MB	assert dep graph
time: 0.000; rss: 603MB	serialize dep graph
incremental: re-using 0 out of 1 modules
  time: 0.516; rss: 409MB	llvm function passes [0]
  time: 0.242; rss: 418MB	llvm module passes [0]
  time: 10.029; rss: 419MB	codegen passes [0]
  time: 0.001; rss: 421MB	codegen passes [0]
time: 11.523; rss: 421MB	LLVM passes
time: 0.000; rss: 421MB	serialize work products
time: 0.659; rss: 107MB	linking
done
