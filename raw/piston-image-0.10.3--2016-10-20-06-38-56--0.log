commit eb38d426c41aa8487e8cb8a9dafbfcf3528201f9
Merge: dfd98eb cde42cd
Author: bors <bors@rust-lang.org>
Date:   Wed Oct 19 22:05:13 2016 -0700

    Auto merge of #36973 - nnethercote:dep_graph, r=nikomatsakis
    
    Don't enqueue onto a disabled dep_graph.
    
    This commit guards all calls to `DepGraphThreadData::enqueue` with a
    check to make sure it is enabled. This avoids some useless allocation
    and vector manipulations when it is disabled (i.e. when incremental
    compilation is off) which improves speed by 1--2% on most of the
    rustc-benchmarks.
    
    This commit has an observable functional change: when the dep_graph is
    disabled its `shadow_graph` will no longer receive messages. This should
    be ok because these message are only used when debug assertions are
    enabled.
    
    r? @nikomatsakis
rustc: ./piston-image-0.10.3
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling scoped_threadpool v0.1.7
   Compiling lzw v0.10.0
   Compiling gcc v0.3.35
   Compiling color_quant v1.0.0
   Compiling libc v0.2.16
   Compiling num-traits v0.1.35
   Compiling byteorder v0.5.3
   Compiling glob v0.2.11
   Compiling inflate v0.1.1
   Compiling bitflags v0.7.0
   Compiling rustc-serialize v0.3.19
   Compiling gif v0.9.0
   Compiling num_cpus v0.2.13
   Compiling rand v0.3.14
   Compiling num-integer v0.1.32
   Compiling num-iter v0.1.32
   Compiling miniz-sys v0.1.7
   Compiling num v0.1.35
   Compiling enum_primitive v0.1.0
   Compiling flate2 v0.2.14
   Compiling deque v0.3.1
   Compiling rayon v0.4.2
   Compiling jpeg-decoder v0.1.6
   Compiling png v0.5.2
   Compiling num-bigint v0.1.35
   Compiling num-rational v0.1.35
   Compiling image v0.10.3 (file:///root/benchmarks/piston-image-0.10.3)
time: 0.044; rss: 56MB	parsing
Lines of code:             12000
Pre-expansion node count:  90272
time: 0.000; rss: 56MB	recursion limit
time: 0.000; rss: 56MB	crate injection
time: 0.000; rss: 56MB	plugin loading
time: 0.000; rss: 56MB	plugin registration
time: 0.073; rss: 94MB	expansion
time: 0.000; rss: 94MB	maybe building test harness
time: 0.001; rss: 94MB	maybe creating a macro crate
Post-expansion node count: 148999
time: 0.000; rss: 94MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 94MB	complete gated feature checking
time: 0.005; rss: 94MB	early lint checks
time: 0.001; rss: 94MB	AST validation
time: 0.021; rss: 99MB	name resolution
time: 0.013; rss: 109MB	lowering ast -> hir
time: 0.003; rss: 113MB	indexing hir
time: 0.002; rss: 113MB	attribute checking
time: 0.002; rss: 102MB	language item collection
time: 0.003; rss: 102MB	lifetime resolution
time: 0.000; rss: 102MB	looking for entry point
time: 0.000; rss: 102MB	looking for plugin registrar
time: 0.011; rss: 108MB	region resolution
time: 0.002; rss: 108MB	loop checking
time: 0.001; rss: 108MB	static item recursion checking
time: 0.077; rss: 108MB	compute_incremental_hashes_map
time: 0.000; rss: 108MB	load_dep_graph
time: 0.016; rss: 110MB	type collecting
time: 0.000; rss: 110MB	variance inference
time: 0.026; rss: 113MB	coherence checking
time: 0.079; rss: 114MB	wf checking
time: 0.137; rss: 121MB	item-types checking
time: 0.831; rss: 134MB	item-bodies checking
time: 0.000; rss: 134MB	drop-impl checking
time: 0.054; rss: 134MB	const checking
time: 0.011; rss: 134MB	privacy checking
time: 0.002; rss: 134MB	stability index
time: 0.007; rss: 134MB	intrinsic checking
time: 0.003; rss: 134MB	effect checking
time: 0.016; rss: 134MB	match checking
time: 0.011; rss: 134MB	liveness checking
time: 0.044; rss: 134MB	rvalue checking
time: 0.094; rss: 179MB	MIR dump
  time: 0.011; rss: 179MB	SimplifyCfg
  time: 0.021; rss: 179MB	QualifyAndPromoteConstants
  time: 0.023; rss: 179MB	TypeckMir
  time: 0.001; rss: 179MB	SimplifyBranches
  time: 0.005; rss: 179MB	SimplifyCfg
time: 0.061; rss: 179MB	MIR passes
time: 0.117; rss: 179MB	borrow checking
time: 0.004; rss: 179MB	reachability checking
time: 0.008; rss: 179MB	death checking
time: 0.010; rss: 179MB	stability checking
time: 0.000; rss: 179MB	unused lib feature checking
time: 0.096; rss: 179MB	lint checking
time: 0.000; rss: 179MB	resolving dependency formats
  time: 0.000; rss: 179MB	NoLandingPads
  time: 0.005; rss: 179MB	SimplifyCfg
  time: 0.012; rss: 181MB	EraseRegions
  time: 0.002; rss: 181MB	AddCallGuards
  time: 0.044; rss: 183MB	ElaborateDrops
  time: 0.001; rss: 183MB	NoLandingPads
  time: 0.009; rss: 183MB	SimplifyCfg
  time: 0.006; rss: 183MB	InstCombine
  time: 0.002; rss: 183MB	Deaggregator
  time: 0.000; rss: 183MB	CopyPropagation
  time: 0.001; rss: 183MB	AddCallGuards
  time: 0.000; rss: 183MB	PreTrans
time: 0.083; rss: 183MB	Prepare MIR codegen passes
  time: 0.015; rss: 185MB	write metadata
  time: 0.402; rss: 200MB	translation item collection
  time: 0.026; rss: 202MB	codegen unit partitioning
  time: 0.023; rss: 322MB	internalize symbols
time: 2.641; rss: 296MB	translation
time: 0.000; rss: 296MB	assert dep graph
time: 0.000; rss: 296MB	serialize dep graph
  time: 0.201; rss: 224MB	llvm function passes [0]
  time: 0.079; rss: 227MB	llvm module passes [0]
  time: 4.066; rss: 226MB	codegen passes [0]
  time: 0.000; rss: 226MB	codegen passes [0]
time: 4.643; rss: 226MB	LLVM passes
time: 0.000; rss: 226MB	serialize work products
time: 0.258; rss: 99MB	linking
done
