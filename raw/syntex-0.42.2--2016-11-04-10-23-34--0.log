commit d2bc30b03fa4bf5425d080710f681f36f58f1706
Merge: 49c36bf 99234bb
Author: bors <bors@rust-lang.org>
Date:   Fri Nov 4 03:38:18 2016 -0700

    Auto merge of #37037 - Mark-Simulacrum:stack-error, r=alexcrichton
    
    Add conversions from `io:ErrorKind` to `io::Error`
    
    Filing to help with discussion around the possibility of doing this.
    
    Current changes are clearly backwards incompatible, but I think adding a new function (with a bikeshed on naming) like `Error::new_str` should be possible (or some other way of specializing the string error message case) to fix #36658.
rustc: ./syntex-0.42.2
cargo rustc -p syntex_syntax -- -Ztime-passes -Zinput-stats
   Compiling log v0.3.6
   Compiling rustc-serialize v0.3.19
   Compiling winapi-build v0.1.1
   Compiling unicode-xid v0.0.3
   Compiling winapi v0.2.8
   Compiling libc v0.2.15
   Compiling bitflags v0.5.0
   Compiling kernel32-sys v0.2.2
   Compiling term v0.4.4
   Compiling syntex_pos v0.42.0
   Compiling syntex_errors v0.42.0
   Compiling syntex_syntax v0.42.0
time: 0.110; rss: 76MB	parsing
Lines of code:             33687
Pre-expansion node count:  224033
time: 0.000; rss: 76MB	recursion limit
time: 0.000; rss: 76MB	crate injection
time: 0.000; rss: 76MB	plugin loading
time: 0.000; rss: 76MB	plugin registration
time: 0.256; rss: 146MB	expansion
time: 0.000; rss: 146MB	maybe building test harness
time: 0.006; rss: 146MB	maybe creating a macro crate
Post-expansion node count: 641571
time: 0.000; rss: 146MB	checking for inline asm in case the target doesn't support it
time: 0.013; rss: 146MB	complete gated feature checking
time: 0.024; rss: 146MB	early lint checks
time: 0.007; rss: 146MB	AST validation
time: 0.085; rss: 161MB	name resolution
time: 0.045; rss: 190MB	lowering ast -> hir
time: 0.008; rss: 201MB	indexing hir
time: 0.006; rss: 201MB	attribute checking
time: 0.004; rss: 150MB	language item collection
time: 0.010; rss: 150MB	lifetime resolution
time: 0.000; rss: 150MB	looking for entry point
time: 0.000; rss: 150MB	looking for plugin registrar
time: 0.043; rss: 162MB	region resolution
time: 0.005; rss: 162MB	loop checking
time: 0.004; rss: 162MB	static item recursion checking
time: 0.529; rss: 163MB	compute_incremental_hashes_map
time: 0.000; rss: 163MB	load_dep_graph
time: 0.042; rss: 168MB	type collecting
time: 0.001; rss: 168MB	variance inference
time: 0.034; rss: 172MB	coherence checking
time: 0.092; rss: 174MB	wf checking
time: 0.178; rss: 180MB	item-types checking
time: 3.611; rss: 230MB	item-bodies checking
time: 0.000; rss: 230MB	drop-impl checking
time: 0.249; rss: 235MB	const checking
time: 0.048; rss: 235MB	privacy checking
time: 0.005; rss: 235MB	stability index
time: 0.020; rss: 235MB	intrinsic checking
time: 0.017; rss: 235MB	effect checking
time: 0.049; rss: 235MB	match checking
time: 0.051; rss: 227MB	liveness checking
time: 0.204; rss: 227MB	rvalue checking
time: 0.407; rss: 415MB	MIR dump
  time: 0.057; rss: 419MB	SimplifyCfg
  time: 0.076; rss: 419MB	QualifyAndPromoteConstants
  time: 0.105; rss: 419MB	TypeckMir
  time: 0.004; rss: 419MB	SimplifyBranches
  time: 0.031; rss: 419MB	SimplifyCfg
time: 0.273; rss: 419MB	MIR cleanup and validation
time: 0.542; rss: 419MB	borrow checking
time: 0.017; rss: 419MB	reachability checking
time: 0.040; rss: 419MB	death checking
time: 0.038; rss: 419MB	stability checking
time: 0.000; rss: 419MB	unused lib feature checking
time: 0.207; rss: 419MB	lint checking
time: 0.000; rss: 419MB	resolving dependency formats
  time: 0.003; rss: 419MB	NoLandingPads
  time: 0.026; rss: 419MB	SimplifyCfg
  time: 0.067; rss: 427MB	EraseRegions
  time: 0.011; rss: 427MB	AddCallGuards
  time: 0.278; rss: 448MB	ElaborateDrops
  time: 0.003; rss: 448MB	NoLandingPads
  time: 0.054; rss: 446MB	SimplifyCfg
  time: 0.030; rss: 445MB	InstCombine
  time: 0.012; rss: 445MB	Deaggregator
  time: 0.002; rss: 445MB	CopyPropagation
  time: 0.036; rss: 445MB	SimplifyLocals
  time: 0.010; rss: 445MB	AddCallGuards
  time: 0.002; rss: 445MB	PreTrans
time: 0.537; rss: 445MB	MIR optimisations
  time: 0.060; rss: 454MB	write metadata
  time: 0.390; rss: 463MB	translation item collection
  time: 0.056; rss: 472MB	codegen unit partitioning
  time: 0.048; rss: 718MB	internalize symbols
time: 4.666; rss: 718MB	translation
time: 0.000; rss: 718MB	assert dep graph
time: 0.000; rss: 718MB	serialize dep graph
  time: 0.522; rss: 410MB	llvm function passes [0]
  time: 0.240; rss: 418MB	llvm module passes [0]
  time: 10.044; rss: 417MB	codegen passes [0]
  time: 0.000; rss: 417MB	codegen passes [0]
time: 11.558; rss: 417MB	LLVM passes
time: 0.000; rss: 417MB	serialize work products
time: 0.331; rss: 104MB	linking
done
