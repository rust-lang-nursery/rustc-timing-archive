commit 897199a0fbe01ab6f7e7f8096656603e238e85a2
Merge: 01a0207 36d9ee3
Author: bors <bors@rust-lang.org>
Date:   Tue Apr 26 12:00:35 2016 -0700

    Auto merge of #33191 - alexcrichton:rustdoc-create-dir-all-racy, r=steveklabnik
    
    rustdoc: Handle concurrent mkdir requests
    
    It's likely that `rustdoc` as a tool is run concurrently in the same output
    (e.g. documenting multiple crates as Cargo does), in which case it needs to
    handle concurrent calls to `fs::create_dir`.
rustc: ./regex.0.1.30
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling regex v0.1.30 (file:///root/benchmarks/regex.0.1.30)
time: 0.081; rss: 60MB	parsing
Lines of code:             8558
Pre-expansion node count:  58217
time: 0.011; rss: 60MB	configuration 1
time: 0.000; rss: 60MB	recursion limit
time: 0.001; rss: 60MB	gated macro checking
time: 0.000; rss: 60MB	crate injection
time: 0.003; rss: 64MB	macro loading
time: 0.000; rss: 64MB	plugin loading
time: 0.000; rss: 64MB	plugin registration
time: 0.058; rss: 67MB	expansion
time: 0.001; rss: 67MB	complete gated feature checking 1
time: 0.013; rss: 67MB	configuration 2
time: 0.000; rss: 67MB	gated configuration checking
time: 0.006; rss: 67MB	maybe building test harness
time: 0.006; rss: 67MB	prelude injection
time: 0.000; rss: 67MB	checking that all macro invocations are gone
time: 0.000; rss: 67MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 67MB	complete gated feature checking 2
time: 0.001; rss: 67MB	const fn bodies and arguments
Post-expansion node count: 68485
time: 0.006; rss: 67MB	assigning node ids
time: 0.001; rss: 67MB	collecting defs
time: 0.001; rss: 67MB	external crate/lib resolution
time: 0.009; rss: 76MB	lowering ast -> hir
time: 0.005; rss: 77MB	indexing hir
time: 0.001; rss: 77MB	attribute checking
time: 0.007; rss: 77MB	early lint checks
time: 0.001; rss: 70MB	language item collection
time: 0.009; rss: 81MB	name resolution
time: 0.001; rss: 81MB	lifetime resolution
time: 0.000; rss: 81MB	looking for entry point
time: 0.000; rss: 81MB	looking for plugin registrar
time: 0.012; rss: 84MB	region resolution
time: 0.001; rss: 84MB	loop checking
time: 0.001; rss: 84MB	static item recursion checking
time: 0.000; rss: 84MB	load_dep_graph
time: 0.008; rss: 94MB	type collecting
time: 0.000; rss: 94MB	variance inference
time: 0.025; rss: 105MB	coherence checking
time: 0.010; rss: 105MB	wf checking
time: 0.264; rss: 110MB	item-types checking
time: 0.207; rss: 121MB	item-bodies checking
time: 0.000; rss: 121MB	drop-impl checking
time: 0.027; rss: 122MB	const checking
time: 0.004; rss: 122MB	privacy checking
time: 0.001; rss: 122MB	stability index
time: 0.001; rss: 122MB	intrinsic checking
time: 0.001; rss: 122MB	effect checking
time: 0.003; rss: 122MB	match checking
time: 0.002; rss: 123MB	liveness checking
time: 0.007; rss: 123MB	rvalue checking
time: 0.016; rss: 125MB	MIR dump
time: 0.007; rss: 125MB	MIR passes
time: 0.020; rss: 126MB	borrow checking
time: 0.000; rss: 126MB	reachability checking
time: 0.003; rss: 126MB	death checking
time: 0.003; rss: 126MB	stability checking
time: 0.000; rss: 126MB	unused lib feature checking
time: 0.029; rss: 126MB	lint checking
time: 0.000; rss: 126MB	resolving dependency formats
time: 0.004; rss: 126MB	Prepare MIR codegen passes
  time: 0.072; rss: 135MB	translation item collection
  time: 0.001; rss: 135MB	codegen unit partitioning
  time: 0.138; rss: 183MB	write metadata
time: 0.727; rss: 183MB	translation
time: 0.000; rss: 183MB	assert dep graph
time: 0.000; rss: 183MB	serialize dep graph
  time: 0.036; rss: 123MB	llvm function passes [0]
  time: 0.017; rss: 123MB	llvm module passes [0]
  time: 0.611; rss: 128MB	codegen passes [0]
  time: 0.001; rss: 110MB	codegen passes [0]
time: 0.739; rss: 108MB	LLVM passes
time: 0.067; rss: 107MB	linking
done
