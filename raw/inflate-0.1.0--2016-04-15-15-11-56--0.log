commit 9debf51f4b8a5d437df1abca57c5a58c45297b60
Merge: ccc7e95 5613372
Author: bors <bors@rust-lang.org>
Date:   Fri Apr 15 12:41:25 2016 -0700

    Auto merge of #32338 - lukaspustina:doc-std-process, r=alexcrichton
    
    Extends rustdoc on how to caputure output
    
    - The documentation is quite about how to caputure a process' output when using
      ` std::process::Child::wait_with_output()`.
    - This PR adds an example for this particular use case.
rustc: ./inflate-0.1.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling inflate v0.1.0 (file:///root/benchmarks/inflate-0.1.0)
time: 0.004; rss: 42MB	parsing
Lines of code:             956
Pre-expansion node count:  4761
time: 0.001; rss: 42MB	configuration 1
time: 0.000; rss: 42MB	recursion limit
time: 0.000; rss: 42MB	gated macro checking
time: 0.000; rss: 42MB	crate injection
time: 0.003; rss: 45MB	macro loading
time: 0.000; rss: 45MB	plugin loading
time: 0.000; rss: 45MB	plugin registration
time: 0.083; rss: 51MB	expansion
time: 0.001; rss: 51MB	complete gated feature checking 1
time: 0.009; rss: 51MB	configuration 2
time: 0.000; rss: 51MB	gated configuration checking
time: 0.004; rss: 51MB	maybe building test harness
time: 0.004; rss: 51MB	prelude injection
time: 0.000; rss: 51MB	checking that all macro invocations are gone
time: 0.000; rss: 51MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 51MB	complete gated feature checking 2
time: 0.000; rss: 51MB	const fn bodies and arguments
Post-expansion node count: 54798
time: 0.004; rss: 51MB	assigning node ids
time: 0.014; rss: 57MB	lowering ast -> hir
time: 0.002; rss: 58MB	indexing hir
time: 0.000; rss: 58MB	attribute checking
time: 0.004; rss: 58MB	early lint checks
time: 0.001; rss: 55MB	external crate/lib resolution
time: 0.001; rss: 55MB	language item collection
time: 0.012; rss: 64MB	resolution
time: 0.001; rss: 64MB	lifetime resolution
time: 0.000; rss: 64MB	looking for entry point
time: 0.000; rss: 64MB	looking for plugin registrar
time: 0.003; rss: 65MB	region resolution
time: 0.000; rss: 65MB	loop checking
time: 0.000; rss: 65MB	static item recursion checking
time: 0.000; rss: 65MB	load_dep_graph
time: 0.001; rss: 65MB	type collecting
time: 0.000; rss: 65MB	variance inference
time: 0.010; rss: 80MB	coherence checking
time: 0.002; rss: 80MB	wf checking
time: 0.002; rss: 80MB	item-types checking
time: 2.816; rss: 101MB	item-bodies checking
time: 0.000; rss: 101MB	drop-impl checking
time: 0.014; rss: 102MB	const checking
time: 0.003; rss: 102MB	privacy checking
time: 0.000; rss: 102MB	stability index
time: 0.001; rss: 102MB	intrinsic checking
time: 0.001; rss: 102MB	effect checking
time: 0.003; rss: 102MB	match checking
time: 0.310; rss: 102MB	liveness checking
time: 0.010; rss: 102MB	rvalue checking
time: 0.034; rss: 114MB	MIR dump
time: 0.014; rss: 114MB	MIR passes
time: 0.205; rss: 114MB	borrow checking
time: 0.000; rss: 114MB	reachability checking
time: 0.003; rss: 114MB	death checking
time: 0.002; rss: 114MB	stability checking
time: 0.000; rss: 114MB	unused lib feature checking
time: 0.021; rss: 116MB	lint checking
time: 0.000; rss: 116MB	resolving dependency formats
time: 0.007; rss: 113MB	Prepare MIR codegen passes
  time: 0.010; rss: 126MB	translation item collection
  time: 0.003; rss: 146MB	write metadata
time: 0.365; rss: 132MB	translation
time: 0.000; rss: 132MB	assert dep graph
time: 0.000; rss: 132MB	serialize dep graph
  time: 0.026; rss: 104MB	llvm function passes [0]
  time: 0.004; rss: 104MB	llvm module passes [0]
  time: 0.504; rss: 109MB	codegen passes [0]
  time: 0.000; rss: 99MB	codegen passes [0]
time: 0.579; rss: 98MB	LLVM passes
time: 0.033; rss: 98MB	linking
done
