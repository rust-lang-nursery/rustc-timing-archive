commit 6fa61b810dc95ca3e8bbda1681229f855f214fc4
Merge: fef6c64 3df35a0
Author: bors <bors@rust-lang.org>
Date:   Fri Apr 15 20:26:19 2016 -0700

    Auto merge of #32785 - tbu-:pr_more_defaults, r=alexcrichton
    
    Implement `Default` for more types in the standard library
    
    Also add `Hash` to `std::cmp::Ordering` and most possible traits to
    `fmt::Error`.
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling typeable v0.1.2
   Compiling gcc v0.3.27
   Compiling log v0.3.6
   Compiling lazy_static v0.1.16
   Compiling rustc-serialize v0.3.19
   Compiling unicase v0.1.0
   Compiling traitobject v0.0.1
   Compiling winapi v0.2.6
   Compiling httparse v0.1.6
   Compiling libc v0.2.10
   Compiling libc v0.1.12
   Compiling winapi-build v0.1.1
   Compiling mime v0.0.11
   Compiling kernel32-sys v0.2.2
   Compiling bitflags v0.3.3
   Compiling pkg-config v0.3.8
   Compiling matches v0.1.2
   Compiling num_cpus v0.2.11
   Compiling rand v0.3.14
   Compiling time v0.1.35
   Compiling openssl-sys v0.6.7
   Compiling openssl v0.6.7
   Compiling uuid v0.1.18
   Compiling url v0.2.38
   Compiling cookie v0.1.21
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.029; rss: 44MB	parsing
Lines of code:             9154
Pre-expansion node count:  45594
time: 0.008; rss: 48MB	configuration 1
time: 0.000; rss: 48MB	recursion limit
time: 0.000; rss: 48MB	gated macro checking
time: 0.000; rss: 48MB	crate injection
time: 0.004; rss: 53MB	macro loading
time: 0.000; rss: 53MB	plugin loading
time: 0.000; rss: 53MB	plugin registration
time: 0.188; rss: 62MB	expansion
time: 0.005; rss: 62MB	complete gated feature checking 1
time: 0.029; rss: 62MB	configuration 2
time: 0.000; rss: 62MB	gated configuration checking
time: 0.011; rss: 62MB	maybe building test harness
time: 0.008; rss: 62MB	prelude injection
time: 0.001; rss: 62MB	checking that all macro invocations are gone
time: 0.000; rss: 62MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 62MB	complete gated feature checking 2
time: 0.001; rss: 62MB	const fn bodies and arguments
Post-expansion node count: 107125
time: 0.008; rss: 62MB	assigning node ids
time: 0.011; rss: 66MB	lowering ast -> hir
time: 0.004; rss: 71MB	indexing hir
time: 0.001; rss: 71MB	attribute checking
time: 0.006; rss: 71MB	early lint checks
time: 0.004; rss: 68MB	external crate/lib resolution
time: 0.001; rss: 68MB	language item collection
time: 0.024; rss: 84MB	resolution
time: 0.002; rss: 84MB	lifetime resolution
time: 0.000; rss: 84MB	looking for entry point
time: 0.000; rss: 84MB	looking for plugin registrar
time: 0.005; rss: 87MB	region resolution
time: 0.001; rss: 87MB	loop checking
time: 0.001; rss: 87MB	static item recursion checking
time: 0.000; rss: 87MB	load_dep_graph
time: 0.018; rss: 97MB	type collecting
time: 0.000; rss: 97MB	variance inference
time: 0.042; rss: 113MB	coherence checking
time: 0.073; rss: 114MB	wf checking
time: 0.028; rss: 114MB	item-types checking
time: 0.461; rss: 136MB	item-bodies checking
time: 0.000; rss: 136MB	drop-impl checking
time: 0.036; rss: 138MB	const checking
time: 0.007; rss: 138MB	privacy checking
time: 0.001; rss: 138MB	stability index
time: 0.004; rss: 138MB	intrinsic checking
time: 0.002; rss: 138MB	effect checking
time: 0.012; rss: 138MB	match checking
time: 0.005; rss: 138MB	liveness checking
time: 0.032; rss: 138MB	rvalue checking
time: 0.048; rss: 145MB	MIR dump
time: 0.021; rss: 145MB	MIR passes
time: 0.064; rss: 145MB	borrow checking
time: 0.003; rss: 145MB	reachability checking
time: 0.006; rss: 145MB	death checking
time: 0.005; rss: 145MB	stability checking
time: 0.000; rss: 145MB	unused lib feature checking
time: 0.046; rss: 145MB	lint checking
time: 0.000; rss: 145MB	resolving dependency formats
time: 0.010; rss: 147MB	Prepare MIR codegen passes
  time: 0.181; rss: 174MB	translation item collection
  time: 0.007; rss: 176MB	codegen unit partitioning
  time: 0.137; rss: 295MB	write metadata
time: 1.468; rss: 295MB	translation
time: 0.001; rss: 295MB	assert dep graph
time: 0.000; rss: 295MB	serialize dep graph
  time: 0.097; rss: 173MB	llvm function passes [0]
  time: 0.046; rss: 175MB	llvm module passes [0]
  time: 1.618; rss: 177MB	codegen passes [0]
  time: 0.001; rss: 125MB	codegen passes [0]
time: 1.961; rss: 124MB	LLVM passes
time: 0.173; rss: 122MB	linking
done
