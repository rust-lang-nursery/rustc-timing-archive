commit e804a3cf256106c097d44f6e0212cd183122da07
Merge: 271d048 06acf16
Author: bors <bors@rust-lang.org>
Date:   Thu Aug 4 03:01:37 2016 -0700

    Auto merge of #35168 - scottcarr:deaggregation, r=nikomatsakis
    
    [MIR] Deaggregate structs to enable further optimizations
    
    Currently, we generate MIR like:
    
    ```
    tmp0 = ...;
    tmp1 = ...;
    tmp3 = Foo { a: ..., b: ... };
    ```
    
    This PR implements "deaggregation," i.e.:
    
    ```
    tmp3.0 = ...
    tmp3.1 = ...
    ```
    
    Currently, the code only deaggregates structs, not enums.  My understanding is that we do not have MIR to set the discriminant of an enum.
cfg: version 1.12.0-dev (e804a3cf2 2016-08-04)
cfg: build triple x86_64-unknown-linux-gnu
cfg: host triples x86_64-unknown-linux-gnu
cfg: target triples x86_64-unknown-linux-gnu
cfg: host for x86_64-unknown-linux-gnu is x86_64
cfg: os for x86_64-unknown-linux-gnu is unknown-linux-gnu
cfg: have good valgrind for x86_64-unknown-linux-gnu
cfg: using CC=gcc (CFG_CC)
cfg: disabling valgrind run-pass tests
cfg: reconfiguring
./configure 
configure: looking for configure programs
configure: found program 'cmp'
configure: found program 'mkdir'
configure: found program 'printf'
configure: found program 'cut'
configure: found program 'head'
configure: found program 'grep'
configure: found program 'xargs'
configure: found program 'cp'
configure: found program 'find'
configure: found program 'uname'
configure: found program 'date'
configure: found program 'tr'
configure: found program 'sed'
configure: found program 'file'
configure: found program 'make'
configure: inspecting environment
configure: recreating config.tmp
configure: 
configure: processing ./configure args
configure: 
configure: CFG_LOCALSTATEDIR    := /var/lib 
configure: CFG_SYSCONFDIR       := /etc 
configure: CFG_DATADIR          := /usr/local/share 
configure: CFG_INFODIR          := /usr/local/share/info 
configure: CFG_LLVM_ROOT        :=  
configure: CFG_PYTHON           :=  
configure: CFG_JEMALLOC_ROOT    :=  
configure: CFG_BUILD            := x86_64-unknown-linux-gnu 
configure: CFG_ANDROID_CROSS_PATH :=  
configure: CFG_I686_LINUX_ANDROID_NDK :=  
configure: CFG_ARM_LINUX_ANDROIDEABI_NDK :=  
configure: CFG_ARMV7_LINUX_ANDROIDEABI_NDK :=  
configure: CFG_AARCH64_LINUX_ANDROID_NDK :=  
configure: CFG_NACL_CROSS_PATH  :=  
configure: CFG_MUSL_ROOT        := /usr/local 
configure: CFG_EXTRA_FILENAME   :=  
configure: CFG_RELEASE_CHANNEL  := dev 
configure: CFG_DEFAULT_LINKER   := cc 
configure: CFG_DEFAULT_AR       := ar 
configure: CFG_LIBDIR           := /usr/local/lib 
configure: 
configure: validating ./configure args
configure: 
configure: 
configure: looking for build programs
configure: 
configure: CFG_CURL             := /usr/bin/curl (7.37.1)
configure: CFG_PYTHON           := /usr/bin/python2.7 
configure: CFG_GIT              := /usr/bin/git (2.1.0)
configure: CFG_MD5              :=  
configure: CFG_MD5SUM           := /usr/bin/md5sum (8.23)
configure: CFG_HASH_COMMAND     := /usr/bin/md5sum | cut -c 1-8 
configure: CFG_CLANG            :=  
configure: CFG_CCACHE           :=  
configure: CFG_GCC              := /usr/bin/gcc (4.9.1-16ubuntu6)
configure: CFG_LD               := /usr/bin/ld (2.24.90.20141014)
configure: CFG_VALGRIND         :=  
configure: CFG_PERF             := /usr/bin/perf (3.16.4)
configure: CFG_ISCC             :=  
configure: CFG_ANTLR4           :=  
configure: CFG_GRUN             :=  
configure: CFG_FLEX             :=  
configure: CFG_BISON            :=  
configure: CFG_GDB              := /usr/bin/gdb (7.8-1ubuntu4)
configure: CFG_LLDB             :=  
configure: CFG_CMAKE            := /usr/bin/cmake (2.8.12.2)
configure: CFG_DISABLE_VALGRIND_RPASS := 1 
configure: CFG_GDB_VERSION      := GNU gdb (Ubuntu 7.8-1ubuntu4) 7.8.0 ...
configure: CFG_LLDB_PYTHON      := /usr/bin/python2.7 
configure: 
configure: looking for target specific programs
configure: 
configure: CFG_ADB              :=  
configure: CFG_CC               := gcc 
configure: CFG_STDCPP_NAME      := stdc++ 
configure: CFG_PERF_WITH_LOGFD  := 1 
configure: 
configure: making directories
configure: 
configure: 
configure: configuring submodules
configure: 
configure: git: submodule sync
Synchronizing submodule url for 'src/compiler-rt'
Synchronizing submodule url for 'src/jemalloc'
Synchronizing submodule url for 'src/liblibc'
Synchronizing submodule url for 'src/llvm'
Synchronizing submodule url for 'src/rt/hoedown'
Synchronizing submodule url for 'src/rust-installer'
configure: git: submodule init
configure: git: submodule update
configure: git: submodule foreach sync
Entering 'src/compiler-rt'
Entering 'src/jemalloc'
Entering 'src/liblibc'
Entering 'src/llvm'
Entering 'src/rt/hoedown'
Entering 'src/rust-installer'
configure: git: submodule foreach update
configure: git: submodule status
 8598065bd965d9713bfafb6c1e766d63a7b17b89 src/compiler-rt (remotes/origin/rust-llvm-2016-07-18)
 e058ca661692a8d01f8cf9d35939dfe3105ce968 src/jemalloc (3.6.0-533-ge058ca6)
 5066b7dcab7e700844b0e2ba71b8af9dc627a59b src/liblibc (0.2.14-31-g5066b7d)
 d1cc48989b13780f21c408fef17dceb104a09c9d src/llvm (remotes/origin/rust-llvm-2016-07-09)
 a3736a0a1907cbc8bf619708738815a5fd789c80 src/rt/hoedown (2.0.0-211-ga3736a0)
 c37d3747da75c280237dc2d6b925078e69555499 src/rust-installer (remotes/origin/HEAD)
-aed73472416064642911af790b25d57c9390b6c7 src/rust-installer/test/rust-installer-v1
-e577c97b494be2815b215e3042207d6d4b7c5516 src/rust-installer/test/rust-installer-v2
configure: git: submodule clobber
Entering 'src/compiler-rt'
Entering 'src/jemalloc'
Entering 'src/liblibc'
Entering 'src/llvm'
Entering 'src/rt/hoedown'
Entering 'src/rust-installer'
Entering 'src/compiler-rt'
Entering 'src/jemalloc'
Entering 'src/liblibc'
Entering 'src/llvm'
Entering 'src/rt/hoedown'
Entering 'src/rust-installer'
configure: 
configure: looking at LLVM
configure: 
configure: CFG_CMAKE_GENERATOR  := Unix Makefiles 
configure: configuring LLVM for x86_64-unknown-linux-gnu
configure: configuring LLVM for x86_64-unknown-linux-gnu with cmake
configure: configuring LLVM with:
configure:  -DLLVM_INCLUDE_TESTS=OFF -DLLVM_INCLUDE_EXAMPLES=OFF -DLLVM_INCLUDE_DOCS=OFF -DLLVM_ENABLE_ZLIB=OFF -DWITH_POLY=OFF -DLLVM_ENABLE_TERMINFO=OFF -DLLVM_ENABLE_LIBEDIT=OFF -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++ '-DCMAKE_C_FLAGS=' '-DCMAKE_CXX_FLAGS=' -DCMAKE_BUILD_TYPE=Release -DLLVM_ENABLE_ASSERTIONS=OFF -DLLVM_TARGETS_TO_BUILD='X86;ARM;AArch64;Mips;PowerPC' -G 'Unix Makefiles' /root/rust/src/llvm/
-- Configuring incomplete, errors occurred!
See also "/root/rust/x86_64-unknown-linux-gnu/llvm/CMakeFiles/CMakeOutput.log".
See also "/root/rust/x86_64-unknown-linux-gnu/llvm/CMakeFiles/CMakeError.log".
configure: error: LLVM cmake configure failed
/root/rust/mk/reconfig.mk:42: recipe for target 'config.stamp' failed
