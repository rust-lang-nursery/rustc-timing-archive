commit 7a26aeca77bcf334747eddb630e3b9475149b7f5
Merge: ff71346 10c3134
Author: bors <bors@rust-lang.org>
Date:   Mon Oct 3 11:00:03 2016 -0700

    Auto merge of #36815 - alexcrichton:stabilize-1.13, r=aturon
    
    std: Stabilize and deprecate APIs for 1.13
    
    This commit is intended to be backported to the 1.13 branch, and works with the
    following APIs:
    
    Stabilized
    
    * `i32::checked_abs`
    * `i32::wrapping_abs`
    * `i32::overflowing_abs`
    * `RefCell::try_borrow`
    * `RefCell::try_borrow_mut`
    
    Deprecated
    
    * `BinaryHeap::push_pop`
    * `BinaryHeap::replace`
    * `SipHash13`
    * `SipHash24`
    * `SipHasher` - use `DefaultHasher` instead in the `std::collections::hash_map`
      module
    
    Closes #28147
    Closes #34767
    Closes #35057
    Closes #35070
rustc: ./syntex-0.42.2-incr-clean
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax -- -Ztime-passes -Zinput-stats -Z incremental-info
   Compiling syntex_syntax v0.42.0
time: 0.108; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  224033
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.270; rss: 146MB	expansion
time: 0.000; rss: 146MB	maybe building test harness
time: 0.006; rss: 146MB	maybe creating a macro crate
Post-expansion node count: 641571
time: 0.000; rss: 146MB	checking for inline asm in case the target doesn't support it
time: 0.013; rss: 146MB	complete gated feature checking
time: 0.023; rss: 146MB	early lint checks
time: 0.007; rss: 146MB	AST validation
time: 0.084; rss: 161MB	name resolution
time: 0.050; rss: 201MB	lowering ast -> hir
time: 0.009; rss: 210MB	indexing hir
time: 0.007; rss: 210MB	attribute checking
time: 0.006; rss: 160MB	language item collection
time: 0.012; rss: 160MB	lifetime resolution
time: 0.000; rss: 160MB	looking for entry point
time: 0.000; rss: 160MB	looking for plugin registrar
time: 0.044; rss: 172MB	region resolution
time: 0.006; rss: 172MB	loop checking
time: 0.006; rss: 172MB	static item recursion checking
time: 0.263; rss: 173MB	compute_incremental_hashes_map
time: 0.000; rss: 173MB	load_dep_graph
time: 0.078; rss: 175MB	type collecting
time: 0.001; rss: 175MB	variance inference
time: 0.038; rss: 178MB	coherence checking
time: 0.100; rss: 180MB	wf checking
time: 0.195; rss: 187MB	item-types checking
time: 3.959; rss: 238MB	item-bodies checking
time: 0.000; rss: 238MB	drop-impl checking
time: 0.318; rss: 238MB	const checking
time: 0.056; rss: 238MB	privacy checking
time: 0.007; rss: 238MB	stability index
time: 0.022; rss: 238MB	intrinsic checking
time: 0.019; rss: 238MB	effect checking
time: 0.058; rss: 238MB	match checking
time: 0.057; rss: 235MB	liveness checking
time: 0.287; rss: 235MB	rvalue checking
time: 0.421; rss: 425MB	MIR dump
  time: 0.057; rss: 427MB	SimplifyCfg
  time: 0.084; rss: 427MB	QualifyAndPromoteConstants
  time: 0.112; rss: 427MB	TypeckMir
  time: 0.005; rss: 427MB	SimplifyBranches
  time: 0.037; rss: 427MB	SimplifyCfg
time: 0.295; rss: 427MB	MIR passes
time: 0.704; rss: 427MB	borrow checking
time: 0.022; rss: 427MB	reachability checking
time: 0.045; rss: 427MB	death checking
time: 0.042; rss: 427MB	stability checking
time: 0.000; rss: 427MB	unused lib feature checking
time: 0.220; rss: 427MB	lint checking
time: 0.000; rss: 427MB	resolving dependency formats
  time: 0.003; rss: 427MB	NoLandingPads
  time: 0.027; rss: 427MB	SimplifyCfg
  time: 0.072; rss: 438MB	EraseRegions
  time: 0.011; rss: 438MB	AddCallGuards
  time: 1.086; rss: 456MB	ElaborateDrops
  time: 0.003; rss: 456MB	NoLandingPads
  time: 0.052; rss: 456MB	SimplifyCfg
  time: 0.030; rss: 456MB	InstCombine
  time: 0.012; rss: 456MB	Deaggregator
  time: 0.003; rss: 456MB	CopyPropagation
  time: 0.009; rss: 456MB	AddCallGuards
  time: 0.003; rss: 456MB	PreTrans
time: 1.312; rss: 456MB	Prepare MIR codegen passes
  time: 0.264; rss: 462MB	write metadata
  time: 0.488; rss: 473MB	translation item collection
  time: 0.068; rss: 479MB	codegen unit partitioning
  time: 0.058; rss: 725MB	internalize symbols
time: 5.215; rss: 603MB	translation
time: 0.000; rss: 603MB	assert dep graph
time: 0.000; rss: 603MB	serialize dep graph
incremental: re-using 0 out of 1 modules
  time: 0.503; rss: 412MB	llvm function passes [0]
  time: 0.240; rss: 420MB	llvm module passes [0]
  time: 10.023; rss: 417MB	codegen passes [0]
  time: 0.001; rss: 419MB	codegen passes [0]
time: 11.507; rss: 419MB	LLVM passes
time: 0.000; rss: 419MB	serialize work products
time: 0.668; rss: 107MB	linking
done
