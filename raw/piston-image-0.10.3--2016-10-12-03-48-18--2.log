commit a29c49f5cca849cd5ac79b3cd70b934bb33cf4e6
Merge: 0b2c356 f5827d0
Author: bors <bors@rust-lang.org>
Date:   Tue Oct 11 23:36:29 2016 -0700

    Auto merge of #37095 - petrochenkov:metactor, r=alexcrichton
    
    Temporary fix for metadata decoding for struct constructors
    
    Same as https://github.com/rust-lang/rust/pull/37078, but for nightly.
    Ideally, metadata lookup functions should "just work" for constructor ids, but this fixes the issue as well.
    
    Fixes https://github.com/rust-lang/rust/issues/37026
    r? @alexcrichton
rustc: ./piston-image-0.10.3
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling image v0.10.3 (file:///root/benchmarks/piston-image-0.10.3)
time: 0.058; rss: 51MB	parsing
Lines of code:             12000
Pre-expansion node count:  90272
time: 0.000; rss: 51MB	recursion limit
time: 0.000; rss: 51MB	crate injection
time: 0.000; rss: 51MB	plugin loading
time: 0.000; rss: 51MB	plugin registration
time: 0.097; rss: 89MB	expansion
time: 0.000; rss: 89MB	maybe building test harness
time: 0.002; rss: 89MB	maybe creating a macro crate
Post-expansion node count: 148999
time: 0.000; rss: 89MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 89MB	complete gated feature checking
time: 0.006; rss: 89MB	early lint checks
time: 0.002; rss: 89MB	AST validation
time: 0.026; rss: 92MB	name resolution
time: 0.038; rss: 104MB	lowering ast -> hir
time: 0.009; rss: 106MB	indexing hir
time: 0.002; rss: 106MB	attribute checking
time: 0.002; rss: 95MB	language item collection
time: 0.003; rss: 95MB	lifetime resolution
time: 0.000; rss: 95MB	looking for entry point
time: 0.000; rss: 95MB	looking for plugin registrar
time: 0.021; rss: 100MB	region resolution
time: 0.002; rss: 100MB	loop checking
time: 0.002; rss: 100MB	static item recursion checking
time: 0.056; rss: 100MB	compute_incremental_hashes_map
time: 0.000; rss: 100MB	load_dep_graph
time: 0.019; rss: 101MB	type collecting
time: 0.000; rss: 101MB	variance inference
time: 0.030; rss: 104MB	coherence checking
time: 0.093; rss: 106MB	wf checking
time: 0.152; rss: 111MB	item-types checking
time: 0.941; rss: 122MB	item-bodies checking
time: 0.000; rss: 122MB	drop-impl checking
time: 0.071; rss: 124MB	const checking
time: 0.011; rss: 124MB	privacy checking
time: 0.001; rss: 124MB	stability index
time: 0.008; rss: 124MB	intrinsic checking
time: 0.003; rss: 124MB	effect checking
time: 0.018; rss: 124MB	match checking
time: 0.011; rss: 124MB	liveness checking
time: 0.062; rss: 124MB	rvalue checking
time: 0.173; rss: 164MB	MIR dump
  time: 0.012; rss: 166MB	SimplifyCfg
  time: 0.024; rss: 166MB	QualifyAndPromoteConstants
  time: 0.025; rss: 166MB	TypeckMir
  time: 0.001; rss: 166MB	SimplifyBranches
  time: 0.005; rss: 166MB	SimplifyCfg
time: 0.067; rss: 166MB	MIR passes
time: 0.148; rss: 166MB	borrow checking
time: 0.004; rss: 166MB	reachability checking
time: 0.009; rss: 166MB	death checking
time: 0.010; rss: 167MB	stability checking
time: 0.000; rss: 167MB	unused lib feature checking
time: 0.075; rss: 167MB	lint checking
time: 0.000; rss: 167MB	resolving dependency formats
  time: 0.001; rss: 167MB	NoLandingPads
  time: 0.005; rss: 167MB	SimplifyCfg
  time: 0.016; rss: 167MB	EraseRegions
  time: 0.002; rss: 167MB	AddCallGuards
  time: 0.098; rss: 171MB	ElaborateDrops
  time: 0.001; rss: 171MB	NoLandingPads
  time: 0.009; rss: 171MB	SimplifyCfg
  time: 0.006; rss: 171MB	InstCombine
  time: 0.002; rss: 171MB	Deaggregator
  time: 0.001; rss: 171MB	CopyPropagation
  time: 0.002; rss: 171MB	AddCallGuards
  time: 0.000; rss: 171MB	PreTrans
time: 0.143; rss: 171MB	Prepare MIR codegen passes
  time: 0.078; rss: 175MB	write metadata
  time: 0.489; rss: 187MB	translation item collection
  time: 0.032; rss: 190MB	codegen unit partitioning
  time: 0.027; rss: 308MB	internalize symbols
time: 3.209; rss: 281MB	translation
time: 0.000; rss: 281MB	assert dep graph
time: 0.000; rss: 281MB	serialize dep graph
  time: 0.204; rss: 216MB	llvm function passes [0]
  time: 0.083; rss: 219MB	llvm module passes [0]
  time: 4.131; rss: 222MB	codegen passes [0]
  time: 0.001; rss: 222MB	codegen passes [0]
time: 4.807; rss: 222MB	LLVM passes
time: 0.000; rss: 222MB	serialize work products
time: 0.256; rss: 96MB	linking
done
