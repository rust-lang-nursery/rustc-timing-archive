commit 209308439a1099b285520459f57e380f18793c07
Merge: 7846610 d6ec686
Author: bors <bors@rust-lang.org>
Date:   Wed Dec 7 16:32:48 2016 +0000

    Auto merge of #38105 - ollie27:rustdoc_deterministic_js, r=GuillaumeGomez
    
    rustdoc: Sort lines in search index and implementors js
    
    This means the files are generated deterministically even with rustdoc running in parallel.
    
    Fixes the first part of #30220.
rustc: ./syntex-0.42.2@010-incr@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.121; rss: 69MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 69MB	recursion limit
time: 0.000; rss: 69MB	crate injection
time: 0.000; rss: 69MB	plugin loading
time: 0.000; rss: 69MB	plugin registration
time: 0.335; rss: 143MB	expansion
time: 0.000; rss: 143MB	maybe building test harness
time: 0.006; rss: 143MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 143MB	checking for inline asm in case the target doesn't support it
time: 0.013; rss: 143MB	complete gated feature checking
time: 0.024; rss: 143MB	early lint checks
time: 0.007; rss: 143MB	AST validation
time: 0.102; rss: 159MB	name resolution
time: 0.118; rss: 192MB	lowering ast -> hir
time: 0.011; rss: 185MB	indexing hir
time: 0.006; rss: 185MB	attribute checking
time: 0.002; rss: 147MB	language item collection
time: 0.015; rss: 149MB	lifetime resolution
time: 0.000; rss: 149MB	looking for entry point
time: 0.000; rss: 149MB	looking for plugin registrar
time: 0.098; rss: 169MB	region resolution
time: 0.009; rss: 169MB	loop checking
time: 0.002; rss: 169MB	static item recursion checking
time: 0.388; rss: 170MB	compute_incremental_hashes_map
time: 0.000; rss: 170MB	load_dep_graph
time: 0.011; rss: 171MB	stability index
time: 0.029; rss: 173MB	stability checking
time: 0.072; rss: 180MB	type collecting
time: 0.005; rss: 180MB	variance inference
time: 0.010; rss: 185MB	impl wf inference
time: 0.038; rss: 188MB	coherence checking
time: 0.092; rss: 191MB	wf checking
time: 0.218; rss: 200MB	item-types checking
time: 3.807; rss: 253MB	item-bodies checking
time: 0.000; rss: 253MB	drop-impl checking
time: 0.329; rss: 264MB	const checking
time: 0.071; rss: 264MB	privacy checking
time: 0.044; rss: 271MB	intrinsic checking
time: 0.017; rss: 271MB	effect checking
time: 0.054; rss: 271MB	match checking
time: 0.056; rss: 277MB	liveness checking
time: 0.190; rss: 278MB	rvalue checking
time: 0.598; rss: 451MB	MIR dump
  time: 0.065; rss: 457MB	SimplifyCfg
  time: 0.087; rss: 457MB	QualifyAndPromoteConstants
  time: 0.188; rss: 474MB	TypeckMir
  time: 0.005; rss: 474MB	SimplifyBranches
  time: 0.035; rss: 474MB	SimplifyCfg
time: 0.380; rss: 474MB	MIR cleanup and validation
time: 0.500; rss: 477MB	borrow checking
time: 0.025; rss: 477MB	reachability checking
time: 0.040; rss: 477MB	death checking
time: 0.000; rss: 477MB	unused lib feature checking
time: 0.186; rss: 477MB	lint checking
time: 0.000; rss: 477MB	resolving dependency formats
  time: 0.004; rss: 477MB	NoLandingPads
  time: 0.028; rss: 477MB	SimplifyCfg
  time: 0.083; rss: 485MB	EraseRegions
  time: 0.012; rss: 485MB	AddCallGuards
  time: 0.324; rss: 507MB	ElaborateDrops
  time: 0.004; rss: 507MB	NoLandingPads
  time: 0.057; rss: 507MB	SimplifyCfg
  time: 0.031; rss: 507MB	InstCombine
  time: 0.013; rss: 507MB	Deaggregator
  time: 0.004; rss: 507MB	CopyPropagation
  time: 0.038; rss: 507MB	SimplifyLocals
  time: 0.011; rss: 507MB	AddCallGuards
  time: 0.003; rss: 507MB	PreTrans
time: 0.613; rss: 507MB	MIR optimisations
  time: 0.091; rss: 514MB	write metadata
  time: 0.429; rss: 530MB	translation item collection
  time: 0.075; rss: 534MB	codegen unit partitioning
  time: 0.054; rss: 1437MB	internalize symbols
time: 13.945; rss: 1437MB	translation
time: 0.000; rss: 1437MB	assert dep graph
time: 2.070; rss: 1466MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1176MB	llvm function passes [4]
time: 0.000; rss: 1176MB	llvm module passes [4]
time: 0.001; rss: 1176MB	llvm function passes [3]
time: 0.000; rss: 1176MB	llvm module passes [3]
time: 0.001; rss: 1178MB	llvm function passes [9]
time: 0.002; rss: 1179MB	llvm function passes [2]
time: 0.001; rss: 1179MB	llvm module passes [9]
time: 0.000; rss: 1179MB	llvm module passes [2]
time: 0.002; rss: 1179MB	codegen passes [4]
time: 0.012; rss: 1181MB	llvm function passes [0]
time: 0.024; rss: 1182MB	llvm function passes [6]
time: 0.018; rss: 1185MB	llvm function passes [5]
time: 0.012; rss: 1185MB	llvm module passes [0]
time: 0.001; rss: 1185MB	llvm module passes [5]
time: 0.006; rss: 1186MB	llvm module passes [6]
time: 0.004; rss: 1187MB	codegen passes [0]
time: 0.040; rss: 1190MB	codegen passes [9]
time: 0.046; rss: 1191MB	llvm function passes [4]
time: 0.045; rss: 1191MB	llvm function passes [1]
time: 0.000; rss: 1193MB	llvm function passes [14]
time: 0.000; rss: 1193MB	llvm module passes [14]
time: 0.001; rss: 1193MB	codegen passes [14]
time: 0.043; rss: 1193MB	llvm function passes [10]
time: 0.072; rss: 1193MB	codegen passes [3]
time: 0.053; rss: 1194MB	codegen passes [2]
time: 0.003; rss: 1194MB	llvm function passes [14]
time: 0.001; rss: 1194MB	llvm module passes [14]
time: 0.028; rss: 1194MB	llvm module passes [1]
time: 0.000; rss: 1197MB	llvm function passes [17]
time: 0.000; rss: 1197MB	llvm module passes [17]
time: 0.001; rss: 1197MB	llvm function passes [15]
time: 0.000; rss: 1197MB	llvm module passes [15]
time: 0.004; rss: 1200MB	codegen passes [17]
time: 0.054; rss: 1200MB	llvm function passes [11]
time: 0.031; rss: 1200MB	llvm module passes [10]
time: 0.020; rss: 1201MB	llvm function passes [16]
time: 0.000; rss: 1201MB	llvm module passes [16]
time: 0.000; rss: 1202MB	llvm function passes [19]
time: 0.000; rss: 1202MB	llvm module passes [19]
time: 0.094; rss: 1204MB	llvm module passes [4]
time: 0.045; rss: 1205MB	codegen passes [15]
time: 0.008; rss: 1205MB	codegen passes [19]
time: 0.056; rss: 1206MB	llvm module passes [11]
time: 0.139; rss: 1209MB	llvm function passes [9]
time: 0.089; rss: 1211MB	codegen passes [16]
time: 0.026; rss: 1217MB	llvm function passes [24]
time: 0.027; rss: 1217MB	llvm function passes [16]
time: 0.003; rss: 1218MB	llvm module passes [16]
time: 0.140; rss: 1219MB	llvm function passes [17]
time: 0.170; rss: 1219MB	llvm function passes [3]
time: 0.076; rss: 1219MB	llvm module passes [9]
time: 0.178; rss: 1223MB	llvm function passes [18]
time: 0.126; rss: 1225MB	codegen passes [14]
time: 0.069; rss: 1225MB	llvm module passes [24]
time: 0.003; rss: 1226MB	llvm function passes [28]
time: 0.022; rss: 1227MB	llvm module passes [28]
time: 0.162; rss: 1227MB	llvm function passes [20]
time: 0.048; rss: 1228MB	llvm function passes [31]
time: 0.114; rss: 1233MB	llvm module passes [17]
time: 0.005; rss: 1235MB	llvm function passes [36]
time: 0.134; rss: 1235MB	llvm module passes [3]
time: 0.001; rss: 1235MB	llvm module passes [36]
time: 0.137; rss: 1235MB	llvm function passes [25]
time: 0.000; rss: 1238MB	llvm function passes [37]
time: 0.000; rss: 1238MB	llvm module passes [37]
time: 0.099; rss: 1238MB	llvm function passes [14]
time: 0.091; rss: 1238MB	llvm function passes [27]
time: 0.004; rss: 1239MB	codegen passes [37]
time: 0.000; rss: 1239MB	codegen passes [37]
time: 0.015; rss: 1239MB	llvm function passes [38]
time: 0.164; rss: 1239MB	llvm function passes [29]
time: 0.130; rss: 1239MB	llvm module passes [18]
time: 0.174; rss: 1240MB	llvm function passes [23]
time: 0.174; rss: 1240MB	llvm function passes [22]
time: 0.432; rss: 1240MB	llvm function passes [7]
time: 0.037; rss: 1240MB	llvm module passes [38]
time: 0.121; rss: 1240MB	llvm module passes [31]
time: 0.135; rss: 1243MB	llvm module passes [20]
time: 0.057; rss: 1244MB	llvm module passes [29]
time: 0.447; rss: 1245MB	llvm function passes [12]
time: 0.146; rss: 1245MB	llvm function passes [34]
time: 0.094; rss: 1248MB	llvm module passes [27]
time: 0.412; rss: 1248MB	llvm function passes [2]
time: 0.125; rss: 1253MB	llvm module passes [25]
time: 0.141; rss: 1254MB	llvm module passes [14]
time: 0.538; rss: 1255MB	llvm function passes [8]
time: 0.135; rss: 1255MB	llvm module passes [22]
time: 0.414; rss: 1256MB	llvm function passes [15]
time: 0.541; rss: 1254MB	codegen passes [5]
time: 0.120; rss: 1255MB	llvm module passes [34]
time: 0.203; rss: 1259MB	llvm module passes [23]
time: 0.493; rss: 1262MB	llvm function passes [21]
time: 0.609; rss: 1264MB	llvm function passes [0]
time: 0.306; rss: 1264MB	llvm function passes [33]
time: 0.433; rss: 1281MB	llvm function passes [30]
time: 0.411; rss: 1282MB	llvm function passes [35]
time: 0.369; rss: 1286MB	codegen passes [36]
time: 0.163; rss: 1289MB	llvm module passes [21]
time: 0.689; rss: 1292MB	llvm function passes [19]
time: 0.551; rss: 1292MB	llvm function passes [32]
time: 0.779; rss: 1302MB	llvm function passes [13]
time: 0.431; rss: 1308MB	llvm module passes [12]
time: 0.714; rss: 1309MB	llvm function passes [26]
time: 0.434; rss: 1308MB	llvm module passes [2]
time: 0.493; rss: 1309MB	llvm module passes [7]
time: 0.564; rss: 1311MB	codegen passes [28]
time: 0.444; rss: 1322MB	llvm module passes [15]
time: 0.331; rss: 1323MB	llvm module passes [35]
time: 0.343; rss: 1324MB	llvm module passes [30]
time: 0.769; rss: 1324MB	codegen passes [16]
time: 0.601; rss: 1324MB	llvm module passes [8]
time: 0.317; rss: 1319MB	llvm module passes [32]
time: 0.576; rss: 1325MB	llvm module passes [33]
time: 0.590; rss: 1324MB	llvm module passes [0]
time: 0.422; rss: 1327MB	llvm module passes [19]
time: 1.046; rss: 1338MB	codegen passes [1]
time: 1.117; rss: 1333MB	codegen passes [6]
time: 0.659; rss: 1352MB	llvm module passes [13]
time: 0.681; rss: 1356MB	llvm module passes [26]
time: 0.912; rss: 1354MB	codegen passes [38]
time: 1.602; rss: 1378MB	codegen passes [11]
time: 1.452; rss: 1407MB	codegen passes [31]
time: 1.567; rss: 1402MB	codegen passes [10]
time: 1.725; rss: 1396MB	codegen passes [4]
time: 1.754; rss: 1396MB	codegen passes [24]
time: 1.818; rss: 1419MB	codegen passes [22]
time: 1.864; rss: 1405MB	codegen passes [29]
time: 1.970; rss: 1390MB	codegen passes [9]
time: 2.346; rss: 1386MB	codegen passes [3]
time: 2.307; rss: 1423MB	codegen passes [27]
time: 2.354; rss: 1419MB	codegen passes [34]
time: 2.708; rss: 1454MB	codegen passes [20]
time: 2.895; rss: 1465MB	codegen passes [17]
time: 2.867; rss: 1467MB	codegen passes [25]
time: 2.820; rss: 1467MB	codegen passes [14]
time: 2.734; rss: 1471MB	codegen passes [23]
time: 3.002; rss: 1466MB	codegen passes [18]
time: 3.045; rss: 1508MB	codegen passes [12]
time: 3.446; rss: 1526MB	codegen passes [30]
time: 3.489; rss: 1551MB	codegen passes [21]
time: 3.865; rss: 1629MB	codegen passes [2]
time: 3.895; rss: 1592MB	codegen passes [35]
time: 4.021; rss: 1575MB	codegen passes [7]
time: 4.228; rss: 1550MB	codegen passes [19]
time: 4.172; rss: 1525MB	codegen passes [15]
time: 4.291; rss: 1539MB	codegen passes [33]
time: 4.721; rss: 1511MB	codegen passes [32]
time: 4.615; rss: 1456MB	codegen passes [0]
time: 5.401; rss: 1436MB	codegen passes [8]
time: 5.357; rss: 1381MB	codegen passes [26]
time: 5.584; rss: 1295MB	codegen passes [13]
time: 8.434; rss: 1294MB	LLVM passes
time: 0.000; rss: 1294MB	serialize work products
time: 1.050; rss: 266MB	linking
done
