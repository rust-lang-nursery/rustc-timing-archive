commit a888333ea6acad7e289fa3f0f9e6c1058aa2a011
Merge: 9b367d9 e3b414d
Author: bors <bors@rust-lang.org>
Date:   Sun Feb 14 21:24:45 2016 +0000

    Auto merge of #31460 - alexcrichton:supafast-rustc, r=brson
    
    Looking at some profiles of rustc recently, these seemed like two pretty easy wins we could get in terms of performance on the table.
rustc: ./inflate-0.1.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling inflate v0.1.0 (file:///root/benchmarks/inflate-0.1.0)
time: 0.004; rss: 38MB	parsing
Lines of code:             956
Pre-expansion node count:  4761
time: 0.001; rss: 38MB	configuration 1
time: 0.000; rss: 38MB	recursion limit
time: 0.000; rss: 38MB	gated macro checking
time: 0.000; rss: 38MB	crate injection
time: 0.003; rss: 42MB	macro loading
time: 0.000; rss: 42MB	plugin loading
time: 0.000; rss: 42MB	plugin registration
time: 0.083; rss: 48MB	expansion
time: 0.001; rss: 48MB	complete gated feature checking 1
time: 0.009; rss: 48MB	configuration 2
time: 0.000; rss: 48MB	gated configuration checking
time: 0.005; rss: 48MB	maybe building test harness
time: 0.004; rss: 48MB	prelude injection
time: 0.000; rss: 48MB	checking that all macro invocations are gone
time: 0.000; rss: 48MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 48MB	complete gated feature checking 2
time: 0.000; rss: 48MB	const fn bodies and arguments
Post-expansion node count: 54798
time: 0.004; rss: 48MB	assigning node ids
time: 0.008; rss: 52MB	lowering ast -> hir
time: 0.002; rss: 52MB	indexing hir
time: 0.000; rss: 52MB	attribute checking
time: 0.004; rss: 52MB	early lint checks
time: 0.001; rss: 48MB	external crate/lib resolution
time: 0.001; rss: 48MB	language item collection
time: 0.013; rss: 56MB	resolution
time: 0.001; rss: 56MB	lifetime resolution
time: 0.000; rss: 56MB	looking for entry point
time: 0.000; rss: 56MB	looking for plugin registrar
time: 0.003; rss: 57MB	region resolution
time: 0.000; rss: 57MB	loop checking
time: 0.000; rss: 57MB	static item recursion checking
time: 0.001; rss: 58MB	type collecting
time: 0.000; rss: 58MB	variance inference
time: 0.009; rss: 71MB	coherence checking
time: 0.002; rss: 71MB	wf checking
time: 0.002; rss: 72MB	item-types checking
time: 24.071; rss: 96MB	item-bodies checking
time: 0.000; rss: 96MB	drop-impl checking
time: 0.014; rss: 97MB	const checking
time: 0.003; rss: 97MB	privacy checking
time: 0.000; rss: 97MB	stability index
time: 0.000; rss: 97MB	intrinsic checking
time: 0.001; rss: 97MB	effect checking
time: 0.003; rss: 97MB	match checking
time: 0.031; rss: 107MB	MIR dump
time: 0.000; rss: 107MB	MIR passes
time: 0.308; rss: 107MB	liveness checking
time: 0.213; rss: 105MB	borrow checking
time: 0.010; rss: 105MB	rvalue checking
time: 0.000; rss: 105MB	reachability checking
time: 0.003; rss: 105MB	death checking
time: 0.002; rss: 105MB	stability checking
time: 0.000; rss: 105MB	unused lib feature checking
time: 0.017; rss: 106MB	lint checking
time: 0.000; rss: 106MB	resolving dependency formats
time: 0.002; rss: 106MB	erasing regions from MIR
  time: 0.012; rss: 117MB	translation item collection
  time: 0.003; rss: 132MB	write metadata
time: 0.373; rss: 129MB	translation
  time: 0.025; rss: 98MB	llvm function passes [0]
  time: 0.005; rss: 98MB	llvm module passes [0]
  time: 0.493; rss: 104MB	codegen passes [0]
  time: 0.000; rss: 91MB	codegen passes [0]
time: 0.565; rss: 91MB	LLVM passes
time: 0.035; rss: 91MB	linking
done
