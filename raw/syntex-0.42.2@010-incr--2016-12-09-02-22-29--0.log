commit adb4279e549f51d287140658c1c64b51d7715bfa
Merge: 6a495f7 d38db82
Author: bors <bors@rust-lang.org>
Date:   Fri Dec 9 07:08:29 2016 +0000

    Auto merge of #38256 - alexcrichton:distcheck, r=brson
    
    rustbuild: Implement distcheck
    
    This commit implements the `distcheck` target for rustbuild which is only ever
    run on our nightly bots. This essentially just creates a tarball, un-tars it,
    and then runs a full build, validating that the release tarballs do indeed have
    everything they need to build Rust.
rustc: ./syntex-0.42.2@010-incr@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.241; rss: 152MB	expansion
time: 0.000; rss: 152MB	maybe building test harness
time: 0.006; rss: 152MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 152MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 152MB	complete gated feature checking
time: 0.023; rss: 152MB	early lint checks
time: 0.007; rss: 152MB	AST validation
time: 0.075; rss: 166MB	name resolution
time: 0.058; rss: 200MB	lowering ast -> hir
time: 0.010; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.046; rss: 177MB	region resolution
time: 0.008; rss: 177MB	loop checking
time: 0.002; rss: 177MB	static item recursion checking
time: 0.382; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.021; rss: 182MB	stability checking
time: 0.057; rss: 189MB	type collecting
time: 0.004; rss: 189MB	variance inference
time: 0.006; rss: 193MB	impl wf inference
time: 0.026; rss: 197MB	coherence checking
time: 0.088; rss: 199MB	wf checking
time: 0.197; rss: 207MB	item-types checking
time: 3.573; rss: 265MB	item-bodies checking
time: 0.000; rss: 265MB	drop-impl checking
time: 0.220; rss: 276MB	const checking
time: 0.059; rss: 277MB	privacy checking
time: 0.021; rss: 283MB	intrinsic checking
time: 0.016; rss: 283MB	effect checking
time: 0.052; rss: 283MB	match checking
time: 0.050; rss: 292MB	liveness checking
time: 0.176; rss: 294MB	rvalue checking
time: 0.366; rss: 481MB	MIR dump
  time: 0.058; rss: 483MB	SimplifyCfg
  time: 0.074; rss: 483MB	QualifyAndPromoteConstants
  time: 0.124; rss: 500MB	TypeckMir
  time: 0.005; rss: 500MB	SimplifyBranches
  time: 0.033; rss: 500MB	SimplifyCfg
time: 0.294; rss: 500MB	MIR cleanup and validation
time: 0.473; rss: 500MB	borrow checking
time: 0.024; rss: 500MB	reachability checking
time: 0.039; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.179; rss: 500MB	lint checking
time: 0.000; rss: 500MB	resolving dependency formats
  time: 0.004; rss: 500MB	NoLandingPads
  time: 0.028; rss: 500MB	SimplifyCfg
  time: 0.065; rss: 509MB	EraseRegions
  time: 0.011; rss: 509MB	AddCallGuards
  time: 0.277; rss: 531MB	ElaborateDrops
  time: 0.004; rss: 531MB	NoLandingPads
  time: 0.054; rss: 531MB	SimplifyCfg
  time: 0.030; rss: 530MB	InstCombine
  time: 0.013; rss: 530MB	Deaggregator
  time: 0.004; rss: 530MB	CopyPropagation
  time: 0.036; rss: 530MB	SimplifyLocals
  time: 0.010; rss: 530MB	AddCallGuards
  time: 0.003; rss: 530MB	PreTrans
time: 0.538; rss: 530MB	MIR optimisations
  time: 0.067; rss: 538MB	write metadata
  time: 0.400; rss: 551MB	translation item collection
  time: 0.073; rss: 553MB	codegen unit partitioning
  time: 0.053; rss: 1455MB	internalize symbols
time: 12.849; rss: 1455MB	translation
time: 0.000; rss: 1455MB	assert dep graph
time: 2.143; rss: 1483MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1196MB	llvm function passes [1]
time: 0.000; rss: 1198MB	llvm module passes [1]
time: 0.001; rss: 1200MB	llvm function passes [0]
time: 0.000; rss: 1202MB	llvm module passes [0]
time: 0.001; rss: 1206MB	llvm function passes [2]
time: 0.000; rss: 1206MB	llvm module passes [2]
time: 0.002; rss: 1206MB	llvm function passes [6]
time: 0.004; rss: 1210MB	llvm function passes [3]
time: 0.000; rss: 1210MB	llvm module passes [3]
time: 0.007; rss: 1215MB	llvm function passes [5]
time: 0.001; rss: 1215MB	llvm function passes [9]
time: 0.000; rss: 1215MB	llvm module passes [9]
time: 0.006; rss: 1215MB	llvm module passes [6]
time: 0.011; rss: 1215MB	codegen passes [1]
time: 0.014; rss: 1215MB	llvm function passes [4]
time: 0.007; rss: 1215MB	llvm module passes [5]
time: 0.018; rss: 1219MB	codegen passes [2]
time: 0.008; rss: 1219MB	llvm module passes [4]
time: 0.023; rss: 1219MB	codegen passes [0]
time: 0.023; rss: 1229MB	llvm function passes [1]
time: 0.038; rss: 1240MB	codegen passes [3]
time: 0.013; rss: 1240MB	llvm function passes [12]
time: 0.000; rss: 1240MB	llvm function passes [13]
time: 0.000; rss: 1240MB	llvm module passes [13]
time: 0.001; rss: 1240MB	codegen passes [13]
time: 0.014; rss: 1240MB	llvm module passes [1]
time: 0.030; rss: 1240MB	llvm function passes [2]
time: 0.003; rss: 1240MB	llvm function passes [13]
time: 0.001; rss: 1240MB	llvm module passes [13]
time: 0.008; rss: 1240MB	llvm module passes [12]
time: 0.008; rss: 1240MB	llvm module passes [2]
time: 0.050; rss: 1240MB	codegen passes [9]
time: 0.027; rss: 1248MB	llvm function passes [9]
time: 0.064; rss: 1248MB	llvm function passes [0]
time: 0.016; rss: 1257MB	llvm module passes [9]
time: 0.069; rss: 1259MB	llvm function passes [11]
time: 0.001; rss: 1267MB	llvm function passes [16]
time: 0.000; rss: 1267MB	llvm module passes [16]
time: 0.040; rss: 1270MB	llvm module passes [0]
time: 0.130; rss: 1278MB	codegen passes [6]
time: 0.000; rss: 1278MB	llvm function passes [6]
time: 0.000; rss: 1278MB	llvm module passes [6]
time: 0.139; rss: 1278MB	llvm function passes [7]
time: 0.034; rss: 1282MB	codegen passes [16]
time: 0.008; rss: 1282MB	codegen passes [6]
time: 0.045; rss: 1282MB	llvm module passes [11]
time: 0.000; rss: 1284MB	llvm function passes [17]
time: 0.000; rss: 1284MB	llvm module passes [17]
time: 0.027; rss: 1284MB	llvm function passes [15]
time: 0.000; rss: 1284MB	llvm module passes [15]
time: 0.001; rss: 1284MB	codegen passes [17]
time: 0.103; rss: 1284MB	codegen passes [13]
time: 0.036; rss: 1283MB	llvm function passes [17]
time: 0.019; rss: 1281MB	llvm module passes [17]
time: 0.069; rss: 1281MB	llvm function passes [16]
time: 0.080; rss: 1281MB	llvm module passes [7]
time: 0.231; rss: 1282MB	llvm function passes [8]
time: 0.087; rss: 1282MB	llvm function passes [6]
time: 0.030; rss: 1282MB	llvm module passes [16]
time: 0.014; rss: 1282MB	llvm module passes [6]
time: 0.217; rss: 1282MB	llvm function passes [10]
time: 0.220; rss: 1282MB	llvm function passes [14]
time: 0.129; rss: 1283MB	codegen passes [15]
time: 0.011; rss: 1283MB	llvm function passes [15]
time: 0.002; rss: 1283MB	llvm module passes [15]
time: 0.030; rss: 1288MB	llvm function passes [23]
time: 0.079; rss: 1292MB	llvm function passes [25]
time: 0.105; rss: 1293MB	llvm function passes [21]
time: 0.185; rss: 1294MB	llvm module passes [10]
time: 0.086; rss: 1297MB	llvm function passes [26]
time: 0.093; rss: 1297MB	llvm module passes [23]
time: 0.048; rss: 1298MB	llvm module passes [25]
time: 0.038; rss: 1298MB	llvm module passes [21]
time: 0.219; rss: 1299MB	llvm function passes [19]
time: 0.003; rss: 1300MB	llvm function passes [37]
time: 0.000; rss: 1300MB	llvm module passes [37]
time: 0.022; rss: 1301MB	codegen passes [38]
time: 0.025; rss: 1301MB	codegen passes [37]
time: 0.138; rss: 1302MB	llvm function passes [29]
time: 0.049; rss: 1303MB	llvm function passes [35]
time: 0.009; rss: 1304MB	llvm module passes [35]
time: 0.256; rss: 1304MB	llvm module passes [14]
time: 0.027; rss: 1306MB	llvm module passes [29]
time: 0.114; rss: 1307MB	llvm function passes [33]
time: 0.419; rss: 1310MB	llvm function passes [13]
time: 0.109; rss: 1315MB	llvm function passes [36]
time: 0.006; rss: 1313MB	llvm module passes [36]
time: 0.147; rss: 1313MB	llvm function passes [34]
time: 0.285; rss: 1313MB	llvm function passes [22]
time: 0.089; rss: 1316MB	llvm module passes [33]
time: 0.208; rss: 1317MB	llvm function passes [28]
time: 0.228; rss: 1317MB	llvm module passes [26]
time: 0.216; rss: 1321MB	llvm module passes [19]
time: 0.280; rss: 1322MB	llvm function passes [31]
time: 0.073; rss: 1327MB	llvm module passes [28]
time: 0.514; rss: 1331MB	llvm module passes [8]
time: 0.527; rss: 1332MB	llvm function passes [20]
time: 0.727; rss: 1334MB	llvm function passes [3]
time: 0.371; rss: 1335MB	llvm function passes [27]
time: 0.208; rss: 1338MB	llvm module passes [13]
time: 0.382; rss: 1341MB	llvm function passes [32]
time: 0.492; rss: 1341MB	llvm function passes [24]
time: 0.200; rss: 1341MB	llvm module passes [34]
time: 0.593; rss: 1343MB	llvm function passes [18]
time: 0.471; rss: 1347MB	llvm function passes [30]
time: 0.241; rss: 1347MB	llvm module passes [22]
time: 0.825; rss: 1347MB	codegen passes [5]
time: 0.179; rss: 1348MB	llvm module passes [31]
time: 0.332; rss: 1354MB	codegen passes [29]
time: 0.251; rss: 1357MB	llvm module passes [27]
time: 0.461; rss: 1370MB	codegen passes [35]
time: 0.301; rss: 1380MB	llvm module passes [32]
time: 0.400; rss: 1386MB	llvm module passes [20]
time: 1.060; rss: 1384MB	codegen passes [4]
time: 0.417; rss: 1385MB	llvm module passes [3]
time: 0.360; rss: 1384MB	llvm module passes [18]
time: 0.787; rss: 1376MB	codegen passes [15]
time: 0.508; rss: 1370MB	llvm module passes [24]
time: 1.120; rss: 1370MB	codegen passes [2]
time: 0.488; rss: 1371MB	llvm module passes [30]
time: 0.901; rss: 1403MB	codegen passes [36]
time: 1.042; rss: 1412MB	codegen passes [23]
time: 1.829; rss: 1435MB	codegen passes [12]
time: 1.849; rss: 1426MB	codegen passes [1]
time: 1.516; rss: 1444MB	codegen passes [21]
time: 2.179; rss: 1436MB	codegen passes [9]
time: 1.397; rss: 1429MB	codegen passes [25]
time: 1.601; rss: 1427MB	codegen passes [28]
time: 2.352; rss: 1435MB	codegen passes [11]
time: 2.547; rss: 1427MB	codegen passes [6]
time: 2.182; rss: 1448MB	codegen passes [33]
time: 2.200; rss: 1458MB	codegen passes [31]
time: 2.319; rss: 1460MB	codegen passes [26]
time: 2.829; rss: 1464MB	codegen passes [17]
time: 2.278; rss: 1445MB	codegen passes [22]
time: 2.615; rss: 1505MB	codegen passes [19]
time: 3.448; rss: 1543MB	codegen passes [16]
time: 3.786; rss: 1567MB	codegen passes [0]
time: 3.642; rss: 1613MB	codegen passes [13]
time: 4.042; rss: 1580MB	codegen passes [14]
time: 3.736; rss: 1592MB	codegen passes [27]
time: 4.081; rss: 1603MB	codegen passes [7]
time: 3.888; rss: 1589MB	codegen passes [34]
time: 3.868; rss: 1549MB	codegen passes [20]
time: 3.966; rss: 1517MB	codegen passes [18]
time: 4.402; rss: 1514MB	codegen passes [32]
time: 4.045; rss: 1466MB	codegen passes [30]
time: 5.068; rss: 1449MB	codegen passes [10]
time: 5.013; rss: 1440MB	codegen passes [24]
time: 5.011; rss: 1364MB	codegen passes [8]
time: 5.977; rss: 1296MB	codegen passes [3]
time: 8.720; rss: 1294MB	LLVM passes
time: 0.000; rss: 1294MB	serialize work products
time: 1.053; rss: 271MB	linking
done
