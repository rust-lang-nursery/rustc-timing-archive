commit ba872f270781ada15426cfac7db20b30b81777dc
Author: Brian Anderson <banderson@mozilla.com>
Date:   Thu Nov 17 00:11:10 2016 +0000

    Revert "Bump the bootstrap cargo to match the one paired with 1.13"
    
    This reverts commit 5ad235c8c0416ebab0b80e4750b84c061ef6cc6b.
rustc: ./syntex-0.42.2-incr-clean
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
   Compiling bitflags v0.5.0
   Compiling winapi v0.2.8
   Compiling unicode-xid v0.0.3
   Compiling libc v0.2.15
   Compiling winapi-build v0.1.1
   Compiling rustc-serialize v0.3.19
   Compiling log v0.3.6
   Compiling kernel32-sys v0.2.2
   Compiling term v0.4.4
   Compiling syntex_pos v0.42.0
   Compiling syntex_errors v0.42.0
   Compiling syntex_syntax v0.42.0
time: 0.092; rss: 71MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 71MB	recursion limit
time: 0.000; rss: 71MB	crate injection
time: 0.000; rss: 71MB	plugin loading
time: 0.000; rss: 71MB	plugin registration
time: 0.233; rss: 144MB	expansion
time: 0.000; rss: 144MB	maybe building test harness
time: 0.006; rss: 144MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 144MB	checking for inline asm in case the target doesn't support it
time: 0.013; rss: 144MB	complete gated feature checking
time: 0.023; rss: 144MB	early lint checks
time: 0.007; rss: 144MB	AST validation
time: 0.076; rss: 159MB	name resolution
time: 0.045; rss: 184MB	lowering ast -> hir
time: 0.008; rss: 194MB	indexing hir
time: 0.006; rss: 194MB	attribute checking
time: 0.004; rss: 151MB	language item collection
time: 0.010; rss: 151MB	lifetime resolution
time: 0.000; rss: 151MB	looking for entry point
time: 0.000; rss: 151MB	looking for plugin registrar
time: 0.040; rss: 172MB	region resolution
time: 0.005; rss: 172MB	loop checking
time: 0.005; rss: 172MB	static item recursion checking
time: 0.324; rss: 172MB	compute_incremental_hashes_map
time: 0.000; rss: 172MB	load_dep_graph
time: 0.050; rss: 171MB	type collecting
time: 0.001; rss: 171MB	variance inference
time: 0.018; rss: 174MB	coherence checking
time: 0.097; rss: 178MB	wf checking
time: 0.186; rss: 184MB	item-types checking
time: 3.355; rss: 232MB	item-bodies checking
time: 0.000; rss: 232MB	drop-impl checking
time: 0.219; rss: 253MB	const checking
time: 0.045; rss: 253MB	privacy checking
time: 0.005; rss: 253MB	stability index
time: 0.017; rss: 253MB	intrinsic checking
time: 0.014; rss: 254MB	effect checking
time: 0.045; rss: 254MB	match checking
time: 0.048; rss: 255MB	liveness checking
time: 0.182; rss: 255MB	rvalue checking
time: 0.369; rss: 438MB	MIR dump
  time: 0.056; rss: 439MB	SimplifyCfg
  time: 0.075; rss: 439MB	QualifyAndPromoteConstants
  time: 0.097; rss: 439MB	TypeckMir
  time: 0.004; rss: 439MB	SimplifyBranches
  time: 0.031; rss: 439MB	SimplifyCfg
time: 0.265; rss: 439MB	MIR cleanup and validation
time: 0.486; rss: 440MB	borrow checking
time: 0.025; rss: 440MB	reachability checking
time: 0.038; rss: 440MB	death checking
time: 0.030; rss: 442MB	stability checking
time: 0.000; rss: 442MB	unused lib feature checking
time: 0.194; rss: 442MB	lint checking
time: 0.000; rss: 442MB	resolving dependency formats
  time: 0.003; rss: 442MB	NoLandingPads
  time: 0.026; rss: 442MB	SimplifyCfg
  time: 0.061; rss: 451MB	EraseRegions
  time: 0.011; rss: 451MB	AddCallGuards
  time: 0.271; rss: 465MB	ElaborateDrops
  time: 0.003; rss: 465MB	NoLandingPads
  time: 0.052; rss: 465MB	SimplifyCfg
  time: 0.028; rss: 465MB	InstCombine
  time: 0.012; rss: 465MB	Deaggregator
  time: 0.002; rss: 465MB	CopyPropagation
  time: 0.035; rss: 465MB	SimplifyLocals
  time: 0.010; rss: 465MB	AddCallGuards
  time: 0.003; rss: 465MB	PreTrans
time: 0.517; rss: 465MB	MIR optimisations
  time: 0.061; rss: 476MB	write metadata
  time: 0.397; rss: 489MB	translation item collection
  time: 0.062; rss: 500MB	codegen unit partitioning
  time: 0.047; rss: 739MB	internalize symbols
time: 4.453; rss: 739MB	translation
time: 0.000; rss: 739MB	assert dep graph
time: 0.000; rss: 739MB	serialize dep graph
incremental: re-using 0 out of 1 modules
  time: 0.530; rss: 418MB	llvm function passes [0]
  time: 0.248; rss: 428MB	llvm module passes [0]
  time: 10.441; rss: 420MB	codegen passes [0]
  time: 0.000; rss: 420MB	codegen passes [0]
time: 11.971; rss: 420MB	LLVM passes
time: 0.000; rss: 420MB	serialize work products
time: 0.344; rss: 106MB	linking
done
