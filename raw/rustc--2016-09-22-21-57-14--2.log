commit 3a5d975fdcef451375df20e5ac234bb01e453e33
Merge: 4c04e36 3863834
Author: bors <bors@rust-lang.org>
Date:   Thu Sep 22 16:33:41 2016 -0700

    Auto merge of #36154 - nrc:proc-macro-init, r=@jseyfried
    
    Adds a `ProcMacro` form of syntax extension
    
    This commit adds syntax extension forms matching the types for procedural macros 2.0 (RFC #1566), these still require the usual syntax extension boiler plate, but this is a first step towards proper implementation and should be useful for macros 1.1 stuff too.
    
    Supports both attribute-like and function-like macros.
    
    Note that RFC #1566 has not been accepted yet, but I think there is consensus that we want to head in vaguely that direction and so this PR will be useful in any case. It is also fairly easy to undo and does not break any existing programs.
    
    This is related to #35957 in that I hope it can be used in the implementation of macros 1.1, however, there is no direct overlap and is more of a complement than a competing proposal. There is still a fair bit of work to do before the two can be combined.
    
    r? @jseyfried
    
    cc @alexcrichton, @cgswords, @eddyb, @aturon
cfg: version 1.13.0-dev (3a5d975fd 2016-09-22)
cfg: build triple x86_64-unknown-linux-gnu
cfg: host triples x86_64-unknown-linux-gnu
cfg: target triples x86_64-unknown-linux-gnu
cfg: host for x86_64-unknown-linux-gnu is x86_64
cfg: os for x86_64-unknown-linux-gnu is unknown-linux-gnu
cfg: have good valgrind for x86_64-unknown-linux-gnu
cfg: using CC=gcc (CFG_CC)
cfg: disabling valgrind run-pass tests
rustc: x86_64-unknown-linux-gnu/stage0/lib/rustlib/x86_64-unknown-linux-gnu/lib/libstd
/root/rust/mk/target.mk:212: recipe for target 'x86_64-unknown-linux-gnu/stage0/lib/rustlib/x86_64-unknown-linux-gnu/lib/stamp.std' failed
