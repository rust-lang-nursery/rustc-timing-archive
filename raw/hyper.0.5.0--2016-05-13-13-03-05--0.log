commit bc5789902bae5e3437bcfea9a06bc0fcb11726f0
Merge: edb6f83 0a38089
Author: bors <bors@rust-lang.org>
Date:   Fri May 13 08:46:16 2016 -0700

    Auto merge of #33531 - antonblanchard:local_stage0_fix, r=alexcrichton
    
    Copy more libraries from local Rust to stage0
    
    When bootstrapping Rust using a previously built toolchain, I noticed
    a number of libraries were not copied in. As a result the copied in
    rustc fails to execute because it can't find all its dependences.
    
    Add them into the local_stage0.sh script.
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling winapi v0.2.7
   Compiling winapi-build v0.1.1
   Compiling rustc-serialize v0.3.19
   Compiling pkg-config v0.3.8
   Compiling httparse v0.1.6
   Compiling bitflags v0.3.3
   Compiling unicase v0.1.0
   Compiling lazy_static v0.1.16
   Compiling typeable v0.1.2
   Compiling gcc v0.3.28
   Compiling log v0.3.6
   Compiling libc v0.2.11
   Compiling kernel32-sys v0.2.2
   Compiling traitobject v0.0.1
   Compiling mime v0.0.11
   Compiling matches v0.1.2
   Compiling libc v0.1.12
   Compiling rand v0.3.14
   Compiling num_cpus v0.2.12
   Compiling time v0.1.35
   Compiling openssl-sys v0.6.7
   Compiling openssl v0.6.7
   Compiling uuid v0.1.18
   Compiling url v0.2.38
   Compiling cookie v0.1.21
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.031; rss: 53MB	parsing
Lines of code:             9154
Pre-expansion node count:  45594
time: 0.008; rss: 53MB	configuration 1
time: 0.000; rss: 53MB	recursion limit
time: 0.000; rss: 53MB	crate injection
time: 0.005; rss: 62MB	macro loading
time: 0.000; rss: 62MB	plugin loading
time: 0.000; rss: 62MB	plugin registration
time: 0.189; rss: 71MB	expansion
time: 0.030; rss: 71MB	configuration 2
time: 0.000; rss: 71MB	gated configuration checking
time: 0.011; rss: 71MB	maybe building test harness
time: 0.008; rss: 71MB	prelude injection
time: 0.001; rss: 71MB	checking that all macro invocations are gone
time: 0.000; rss: 71MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 71MB	complete gated feature checking
Post-expansion node count: 107141
time: 0.008; rss: 71MB	assigning node ids
time: 0.003; rss: 73MB	collecting defs
time: 0.005; rss: 76MB	external crate/lib resolution
time: 0.006; rss: 76MB	early lint checks
time: 0.026; rss: 97MB	name resolution
time: 0.010; rss: 101MB	lowering ast -> hir
time: 0.001; rss: 102MB	indexing hir
time: 0.001; rss: 102MB	attribute checking
time: 0.001; rss: 93MB	language item collection
time: 0.002; rss: 93MB	lifetime resolution
time: 0.000; rss: 93MB	looking for entry point
time: 0.000; rss: 93MB	looking for plugin registrar
time: 0.006; rss: 97MB	region resolution
time: 0.001; rss: 97MB	loop checking
time: 0.001; rss: 97MB	static item recursion checking
time: 0.000; rss: 97MB	load_dep_graph
time: 0.018; rss: 108MB	type collecting
time: 0.000; rss: 108MB	variance inference
time: 0.043; rss: 123MB	coherence checking
time: 0.091; rss: 124MB	wf checking
time: 0.036; rss: 124MB	item-types checking
time: 0.530; rss: 138MB	item-bodies checking
time: 0.000; rss: 138MB	drop-impl checking
time: 0.043; rss: 139MB	const checking
time: 0.007; rss: 139MB	privacy checking
time: 0.001; rss: 139MB	stability index
time: 0.006; rss: 139MB	intrinsic checking
time: 0.002; rss: 139MB	effect checking
time: 0.016; rss: 139MB	match checking
time: 0.005; rss: 139MB	liveness checking
time: 0.030; rss: 139MB	rvalue checking
time: 0.061; rss: 148MB	MIR dump
time: 0.040; rss: 148MB	MIR passes
time: 0.071; rss: 148MB	borrow checking
time: 0.003; rss: 149MB	reachability checking
time: 0.006; rss: 149MB	death checking
time: 0.006; rss: 149MB	stability checking
time: 0.000; rss: 149MB	unused lib feature checking
time: 0.049; rss: 149MB	lint checking
time: 0.000; rss: 149MB	resolving dependency formats
time: 0.012; rss: 149MB	Prepare MIR codegen passes
  time: 0.216; rss: 159MB	translation item collection
  time: 0.010; rss: 161MB	codegen unit partitioning
  time: 0.136; rss: 289MB	write metadata
time: 1.567; rss: 289MB	translation
time: 0.001; rss: 289MB	assert dep graph
time: 0.000; rss: 289MB	serialize dep graph
  time: 0.096; rss: 175MB	llvm function passes [0]
  time: 0.048; rss: 175MB	llvm module passes [0]
  time: 1.635; rss: 179MB	codegen passes [0]
  time: 0.001; rss: 130MB	codegen passes [0]
time: 1.981; rss: 129MB	LLVM passes
time: 0.174; rss: 127MB	linking
done
