commit 816a34aca23f3ebd0fddf79ebdf96c9fae976f58
Merge: d9aae63 a1882ca
Author: bors <bors@rust-lang.org>
Date:   Thu Dec 8 07:05:19 2016 +0000

    Auto merge of #38146 - kali:master, r=alexcrichton
    
    fix objc ABI in std::env::args
    
    iOS use different calling convention for `objc_msgSend` depending on the platform. armv7 expect good old variadic arguments, but aarch64 wants "normal" convention: `objc_msgSend` has to be called mimicking the actual callee prototype.
    
    https://developer.apple.com/library/content/documentation/General/Conceptual/CocoaTouch64BitGuide/ConvertingYourAppto64-Bit/ConvertingYourAppto64-Bit.html#//apple_ref/doc/uid/TP40013501-CH3-SW26
    
    This currently breaks std::env:args() on aarch64 iOS devices. As far as I can tell, in the standard library, this is the only occurrence of ObjectiveC dispatching.
rustc: ./syntex-0.42.2@010-incr@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.241; rss: 151MB	expansion
time: 0.000; rss: 151MB	maybe building test harness
time: 0.006; rss: 151MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 151MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 151MB	complete gated feature checking
time: 0.023; rss: 151MB	early lint checks
time: 0.007; rss: 151MB	AST validation
time: 0.075; rss: 166MB	name resolution
time: 0.058; rss: 199MB	lowering ast -> hir
time: 0.010; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 153MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.046; rss: 176MB	region resolution
time: 0.008; rss: 176MB	loop checking
time: 0.002; rss: 176MB	static item recursion checking
time: 0.381; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.021; rss: 181MB	stability checking
time: 0.053; rss: 189MB	type collecting
time: 0.004; rss: 189MB	variance inference
time: 0.006; rss: 193MB	impl wf inference
time: 0.026; rss: 197MB	coherence checking
time: 0.087; rss: 199MB	wf checking
time: 0.197; rss: 208MB	item-types checking
time: 3.562; rss: 267MB	item-bodies checking
time: 0.000; rss: 267MB	drop-impl checking
time: 0.214; rss: 276MB	const checking
time: 0.057; rss: 277MB	privacy checking
time: 0.020; rss: 283MB	intrinsic checking
time: 0.016; rss: 283MB	effect checking
time: 0.049; rss: 283MB	match checking
time: 0.048; rss: 290MB	liveness checking
time: 0.172; rss: 292MB	rvalue checking
time: 0.360; rss: 481MB	MIR dump
  time: 0.056; rss: 483MB	SimplifyCfg
  time: 0.073; rss: 483MB	QualifyAndPromoteConstants
  time: 0.121; rss: 500MB	TypeckMir
  time: 0.004; rss: 500MB	SimplifyBranches
  time: 0.033; rss: 500MB	SimplifyCfg
time: 0.288; rss: 500MB	MIR cleanup and validation
time: 0.473; rss: 500MB	borrow checking
time: 0.024; rss: 500MB	reachability checking
time: 0.038; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.178; rss: 500MB	lint checking
time: 0.000; rss: 500MB	resolving dependency formats
  time: 0.004; rss: 500MB	NoLandingPads
  time: 0.027; rss: 500MB	SimplifyCfg
  time: 0.064; rss: 509MB	EraseRegions
  time: 0.011; rss: 509MB	AddCallGuards
  time: 0.272; rss: 530MB	ElaborateDrops
  time: 0.003; rss: 530MB	NoLandingPads
  time: 0.052; rss: 530MB	SimplifyCfg
  time: 0.029; rss: 530MB	InstCombine
  time: 0.012; rss: 530MB	Deaggregator
  time: 0.004; rss: 530MB	CopyPropagation
  time: 0.035; rss: 530MB	SimplifyLocals
  time: 0.010; rss: 530MB	AddCallGuards
  time: 0.003; rss: 530MB	PreTrans
time: 0.525; rss: 530MB	MIR optimisations
  time: 0.064; rss: 538MB	write metadata
  time: 0.398; rss: 551MB	translation item collection
  time: 0.073; rss: 555MB	codegen unit partitioning
  time: 0.048; rss: 1456MB	internalize symbols
time: 11.601; rss: 1456MB	translation
time: 0.000; rss: 1456MB	assert dep graph
time: 1.372; rss: 1484MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.001; rss: 1203MB	llvm function passes [2]
time: 0.000; rss: 1205MB	llvm module passes [2]
time: 0.001; rss: 1209MB	llvm function passes [0]
time: 0.000; rss: 1213MB	llvm module passes [0]
time: 0.001; rss: 1213MB	llvm function passes [5]
time: 0.000; rss: 1213MB	llvm module passes [5]
time: 0.003; rss: 1213MB	llvm function passes [4]
time: 0.006; rss: 1218MB	llvm function passes [3]
time: 0.000; rss: 1218MB	llvm module passes [3]
time: 0.007; rss: 1218MB	llvm function passes [6]
time: 0.001; rss: 1222MB	llvm function passes [9]
time: 0.000; rss: 1222MB	llvm module passes [9]
time: 0.010; rss: 1224MB	llvm module passes [4]
time: 0.007; rss: 1224MB	llvm module passes [6]
time: 0.020; rss: 1224MB	llvm function passes [1]
time: 0.017; rss: 1226MB	codegen passes [2]
time: 0.019; rss: 1228MB	codegen passes [0]
time: 0.009; rss: 1228MB	llvm module passes [1]
time: 0.024; rss: 1228MB	llvm function passes [10]
time: 0.015; rss: 1245MB	llvm module passes [10]
time: 0.034; rss: 1248MB	llvm function passes [2]
time: 0.056; rss: 1254MB	codegen passes [5]
time: 0.017; rss: 1254MB	llvm function passes [11]
time: 0.009; rss: 1254MB	llvm module passes [2]
time: 0.008; rss: 1254MB	llvm module passes [11]
time: 0.069; rss: 1256MB	codegen passes [3]
time: 0.000; rss: 1256MB	llvm function passes [3]
time: 0.000; rss: 1256MB	llvm module passes [3]
time: 0.001; rss: 1256MB	codegen passes [3]
time: 0.068; rss: 1256MB	codegen passes [9]
time: 0.004; rss: 1260MB	llvm function passes [3]
time: 0.001; rss: 1260MB	llvm module passes [3]
time: 0.000; rss: 1262MB	llvm function passes [15]
time: 0.000; rss: 1262MB	llvm module passes [15]
time: 0.062; rss: 1262MB	llvm function passes [0]
time: 0.010; rss: 1269MB	codegen passes [15]
time: 0.001; rss: 1269MB	llvm function passes [15]
time: 0.000; rss: 1269MB	llvm module passes [15]
time: 0.055; rss: 1271MB	llvm function passes [14]
time: 0.092; rss: 1273MB	codegen passes [4]
time: 0.000; rss: 1273MB	llvm function passes [4]
time: 0.000; rss: 1273MB	llvm module passes [4]
time: 0.004; rss: 1273MB	codegen passes [4]
time: 0.012; rss: 1273MB	llvm module passes [14]
time: 0.021; rss: 1277MB	codegen passes [15]
time: 0.039; rss: 1277MB	llvm module passes [0]
time: 0.000; rss: 1282MB	llvm function passes [16]
time: 0.000; rss: 1282MB	llvm module passes [16]
time: 0.001; rss: 1288MB	codegen passes [16]
time: 0.066; rss: 1294MB	codegen passes [3]
time: 0.090; rss: 1295MB	llvm function passes [9]
time: 0.173; rss: 1295MB	llvm function passes [8]
time: 0.047; rss: 1297MB	llvm function passes [17]
time: 0.012; rss: 1299MB	llvm module passes [9]
time: 0.023; rss: 1307MB	llvm module passes [17]
time: 0.201; rss: 1307MB	llvm function passes [7]
time: 0.068; rss: 1314MB	llvm module passes [8]
time: 0.032; rss: 1314MB	llvm function passes [21]
time: 0.127; rss: 1314MB	llvm function passes [15]
time: 0.009; rss: 1314MB	llvm module passes [21]
time: 0.015; rss: 1323MB	llvm module passes [15]
time: 0.179; rss: 1329MB	llvm function passes [13]
time: 0.153; rss: 1337MB	llvm function passes [16]
time: 0.091; rss: 1336MB	llvm function passes [20]
time: 0.010; rss: 1335MB	llvm function passes [24]
time: 0.003; rss: 1335MB	llvm module passes [24]
time: 0.279; rss: 1343MB	llvm function passes [12]
time: 0.030; rss: 1342MB	llvm module passes [20]
time: 0.042; rss: 1346MB	llvm module passes [16]
time: 0.081; rss: 1346MB	llvm function passes [19]
time: 0.190; rss: 1346MB	llvm function passes [18]
time: 0.061; rss: 1346MB	llvm function passes [22]
time: 0.014; rss: 1350MB	llvm module passes [22]
time: 0.027; rss: 1350MB	llvm module passes [19]
time: 0.040; rss: 1350MB	llvm function passes [26]
time: 0.155; rss: 1350MB	llvm module passes [7]
time: 0.091; rss: 1350MB	llvm module passes [13]
time: 0.256; rss: 1350MB	llvm function passes [4]
time: 0.016; rss: 1352MB	llvm module passes [26]
time: 0.003; rss: 1360MB	llvm function passes [27]
time: 0.002; rss: 1360MB	llvm module passes [27]
time: 0.079; rss: 1365MB	llvm module passes [18]
time: 0.105; rss: 1382MB	llvm function passes [25]
time: 0.056; rss: 1382MB	codegen passes [27]
time: 0.016; rss: 1397MB	llvm module passes [25]
time: 0.160; rss: 1400MB	llvm module passes [12]
time: 0.076; rss: 1412MB	llvm function passes [28]
time: 0.015; rss: 1414MB	llvm function passes [34]
time: 0.012; rss: 1414MB	llvm module passes [28]
time: 0.002; rss: 1414MB	llvm function passes [36]
time: 0.000; rss: 1414MB	llvm module passes [36]
time: 0.011; rss: 1414MB	llvm module passes [34]
time: 0.039; rss: 1421MB	codegen passes [36]
time: 0.262; rss: 1416MB	llvm function passes [23]
time: 0.057; rss: 1421MB	codegen passes [37]
time: 0.217; rss: 1427MB	llvm function passes [29]
time: 0.151; rss: 1420MB	llvm function passes [35]
time: 0.316; rss: 1409MB	codegen passes [24]
time: 0.603; rss: 1410MB	llvm function passes [5]
time: 0.081; rss: 1410MB	llvm module passes [29]
time: 0.042; rss: 1409MB	llvm module passes [35]
time: 0.335; rss: 1416MB	llvm module passes [4]
time: 0.573; rss: 1424MB	llvm function passes [3]
time: 0.167; rss: 1427MB	llvm module passes [23]
time: 0.694; rss: 1411MB	codegen passes [6]
time: 0.116; rss: 1402MB	codegen passes [34]
time: 0.349; rss: 1401MB	llvm function passes [32]
time: 0.370; rss: 1402MB	llvm function passes [27]
time: 0.330; rss: 1402MB	llvm function passes [31]
time: 0.148; rss: 1431MB	llvm module passes [27]
time: 0.580; rss: 1439MB	llvm function passes [30]
time: 0.189; rss: 1434MB	llvm module passes [32]
time: 0.528; rss: 1434MB	llvm function passes [33]
time: 0.337; rss: 1436MB	llvm module passes [5]
time: 0.114; rss: 1440MB	llvm module passes [30]
time: 0.112; rss: 1441MB	llvm module passes [33]
time: 0.396; rss: 1455MB	llvm module passes [3]
time: 0.324; rss: 1455MB	llvm module passes [31]
time: 1.049; rss: 1469MB	codegen passes [1]
time: 1.084; rss: 1465MB	codegen passes [2]
time: 0.561; rss: 1474MB	codegen passes [35]
time: 1.289; rss: 1489MB	codegen passes [11]
time: 1.250; rss: 1466MB	codegen passes [21]
time: 1.324; rss: 1466MB	codegen passes [22]
time: 1.652; rss: 1427MB	codegen passes [10]
time: 1.589; rss: 1418MB	codegen passes [14]
time: 1.756; rss: 1431MB	codegen passes [9]
time: 1.742; rss: 1433MB	codegen passes [26]
time: 1.853; rss: 1422MB	codegen passes [28]
time: 2.369; rss: 1503MB	codegen passes [17]
time: 1.685; rss: 1491MB	codegen passes [32]
time: 2.360; rss: 1491MB	codegen passes [15]
time: 2.479; rss: 1499MB	codegen passes [19]
time: 2.627; rss: 1488MB	codegen passes [25]
time: 2.327; rss: 1582MB	codegen passes [31]
time: 2.617; rss: 1599MB	codegen passes [4]
time: 3.280; rss: 1568MB	codegen passes [0]
time: 3.019; rss: 1562MB	codegen passes [20]
time: 3.698; rss: 1692MB	codegen passes [16]
time: 3.903; rss: 1655MB	codegen passes [13]
time: 3.566; rss: 1647MB	codegen passes [30]
time: 3.825; rss: 1676MB	codegen passes [8]
time: 3.840; rss: 1619MB	codegen passes [18]
time: 3.761; rss: 1602MB	codegen passes [33]
time: 3.679; rss: 1565MB	codegen passes [3]
time: 4.252; rss: 1540MB	codegen passes [27]
time: 4.645; rss: 1547MB	codegen passes [29]
time: 4.855; rss: 1509MB	codegen passes [23]
time: 5.020; rss: 1444MB	codegen passes [12]
time: 5.472; rss: 1394MB	codegen passes [7]
time: 5.383; rss: 1326MB	codegen passes [5]
time: 7.778; rss: 1322MB	LLVM passes
time: 0.000; rss: 1322MB	serialize work products
time: 1.065; rss: 292MB	linking
done
