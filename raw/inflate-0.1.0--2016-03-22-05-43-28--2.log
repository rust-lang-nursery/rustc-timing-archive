commit 8fc0554e4df413537760850108b10aafcdccd4b0
Merge: 6cc502c 6e4bc47
Author: bors <bors@rust-lang.org>
Date:   Tue Mar 22 02:05:16 2016 -0700

    Auto merge of #32388 - semarie:snapshot-openbsd, r=alexcrichton
    
    register openbsd snapshot
    
    Here openbsd version for latest snapshot.
    
    The archive is at http://semarie.online.fr/rust/rust-stage0-2016-03-18-235d774-openbsd-x86_64-c5b6feda38138a12cd5c05574b585dadebbb5e87.tar.bz2
    
    These segmentation fault starts to be annoying. @dhuseby do you think it would be possible to have a shell access to openbsd buildbot in order to try to investigating a bit the reason of them ?
    
    r? @alexcrichton
    Ref #32345
rustc: ./inflate-0.1.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling inflate v0.1.0 (file:///root/benchmarks/inflate-0.1.0)
time: 0.004; rss: 39MB	parsing
Lines of code:             956
Pre-expansion node count:  4761
time: 0.001; rss: 39MB	configuration 1
time: 0.000; rss: 39MB	recursion limit
time: 0.000; rss: 39MB	gated macro checking
time: 0.000; rss: 39MB	crate injection
time: 0.003; rss: 41MB	macro loading
time: 0.000; rss: 41MB	plugin loading
time: 0.000; rss: 41MB	plugin registration
time: 0.080; rss: 49MB	expansion
time: 0.001; rss: 49MB	complete gated feature checking 1
time: 0.009; rss: 49MB	configuration 2
time: 0.000; rss: 49MB	gated configuration checking
time: 0.004; rss: 49MB	maybe building test harness
time: 0.004; rss: 49MB	prelude injection
time: 0.000; rss: 49MB	checking that all macro invocations are gone
time: 0.000; rss: 49MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 49MB	complete gated feature checking 2
time: 0.000; rss: 49MB	const fn bodies and arguments
Post-expansion node count: 54798
time: 0.004; rss: 49MB	assigning node ids
time: 0.009; rss: 55MB	lowering ast -> hir
time: 0.002; rss: 55MB	indexing hir
time: 0.001; rss: 55MB	attribute checking
time: 0.004; rss: 55MB	early lint checks
time: 0.001; rss: 52MB	external crate/lib resolution
time: 0.001; rss: 52MB	language item collection
time: 0.010; rss: 63MB	resolution
time: 0.001; rss: 63MB	lifetime resolution
time: 0.000; rss: 63MB	looking for entry point
time: 0.000; rss: 63MB	looking for plugin registrar
time: 0.003; rss: 63MB	region resolution
time: 0.000; rss: 63MB	loop checking
time: 0.000; rss: 63MB	static item recursion checking
time: 0.001; rss: 65MB	type collecting
time: 0.000; rss: 65MB	variance inference
time: 0.015; rss: 79MB	coherence checking
time: 0.002; rss: 79MB	wf checking
time: 0.002; rss: 79MB	item-types checking
time: 2.872; rss: 101MB	item-bodies checking
time: 0.000; rss: 101MB	drop-impl checking
time: 0.013; rss: 102MB	const checking
time: 0.002; rss: 102MB	privacy checking
time: 0.000; rss: 102MB	stability index
time: 0.000; rss: 102MB	intrinsic checking
time: 0.001; rss: 102MB	effect checking
time: 0.003; rss: 102MB	match checking
time: 0.065; rss: 101MB	liveness checking
time: 0.009; rss: 101MB	rvalue checking
time: 0.027; rss: 115MB	MIR dump
time: 0.014; rss: 114MB	MIR passes
time: 0.203; rss: 114MB	borrow checking
time: 0.000; rss: 114MB	reachability checking
time: 0.003; rss: 114MB	death checking
time: 0.002; rss: 114MB	stability checking
time: 0.000; rss: 114MB	unused lib feature checking
time: 0.017; rss: 115MB	lint checking
time: 0.000; rss: 115MB	resolving dependency formats
  time: 0.012; rss: 126MB	translation item collection
  time: 0.003; rss: 143MB	write metadata
time: 0.357; rss: 136MB	translation
  time: 0.026; rss: 99MB	llvm function passes [0]
  time: 0.005; rss: 100MB	llvm module passes [0]
  time: 0.496; rss: 105MB	codegen passes [0]
  time: 0.001; rss: 92MB	codegen passes [0]
time: 0.567; rss: 92MB	LLVM passes
time: 0.034; rss: 92MB	linking
done
