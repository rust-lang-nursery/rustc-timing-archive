commit 23ccaddaa7d1cb71e49ef1b1f423b3245fa3a879
Merge: ebff638 c6480e8
Author: bors <bors@rust-lang.org>
Date:   Sat Apr 23 14:40:06 2016 -0700

    Auto merge of #33124 - sfackler:kill-ipv6-only, r=alexcrichton
    
    Remove IPV6_V6ONLY functionality
    
    These settings can only be adjusted before bind time, which doesn't make
    sense in the current set of functionality. These methods are stable, but
    haven't hit a stable release yet.
    
    Closes #33052
    
    [breaking-change]
    
    r? @alexcrichton
    
    Will also need a backport to the beta.
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling rustc-serialize v0.3.19
   Compiling typeable v0.1.2
   Compiling matches v0.1.2
   Compiling log v0.3.6
   Compiling traitobject v0.0.1
   Compiling bitflags v0.3.3
   Compiling gcc v0.3.27
   Compiling httparse v0.1.6
   Compiling libc v0.1.12
   Compiling winapi v0.2.6
   Compiling lazy_static v0.1.16
   Compiling winapi-build v0.1.1
   Compiling unicase v0.1.0
   Compiling libc v0.2.10
   Compiling kernel32-sys v0.2.2
   Compiling mime v0.0.11
   Compiling pkg-config v0.3.8
   Compiling time v0.1.35
   Compiling rand v0.3.14
   Compiling num_cpus v0.2.11
   Compiling openssl-sys v0.6.7
   Compiling openssl v0.6.7
   Compiling uuid v0.1.18
   Compiling url v0.2.38
   Compiling cookie v0.1.21
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.029; rss: 53MB	parsing
Lines of code:             9154
Pre-expansion node count:  45594
time: 0.008; rss: 53MB	configuration 1
time: 0.000; rss: 53MB	recursion limit
time: 0.000; rss: 53MB	gated macro checking
time: 0.000; rss: 53MB	crate injection
time: 0.004; rss: 62MB	macro loading
time: 0.000; rss: 62MB	plugin loading
time: 0.000; rss: 62MB	plugin registration
time: 0.186; rss: 71MB	expansion
time: 0.005; rss: 71MB	complete gated feature checking 1
time: 0.031; rss: 71MB	configuration 2
time: 0.000; rss: 71MB	gated configuration checking
time: 0.011; rss: 71MB	maybe building test harness
time: 0.009; rss: 71MB	prelude injection
time: 0.001; rss: 71MB	checking that all macro invocations are gone
time: 0.000; rss: 71MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 71MB	complete gated feature checking 2
time: 0.001; rss: 71MB	const fn bodies and arguments
Post-expansion node count: 107125
time: 0.008; rss: 71MB	assigning node ids
time: 0.003; rss: 73MB	collecting defs
time: 0.005; rss: 76MB	external crate/lib resolution
time: 0.012; rss: 82MB	lowering ast -> hir
time: 0.002; rss: 84MB	indexing hir
time: 0.001; rss: 84MB	attribute checking
time: 0.007; rss: 84MB	early lint checks
time: 0.001; rss: 76MB	language item collection
time: 0.023; rss: 95MB	name resolution
time: 0.002; rss: 95MB	lifetime resolution
time: 0.000; rss: 95MB	looking for entry point
time: 0.000; rss: 95MB	looking for plugin registrar
time: 0.006; rss: 97MB	region resolution
time: 0.001; rss: 97MB	loop checking
time: 0.001; rss: 97MB	static item recursion checking
time: 0.000; rss: 97MB	load_dep_graph
time: 0.018; rss: 106MB	type collecting
time: 0.000; rss: 106MB	variance inference
time: 0.044; rss: 121MB	coherence checking
time: 0.073; rss: 124MB	wf checking
time: 0.028; rss: 124MB	item-types checking
time: 0.466; rss: 146MB	item-bodies checking
time: 0.000; rss: 146MB	drop-impl checking
time: 0.037; rss: 148MB	const checking
time: 0.010; rss: 149MB	privacy checking
time: 0.001; rss: 149MB	stability index
time: 0.004; rss: 149MB	intrinsic checking
time: 0.002; rss: 149MB	effect checking
time: 0.012; rss: 149MB	match checking
time: 0.005; rss: 149MB	liveness checking
time: 0.032; rss: 149MB	rvalue checking
time: 0.050; rss: 156MB	MIR dump
time: 0.022; rss: 156MB	MIR passes
time: 0.066; rss: 156MB	borrow checking
time: 0.003; rss: 156MB	reachability checking
time: 0.007; rss: 156MB	death checking
time: 0.006; rss: 156MB	stability checking
time: 0.000; rss: 156MB	unused lib feature checking
time: 0.048; rss: 156MB	lint checking
time: 0.000; rss: 156MB	resolving dependency formats
time: 0.011; rss: 156MB	Prepare MIR codegen passes
  time: 0.183; rss: 176MB	translation item collection
  time: 0.007; rss: 176MB	codegen unit partitioning
  time: 0.137; rss: 294MB	write metadata
time: 1.479; rss: 294MB	translation
time: 0.001; rss: 294MB	assert dep graph
time: 0.000; rss: 294MB	serialize dep graph
  time: 0.097; rss: 174MB	llvm function passes [0]
  time: 0.046; rss: 175MB	llvm module passes [0]
  time: 1.620; rss: 180MB	codegen passes [0]
  time: 0.001; rss: 128MB	codegen passes [0]
time: 1.960; rss: 127MB	LLVM passes
time: 0.174; rss: 124MB	linking
done
