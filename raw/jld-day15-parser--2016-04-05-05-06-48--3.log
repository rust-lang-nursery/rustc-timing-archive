commit 7fd331e16642363c333804fe3322ae6bc0be8fbc
Merge: 600dc35 6f09dea
Author: bors <bors@rust-lang.org>
Date:   Mon Apr 4 21:50:05 2016 -0700

    Auto merge of #32328 - jseyfried:coherence, r=nikomatsakis
    
    resolve: Improve import failure detection and lay groundwork for RFC 1422
    
    This PR improves import failure detection and lays some groundwork for RFC 1422.
    More specifically, it
     - Avoids recomputing the resolution of an import directive's module path.
     - Refactors code in `resolve_imports` that does not scale to the arbitrarily many levels of visibility that will be required by RFC 1422.
      - Replaces `ModuleS`'s fields `public_glob_count`, `private_glob_count`, and `resolved_globs` with a list of glob import directives `globs`.
      - Replaces `NameResolution`'s fields `pub_outstanding_references` and `outstanding_references` with a field `single_imports` of a newly defined type `SingleImports`.
     - Improves import failure detection by detecting cycles that include single imports (currently, only cycles of globs are detected). This fixes #32119.
    
    r? @nikomatsakis
rustc: ./jld-day15-parser
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling day15 v0.1.0 (file:///root/benchmarks/jld-day15-parser)
time: 0.001; rss: 38MB	parsing
Lines of code:             72
Pre-expansion node count:  673
time: 0.000; rss: 38MB	configuration 1
time: 0.000; rss: 38MB	recursion limit
time: 0.000; rss: 38MB	gated macro checking
time: 0.000; rss: 38MB	crate injection
time: 0.003; rss: 41MB	macro loading
time: 0.000; rss: 41MB	plugin loading
time: 0.000; rss: 41MB	plugin registration
time: 0.002; rss: 41MB	expansion
time: 0.000; rss: 41MB	complete gated feature checking 1
time: 0.000; rss: 41MB	configuration 2
time: 0.000; rss: 41MB	gated configuration checking
time: 0.000; rss: 41MB	maybe building test harness
time: 0.000; rss: 41MB	prelude injection
time: 0.000; rss: 41MB	checking that all macro invocations are gone
time: 0.000; rss: 41MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 41MB	complete gated feature checking 2
time: 0.000; rss: 41MB	const fn bodies and arguments
Post-expansion node count: 1176
time: 0.000; rss: 41MB	assigning node ids
time: 0.000; rss: 41MB	lowering ast -> hir
time: 0.000; rss: 41MB	indexing hir
time: 0.000; rss: 41MB	attribute checking
time: 0.000; rss: 41MB	early lint checks
time: 0.001; rss: 41MB	external crate/lib resolution
time: 0.000; rss: 45MB	language item collection
time: 0.001; rss: 49MB	resolution
time: 0.000; rss: 49MB	lifetime resolution
time: 0.000; rss: 49MB	looking for entry point
time: 0.000; rss: 49MB	looking for plugin registrar
time: 0.000; rss: 49MB	region resolution
time: 0.000; rss: 49MB	loop checking
time: 0.000; rss: 49MB	static item recursion checking
time: 0.001; rss: 54MB	type collecting
time: 0.000; rss: 54MB	variance inference
time: 0.005; rss: 58MB	coherence checking
time: 0.007; rss: 64MB	wf checking
time: 0.000; rss: 64MB	item-types checking
time: 1.608; rss: 143MB	item-bodies checking
time: 0.000; rss: 143MB	drop-impl checking
time: 0.001; rss: 143MB	const checking
time: 0.000; rss: 143MB	privacy checking
time: 0.000; rss: 143MB	stability index
time: 0.000; rss: 143MB	intrinsic checking
time: 0.000; rss: 143MB	effect checking
time: 0.000; rss: 143MB	match checking
time: 0.000; rss: 143MB	liveness checking
time: 0.002; rss: 143MB	rvalue checking
time: 0.001; rss: 144MB	MIR dump
time: 0.000; rss: 144MB	MIR passes
time: 0.001; rss: 144MB	borrow checking
time: 0.000; rss: 144MB	reachability checking
time: 0.000; rss: 144MB	death checking
time: 0.000; rss: 144MB	stability checking
time: 0.000; rss: 144MB	unused lib feature checking
time: 0.004; rss: 146MB	lint checking
time: 0.001; rss: 146MB	resolving dependency formats
time: 0.000; rss: 147MB	Prepare MIR codegen passes
  time: 13.662; rss: 186MB	translation item collection
  time: 0.000; rss: 227MB	write metadata
time: 42.782; rss: 227MB	translation
  time: 0.014; rss: 102MB	llvm function passes [0]
  time: 0.001; rss: 102MB	llvm module passes [0]
  time: 0.272; rss: 108MB	codegen passes [0]
  time: 0.000; rss: 101MB	codegen passes [0]
time: 0.296; rss: 101MB	LLVM passes
  time: 0.118; rss: 100MB	running linker
time: 0.119; rss: 100MB	linking
done
