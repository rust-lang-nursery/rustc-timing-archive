commit d64b7030658c839c60d7c7165e8be19283c3f28c
Merge: 2217bd7 49c6b3c
Author: bors <bors@rust-lang.org>
Date:   Fri Nov 25 20:19:47 2016 -0600

    Auto merge of #37960 - samestep:five, r=frewsxcv
    
    Use literal 5 instead of five in book section 4.1
    
    The other two code snippets in this sentence are valid code, so it makes more sense to use the literal `5` rather than the invalid symbol `five`.
rustc: ./syntex-0.42.2-incr-clean
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
   Compiling syntex_syntax v0.42.0
time: 0.131; rss: 63MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 63MB	recursion limit
time: 0.000; rss: 63MB	crate injection
time: 0.000; rss: 63MB	plugin loading
time: 0.000; rss: 63MB	plugin registration
time: 0.328; rss: 134MB	expansion
time: 0.000; rss: 134MB	maybe building test harness
time: 0.006; rss: 134MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 134MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 134MB	complete gated feature checking
time: 0.022; rss: 134MB	early lint checks
time: 0.007; rss: 134MB	AST validation
time: 0.106; rss: 149MB	name resolution
time: 0.092; rss: 174MB	lowering ast -> hir
time: 0.023; rss: 182MB	indexing hir
time: 0.006; rss: 182MB	attribute checking
time: 0.005; rss: 139MB	language item collection
time: 0.011; rss: 139MB	lifetime resolution
time: 0.000; rss: 139MB	looking for entry point
time: 0.000; rss: 139MB	looking for plugin registrar
time: 0.086; rss: 159MB	region resolution
time: 0.005; rss: 159MB	loop checking
time: 0.005; rss: 159MB	static item recursion checking
time: 0.333; rss: 160MB	compute_incremental_hashes_map
time: 0.000; rss: 160MB	load_dep_graph
time: 0.047; rss: 165MB	type collecting
time: 0.001; rss: 165MB	variance inference
time: 0.002; rss: 166MB	impl wf inference
time: 0.018; rss: 167MB	coherence checking
time: 0.089; rss: 169MB	wf checking
time: 0.179; rss: 172MB	item-types checking
time: 6.395; rss: 214MB	item-bodies checking
time: 0.000; rss: 214MB	drop-impl checking
time: 0.284; rss: 236MB	const checking
time: 0.049; rss: 236MB	privacy checking
time: 0.006; rss: 236MB	stability index
time: 0.018; rss: 236MB	intrinsic checking
time: 0.015; rss: 236MB	effect checking
time: 0.047; rss: 236MB	match checking
time: 0.071; rss: 237MB	liveness checking
time: 0.187; rss: 237MB	rvalue checking
time: 0.609; rss: 404MB	MIR dump
  time: 0.059; rss: 410MB	SimplifyCfg
  time: 0.075; rss: 411MB	QualifyAndPromoteConstants
  time: 0.106; rss: 411MB	TypeckMir
  time: 0.004; rss: 411MB	SimplifyBranches
  time: 0.031; rss: 411MB	SimplifyCfg
time: 0.275; rss: 411MB	MIR cleanup and validation
time: 0.567; rss: 414MB	borrow checking
time: 0.020; rss: 414MB	reachability checking
time: 0.040; rss: 414MB	death checking
time: 0.035; rss: 415MB	stability checking
time: 0.000; rss: 415MB	unused lib feature checking
time: 0.204; rss: 415MB	lint checking
time: 0.000; rss: 415MB	resolving dependency formats
  time: 0.003; rss: 415MB	NoLandingPads
  time: 0.027; rss: 415MB	SimplifyCfg
  time: 0.078; rss: 422MB	EraseRegions
  time: 0.011; rss: 422MB	AddCallGuards
  time: 0.297; rss: 440MB	ElaborateDrops
  time: 0.003; rss: 440MB	NoLandingPads
  time: 0.053; rss: 440MB	SimplifyCfg
  time: 0.029; rss: 440MB	InstCombine
  time: 0.012; rss: 440MB	Deaggregator
  time: 0.002; rss: 440MB	CopyPropagation
  time: 0.036; rss: 440MB	SimplifyLocals
  time: 0.010; rss: 440MB	AddCallGuards
  time: 0.002; rss: 440MB	PreTrans
time: 0.563; rss: 440MB	MIR optimisations
  time: 0.083; rss: 450MB	write metadata
  time: 0.397; rss: 462MB	translation item collection
  time: 0.067; rss: 471MB	codegen unit partitioning
  time: 0.041; rss: 717MB	internalize symbols
time: 4.990; rss: 717MB	translation
time: 0.000; rss: 717MB	assert dep graph
time: 0.000; rss: 717MB	serialize dep graph
incremental: re-using 0 out of 1 modules
  time: 0.535; rss: 419MB	llvm function passes [0]
  time: 0.288; rss: 426MB	llvm module passes [0]
  time: 10.447; rss: 415MB	codegen passes [0]
  time: 0.000; rss: 415MB	codegen passes [0]
time: 12.166; rss: 415MB	LLVM passes
time: 0.000; rss: 415MB	serialize work products
time: 0.344; rss: 108MB	linking
done
