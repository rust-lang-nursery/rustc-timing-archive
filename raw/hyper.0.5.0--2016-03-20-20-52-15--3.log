commit 7f5c568e0ad7014eda43798fd66fb7f2b8069ff2
Merge: 399b522 09263a6
Author: bors <bors@rust-lang.org>
Date:   Sun Mar 20 17:48:09 2016 -0700

    Auto merge of #32344 - aturon:issue-32324, r=eddyb
    
    Fix mis-uses of projection mode
    
    A couple of places where we construct a fresh inference context were
    incorrectly assuming that we were past coherence checking. This commit
    corrects them to use `Topmost` rather than `AnyFinal` as the projection mode.
    
    Fixes #32324
    
    r? @nikomatsakis
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.031; rss: 45MB	parsing
Lines of code:             9154
Pre-expansion node count:  45594
time: 0.009; rss: 45MB	configuration 1
time: 0.000; rss: 45MB	recursion limit
time: 0.000; rss: 45MB	gated macro checking
time: 0.000; rss: 45MB	crate injection
time: 0.005; rss: 50MB	macro loading
time: 0.000; rss: 50MB	plugin loading
time: 0.000; rss: 50MB	plugin registration
time: 0.186; rss: 59MB	expansion
time: 0.005; rss: 59MB	complete gated feature checking 1
time: 0.033; rss: 59MB	configuration 2
time: 0.000; rss: 59MB	gated configuration checking
time: 0.013; rss: 59MB	maybe building test harness
time: 0.010; rss: 59MB	prelude injection
time: 0.001; rss: 59MB	checking that all macro invocations are gone
time: 0.000; rss: 59MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 59MB	complete gated feature checking 2
time: 0.001; rss: 59MB	const fn bodies and arguments
Post-expansion node count: 106876
time: 0.010; rss: 59MB	assigning node ids
time: 0.011; rss: 66MB	lowering ast -> hir
time: 0.004; rss: 68MB	indexing hir
time: 0.001; rss: 68MB	attribute checking
time: 0.006; rss: 68MB	early lint checks
time: 0.004; rss: 64MB	external crate/lib resolution
time: 0.001; rss: 64MB	language item collection
time: 0.024; rss: 81MB	resolution
time: 0.002; rss: 81MB	lifetime resolution
time: 0.000; rss: 81MB	looking for entry point
time: 0.000; rss: 81MB	looking for plugin registrar
time: 0.006; rss: 85MB	region resolution
time: 0.001; rss: 85MB	loop checking
time: 0.001; rss: 85MB	static item recursion checking
time: 0.013; rss: 88MB	type collecting
time: 0.000; rss: 88MB	variance inference
time: 0.474; rss: 109MB	coherence checking
time: 0.076; rss: 110MB	wf checking
time: 0.029; rss: 112MB	item-types checking
time: 0.486; rss: 131MB	item-bodies checking
time: 0.000; rss: 131MB	drop-impl checking
time: 0.036; rss: 134MB	const checking
time: 0.009; rss: 134MB	privacy checking
time: 0.001; rss: 134MB	stability index
time: 0.004; rss: 134MB	intrinsic checking
time: 0.002; rss: 134MB	effect checking
time: 0.012; rss: 134MB	match checking
time: 0.005; rss: 134MB	liveness checking
time: 0.032; rss: 134MB	rvalue checking
time: 0.045; rss: 139MB	MIR dump
time: 0.027; rss: 139MB	MIR passes
time: 0.064; rss: 139MB	borrow checking
time: 0.003; rss: 139MB	reachability checking
time: 0.006; rss: 139MB	death checking
time: 0.006; rss: 139MB	stability checking
time: 0.000; rss: 139MB	unused lib feature checking
time: 0.047; rss: 139MB	lint checking
time: 0.000; rss: 139MB	resolving dependency formats
  time: 0.192; rss: 159MB	translation item collection
  time: 0.136; rss: 283MB	write metadata
time: 1.342; rss: 283MB	translation
  time: 0.096; rss: 164MB	llvm function passes [0]
  time: 0.046; rss: 166MB	llvm module passes [0]
  time: 1.620; rss: 169MB	codegen passes [0]
  time: 0.001; rss: 118MB	codegen passes [0]
time: 1.956; rss: 118MB	LLVM passes
time: 0.168; rss: 116MB	linking
done
