commit a63e3fac8fdf5187b155624aca622597ca9d344d
Merge: 48c2454 c4730da
Author: bors <bors@rust-lang.org>
Date:   Wed Jul 20 00:48:21 2016 -0700

    Auto merge of #33526 - steveklabnik:gh21889, r=alexcrichton
    
    Add some warnings to std::env::current_exe
    
    /cc #21889 @rust-lang/libs @semarie
    
    I started writing this up. I'm not sure if we want to go into other things and in what depth; we don't currently have a lot of security-specific documentation to model after.
    
    Thoughts?
rustc: ./rust-encoding.0.2.32
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling encoding v0.2.32 (file:///root/benchmarks/rust-encoding.0.2.32)
time: 0.025; rss: 87MB	parsing
Lines of code:             6441
Pre-expansion node count:  30069
time: 0.003; rss: 91MB	configuration
time: 0.000; rss: 91MB	recursion limit
time: 0.000; rss: 91MB	crate injection
time: 0.000; rss: 91MB	plugin loading
time: 0.000; rss: 91MB	plugin registration
time: 0.047; rss: 129MB	expansion
time: 0.000; rss: 129MB	maybe building test harness
time: 0.003; rss: 129MB	assigning node ids
Post-expansion node count: 40757
time: 0.000; rss: 129MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 129MB	complete gated feature checking
time: 0.001; rss: 129MB	collecting defs
time: 0.001; rss: 130MB	external crate/lib resolution
time: 0.002; rss: 130MB	early lint checks
time: 0.000; rss: 130MB	AST validation
time: 0.005; rss: 130MB	name resolution
time: 0.004; rss: 132MB	lowering ast -> hir
time: 0.000; rss: 132MB	indexing hir
time: 0.000; rss: 132MB	attribute checking
time: 0.000; rss: 132MB	language item collection
time: 0.001; rss: 132MB	lifetime resolution
time: 0.000; rss: 132MB	looking for entry point
time: 0.000; rss: 132MB	looking for plugin registrar
time: 0.002; rss: 134MB	region resolution
time: 0.000; rss: 134MB	loop checking
time: 0.000; rss: 134MB	static item recursion checking
time: 0.000; rss: 134MB	load_dep_graph
time: 0.012; rss: 135MB	type collecting
time: 0.000; rss: 135MB	variance inference
time: 0.022; rss: 140MB	coherence checking
time: 0.025; rss: 141MB	wf checking
time: 0.016; rss: 141MB	item-types checking
time: 0.228; rss: 149MB	item-bodies checking
time: 0.000; rss: 149MB	drop-impl checking
time: 0.013; rss: 149MB	const checking
time: 0.002; rss: 149MB	privacy checking
time: 0.000; rss: 149MB	stability index
time: 0.002; rss: 149MB	intrinsic checking
time: 0.000; rss: 149MB	effect checking
time: 0.008; rss: 149MB	match checking
time: 0.002; rss: 149MB	liveness checking
time: 0.008; rss: 149MB	rvalue checking
time: 0.025; rss: 156MB	MIR dump
time: 0.016; rss: 156MB	MIR passes
time: 0.025; rss: 156MB	borrow checking
time: 0.000; rss: 156MB	reachability checking
time: 0.002; rss: 156MB	death checking
time: 0.002; rss: 156MB	stability checking
time: 0.000; rss: 156MB	unused lib feature checking
time: 0.025; rss: 158MB	lint checking
time: 0.000; rss: 158MB	resolving dependency formats
time: 0.027; rss: 158MB	Prepare MIR codegen passes
  time: 0.058; rss: 163MB	write metadata
  time: 0.034; rss: 164MB	translation item collection
  time: 0.003; rss: 164MB	codegen unit partitioning
time: 0.930; rss: 192MB	translation
time: 0.000; rss: 192MB	assert dep graph
time: 0.000; rss: 192MB	serialize dep graph
  time: 0.329; rss: 156MB	llvm function passes [0]
  time: 0.631; rss: 159MB	llvm module passes [0]
  time: 5.806; rss: 163MB	codegen passes [0]
  time: 0.001; rss: 163MB	codegen passes [0]
time: 7.150; rss: 162MB	LLVM passes
time: 0.055; rss: 145MB	linking
done
