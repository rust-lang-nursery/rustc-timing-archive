commit 289f3a4ca79916d6445b452fc19a18a1e42a879a
Merge: ff67da6 13a2dd9
Author: bors <bors@rust-lang.org>
Date:   Thu Sep 29 11:20:02 2016 -0700

    Auto merge of #36377 - tormol:encode_utf, r=alexcrichton
    
    Change encode_utf{8,16}() to write to a buffer and panic if it's too small
    
    cc #27784
    
    Should the "A buffer that's too small" examples be removed and replaced by tests?
rustc: ./syntex-0.42.2-incr-clean
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax -- -Ztime-passes -Zinput-stats -Z incremental-info
   Compiling syntex_syntax v0.42.0
time: 0.107; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  224033
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.271; rss: 145MB	expansion
time: 0.000; rss: 145MB	maybe building test harness
time: 0.006; rss: 145MB	maybe creating a macro crate
Post-expansion node count: 641571
time: 0.000; rss: 145MB	checking for inline asm in case the target doesn't support it
time: 0.013; rss: 145MB	complete gated feature checking
time: 0.024; rss: 145MB	early lint checks
time: 0.007; rss: 145MB	AST validation
time: 0.085; rss: 160MB	name resolution
time: 0.049; rss: 202MB	lowering ast -> hir
time: 0.009; rss: 210MB	indexing hir
time: 0.006; rss: 210MB	attribute checking
time: 0.006; rss: 160MB	language item collection
time: 0.012; rss: 160MB	lifetime resolution
time: 0.000; rss: 160MB	looking for entry point
time: 0.000; rss: 160MB	looking for plugin registrar
time: 0.044; rss: 171MB	region resolution
time: 0.006; rss: 171MB	loop checking
time: 0.006; rss: 171MB	static item recursion checking
time: 0.295; rss: 172MB	compute_incremental_hashes_map
time: 0.000; rss: 172MB	load_dep_graph
time: 0.082; rss: 176MB	type collecting
time: 0.001; rss: 176MB	variance inference
time: 0.038; rss: 179MB	coherence checking
time: 0.102; rss: 181MB	wf checking
time: 0.194; rss: 187MB	item-types checking
time: 3.930; rss: 240MB	item-bodies checking
time: 0.000; rss: 240MB	drop-impl checking
time: 0.317; rss: 240MB	const checking
time: 0.056; rss: 240MB	privacy checking
time: 0.007; rss: 240MB	stability index
time: 0.022; rss: 240MB	intrinsic checking
time: 0.019; rss: 240MB	effect checking
time: 0.057; rss: 240MB	match checking
time: 0.056; rss: 236MB	liveness checking
time: 0.288; rss: 236MB	rvalue checking
time: 0.420; rss: 425MB	MIR dump
  time: 0.057; rss: 429MB	SimplifyCfg
  time: 0.084; rss: 429MB	QualifyAndPromoteConstants
  time: 0.110; rss: 429MB	TypeckMir
  time: 0.005; rss: 429MB	SimplifyBranches
  time: 0.036; rss: 429MB	SimplifyCfg
time: 0.293; rss: 429MB	MIR passes
time: 0.702; rss: 429MB	borrow checking
time: 0.018; rss: 429MB	reachability checking
time: 0.045; rss: 429MB	death checking
time: 0.041; rss: 429MB	stability checking
time: 0.000; rss: 429MB	unused lib feature checking
time: 0.219; rss: 429MB	lint checking
time: 0.000; rss: 429MB	resolving dependency formats
  time: 0.003; rss: 429MB	NoLandingPads
  time: 0.027; rss: 429MB	SimplifyCfg
  time: 0.072; rss: 442MB	EraseRegions
  time: 0.011; rss: 442MB	AddCallGuards
  time: 1.083; rss: 456MB	ElaborateDrops
  time: 0.003; rss: 456MB	NoLandingPads
  time: 0.052; rss: 457MB	SimplifyCfg
  time: 0.030; rss: 457MB	InstCombine
  time: 0.013; rss: 457MB	Deaggregator
  time: 0.003; rss: 457MB	CopyPropagation
  time: 0.009; rss: 457MB	AddCallGuards
  time: 0.003; rss: 457MB	PreTrans
time: 1.309; rss: 457MB	Prepare MIR codegen passes
  time: 0.263; rss: 465MB	write metadata
  time: 0.473; rss: 475MB	translation item collection
  time: 0.067; rss: 479MB	codegen unit partitioning
  time: 0.058; rss: 728MB	internalize symbols
time: 5.047; rss: 606MB	translation
time: 0.000; rss: 606MB	assert dep graph
time: 0.000; rss: 606MB	serialize dep graph
incremental: re-using 0 out of 1 modules
  time: 0.502; rss: 412MB	llvm function passes [0]
  time: 0.242; rss: 420MB	llvm module passes [0]
  time: 10.123; rss: 415MB	codegen passes [0]
  time: 0.001; rss: 416MB	codegen passes [0]
time: 11.615; rss: 416MB	LLVM passes
time: 0.000; rss: 416MB	serialize work products
time: 0.654; rss: 107MB	linking
done
