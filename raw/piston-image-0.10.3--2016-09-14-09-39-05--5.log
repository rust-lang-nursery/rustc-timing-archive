commit 97b561a0944141a02a0cebe577c3c69e436abcf4
Merge: 739d571 8154a6b
Author: bors <bors@rust-lang.org>
Date:   Wed Sep 14 04:57:47 2016 -0700

    Auto merge of #35667 - ollie27:rustdoc_opaque_structs, r=steveklabnik
    
    rustdoc: Don't add extra newlines for fully opaque structs
    
    Changes the definition for braced structs with only private or hidden fields to save space on the page.
    
    Before:
    ```
    pub struct Vec<T> {
        // some fields omitted
    }
    ```
    After:
    ```
    pub struct Vec<T> { /* fields omitted */ }
    ```
    
    This also cleans up empty braced structs.
    
    Before:
    ```
    pub struct Foo {
    }
    ```
    After:
    ```
    pub struct Foo {}
    ```
    
    [before](https://doc.rust-lang.org/nightly/std/vec/struct.Vec.html) [after](https://ollie27.github.io/rust_doc_test/std/vec/struct.Vec.html)
    
    cc #34713
rustc: ./piston-image-0.10.3
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling image v0.10.3 (file:///root/benchmarks/piston-image-0.10.3)
time: 0.046; rss: 58MB	parsing
Lines of code:             12000
Pre-expansion node count:  90272
time: 0.000; rss: 58MB	recursion limit
time: 0.000; rss: 58MB	crate injection
time: 0.000; rss: 58MB	plugin loading
time: 0.000; rss: 58MB	plugin registration
time: 0.067; rss: 88MB	expansion
time: 0.000; rss: 88MB	maybe building test harness
time: 0.002; rss: 88MB	maybe creating a macro crate
time: 0.007; rss: 88MB	assigning node ids
Post-expansion node count: 149551
time: 0.000; rss: 88MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 88MB	complete gated feature checking
time: 0.004; rss: 88MB	collecting defs
time: 0.011; rss: 92MB	external crate/lib resolution
time: 0.006; rss: 96MB	early lint checks
time: 0.002; rss: 96MB	AST validation
time: 0.022; rss: 101MB	name resolution
time: 0.014; rss: 111MB	lowering ast -> hir
time: 0.003; rss: 116MB	indexing hir
time: 0.002; rss: 116MB	attribute checking
time: 0.002; rss: 106MB	language item collection
time: 0.003; rss: 106MB	lifetime resolution
time: 0.000; rss: 106MB	looking for entry point
time: 0.000; rss: 106MB	looking for plugin registrar
time: 0.011; rss: 112MB	region resolution
time: 0.002; rss: 112MB	loop checking
time: 0.001; rss: 112MB	static item recursion checking
time: 0.058; rss: 111MB	compute_incremental_hashes_map
time: 0.000; rss: 111MB	load_dep_graph
time: 0.024; rss: 113MB	type collecting
time: 0.000; rss: 113MB	variance inference
time: 0.031; rss: 116MB	coherence checking
time: 0.097; rss: 117MB	wf checking
time: 0.218; rss: 125MB	item-types checking
time: 0.941; rss: 138MB	item-bodies checking
time: 0.000; rss: 138MB	drop-impl checking
time: 0.071; rss: 138MB	const checking
time: 0.011; rss: 138MB	privacy checking
time: 0.001; rss: 138MB	stability index
time: 0.010; rss: 138MB	intrinsic checking
time: 0.003; rss: 138MB	effect checking
time: 0.025; rss: 138MB	match checking
time: 0.011; rss: 139MB	liveness checking
time: 0.067; rss: 138MB	rvalue checking
time: 0.111; rss: 180MB	MIR dump
  time: 0.012; rss: 180MB	SimplifyCfg
  time: 0.025; rss: 180MB	QualifyAndPromoteConstants
  time: 0.028; rss: 180MB	TypeckMir
  time: 0.001; rss: 180MB	SimplifyBranches
  time: 0.007; rss: 180MB	SimplifyCfg
time: 0.072; rss: 180MB	MIR passes
time: 0.144; rss: 180MB	borrow checking
time: 0.004; rss: 180MB	reachability checking
time: 0.008; rss: 180MB	death checking
time: 0.010; rss: 180MB	stability checking
time: 0.000; rss: 180MB	unused lib feature checking
time: 0.074; rss: 180MB	lint checking
time: 0.000; rss: 180MB	resolving dependency formats
  time: 0.001; rss: 180MB	NoLandingPads
  time: 0.005; rss: 180MB	SimplifyCfg
  time: 0.013; rss: 182MB	EraseRegions
  time: 0.002; rss: 182MB	AddCallGuards
  time: 0.133; rss: 187MB	ElaborateDrops
  time: 0.001; rss: 187MB	NoLandingPads
  time: 0.009; rss: 187MB	SimplifyCfg
  time: 0.002; rss: 187MB	Deaggregator
  time: 0.001; rss: 187MB	AddCallGuards
  time: 0.000; rss: 187MB	PreTrans
time: 0.167; rss: 187MB	Prepare MIR codegen passes
  time: 0.081; rss: 189MB	write metadata
  time: 0.535; rss: 199MB	translation item collection
  time: 0.029; rss: 203MB	codegen unit partitioning
  time: 0.052; rss: 326MB	internalize symbols
time: 3.463; rss: 299MB	translation
time: 0.000; rss: 299MB	assert dep graph
time: 0.000; rss: 299MB	serialize dep graph
  time: 0.205; rss: 229MB	llvm function passes [0]
  time: 0.086; rss: 233MB	llvm module passes [0]
  time: 4.029; rss: 234MB	codegen passes [0]
  time: 0.001; rss: 235MB	codegen passes [0]
time: 4.627; rss: 235MB	LLVM passes
time: 0.000; rss: 235MB	serialize work products
time: 0.286; rss: 105MB	linking
done
