commit e5ed0a5d78be74238af31631e7ecf311eb661586
Merge: 7c535c6 36f2af1
Author: bors <bors@rust-lang.org>
Date:   Sat Nov 19 23:39:25 2016 -0600

    Auto merge of #37842 - nikomatsakis:incremental-test, r=mw
    
    Add tests for incremental reuse scenarios
    
    These are microbenchmarks checking that we achieve the expected reuse in the scenarios covered by incremental beta.
    
    r? @michaelwoerister
rustc: ./syntex-0.42.2
cargo rustc -p syntex_syntax  -- -Ztime-passes -Zinput-stats
   Compiling syntex_syntax v0.42.0
time: 0.132; rss: 66MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 66MB	recursion limit
time: 0.000; rss: 66MB	crate injection
time: 0.000; rss: 66MB	plugin loading
time: 0.000; rss: 66MB	plugin registration
time: 0.319; rss: 139MB	expansion
time: 0.000; rss: 139MB	maybe building test harness
time: 0.006; rss: 139MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 139MB	checking for inline asm in case the target doesn't support it
time: 0.013; rss: 139MB	complete gated feature checking
time: 0.023; rss: 139MB	early lint checks
time: 0.007; rss: 139MB	AST validation
time: 0.105; rss: 154MB	name resolution
time: 0.087; rss: 179MB	lowering ast -> hir
time: 0.024; rss: 187MB	indexing hir
time: 0.006; rss: 187MB	attribute checking
time: 0.005; rss: 145MB	language item collection
time: 0.011; rss: 145MB	lifetime resolution
time: 0.000; rss: 145MB	looking for entry point
time: 0.000; rss: 145MB	looking for plugin registrar
time: 0.078; rss: 164MB	region resolution
time: 0.005; rss: 164MB	loop checking
time: 0.005; rss: 164MB	static item recursion checking
time: 0.334; rss: 165MB	compute_incremental_hashes_map
time: 0.000; rss: 165MB	load_dep_graph
time: 0.048; rss: 170MB	type collecting
time: 0.001; rss: 170MB	variance inference
time: 0.002; rss: 170MB	impl wf inference
time: 0.018; rss: 172MB	coherence checking
time: 0.092; rss: 174MB	wf checking
time: 0.182; rss: 176MB	item-types checking
time: 6.362; rss: 219MB	item-bodies checking
time: 0.000; rss: 219MB	drop-impl checking
time: 0.285; rss: 240MB	const checking
time: 0.051; rss: 240MB	privacy checking
time: 0.006; rss: 240MB	stability index
time: 0.018; rss: 240MB	intrinsic checking
time: 0.015; rss: 240MB	effect checking
time: 0.047; rss: 240MB	match checking
time: 0.077; rss: 233MB	liveness checking
time: 0.190; rss: 233MB	rvalue checking
time: 0.580; rss: 407MB	MIR dump
  time: 0.060; rss: 414MB	SimplifyCfg
  time: 0.075; rss: 414MB	QualifyAndPromoteConstants
  time: 0.109; rss: 414MB	TypeckMir
  time: 0.004; rss: 414MB	SimplifyBranches
  time: 0.031; rss: 414MB	SimplifyCfg
time: 0.279; rss: 414MB	MIR cleanup and validation
time: 0.574; rss: 418MB	borrow checking
time: 0.020; rss: 418MB	reachability checking
time: 0.041; rss: 418MB	death checking
time: 0.036; rss: 421MB	stability checking
time: 0.000; rss: 421MB	unused lib feature checking
time: 0.209; rss: 421MB	lint checking
time: 0.000; rss: 421MB	resolving dependency formats
  time: 0.003; rss: 421MB	NoLandingPads
  time: 0.027; rss: 421MB	SimplifyCfg
  time: 0.077; rss: 427MB	EraseRegions
  time: 0.012; rss: 427MB	AddCallGuards
  time: 0.305; rss: 446MB	ElaborateDrops
  time: 0.003; rss: 446MB	NoLandingPads
  time: 0.053; rss: 447MB	SimplifyCfg
  time: 0.030; rss: 447MB	InstCombine
  time: 0.013; rss: 447MB	Deaggregator
  time: 0.002; rss: 447MB	CopyPropagation
  time: 0.036; rss: 447MB	SimplifyLocals
  time: 0.010; rss: 447MB	AddCallGuards
  time: 0.003; rss: 447MB	PreTrans
time: 0.574; rss: 447MB	MIR optimisations
  time: 0.078; rss: 455MB	write metadata
  time: 0.426; rss: 468MB	translation item collection
  time: 0.071; rss: 476MB	codegen unit partitioning
  time: 0.048; rss: 720MB	internalize symbols
time: 4.987; rss: 720MB	translation
time: 0.000; rss: 720MB	assert dep graph
time: 0.000; rss: 720MB	serialize dep graph
  time: 0.531; rss: 413MB	llvm function passes [0]
  time: 0.255; rss: 422MB	llvm module passes [0]
  time: 10.457; rss: 412MB	codegen passes [0]
  time: 0.000; rss: 412MB	codegen passes [0]
time: 12.239; rss: 412MB	LLVM passes
time: 0.000; rss: 412MB	serialize work products
time: 0.347; rss: 101MB	linking
done
