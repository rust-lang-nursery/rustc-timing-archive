commit 91f057de35066d0a34102bd0673b56684509b93d
Merge: 9cc430d e05e74a
Author: bors <bors@rust-lang.org>
Date:   Sun Sep 4 14:03:01 2016 -0700

    Auto merge of #36203 - petrochenkov:uvsdot, r=nrc
    
    Replace `_, _` with `..` in patterns
    
    This is how https://github.com/rust-lang/rust/issues/33627 looks in action.
    
    Looks especially nice in leftmost/rightmost positions `(first, ..)`/`(.., last)`.
    I haven't touched libsyntax intentionally because the feature is still unstable.
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.028; rss: 50MB	parsing
Lines of code:             9154
Pre-expansion node count:  44873
time: 0.003; rss: 50MB	configuration
time: 0.000; rss: 50MB	recursion limit
time: 0.000; rss: 50MB	crate injection
time: 0.000; rss: 50MB	plugin loading
time: 0.000; rss: 50MB	plugin registration
time: 0.092; rss: 79MB	expansion
time: 0.000; rss: 79MB	maybe building test harness
time: 0.001; rss: 79MB	maybe creating a macro crate
time: 0.005; rss: 79MB	assigning node ids
Post-expansion node count: 101537
time: 0.000; rss: 79MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 79MB	complete gated feature checking
time: 0.003; rss: 81MB	collecting defs
time: 0.009; rss: 87MB	external crate/lib resolution
time: 0.004; rss: 87MB	early lint checks
time: 0.001; rss: 87MB	AST validation
time: 0.015; rss: 95MB	name resolution
time: 0.008; rss: 99MB	lowering ast -> hir
time: 0.002; rss: 101MB	indexing hir
time: 0.001; rss: 101MB	attribute checking
time: 0.001; rss: 94MB	language item collection
time: 0.003; rss: 94MB	lifetime resolution
time: 0.000; rss: 94MB	looking for entry point
time: 0.000; rss: 94MB	looking for plugin registrar
time: 0.007; rss: 99MB	region resolution
time: 0.001; rss: 99MB	loop checking
time: 0.001; rss: 99MB	static item recursion checking
time: 0.013; rss: 100MB	compute_incremental_hashes_map
time: 0.000; rss: 100MB	load_dep_graph
time: 0.023; rss: 100MB	type collecting
time: 0.000; rss: 100MB	variance inference
time: 0.037; rss: 104MB	coherence checking
time: 0.058; rss: 105MB	wf checking
time: 0.029; rss: 106MB	item-types checking
time: 0.367; rss: 118MB	item-bodies checking
time: 0.000; rss: 118MB	drop-impl checking
time: 0.038; rss: 121MB	const checking
time: 0.006; rss: 121MB	privacy checking
time: 0.001; rss: 121MB	stability index
time: 0.005; rss: 121MB	intrinsic checking
time: 0.002; rss: 121MB	effect checking
time: 0.013; rss: 121MB	match checking
time: 0.005; rss: 121MB	liveness checking
time: 0.028; rss: 120MB	rvalue checking
time: 0.055; rss: 139MB	MIR dump
time: 0.040; rss: 139MB	MIR passes
time: 0.062; rss: 139MB	borrow checking
time: 0.003; rss: 139MB	reachability checking
time: 0.005; rss: 139MB	death checking
time: 0.005; rss: 139MB	stability checking
time: 0.000; rss: 139MB	unused lib feature checking
time: 0.042; rss: 139MB	lint checking
time: 0.000; rss: 139MB	resolving dependency formats
time: 0.077; rss: 141MB	Prepare MIR codegen passes
  time: 0.055; rss: 146MB	write metadata
  time: 0.113; rss: 150MB	translation item collection
  time: 0.018; rss: 152MB	codegen unit partitioning
  time: 0.031; rss: 217MB	internalize symbols
time: 1.331; rss: 208MB	translation
time: 0.000; rss: 208MB	assert dep graph
time: 0.000; rss: 208MB	serialize dep graph
  time: 0.101; rss: 160MB	llvm function passes [0]
  time: 0.048; rss: 162MB	llvm module passes [0]
  time: 1.834; rss: 164MB	codegen passes [0]
  time: 0.001; rss: 164MB	codegen passes [0]
time: 2.146; rss: 164MB	LLVM passes
time: 0.000; rss: 164MB	serialize work products
time: 0.158; rss: 99MB	linking
done
