commit bf9c60c9a6d27762594c1c5c067194f4c9109f67
Merge: 6e00b55 ae999e9
Author: bors <bors@rust-lang.org>
Date:   Sun May 29 21:28:50 2016 -0700

    Auto merge of #33929 - petrochenkov:pathir, r=eddyb
    
    Separate bindings from other patterns in HIR
    
    Now when name resolution is done on AST, we can avoid dumping everything that looks like an identifier into `PatKind::Ident` in HIR.
    `hir::PatKind::Ident` is removed, fresh bindings are now called `hir::PatKind::Binding`, everything else goes to `hir::PatKind::Path`.
    
    I intend to do something with `PatKind::Path`/`PatKind::QPath` as well using resolution results, but it requires some audit and maybe some deeper refactoring of relevant resolution/type checking code to do it properly.
    I'm submitting this part of the patch earlier to notify interested parties that I'm working on this.
    
    cc @jseyfried
    r? @eddyb
rustc: ./issue-32278-big-array-of-strings
/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc big-array-of-strings.rs -Ztime-passes -Zinput-stats
time: 0.174; rss: 68MB	parsing
Lines of code:             65577
Pre-expansion node count:  65552
time: 0.015; rss: 68MB	configuration 1
time: 0.000; rss: 68MB	recursion limit
time: 0.000; rss: 68MB	crate injection
time: 0.018; rss: 102MB	macro loading
time: 0.000; rss: 102MB	plugin loading
time: 0.000; rss: 102MB	plugin registration
time: 0.051; rss: 108MB	expansion
time: 0.000; rss: 108MB	gated configuration checking
time: 0.006; rss: 108MB	maybe building test harness
time: 0.007; rss: 108MB	prelude injection
time: 0.001; rss: 108MB	checking that all macro invocations are gone
time: 0.000; rss: 108MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 108MB	complete gated feature checking
Post-expansion node count: 65565
time: 0.009; rss: 108MB	assigning node ids
time: 0.001; rss: 108MB	collecting defs
time: 0.004; rss: 109MB	external crate/lib resolution
time: 0.010; rss: 109MB	early lint checks
time: 0.002; rss: 109MB	name resolution
time: 0.011; rss: 123MB	lowering ast -> hir
time: 0.002; rss: 123MB	indexing hir
time: 0.001; rss: 123MB	attribute checking
time: 0.001; rss: 109MB	language item collection
time: 0.001; rss: 109MB	lifetime resolution
time: 0.000; rss: 109MB	looking for entry point
time: 0.000; rss: 109MB	looking for plugin registrar
time: 0.009; rss: 118MB	region resolution
time: 0.001; rss: 118MB	loop checking
time: 0.002; rss: 118MB	static item recursion checking
time: 0.000; rss: 118MB	load_dep_graph
time: 0.000; rss: 118MB	type collecting
time: 0.000; rss: 118MB	variance inference
time: 0.006; rss: 120MB	coherence checking
time: 0.001; rss: 121MB	wf checking
time: 0.960; rss: 137MB	item-types checking
time: 0.000; rss: 137MB	item-bodies checking
time: 0.000; rss: 137MB	drop-impl checking
time: 0.024; rss: 134MB	const checking
time: 0.003; rss: 134MB	privacy checking
time: 0.001; rss: 134MB	stability index
time: 0.001; rss: 134MB	intrinsic checking
time: 0.001; rss: 134MB	effect checking
time: 0.001; rss: 134MB	match checking
time: 0.001; rss: 134MB	liveness checking
time: 0.000; rss: 134MB	rvalue checking
time: 0.067; rss: 147MB	MIR dump
time: 0.002; rss: 147MB	MIR passes
time: 0.001; rss: 147MB	borrow checking
time: 0.000; rss: 147MB	reachability checking
time: 0.001; rss: 147MB	death checking
time: 0.001; rss: 147MB	stability checking
time: 0.000; rss: 147MB	unused lib feature checking
time: 0.033; rss: 147MB	lint checking
time: 0.002; rss: 147MB	resolving dependency formats
time: 0.001; rss: 147MB	Prepare MIR codegen passes
  time: 0.000; rss: 148MB	write metadata
  time: 0.001; rss: 148MB	translation item collection
  time: 0.000; rss: 148MB	codegen unit partitioning
time: 0.088; rss: 149MB	translation
time: 0.000; rss: 149MB	assert dep graph
time: 0.000; rss: 149MB	serialize dep graph
  time: 0.003; rss: 106MB	llvm function passes [0]
  time: 0.000; rss: 106MB	llvm module passes [0]
  time: 0.161; rss: 109MB	codegen passes [0]
  time: 0.000; rss: 98MB	codegen passes [0]
time: 0.176; rss: 98MB	LLVM passes
  time: 0.193; rss: 98MB	running linker
time: 0.194; rss: 98MB	linking
done
