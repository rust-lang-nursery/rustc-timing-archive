commit 8fc0554e4df413537760850108b10aafcdccd4b0
Merge: 6cc502c 6e4bc47
Author: bors <bors@rust-lang.org>
Date:   Tue Mar 22 02:05:16 2016 -0700

    Auto merge of #32388 - semarie:snapshot-openbsd, r=alexcrichton
    
    register openbsd snapshot
    
    Here openbsd version for latest snapshot.
    
    The archive is at http://semarie.online.fr/rust/rust-stage0-2016-03-18-235d774-openbsd-x86_64-c5b6feda38138a12cd5c05574b585dadebbb5e87.tar.bz2
    
    These segmentation fault starts to be annoying. @dhuseby do you think it would be possible to have a shell access to openbsd buildbot in order to try to investigating a bit the reason of them ?
    
    r? @alexcrichton
    Ref #32345
rustc: ./rust-encoding.0.2.32
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling encoding v0.2.32 (file:///root/benchmarks/rust-encoding.0.2.32)
time: 0.022; rss: 43MB	parsing
Lines of code:             6441
Pre-expansion node count:  30335
time: 0.006; rss: 43MB	configuration 1
time: 0.000; rss: 43MB	recursion limit
time: 0.000; rss: 43MB	gated macro checking
time: 0.000; rss: 43MB	crate injection
time: 0.003; rss: 46MB	macro loading
time: 0.000; rss: 46MB	plugin loading
time: 0.000; rss: 46MB	plugin registration
time: 0.044; rss: 49MB	expansion
time: 0.001; rss: 49MB	complete gated feature checking 1
time: 0.008; rss: 49MB	configuration 2
time: 0.000; rss: 49MB	gated configuration checking
time: 0.004; rss: 49MB	maybe building test harness
time: 0.003; rss: 49MB	prelude injection
time: 0.000; rss: 49MB	checking that all macro invocations are gone
time: 0.000; rss: 49MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 49MB	complete gated feature checking 2
time: 0.000; rss: 49MB	const fn bodies and arguments
Post-expansion node count: 41611
time: 0.003; rss: 49MB	assigning node ids
time: 0.004; rss: 52MB	lowering ast -> hir
time: 0.001; rss: 54MB	indexing hir
time: 0.001; rss: 54MB	attribute checking
time: 0.002; rss: 54MB	early lint checks
time: 0.001; rss: 53MB	external crate/lib resolution
time: 0.000; rss: 53MB	language item collection
time: 0.008; rss: 62MB	resolution
time: 0.000; rss: 62MB	lifetime resolution
time: 0.000; rss: 62MB	looking for entry point
time: 0.000; rss: 62MB	looking for plugin registrar
time: 0.002; rss: 64MB	region resolution
time: 0.000; rss: 64MB	loop checking
time: 0.000; rss: 64MB	static item recursion checking
time: 0.005; rss: 66MB	type collecting
time: 0.000; rss: 66MB	variance inference
time: 0.145; rss: 84MB	coherence checking
time: 0.019; rss: 84MB	wf checking
time: 0.013; rss: 84MB	item-types checking
time: 0.209; rss: 95MB	item-bodies checking
time: 0.000; rss: 95MB	drop-impl checking
time: 0.010; rss: 95MB	const checking
time: 0.002; rss: 95MB	privacy checking
time: 0.000; rss: 95MB	stability index
time: 0.001; rss: 95MB	intrinsic checking
time: 0.000; rss: 95MB	effect checking
time: 0.006; rss: 95MB	match checking
time: 0.002; rss: 95MB	liveness checking
time: 0.006; rss: 95MB	rvalue checking
time: 0.017; rss: 101MB	MIR dump
time: 0.009; rss: 101MB	MIR passes
time: 0.021; rss: 101MB	borrow checking
time: 0.000; rss: 101MB	reachability checking
time: 0.002; rss: 101MB	death checking
time: 0.002; rss: 101MB	stability checking
time: 0.000; rss: 101MB	unused lib feature checking
time: 0.020; rss: 101MB	lint checking
time: 0.000; rss: 101MB	resolving dependency formats
  time: 0.026; rss: 113MB	translation item collection
  time: 0.056; rss: 148MB	write metadata
time: 0.319; rss: 148MB	translation
  time: 0.027; rss: 109MB	llvm function passes [0]
  time: 0.049; rss: 113MB	llvm module passes [0]
  time: 0.582; rss: 118MB	codegen passes [0]
  time: 0.001; rss: 101MB	codegen passes [0]
time: 0.724; rss: 100MB	LLVM passes
time: 0.053; rss: 99MB	linking
done
