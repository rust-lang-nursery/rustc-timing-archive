commit 47e6da2a01c284f383ad9658e33735f78e262ade
Merge: 13ff307 5f606f0
Author: bors <bors@rust-lang.org>
Date:   Sun Aug 14 18:36:33 2016 -0700

    Auto merge of #35427 - cardoe:arm-musl-targets, r=alexcrichton
    
    add GNU make files for arm-unknown-linux-musleabi
    
    For Yocto (Embedded Linux meta distro) Rust is provided via the [meta-rust layer](https://github.com/meta-rust/meta-rust). In this project there have been patches to add `arm-unknown-linux-musleabi`. Rust recently acquired that support via #35060 but only for rustbuild. meta-rust is currently only able to build Rust support with the existing GNU Makefiles. This adds `arm-unknown-linux-musleabi` support to Rust for the GNU Makefiles until meta-rust is able to sort out why using rustbuild does not work for it.
    
    /cc @srwalter @derekstraka @jmesmon @japaric
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.026; rss: 50MB	parsing
Lines of code:             9154
Pre-expansion node count:  44838
time: 0.003; rss: 50MB	configuration
time: 0.000; rss: 50MB	recursion limit
time: 0.000; rss: 50MB	crate injection
time: 0.000; rss: 50MB	plugin loading
time: 0.000; rss: 50MB	plugin registration
time: 0.092; rss: 93MB	expansion
time: 0.000; rss: 93MB	maybe building test harness
time: 0.005; rss: 93MB	assigning node ids
Post-expansion node count: 101581
time: 0.000; rss: 93MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 93MB	complete gated feature checking
time: 0.003; rss: 93MB	collecting defs
time: 0.010; rss: 105MB	external crate/lib resolution
time: 0.003; rss: 105MB	early lint checks
time: 0.001; rss: 105MB	AST validation
time: 0.018; rss: 111MB	name resolution
time: 0.008; rss: 117MB	lowering ast -> hir
time: 0.002; rss: 119MB	indexing hir
time: 0.001; rss: 119MB	attribute checking
time: 0.001; rss: 113MB	language item collection
time: 0.002; rss: 113MB	lifetime resolution
time: 0.000; rss: 113MB	looking for entry point
time: 0.000; rss: 113MB	looking for plugin registrar
time: 0.006; rss: 116MB	region resolution
time: 0.001; rss: 116MB	loop checking
time: 0.001; rss: 116MB	static item recursion checking
time: 0.000; rss: 116MB	load_dep_graph
time: 0.023; rss: 118MB	type collecting
time: 0.000; rss: 118MB	variance inference
time: 0.047; rss: 126MB	coherence checking
time: 0.082; rss: 128MB	wf checking
time: 0.034; rss: 128MB	item-types checking
time: 0.488; rss: 139MB	item-bodies checking
time: 0.000; rss: 139MB	drop-impl checking
time: 0.044; rss: 141MB	const checking
time: 0.008; rss: 141MB	privacy checking
time: 0.001; rss: 141MB	stability index
time: 0.005; rss: 141MB	intrinsic checking
time: 0.002; rss: 141MB	effect checking
time: 0.013; rss: 141MB	match checking
time: 0.005; rss: 141MB	liveness checking
time: 0.031; rss: 141MB	rvalue checking
time: 0.057; rss: 158MB	MIR dump
time: 0.044; rss: 158MB	MIR passes
time: 0.070; rss: 158MB	borrow checking
time: 0.003; rss: 158MB	reachability checking
time: 0.006; rss: 158MB	death checking
time: 0.006; rss: 158MB	stability checking
time: 0.000; rss: 158MB	unused lib feature checking
time: 0.050; rss: 158MB	lint checking
time: 0.000; rss: 158MB	resolving dependency formats
time: 0.097; rss: 162MB	Prepare MIR codegen passes
  time: 0.131; rss: 172MB	write metadata
  time: 0.182; rss: 178MB	translation item collection
  time: 0.020; rss: 180MB	codegen unit partitioning
  time: 0.035; rss: 311MB	internalize symbols
time: 1.833; rss: 311MB	translation
time: 0.000; rss: 311MB	assert dep graph
time: 0.000; rss: 311MB	serialize dep graph
  time: 0.099; rss: 185MB	llvm function passes [0]
  time: 0.048; rss: 187MB	llvm module passes [0]
  time: 1.825; rss: 190MB	codegen passes [0]
  time: 0.001; rss: 190MB	codegen passes [0]
time: 2.134; rss: 190MB	LLVM passes
time: 0.000; rss: 190MB	serialize work products
time: 0.154; rss: 122MB	linking
done
