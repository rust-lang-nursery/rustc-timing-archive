commit d88d06448e1ad928d22cf0a511f1edae91b646d5
Merge: c19cb9c 6fe7786
Author: bors <bors@rust-lang.org>
Date:   Wed Nov 16 01:17:53 2016 -0800

    Auto merge of #37773 - ollie27:rustdoc_inline_glob, r=brson
    
    rustdoc: Fix some local inlining issues
    
    * Only inline public items when inlining glob imports.
    * Never inline while in a private module or a child of a private module.
    * Never inline impls. This allowed the removal of a workaround in the
    rendering code.
rustc: ./piston-image-0.10.3
cargo rustc  -- -Ztime-passes -Zinput-stats
   Compiling rustc-serialize v0.3.19
   Compiling lzw v0.10.0
   Compiling num-traits v0.1.35
   Compiling scoped_threadpool v0.1.7
   Compiling color_quant v1.0.0
   Compiling byteorder v0.5.3
   Compiling libc v0.2.16
   Compiling glob v0.2.11
   Compiling gcc v0.3.35
   Compiling bitflags v0.7.0
   Compiling gif v0.9.0
   Compiling inflate v0.1.1
   Compiling rand v0.3.14
   Compiling num-integer v0.1.32
   Compiling num_cpus v0.2.13
   Compiling num-iter v0.1.32
   Compiling num v0.1.35
   Compiling enum_primitive v0.1.0
   Compiling miniz-sys v0.1.7
   Compiling flate2 v0.2.14
   Compiling deque v0.3.1
   Compiling rayon v0.4.2
   Compiling jpeg-decoder v0.1.6
   Compiling num-bigint v0.1.35
   Compiling png v0.5.2
   Compiling num-rational v0.1.35
   Compiling image v0.10.3 (file:///root/benchmarks/piston-image-0.10.3)
time: 0.038; rss: 54MB	parsing
Lines of code:             12000
Pre-expansion node count:  90152
time: 0.000; rss: 54MB	recursion limit
time: 0.000; rss: 54MB	crate injection
time: 0.000; rss: 54MB	plugin loading
time: 0.000; rss: 54MB	plugin registration
time: 0.067; rss: 93MB	expansion
time: 0.000; rss: 93MB	maybe building test harness
time: 0.002; rss: 93MB	maybe creating a macro crate
Post-expansion node count: 148881
time: 0.000; rss: 93MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 93MB	complete gated feature checking
time: 0.006; rss: 93MB	early lint checks
time: 0.001; rss: 93MB	AST validation
time: 0.020; rss: 97MB	name resolution
time: 0.014; rss: 105MB	lowering ast -> hir
time: 0.003; rss: 109MB	indexing hir
time: 0.002; rss: 109MB	attribute checking
time: 0.001; rss: 99MB	language item collection
time: 0.002; rss: 99MB	lifetime resolution
time: 0.000; rss: 99MB	looking for entry point
time: 0.000; rss: 99MB	looking for plugin registrar
time: 0.010; rss: 105MB	region resolution
time: 0.002; rss: 105MB	loop checking
time: 0.001; rss: 105MB	static item recursion checking
time: 0.051; rss: 105MB	compute_incremental_hashes_map
time: 0.000; rss: 105MB	load_dep_graph
time: 0.016; rss: 107MB	type collecting
time: 0.000; rss: 107MB	variance inference
time: 0.014; rss: 109MB	coherence checking
time: 0.066; rss: 110MB	wf checking
time: 0.135; rss: 111MB	item-types checking
time: 0.675; rss: 122MB	item-bodies checking
time: 0.000; rss: 122MB	drop-impl checking
time: 0.048; rss: 126MB	const checking
time: 0.008; rss: 126MB	privacy checking
time: 0.001; rss: 126MB	stability index
time: 0.006; rss: 126MB	intrinsic checking
time: 0.002; rss: 126MB	effect checking
time: 0.013; rss: 126MB	match checking
time: 0.009; rss: 126MB	liveness checking
time: 0.039; rss: 126MB	rvalue checking
time: 0.086; rss: 168MB	MIR dump
  time: 0.011; rss: 169MB	SimplifyCfg
  time: 0.019; rss: 169MB	QualifyAndPromoteConstants
  time: 0.021; rss: 169MB	TypeckMir
  time: 0.001; rss: 169MB	SimplifyBranches
  time: 0.005; rss: 169MB	SimplifyCfg
time: 0.057; rss: 169MB	MIR cleanup and validation
time: 0.104; rss: 169MB	borrow checking
time: 0.003; rss: 169MB	reachability checking
time: 0.007; rss: 169MB	death checking
time: 0.007; rss: 169MB	stability checking
time: 0.000; rss: 169MB	unused lib feature checking
time: 0.062; rss: 169MB	lint checking
time: 0.000; rss: 169MB	resolving dependency formats
  time: 0.001; rss: 169MB	NoLandingPads
  time: 0.005; rss: 169MB	SimplifyCfg
  time: 0.011; rss: 171MB	EraseRegions
  time: 0.002; rss: 171MB	AddCallGuards
  time: 0.041; rss: 173MB	ElaborateDrops
  time: 0.001; rss: 173MB	NoLandingPads
  time: 0.009; rss: 173MB	SimplifyCfg
  time: 0.006; rss: 173MB	InstCombine
  time: 0.002; rss: 173MB	Deaggregator
  time: 0.000; rss: 173MB	CopyPropagation
  time: 0.008; rss: 173MB	SimplifyLocals
  time: 0.002; rss: 173MB	AddCallGuards
  time: 0.000; rss: 173MB	PreTrans
time: 0.086; rss: 173MB	MIR optimisations
  time: 0.016; rss: 175MB	write metadata
  time: 0.416; rss: 188MB	translation item collection
  time: 0.023; rss: 192MB	codegen unit partitioning
  time: 0.021; rss: 312MB	internalize symbols
time: 2.292; rss: 312MB	translation
time: 0.000; rss: 312MB	assert dep graph
time: 0.000; rss: 312MB	serialize dep graph
  time: 0.205; rss: 224MB	llvm function passes [0]
  time: 0.084; rss: 227MB	llvm module passes [0]
  time: 4.201; rss: 227MB	codegen passes [0]
  time: 0.000; rss: 227MB	codegen passes [0]
time: 4.800; rss: 227MB	LLVM passes
time: 0.000; rss: 227MB	serialize work products
time: 0.141; rss: 98MB	linking
done
