commit d75c84af806b27137ca3d6cfeba4eb904655a7ad
Merge: 755516b 45916ec
Author: bors <bors@rust-lang.org>
Date:   Wed Sep 28 00:38:07 2016 -0700

    Auto merge of #36604 - japaric:libtest-skip, r=alexcrichton
    
    libtest: add a --skip flag to the test runner
    
    This flag takes a FILTER argument and instructs the test runner to skip
    the tests whose names contain the word FILTER. --skip can be used
    several times.
    
    ---
    
    My motivation for submitting this is that while using [smoke] to run `std` unit tests for cross
    targets I found that a few of the tests always fail due to limitations in QEMU (it can't handle too
    many threads) and I'd like to skip these problematic tests from the command line to be able to run
    the rest of the unit tests.
    
    [smoke]: https://github.com/japaric/smoke
    
    I know there is another mechanism to skip tests: `#[ignore]` but this doesn't work in my use case
    because I can't (easily) modify the source of the standard libraries to `#[ignore]` some tests. And
    even if I could, the change would involve conditionally ignoring some tests for some targets but
    that's not a perfect solution because those tests should pass if executed on real hardware so they
    should not be `#[ignored]` in that scenario.
    
    r? @alexcrichton
    cc @brson
rustc: ./piston-image-0.10.3
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling bitflags v0.7.0
   Compiling rustc-serialize v0.3.19
   Compiling glob v0.2.11
   Compiling byteorder v0.5.3
   Compiling inflate v0.1.1
   Compiling lzw v0.10.0
   Compiling libc v0.2.16
   Compiling gcc v0.3.35
   Compiling scoped_threadpool v0.1.7
   Compiling color_quant v1.0.0
   Compiling num-traits v0.1.35
   Compiling rand v0.3.14
   Compiling num_cpus v0.2.13
   Compiling gif v0.9.0
   Compiling miniz-sys v0.1.7
   Compiling num-integer v0.1.32
   Compiling flate2 v0.2.14
   Compiling num-iter v0.1.32
   Compiling num v0.1.35
   Compiling enum_primitive v0.1.0
   Compiling deque v0.3.1
   Compiling rayon v0.4.2
   Compiling jpeg-decoder v0.1.6
   Compiling png v0.5.2
   Compiling num-bigint v0.1.35
   Compiling num-rational v0.1.35
   Compiling image v0.10.3 (file:///root/benchmarks/piston-image-0.10.3)
time: 0.045; rss: 57MB	parsing
Lines of code:             12000
Pre-expansion node count:  90272
time: 0.000; rss: 57MB	recursion limit
time: 0.000; rss: 57MB	crate injection
time: 0.000; rss: 57MB	plugin loading
time: 0.000; rss: 57MB	plugin registration
time: 0.068; rss: 88MB	expansion
time: 0.000; rss: 88MB	maybe building test harness
time: 0.002; rss: 88MB	maybe creating a macro crate
time: 0.007; rss: 88MB	assigning node ids
Post-expansion node count: 149551
time: 0.000; rss: 88MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 88MB	complete gated feature checking
time: 0.004; rss: 88MB	collecting defs
time: 0.011; rss: 92MB	external crate/lib resolution
time: 0.006; rss: 96MB	early lint checks
time: 0.002; rss: 96MB	AST validation
time: 0.022; rss: 101MB	name resolution
time: 0.013; rss: 111MB	lowering ast -> hir
time: 0.003; rss: 116MB	indexing hir
time: 0.002; rss: 116MB	attribute checking
time: 0.002; rss: 106MB	language item collection
time: 0.003; rss: 106MB	lifetime resolution
time: 0.000; rss: 106MB	looking for entry point
time: 0.000; rss: 106MB	looking for plugin registrar
time: 0.011; rss: 111MB	region resolution
time: 0.002; rss: 111MB	loop checking
time: 0.001; rss: 111MB	static item recursion checking
time: 0.058; rss: 111MB	compute_incremental_hashes_map
time: 0.000; rss: 111MB	load_dep_graph
time: 0.024; rss: 113MB	type collecting
time: 0.000; rss: 113MB	variance inference
time: 0.031; rss: 116MB	coherence checking
time: 0.097; rss: 117MB	wf checking
time: 0.218; rss: 125MB	item-types checking
time: 0.931; rss: 137MB	item-bodies checking
time: 0.000; rss: 137MB	drop-impl checking
time: 0.070; rss: 137MB	const checking
time: 0.011; rss: 137MB	privacy checking
time: 0.001; rss: 137MB	stability index
time: 0.009; rss: 137MB	intrinsic checking
time: 0.003; rss: 137MB	effect checking
time: 0.024; rss: 137MB	match checking
time: 0.011; rss: 137MB	liveness checking
time: 0.066; rss: 137MB	rvalue checking
time: 0.109; rss: 182MB	MIR dump
  time: 0.012; rss: 182MB	SimplifyCfg
  time: 0.025; rss: 182MB	QualifyAndPromoteConstants
  time: 0.028; rss: 182MB	TypeckMir
  time: 0.001; rss: 182MB	SimplifyBranches
  time: 0.007; rss: 182MB	SimplifyCfg
time: 0.073; rss: 182MB	MIR passes
time: 0.143; rss: 182MB	borrow checking
time: 0.004; rss: 182MB	reachability checking
time: 0.008; rss: 182MB	death checking
time: 0.010; rss: 182MB	stability checking
time: 0.000; rss: 182MB	unused lib feature checking
time: 0.074; rss: 182MB	lint checking
time: 0.000; rss: 182MB	resolving dependency formats
  time: 0.001; rss: 182MB	NoLandingPads
  time: 0.005; rss: 182MB	SimplifyCfg
  time: 0.012; rss: 184MB	EraseRegions
  time: 0.002; rss: 184MB	AddCallGuards
  time: 0.132; rss: 188MB	ElaborateDrops
  time: 0.001; rss: 188MB	NoLandingPads
  time: 0.009; rss: 188MB	SimplifyCfg
  time: 0.002; rss: 188MB	Deaggregator
  time: 0.001; rss: 188MB	AddCallGuards
  time: 0.000; rss: 188MB	PreTrans
time: 0.166; rss: 188MB	Prepare MIR codegen passes
  time: 0.081; rss: 190MB	write metadata
  time: 0.530; rss: 201MB	translation item collection
  time: 0.030; rss: 205MB	codegen unit partitioning
  time: 0.053; rss: 327MB	internalize symbols
time: 3.442; rss: 301MB	translation
time: 0.000; rss: 301MB	assert dep graph
time: 0.000; rss: 301MB	serialize dep graph
  time: 0.204; rss: 229MB	llvm function passes [0]
  time: 0.083; rss: 233MB	llvm module passes [0]
  time: 4.013; rss: 233MB	codegen passes [0]
  time: 0.001; rss: 233MB	codegen passes [0]
time: 4.599; rss: 233MB	LLVM passes
time: 0.000; rss: 233MB	serialize work products
time: 0.359; rss: 105MB	linking
done
