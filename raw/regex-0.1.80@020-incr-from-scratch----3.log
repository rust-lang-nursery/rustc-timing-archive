commit 6c9bb42ecc48ffb5a3c8b61e220b11adc3a46384
Merge: 7f2d2af a8535ce
Author: bors <bors@rust-lang.org>
Date:   Fri Dec 30 18:24:27 2016 +0000

    Auto merge of #38658 - alexcrichton:less-docs, r=nikomatsakis
    
    std: Don't build docs for misc facade crates
    
    Retain the same behavior as stable.
    
    Closes #38319
rustc 1.15.0-nightly (daf8c1dfc 2016-12-05)
-rwxr-xr-x 1 root root 9432 Dec  6 15:39 /usr/local/bin/rustc
rustc: ./regex-0.1.80@020-incr-from-scratch
find . -name "*.rs" | xargs touch
RUSTFLAGS="-Z incremental=incr" cargo rustc  -- \
  -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.025; rss: 64MB	parsing
Lines of code:             10689
Pre-expansion node count:  55396
time: 0.000; rss: 64MB	recursion limit
time: 0.000; rss: 64MB	crate injection
time: 0.000; rss: 68MB	plugin loading
time: 0.000; rss: 68MB	plugin registration
time: 0.043; rss: 99MB	expansion
time: 0.000; rss: 99MB	maybe building test harness
time: 0.001; rss: 99MB	maybe creating a macro crate
Post-expansion node count: 86869
time: 0.000; rss: 99MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 99MB	complete gated feature checking
time: 0.003; rss: 99MB	early lint checks
time: 0.001; rss: 99MB	AST validation
time: 0.010; rss: 101MB	name resolution
time: 0.008; rss: 105MB	lowering ast -> hir
time: 0.001; rss: 107MB	indexing hir
time: 0.001; rss: 107MB	attribute checking
time: 0.000; rss: 102MB	language item collection
time: 0.002; rss: 102MB	lifetime resolution
time: 0.000; rss: 102MB	looking for entry point
time: 0.000; rss: 102MB	looking for plugin registrar
time: 0.005; rss: 106MB	region resolution
time: 0.001; rss: 106MB	loop checking
time: 0.000; rss: 106MB	static item recursion checking
time: 0.035; rss: 106MB	compute_incremental_hashes_map
time: 0.000; rss: 106MB	load_dep_graph
time: 0.001; rss: 106MB	stability index
time: 0.002; rss: 106MB	stability checking
time: 0.012; rss: 110MB	type collecting
time: 0.001; rss: 110MB	variance inference
time: 0.001; rss: 110MB	impl wf inference
time: 0.015; rss: 115MB	coherence checking
time: 0.020; rss: 116MB	wf checking
time: 0.128; rss: 125MB	item-types checking
time: 0.298; rss: 134MB	item-bodies checking
time: 0.000; rss: 134MB	drop-impl checking
time: 0.041; rss: 162MB	const checking
time: 0.007; rss: 162MB	privacy checking
time: 0.002; rss: 162MB	intrinsic checking
time: 0.001; rss: 162MB	effect checking
time: 0.006; rss: 162MB	match checking
time: 0.004; rss: 163MB	liveness checking
time: 0.016; rss: 163MB	rvalue checking
time: 0.042; rss: 184MB	MIR dump
  time: 0.006; rss: 185MB	SimplifyCfg
  time: 0.010; rss: 185MB	QualifyAndPromoteConstants
  time: 0.013; rss: 185MB	TypeckMir
  time: 0.000; rss: 185MB	SimplifyBranches
  time: 0.003; rss: 185MB	SimplifyCfg
time: 0.032; rss: 185MB	MIR cleanup and validation
time: 0.047; rss: 185MB	borrow checking
time: 0.001; rss: 185MB	reachability checking
time: 0.004; rss: 185MB	death checking
time: 0.000; rss: 185MB	unused lib feature checking
time: 0.029; rss: 185MB	lint checking
time: 0.000; rss: 185MB	resolving dependency formats
  time: 0.000; rss: 185MB	NoLandingPads
  time: 0.003; rss: 185MB	SimplifyCfg
  time: 0.007; rss: 185MB	EraseRegions
  time: 0.001; rss: 185MB	AddCallGuards
  time: 0.018; rss: 188MB	ElaborateDrops
  time: 0.000; rss: 188MB	NoLandingPads
  time: 0.004; rss: 188MB	SimplifyCfg
  time: 0.003; rss: 188MB	InstCombine
  time: 0.002; rss: 188MB	Deaggregator
  time: 0.000; rss: 188MB	CopyPropagation
  time: 0.004; rss: 188MB	SimplifyLocals
  time: 0.001; rss: 188MB	AddCallGuards
  time: 0.000; rss: 188MB	PreTrans
time: 0.045; rss: 188MB	MIR optimisations
  time: 0.009; rss: 190MB	write metadata
  time: 0.086; rss: 195MB	translation item collection
  time: 0.015; rss: 197MB	codegen unit partitioning
  time: 0.013; rss: 324MB	internalize symbols
time: 1.854; rss: 324MB	translation
time: 0.000; rss: 324MB	assert dep graph
time: 0.123; rss: 332MB	serialize dep graph
incremental: re-using 0 out of 21 modules
time: 0.001; rss: 274MB	llvm function passes [3]
time: 0.000; rss: 274MB	llvm module passes [3]
time: 0.002; rss: 274MB	llvm function passes [4]
time: 0.003; rss: 274MB	llvm function passes [1]
time: 0.000; rss: 276MB	llvm module passes [1]
time: 0.001; rss: 276MB	llvm module passes [4]
time: 0.005; rss: 278MB	llvm function passes [0]
time: 0.001; rss: 280MB	llvm module passes [0]
time: 0.010; rss: 280MB	llvm function passes [10]
time: 0.012; rss: 283MB	codegen passes [3]
time: 0.004; rss: 283MB	llvm module passes [10]
time: 0.011; rss: 283MB	llvm function passes [3]
time: 0.028; rss: 283MB	llvm function passes [5]
time: 0.022; rss: 283MB	codegen passes [4]
time: 0.004; rss: 287MB	llvm module passes [3]
time: 0.032; rss: 287MB	llvm function passes [6]
time: 0.029; rss: 287MB	codegen passes [1]
time: 0.008; rss: 287MB	llvm function passes [9]
time: 0.002; rss: 289MB	llvm module passes [9]
time: 0.023; rss: 289MB	llvm function passes [4]
time: 0.014; rss: 289MB	llvm function passes [8]
time: 0.001; rss: 289MB	llvm module passes [4]
time: 0.054; rss: 291MB	llvm function passes [7]
time: 0.006; rss: 295MB	llvm function passes [12]
time: 0.038; rss: 295MB	llvm function passes [1]
time: 0.044; rss: 298MB	llvm function passes [11]
time: 0.008; rss: 304MB	llvm module passes [11]
time: 0.015; rss: 308MB	llvm module passes [1]
time: 0.039; rss: 312MB	llvm module passes [8]
time: 0.037; rss: 312MB	codegen passes [4]
time: 0.088; rss: 312MB	codegen passes [0]
time: 0.011; rss: 312MB	llvm function passes [14]
time: 0.001; rss: 316MB	llvm module passes [14]
time: 0.035; rss: 316MB	llvm module passes [12]
time: 0.004; rss: 320MB	llvm function passes [15]
time: 0.001; rss: 322MB	llvm module passes [15]
time: 0.001; rss: 326MB	codegen passes [19]
time: 0.157; rss: 336MB	llvm function passes [2]
time: 0.065; rss: 338MB	codegen passes [14]
time: 0.132; rss: 338MB	codegen passes [9]
time: 0.127; rss: 341MB	llvm function passes [0]
time: 0.022; rss: 347MB	llvm module passes [0]
time: 0.144; rss: 348MB	codegen passes [12]
time: 0.179; rss: 345MB	llvm function passes [13]
time: 0.116; rss: 345MB	codegen passes [15]
time: 0.170; rss: 345MB	llvm function passes [4]
time: 0.252; rss: 349MB	llvm module passes [5]
time: 0.223; rss: 347MB	codegen passes [10]
time: 0.181; rss: 351MB	codegen passes [8]
time: 0.043; rss: 354MB	llvm module passes [4]
time: 0.309; rss: 362MB	llvm module passes [6]
time: 0.272; rss: 353MB	codegen passes [3]
time: 0.606; rss: 389MB	llvm module passes [7]
time: 0.484; rss: 386MB	codegen passes [11]
time: 0.633; rss: 392MB	llvm module passes [2]
time: 0.549; rss: 396MB	llvm module passes [13]
time: 0.640; rss: 398MB	codegen passes [1]
time: 0.538; rss: 401MB	codegen passes [5]
time: 0.505; rss: 391MB	codegen passes [6]
time: 0.603; rss: 375MB	codegen passes [4]
time: 0.987; rss: 383MB	codegen passes [0]
time: 0.980; rss: 393MB	codegen passes [7]
time: 1.405; rss: 386MB	codegen passes [2]
time: 1.468; rss: 365MB	codegen passes [13]
time: 2.429; rss: 362MB	LLVM passes
time: 0.000; rss: 362MB	serialize work products
time: 0.211; rss: 182MB	linking
done
