commit 3317cc9d758faf9b875122217b0d765619dbcd07
Merge: 0986d64 41e184c
Author: bors <bors@rust-lang.org>
Date:   Tue Mar 15 23:49:06 2016 -0700

    Auto merge of #32266 - alexcrichton:fix-mingw-rustbuild-again, r=brson
    
    rustbuild: Fix LLVM compile on MinGW
    
    The LLVM change [1] in #32239 unfortunately broke the LLVM build on MinGW, so
    this LLVM submodule update brings in one more fix [2] which should hopefully
    remedy that.
    
    Once this lands we should be able to immediately start gating on this to prevent
    it from happening again.
    
    [1]: https://github.com/rust-lang/llvm/commit/be89e4b5
    [2]: https://github.com/rust-lang/llvm/commit/3dcd2c84
rustc: ./rust-encoding.0.2.32
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling encoding v0.2.32 (file:///root/benchmarks/rust-encoding.0.2.32)
time: 0.023; rss: 43MB	parsing
Lines of code:             6441
Pre-expansion node count:  30335
time: 0.006; rss: 43MB	configuration 1
time: 0.000; rss: 43MB	recursion limit
time: 0.000; rss: 43MB	gated macro checking
time: 0.000; rss: 43MB	crate injection
time: 0.003; rss: 46MB	macro loading
time: 0.000; rss: 46MB	plugin loading
time: 0.000; rss: 46MB	plugin registration
time: 0.045; rss: 49MB	expansion
time: 0.001; rss: 49MB	complete gated feature checking 1
time: 0.008; rss: 49MB	configuration 2
time: 0.000; rss: 49MB	gated configuration checking
time: 0.004; rss: 49MB	maybe building test harness
time: 0.003; rss: 49MB	prelude injection
time: 0.000; rss: 49MB	checking that all macro invocations are gone
time: 0.000; rss: 49MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 49MB	complete gated feature checking 2
time: 0.000; rss: 49MB	const fn bodies and arguments
Post-expansion node count: 41783
time: 0.003; rss: 49MB	assigning node ids
time: 0.004; rss: 52MB	lowering ast -> hir
time: 0.001; rss: 54MB	indexing hir
time: 0.001; rss: 54MB	attribute checking
time: 0.002; rss: 54MB	early lint checks
time: 0.001; rss: 54MB	external crate/lib resolution
time: 0.000; rss: 54MB	language item collection
time: 0.008; rss: 62MB	resolution
time: 0.000; rss: 62MB	lifetime resolution
time: 0.000; rss: 62MB	looking for entry point
time: 0.000; rss: 62MB	looking for plugin registrar
time: 0.002; rss: 64MB	region resolution
time: 0.000; rss: 64MB	loop checking
time: 0.000; rss: 64MB	static item recursion checking
time: 0.005; rss: 66MB	type collecting
time: 0.000; rss: 66MB	variance inference
time: 0.141; rss: 83MB	coherence checking
time: 0.019; rss: 84MB	wf checking
time: 0.013; rss: 84MB	item-types checking
time: 0.206; rss: 95MB	item-bodies checking
time: 0.000; rss: 95MB	drop-impl checking
time: 0.010; rss: 95MB	const checking
time: 0.002; rss: 95MB	privacy checking
time: 0.000; rss: 95MB	stability index
time: 0.001; rss: 95MB	intrinsic checking
time: 0.000; rss: 95MB	effect checking
time: 0.006; rss: 95MB	match checking
time: 0.002; rss: 95MB	liveness checking
time: 0.006; rss: 95MB	rvalue checking
time: 0.016; rss: 101MB	MIR dump
time: 0.009; rss: 101MB	MIR passes
time: 0.021; rss: 101MB	borrow checking
time: 0.000; rss: 101MB	reachability checking
time: 0.002; rss: 101MB	death checking
time: 0.002; rss: 101MB	stability checking
time: 0.000; rss: 101MB	unused lib feature checking
time: 0.018; rss: 101MB	lint checking
time: 0.000; rss: 101MB	resolving dependency formats
  time: 0.024; rss: 114MB	translation item collection
  time: 0.057; rss: 146MB	write metadata
time: 0.325; rss: 146MB	translation
  time: 0.026; rss: 107MB	llvm function passes [0]
  time: 0.047; rss: 110MB	llvm module passes [0]
  time: 0.559; rss: 116MB	codegen passes [0]
  time: 0.001; rss: 100MB	codegen passes [0]
time: 0.695; rss: 99MB	LLVM passes
time: 0.051; rss: 98MB	linking
done
