commit b5de94fba9a137a1128448f4b703250e7e8ff975
Merge: 6892277 ae79ce3
Author: bors <bors@rust-lang.org>
Date:   Sat Apr 16 23:06:29 2016 -0700

    Auto merge of #32977 - alexcrichton:ignore-panics, r=brson
    
    std: Change String::truncate to panic less
    
    The `Vec::truncate` method does not panic if the length argument is greater than
    the vector's current length, but `String::truncate` will indeed panic. This
    semantic difference can be a bit jarring (e.g. #32717), and after some
    discussion the libs team concluded that although this can technically be a
    breaking change it is almost undoubtedly not so in practice.
    
    This commit changes the semantics of `String::truncate` to be a noop if
    `new_len` is greater than the length of the current string.
    
    Closes #32717
rustc: ./jld-day15-parser
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling day15 v0.1.0 (file:///root/benchmarks/jld-day15-parser)
time: 0.001; rss: 36MB	parsing
Lines of code:             72
Pre-expansion node count:  673
time: 0.000; rss: 40MB	configuration 1
time: 0.000; rss: 40MB	recursion limit
time: 0.000; rss: 40MB	gated macro checking
time: 0.000; rss: 40MB	crate injection
time: 0.003; rss: 43MB	macro loading
time: 0.000; rss: 43MB	plugin loading
time: 0.000; rss: 43MB	plugin registration
time: 0.002; rss: 43MB	expansion
time: 0.000; rss: 43MB	complete gated feature checking 1
time: 0.000; rss: 43MB	configuration 2
time: 0.000; rss: 43MB	gated configuration checking
time: 0.000; rss: 43MB	maybe building test harness
time: 0.000; rss: 43MB	prelude injection
time: 0.000; rss: 43MB	checking that all macro invocations are gone
time: 0.000; rss: 43MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 43MB	complete gated feature checking 2
time: 0.000; rss: 43MB	const fn bodies and arguments
Post-expansion node count: 1176
time: 0.000; rss: 43MB	assigning node ids
time: 0.000; rss: 43MB	lowering ast -> hir
time: 0.000; rss: 47MB	indexing hir
time: 0.000; rss: 47MB	attribute checking
time: 0.000; rss: 47MB	early lint checks
time: 0.001; rss: 47MB	external crate/lib resolution
time: 0.000; rss: 47MB	language item collection
time: 0.001; rss: 51MB	resolution
time: 0.000; rss: 51MB	lifetime resolution
time: 0.000; rss: 51MB	looking for entry point
time: 0.000; rss: 51MB	looking for plugin registrar
time: 0.000; rss: 51MB	region resolution
time: 0.000; rss: 51MB	loop checking
time: 0.000; rss: 51MB	static item recursion checking
time: 0.000; rss: 51MB	load_dep_graph
time: 0.001; rss: 55MB	type collecting
time: 0.000; rss: 55MB	variance inference
time: 0.005; rss: 64MB	coherence checking
time: 0.007; rss: 68MB	wf checking
time: 0.000; rss: 68MB	item-types checking
time: 1.520; rss: 144MB	item-bodies checking
time: 0.000; rss: 144MB	drop-impl checking
time: 0.001; rss: 144MB	const checking
time: 0.000; rss: 144MB	privacy checking
time: 0.000; rss: 144MB	stability index
time: 0.000; rss: 144MB	intrinsic checking
time: 0.000; rss: 144MB	effect checking
time: 0.000; rss: 144MB	match checking
time: 0.000; rss: 144MB	liveness checking
time: 0.002; rss: 144MB	rvalue checking
time: 0.001; rss: 145MB	MIR dump
time: 0.000; rss: 145MB	MIR passes
time: 0.001; rss: 145MB	borrow checking
time: 0.000; rss: 145MB	reachability checking
time: 0.000; rss: 145MB	death checking
time: 0.000; rss: 145MB	stability checking
time: 0.000; rss: 145MB	unused lib feature checking
time: 0.004; rss: 145MB	lint checking
time: 0.001; rss: 145MB	resolving dependency formats
time: 0.000; rss: 146MB	Prepare MIR codegen passes
  time: 12.363; rss: 188MB	translation item collection
  time: 0.001; rss: 188MB	codegen unit partitioning
  time: 0.000; rss: 223MB	write metadata
time: 38.817; rss: 223MB	translation
time: 0.000; rss: 223MB	assert dep graph
time: 0.000; rss: 223MB	serialize dep graph
  time: 0.014; rss: 105MB	llvm function passes [0]
  time: 0.001; rss: 105MB	llvm module passes [0]
  time: 0.273; rss: 111MB	codegen passes [0]
  time: 0.000; rss: 104MB	codegen passes [0]
time: 0.296; rss: 104MB	LLVM passes
  time: 0.115; rss: 104MB	running linker
time: 0.116; rss: 104MB	linking
done
