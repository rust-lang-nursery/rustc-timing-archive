commit 0bd2ce62b27e2b9a7dfe92fc23d9098854008089
Merge: bfa709a 30daedf
Author: bors <bors@rust-lang.org>
Date:   Sat Nov 19 16:39:25 2016 -0600

    Auto merge of #37831 - rkruppe:llvm-attr-fwdcompat, r=eddyb
    
    [LLVM 4.0] Use llvm::Attribute APIs instead of "raw value" APIs
    
    The latter will be removed in LLVM 4.0 (see https://github.com/llvm-mirror/llvm/commit/4a6fc8bacf11d8066da72cf8481467167877ed16).
    
    The librustc_llvm API remains mostly unchanged, except that llvm::Attribute is no longer a bitflag but represents only a *single* attribute.
    The ability to store many attributes in a small number of bits and modify them without interacting with LLVM is only used in rustc_trans::abi and closely related modules, and only attributes for function arguments are considered there.
    Thus rustc_trans::abi now has its own bit-packed representation of argument attributes, which are translated to rustc_llvm::Attribute when applying the attributes.
    
    cc #37609
rustc: ./html5ever-2016-08-25
cargo rustc  -- -Ztime-passes -Zinput-stats
   Compiling html5ever v0.5.4 (file:///root/benchmarks/html5ever-2016-08-25)
time: 0.034; rss: 48MB	parsing
Lines of code:             8210
Pre-expansion node count:  52140
time: 0.000; rss: 48MB	recursion limit
time: 0.000; rss: 48MB	crate injection
time: 0.000; rss: 48MB	plugin loading
time: 0.000; rss: 48MB	plugin registration
time: 0.687; rss: 100MB	expansion
time: 0.000; rss: 100MB	maybe building test harness
time: 0.002; rss: 100MB	maybe creating a macro crate
Post-expansion node count: 163412
time: 0.000; rss: 100MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 100MB	complete gated feature checking
time: 0.008; rss: 100MB	early lint checks
time: 0.002; rss: 100MB	AST validation
time: 0.019; rss: 103MB	name resolution
time: 0.023; rss: 112MB	lowering ast -> hir
time: 0.007; rss: 115MB	indexing hir
time: 0.002; rss: 115MB	attribute checking
time: 0.001; rss: 96MB	language item collection
time: 0.002; rss: 96MB	lifetime resolution
time: 0.000; rss: 96MB	looking for entry point
time: 0.000; rss: 96MB	looking for plugin registrar
time: 0.011; rss: 103MB	region resolution
time: 0.001; rss: 103MB	loop checking
time: 0.001; rss: 103MB	static item recursion checking
time: 0.020; rss: 104MB	compute_incremental_hashes_map
time: 0.000; rss: 104MB	load_dep_graph
time: 0.010; rss: 106MB	type collecting
time: 0.000; rss: 106MB	variance inference
time: 0.000; rss: 106MB	impl wf inference
time: 0.011; rss: 107MB	coherence checking
time: 0.020; rss: 108MB	wf checking
time: 0.346; rss: 114MB	item-types checking
time: 0.458; rss: 125MB	item-bodies checking
time: 0.000; rss: 125MB	drop-impl checking
time: 0.064; rss: 131MB	const checking
time: 0.006; rss: 131MB	privacy checking
time: 0.001; rss: 131MB	stability index
time: 0.003; rss: 131MB	intrinsic checking
time: 0.002; rss: 131MB	effect checking
time: 0.014; rss: 131MB	match checking
time: 0.035; rss: 127MB	liveness checking
time: 0.023; rss: 127MB	rvalue checking
time: 0.107; rss: 165MB	MIR dump
  time: 0.008; rss: 166MB	SimplifyCfg
  time: 0.014; rss: 167MB	QualifyAndPromoteConstants
  time: 0.022; rss: 167MB	TypeckMir
  time: 0.000; rss: 167MB	SimplifyBranches
  time: 0.004; rss: 167MB	SimplifyCfg
time: 0.048; rss: 167MB	MIR cleanup and validation
time: 0.081; rss: 173MB	borrow checking
time: 0.002; rss: 173MB	reachability checking
time: 0.005; rss: 173MB	death checking
time: 0.006; rss: 173MB	stability checking
time: 0.000; rss: 173MB	unused lib feature checking
time: 0.056; rss: 173MB	lint checking
time: 0.000; rss: 173MB	resolving dependency formats
  time: 0.000; rss: 173MB	NoLandingPads
  time: 0.004; rss: 173MB	SimplifyCfg
  time: 0.009; rss: 173MB	EraseRegions
  time: 0.001; rss: 173MB	AddCallGuards
  time: 0.081; rss: 177MB	ElaborateDrops
  time: 0.000; rss: 177MB	NoLandingPads
  time: 0.007; rss: 175MB	SimplifyCfg
  time: 0.007; rss: 175MB	InstCombine
  time: 0.001; rss: 175MB	Deaggregator
  time: 0.000; rss: 175MB	CopyPropagation
  time: 0.007; rss: 174MB	SimplifyLocals
  time: 0.001; rss: 174MB	AddCallGuards
  time: 0.000; rss: 174MB	PreTrans
time: 0.119; rss: 174MB	MIR optimisations
  time: 0.011; rss: 175MB	write metadata
  time: 0.041; rss: 176MB	translation item collection
  time: 0.005; rss: 176MB	codegen unit partitioning
  time: 0.005; rss: 189MB	internalize symbols
time: 0.282; rss: 189MB	translation
time: 0.000; rss: 189MB	assert dep graph
time: 0.000; rss: 189MB	serialize dep graph
  time: 0.020; rss: 102MB	llvm function passes [0]
  time: 0.012; rss: 103MB	llvm module passes [0]
  time: 0.478; rss: 108MB	codegen passes [0]
  time: 0.000; rss: 108MB	codegen passes [0]
time: 0.551; rss: 108MB	LLVM passes
time: 0.000; rss: 108MB	serialize work products
time: 0.025; rss: 91MB	linking
done
