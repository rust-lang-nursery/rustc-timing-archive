commit 531b928ea65270a47aeb91c33a4ede447f152103
Merge: a2c56de c306853
Author: bors <bors@rust-lang.org>
Date:   Sat Mar 12 16:18:34 2016 -0800

    Auto merge of #32140 - ruud-v-a:avx-intrinsics, r=alexcrichton
    
    Add AVX broadcast and conversion intrinsics
    
    This adds the following intrinsics:
    
     * `_mm256_broadcast_pd`
     * `_mm256_broadcast_ps`
     * `_mm256_cvtepi32_pd`
     * `_mm256_cvtepi32_ps`
     * `_mm256_cvtpd_epi32`
     * `_mm256_cvtpd_ps`
     * `_mm256_cvtps_epi32`
     * `_mm256_cvtps_pd`
     * `_mm256_cvttpd_epi32`
     * `_mm256_cvttps_epi32`
    
    The "avx" codegen feature must be enabled to use these.
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.031; rss: 45MB	parsing
Lines of code:             9154
Pre-expansion node count:  45594
time: 0.009; rss: 45MB	configuration 1
time: 0.000; rss: 45MB	recursion limit
time: 0.000; rss: 45MB	gated macro checking
time: 0.000; rss: 45MB	crate injection
time: 0.005; rss: 50MB	macro loading
time: 0.000; rss: 50MB	plugin loading
time: 0.000; rss: 50MB	plugin registration
time: 0.189; rss: 59MB	expansion
time: 0.005; rss: 59MB	complete gated feature checking 1
time: 0.034; rss: 59MB	configuration 2
time: 0.000; rss: 59MB	gated configuration checking
time: 0.014; rss: 59MB	maybe building test harness
time: 0.010; rss: 59MB	prelude injection
time: 0.001; rss: 59MB	checking that all macro invocations are gone
time: 0.000; rss: 59MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 59MB	complete gated feature checking 2
time: 0.001; rss: 59MB	const fn bodies and arguments
Post-expansion node count: 109138
time: 0.010; rss: 59MB	assigning node ids
time: 0.010; rss: 63MB	lowering ast -> hir
time: 0.004; rss: 65MB	indexing hir
time: 0.002; rss: 65MB	attribute checking
time: 0.006; rss: 65MB	early lint checks
time: 0.004; rss: 62MB	external crate/lib resolution
time: 0.001; rss: 62MB	language item collection
time: 0.024; rss: 82MB	resolution
time: 0.002; rss: 82MB	lifetime resolution
time: 0.000; rss: 82MB	looking for entry point
time: 0.000; rss: 82MB	looking for plugin registrar
time: 0.005; rss: 85MB	region resolution
time: 0.001; rss: 85MB	loop checking
time: 0.001; rss: 85MB	static item recursion checking
time: 0.013; rss: 88MB	type collecting
time: 0.000; rss: 88MB	variance inference
time: 0.040; rss: 107MB	coherence checking
time: 0.077; rss: 107MB	wf checking
time: 0.024; rss: 110MB	item-types checking
time: 0.485; rss: 132MB	item-bodies checking
time: 0.000; rss: 132MB	drop-impl checking
time: 0.036; rss: 134MB	const checking
time: 0.008; rss: 134MB	privacy checking
time: 0.001; rss: 134MB	stability index
time: 0.004; rss: 134MB	intrinsic checking
time: 0.002; rss: 134MB	effect checking
time: 0.012; rss: 134MB	match checking
time: 0.005; rss: 134MB	liveness checking
time: 0.033; rss: 134MB	rvalue checking
time: 0.059; rss: 136MB	MIR dump
time: 0.000; rss: 136MB	MIR passes
time: 0.065; rss: 136MB	borrow checking
time: 0.003; rss: 136MB	reachability checking
time: 0.006; rss: 136MB	death checking
time: 0.005; rss: 136MB	stability checking
time: 0.000; rss: 136MB	unused lib feature checking
time: 0.046; rss: 136MB	lint checking
time: 0.000; rss: 136MB	resolving dependency formats
time: 0.007; rss: 136MB	erasing regions from MIR
  time: 0.183; rss: 156MB	translation item collection
  time: 0.139; rss: 277MB	write metadata
time: 1.381; rss: 277MB	translation
  time: 0.096; rss: 164MB	llvm function passes [0]
  time: 0.048; rss: 166MB	llvm module passes [0]
  time: 1.613; rss: 165MB	codegen passes [0]
  time: 0.001; rss: 118MB	codegen passes [0]
time: 1.960; rss: 116MB	LLVM passes
time: 0.168; rss: 116MB	linking
done
