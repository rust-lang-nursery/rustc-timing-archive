commit 66ff163081685aa48bc59033eb5280052963a750
Merge: af000a7 241a3e4
Author: bors <bors@rust-lang.org>
Date:   Fri Apr 22 17:54:30 2016 -0700

    Auto merge of #32466 - jooert:btree_append, r=apasel422
    
    Implement `append` for b-trees.
    
    I have finally found time to revive #26227, this time only with an `append` implementation.
    
    The algorithm implemented here is linear in the size of the two b-trees. It firsts creates
    a `MergeIter` from the two b-trees and then builds a new b-tree by pushing
    key-value pairs from the `MergeIter` into nodes at the right heights.
    
    Three functions for stealing have been added to the implementation of `Handle` as
    well as a getter for the height of a `NodeRef`.
    
    The docs have been updated with performance information about `BTreeMap::append` and
    the remark about B has been removed now that it is the same for all instances of `BTreeMap`.
    
    cc @gereeter @Gankro @apasel422
cfg: version 1.10.0-dev (66ff16308 2016-04-22)
cfg: build triple x86_64-unknown-linux-gnu
cfg: host triples x86_64-unknown-linux-gnu
cfg: target triples x86_64-unknown-linux-gnu
cfg: host for x86_64-unknown-linux-gnu is x86_64
cfg: os for x86_64-unknown-linux-gnu is unknown-linux-gnu
cfg: have good valgrind for x86_64-unknown-linux-gnu
cfg: using CC=gcc (CFG_CC)
cfg: disabling valgrind run-pass tests
make: Nothing to be done for 'all'.
