commit af000a7bbffcaf5e75ff97b245fa5a413062acc1
Merge: a264f5b 46b75eb
Author: bors <bors@rust-lang.org>
Date:   Fri Apr 22 11:58:53 2016 -0700

    Auto merge of #31169 - gmbonnet:disable-option-checking, r=brson
    
    configure: Support --disable-option-checking
    
    I'm trying to package Rust for Fedora (this is nothing official (yet)).
    
    The standard RPM packaging process involves running `./configure` with a whole lot of options that are commonly recognized by autotools configure scripts, but not by Rust's one. Since it does not make much sense to support all of this options, I think it would be great to support at least `--disable-option-checking`, so Rust's configure script would not fail.
    
    [The old attempt](https://github.com/fabiand/rust-spec/blob/master/rustc.spec) to package Rust used a sed script (at line 72), but this is not the recommended way to do that.
rustc: ./helloworld
/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc hello.rs -Ztime-passes -Zinput-stats
time: 0.000; rss: 44MB	parsing
Lines of code:             3
Pre-expansion node count:  8
time: 0.000; rss: 48MB	configuration 1
time: 0.000; rss: 48MB	recursion limit
time: 0.000; rss: 48MB	gated macro checking
time: 0.000; rss: 48MB	crate injection
time: 0.003; rss: 51MB	macro loading
time: 0.000; rss: 51MB	plugin loading
time: 0.000; rss: 51MB	plugin registration
time: 0.001; rss: 51MB	expansion
time: 0.000; rss: 51MB	complete gated feature checking 1
time: 0.000; rss: 51MB	configuration 2
time: 0.000; rss: 51MB	gated configuration checking
time: 0.000; rss: 51MB	maybe building test harness
time: 0.000; rss: 51MB	prelude injection
time: 0.000; rss: 51MB	checking that all macro invocations are gone
time: 0.000; rss: 51MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 51MB	complete gated feature checking 2
time: 0.000; rss: 51MB	const fn bodies and arguments
Post-expansion node count: 68
time: 0.000; rss: 51MB	assigning node ids
time: 0.000; rss: 51MB	collecting defs
time: 0.001; rss: 51MB	external crate/lib resolution
time: 0.000; rss: 51MB	lowering ast -> hir
time: 0.000; rss: 51MB	indexing hir
time: 0.000; rss: 51MB	attribute checking
time: 0.000; rss: 51MB	early lint checks
time: 0.000; rss: 51MB	language item collection
time: 0.001; rss: 59MB	name resolution
time: 0.000; rss: 59MB	lifetime resolution
time: 0.000; rss: 59MB	looking for entry point
time: 0.000; rss: 59MB	looking for plugin registrar
time: 0.000; rss: 59MB	region resolution
time: 0.000; rss: 59MB	loop checking
time: 0.000; rss: 59MB	static item recursion checking
time: 0.000; rss: 59MB	load_dep_graph
time: 0.000; rss: 59MB	type collecting
time: 0.000; rss: 59MB	variance inference
time: 0.005; rss: 68MB	coherence checking
time: 0.000; rss: 68MB	wf checking
time: 0.000; rss: 68MB	item-types checking
time: 0.000; rss: 68MB	item-bodies checking
time: 0.000; rss: 68MB	drop-impl checking
time: 0.000; rss: 71MB	const checking
time: 0.000; rss: 71MB	privacy checking
time: 0.000; rss: 71MB	stability index
time: 0.000; rss: 71MB	intrinsic checking
time: 0.000; rss: 71MB	effect checking
time: 0.000; rss: 71MB	match checking
time: 0.000; rss: 71MB	liveness checking
time: 0.000; rss: 71MB	rvalue checking
time: 0.000; rss: 71MB	MIR dump
time: 0.000; rss: 71MB	MIR passes
time: 0.000; rss: 71MB	borrow checking
time: 0.000; rss: 71MB	reachability checking
time: 0.000; rss: 71MB	death checking
time: 0.000; rss: 71MB	stability checking
time: 0.000; rss: 71MB	unused lib feature checking
time: 0.000; rss: 71MB	lint checking
time: 0.001; rss: 71MB	resolving dependency formats
time: 0.000; rss: 71MB	Prepare MIR codegen passes
  time: 0.000; rss: 71MB	translation item collection
  time: 0.000; rss: 71MB	codegen unit partitioning
  time: 0.000; rss: 80MB	write metadata
time: 0.007; rss: 80MB	translation
time: 0.000; rss: 80MB	assert dep graph
time: 0.000; rss: 80MB	serialize dep graph
  time: 0.000; rss: 80MB	llvm function passes [0]
  time: 0.000; rss: 80MB	llvm module passes [0]
  time: 0.001; rss: 84MB	codegen passes [0]
  time: 0.000; rss: 84MB	codegen passes [0]
time: 0.002; rss: 84MB	LLVM passes
  time: 0.104; rss: 84MB	running linker
time: 0.105; rss: 84MB	linking
done
