commit ec872dc8a3f008299ca1508105ee064d1f0f0367
Merge: 39a523b e252865
Author: bors <bors@rust-lang.org>
Date:   Tue Jun 7 14:45:39 2016 -0700

    Auto merge of #34141 - eddyb:trans-abi-memcpy, r=nikomatsakis
    
    trans: always use a memcpy for ABI argument/return casts.
    
    When storing incoming arguments or values returned by call/invoke, always do a `memcpy` from a temporary of the cast type, if there is an ABI cast.
    While Clang has gotten smarter ([store](https://godbolt.org/g/EphFuK) vs [memcpy](https://godbolt.org/g/5dikH9)), a `memcpy` will always work.
    This is what @dotdash has wanted to do all along, and it fixes #32049.
rustc: ./jld-day15-parser
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling day15 v0.1.0 (file:///root/benchmarks/jld-day15-parser)
time: 0.001; rss: 45MB	parsing
Lines of code:             72
Pre-expansion node count:  653
time: 0.000; rss: 45MB	configuration 1
time: 0.000; rss: 45MB	recursion limit
time: 0.000; rss: 45MB	crate injection
time: 0.018; rss: 83MB	macro loading
time: 0.000; rss: 83MB	plugin loading
time: 0.000; rss: 83MB	plugin registration
time: 0.002; rss: 83MB	expansion
time: 0.000; rss: 83MB	gated configuration checking
time: 0.000; rss: 83MB	maybe building test harness
time: 0.000; rss: 83MB	prelude injection
time: 0.000; rss: 83MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 83MB	complete gated feature checking
Post-expansion node count: 1156
time: 0.000; rss: 83MB	assigning node ids
time: 0.000; rss: 83MB	collecting defs
time: 0.005; rss: 87MB	external crate/lib resolution
time: 0.000; rss: 87MB	early lint checks
time: 0.000; rss: 87MB	AST validation
time: 0.001; rss: 87MB	name resolution
time: 0.000; rss: 87MB	lowering ast -> hir
time: 0.000; rss: 87MB	indexing hir
time: 0.000; rss: 87MB	attribute checking
time: 0.000; rss: 87MB	language item collection
time: 0.000; rss: 87MB	lifetime resolution
time: 0.000; rss: 87MB	looking for entry point
time: 0.000; rss: 87MB	looking for plugin registrar
time: 0.000; rss: 87MB	region resolution
time: 0.000; rss: 87MB	loop checking
time: 0.000; rss: 87MB	static item recursion checking
time: 0.000; rss: 87MB	load_dep_graph
time: 0.001; rss: 91MB	type collecting
time: 0.000; rss: 91MB	variance inference
time: 0.005; rss: 91MB	coherence checking
time: 0.006; rss: 91MB	wf checking
time: 0.000; rss: 91MB	item-types checking
time: 0.046; rss: 101MB	item-bodies checking
time: 0.000; rss: 101MB	drop-impl checking
time: 0.001; rss: 101MB	const checking
time: 0.000; rss: 101MB	privacy checking
time: 0.000; rss: 101MB	stability index
time: 0.000; rss: 101MB	intrinsic checking
time: 0.000; rss: 101MB	effect checking
time: 0.000; rss: 101MB	match checking
time: 0.000; rss: 101MB	liveness checking
time: 0.000; rss: 101MB	rvalue checking
time: 0.001; rss: 101MB	MIR dump
time: 0.001; rss: 101MB	MIR passes
time: 0.001; rss: 101MB	borrow checking
time: 0.000; rss: 101MB	reachability checking
time: 0.000; rss: 101MB	death checking
time: 0.000; rss: 101MB	stability checking
time: 0.000; rss: 101MB	unused lib feature checking
time: 0.004; rss: 101MB	lint checking
time: 0.002; rss: 101MB	resolving dependency formats
time: 0.002; rss: 101MB	Prepare MIR codegen passes
  time: 0.000; rss: 101MB	write metadata
  time: 0.618; rss: 107MB	translation item collection
  time: 0.000; rss: 107MB	codegen unit partitioning
time: 2.973; rss: 132MB	translation
time: 0.000; rss: 132MB	assert dep graph
time: 0.000; rss: 132MB	serialize dep graph
  time: 0.014; rss: 110MB	llvm function passes [0]
  time: 0.001; rss: 110MB	llvm module passes [0]
  time: 0.274; rss: 116MB	codegen passes [0]
  time: 0.000; rss: 110MB	codegen passes [0]
time: 0.297; rss: 110MB	LLVM passes
  time: 0.126; rss: 110MB	running linker
time: 0.127; rss: 110MB	linking
done
