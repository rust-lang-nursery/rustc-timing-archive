commit 12d16599d84c25899f02a6e53110d1e70cdcbd8a
Merge: c2cab1f 696a570
Author: bors <bors@rust-lang.org>
Date:   Wed Jun 1 10:21:55 2016 -0700

    Auto merge of #33814 - lambda:rtabort-use-platform-abort, r=alexcrichton
    
    Open code the __fastfail intrinsic for rtabort! on windows
    
    As described https://msdn.microsoft.com/en-us/library/dn774154.aspx
    
    This is a Windows 8+ mechanism for terminating the process quickly,
    which degrades to either an access violation or bugcheck in older versions.
    
    I'm not sure this is better the the current mechanism of terminating
    with an illegal instruction, but we recently converted unix to
    terminate more correctly with SIGABORT, and this *seems* more correct
    for windows.
    
    [breaking-change]
rustc: ./issue-32278-big-array-of-strings
/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc big-array-of-strings.rs -Ztime-passes -Zinput-stats
time: 0.176; rss: 68MB	parsing
Lines of code:             65577
Pre-expansion node count:  65552
time: 0.016; rss: 68MB	configuration 1
time: 0.000; rss: 68MB	recursion limit
time: 0.000; rss: 68MB	crate injection
time: 0.018; rss: 101MB	macro loading
time: 0.000; rss: 101MB	plugin loading
time: 0.000; rss: 101MB	plugin registration
time: 0.053; rss: 108MB	expansion
time: 0.000; rss: 108MB	gated configuration checking
time: 0.006; rss: 108MB	maybe building test harness
time: 0.008; rss: 108MB	prelude injection
time: 0.001; rss: 108MB	checking that all macro invocations are gone
time: 0.000; rss: 108MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 108MB	complete gated feature checking
Post-expansion node count: 65565
time: 0.009; rss: 108MB	assigning node ids
time: 0.001; rss: 108MB	collecting defs
time: 0.004; rss: 109MB	external crate/lib resolution
time: 0.010; rss: 109MB	early lint checks
time: 0.001; rss: 109MB	AST validation
time: 0.002; rss: 109MB	name resolution
time: 0.011; rss: 123MB	lowering ast -> hir
time: 0.002; rss: 123MB	indexing hir
time: 0.001; rss: 123MB	attribute checking
time: 0.001; rss: 109MB	language item collection
time: 0.001; rss: 109MB	lifetime resolution
time: 0.000; rss: 109MB	looking for entry point
time: 0.000; rss: 109MB	looking for plugin registrar
time: 0.009; rss: 118MB	region resolution
time: 0.001; rss: 118MB	loop checking
time: 0.002; rss: 118MB	static item recursion checking
time: 0.000; rss: 118MB	load_dep_graph
time: 0.000; rss: 118MB	type collecting
time: 0.000; rss: 118MB	variance inference
time: 0.006; rss: 120MB	coherence checking
time: 0.001; rss: 121MB	wf checking
time: 0.994; rss: 136MB	item-types checking
time: 0.000; rss: 136MB	item-bodies checking
time: 0.000; rss: 136MB	drop-impl checking
time: 0.021; rss: 134MB	const checking
time: 0.002; rss: 134MB	privacy checking
time: 0.001; rss: 134MB	stability index
time: 0.000; rss: 134MB	intrinsic checking
time: 0.000; rss: 134MB	effect checking
time: 0.000; rss: 134MB	match checking
time: 0.001; rss: 134MB	liveness checking
time: 0.000; rss: 134MB	rvalue checking
time: 0.068; rss: 147MB	MIR dump
time: 0.002; rss: 147MB	MIR passes
time: 0.001; rss: 147MB	borrow checking
time: 0.000; rss: 147MB	reachability checking
time: 0.001; rss: 147MB	death checking
time: 0.001; rss: 147MB	stability checking
time: 0.000; rss: 147MB	unused lib feature checking
time: 0.031; rss: 147MB	lint checking
time: 0.002; rss: 147MB	resolving dependency formats
time: 0.001; rss: 147MB	Prepare MIR codegen passes
  time: 0.000; rss: 148MB	write metadata
  time: 0.001; rss: 148MB	translation item collection
  time: 0.000; rss: 148MB	codegen unit partitioning
time: 0.095; rss: 149MB	translation
time: 0.000; rss: 149MB	assert dep graph
time: 0.000; rss: 149MB	serialize dep graph
  time: 0.003; rss: 107MB	llvm function passes [0]
  time: 0.000; rss: 107MB	llvm module passes [0]
  time: 0.166; rss: 109MB	codegen passes [0]
  time: 0.000; rss: 98MB	codegen passes [0]
time: 0.182; rss: 98MB	LLVM passes
  time: 0.194; rss: 98MB	running linker
time: 0.195; rss: 97MB	linking
done
