commit b1363a73ede57ae595f3a1be2bb75d308ba4f7f6
Merge: 2fd0608 848cfe2
Author: bors <bors@rust-lang.org>
Date:   Tue Sep 13 15:08:12 2016 -0700

    Auto merge of #35021 - japaric:rustc-builtins, r=alexcrichton
    
    crate-ify compiler-rt into compiler-builtins
    
    libcompiler-rt.a is dead, long live libcompiler-builtins.rlib
    
    This commit moves the logic that used to build libcompiler-rt.a into a
    compiler-builtins crate on top of the core crate and below the std crate.
    This new crate still compiles the compiler-rt instrinsics using gcc-rs
    but produces an .rlib instead of a static library.
    
    Also, with this commit rustc no longer passes -lcompiler-rt to the
    linker. This effectively makes the "no-compiler-rt" field of target
    specifications a no-op. Users of `no_std` will have to explicitly add
    the compiler-builtins crate to their crate dependency graph *if* they
    need the compiler-rt intrinsics - this is a [breaking-change]. Users
    of the `std` have to do nothing extra as the std crate depends
    on compiler-builtins.
    
    Finally, this a step towards lazy compilation of std with Cargo as the
    compiler-rt intrinsics can now be built by Cargo instead of having to
    be supplied by the user by some other method.
    
    closes #34400
    
    ---
    
    r? @alexcrichton
rustc: ./jld-day15-parser
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling day15 v0.1.0 (file:///root/benchmarks/jld-day15-parser)
time: 0.001; rss: 42MB	parsing
Lines of code:             72
Pre-expansion node count:  654
time: 0.000; rss: 42MB	recursion limit
time: 0.000; rss: 42MB	crate injection
time: 0.000; rss: 42MB	plugin loading
time: 0.000; rss: 42MB	plugin registration
time: 0.018; rss: 66MB	expansion
time: 0.000; rss: 66MB	maybe building test harness
time: 0.000; rss: 66MB	maybe creating a macro crate
time: 0.000; rss: 66MB	assigning node ids
Post-expansion node count: 1155
time: 0.000; rss: 66MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 66MB	complete gated feature checking
time: 0.000; rss: 66MB	collecting defs
time: 0.003; rss: 66MB	external crate/lib resolution
time: 0.000; rss: 66MB	early lint checks
time: 0.000; rss: 66MB	AST validation
time: 0.001; rss: 66MB	name resolution
time: 0.000; rss: 66MB	lowering ast -> hir
time: 0.000; rss: 66MB	indexing hir
time: 0.000; rss: 66MB	attribute checking
time: 0.000; rss: 66MB	language item collection
time: 0.000; rss: 66MB	lifetime resolution
time: 0.000; rss: 66MB	looking for entry point
time: 0.000; rss: 66MB	looking for plugin registrar
time: 0.000; rss: 66MB	region resolution
time: 0.000; rss: 66MB	loop checking
time: 0.000; rss: 66MB	static item recursion checking
time: 0.000; rss: 71MB	compute_incremental_hashes_map
time: 0.000; rss: 71MB	load_dep_graph
time: 0.001; rss: 71MB	type collecting
time: 0.000; rss: 71MB	variance inference
time: 0.004; rss: 71MB	coherence checking
time: 0.005; rss: 71MB	wf checking
time: 0.000; rss: 71MB	item-types checking
time: 0.032; rss: 77MB	item-bodies checking
time: 0.000; rss: 77MB	drop-impl checking
time: 0.001; rss: 77MB	const checking
time: 0.000; rss: 77MB	privacy checking
time: 0.000; rss: 77MB	stability index
time: 0.000; rss: 77MB	intrinsic checking
time: 0.000; rss: 77MB	effect checking
time: 0.000; rss: 77MB	match checking
time: 0.000; rss: 77MB	liveness checking
time: 0.000; rss: 77MB	rvalue checking
time: 0.001; rss: 77MB	MIR dump
  time: 0.000; rss: 77MB	SimplifyCfg
  time: 0.000; rss: 77MB	QualifyAndPromoteConstants
  time: 0.000; rss: 77MB	TypeckMir
  time: 0.000; rss: 77MB	SimplifyBranches
  time: 0.000; rss: 77MB	SimplifyCfg
time: 0.001; rss: 77MB	MIR passes
time: 0.001; rss: 77MB	borrow checking
time: 0.000; rss: 77MB	reachability checking
time: 0.000; rss: 77MB	death checking
time: 0.000; rss: 77MB	stability checking
time: 0.000; rss: 77MB	unused lib feature checking
time: 0.003; rss: 77MB	lint checking
time: 0.001; rss: 77MB	resolving dependency formats
  time: 0.000; rss: 77MB	NoLandingPads
  time: 0.000; rss: 77MB	SimplifyCfg
  time: 0.000; rss: 77MB	EraseRegions
  time: 0.000; rss: 77MB	AddCallGuards
  time: 0.001; rss: 77MB	ElaborateDrops
  time: 0.000; rss: 77MB	NoLandingPads
  time: 0.000; rss: 77MB	SimplifyCfg
  time: 0.003; rss: 77MB	Deaggregator
  time: 0.000; rss: 77MB	AddCallGuards
  time: 0.000; rss: 77MB	PreTrans
time: 0.005; rss: 77MB	Prepare MIR codegen passes
  time: 0.000; rss: 81MB	write metadata
  time: 0.195; rss: 87MB	translation item collection
  time: 0.003; rss: 87MB	codegen unit partitioning
  time: 0.007; rss: 98MB	internalize symbols
time: 0.763; rss: 98MB	translation
time: 0.000; rss: 98MB	assert dep graph
time: 0.000; rss: 98MB	serialize dep graph
  time: 0.018; rss: 89MB	llvm function passes [0]
  time: 0.001; rss: 89MB	llvm module passes [0]
  time: 0.353; rss: 96MB	codegen passes [0]
  time: 0.000; rss: 96MB	codegen passes [0]
time: 0.373; rss: 96MB	LLVM passes
time: 0.000; rss: 96MB	serialize work products
  time: 0.124; rss: 86MB	running linker
time: 0.126; rss: 86MB	linking
done
