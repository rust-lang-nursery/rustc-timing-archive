commit 8aeb15acc73311ea4308e74a166ba3c0b261c810
Merge: 497d67d 90ce504
Author: bors <bors@rust-lang.org>
Date:   Thu Sep 1 19:03:27 2016 -0700

    Auto merge of #35894 - jseyfried:new_import_semantics, r=nrc
    
    Implement RFC 1560 behind `#![feature(item_like_imports)]`
    
    This implements https://github.com/rust-lang/rfcs/pull/1560 (cc #35120) behind the `item_like_imports` feature gate.
    
    The [RFC text](https://github.com/rust-lang/rfcs/blob/master/text/1560-name-resolution.md#changes-to-name-resolution-rules) describes the changes to name resolution enabled by `#![feature(item_like_imports)` in detail. To summarize,
     - Items and named imports shadow glob imports.
     - Multiple globs can import the same name if the name is unused or the imports are shadowed.
     - Multiple globs can import the same name if the imports are of the same item (following re-exports).
      - The visibility of such a name is the maximum visibility of the imports.
      - Equivalently, adding a glob import will never reduce the visibility of a name, nor will removing one increase it.
     - Non-prelude private imports can be used wherever we currently allow private items to be used.
      - Prelude-imported names are unaffected, i.e. they continue to be usable only in lexical scopes.
     - Globs import all visible names, not just public names.
      - Equivalently, glob importing from an ancestor module imports all of the ancestor's names, and glob importing from other modules is unchanged.
    
    r? @nrc
rustc: ./piston-image-0.3.11
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling bitflags v0.7.0
   Compiling lzw v0.8.0
   Compiling color_quant v1.0.0
   Compiling byteorder v0.3.13
   Compiling glob v0.2.11
   Compiling gcc v0.3.35
   Compiling num-traits v0.1.35
   Compiling libc v0.2.15
   Compiling rustc-serialize v0.3.19
   Compiling gif v0.5.1
   Compiling rand v0.3.14
   Compiling miniz-sys v0.1.7
   Compiling num-integer v0.1.32
   Compiling flate2 v0.2.14
   Compiling num-iter v0.1.32
   Compiling num-bigint v0.1.35
   Compiling num-complex v0.1.35
   Compiling num-rational v0.1.35
   Compiling num v0.1.35
   Compiling png v0.3.1
   Compiling enum_primitive v0.0.1
makefile:2: recipe for target 'all' failed
done
