commit 8f8944e21a3ff506897d4aaa9ca292fec209cff2
Merge: 224f2ce acc9efa
Author: bors <bors@rust-lang.org>
Date:   Sun Nov 20 07:26:03 2016 -0600

    Auto merge of #37861 - shepmaster:llvm-4.0-inline-pass, r=alexcrichton
    
    [LLVM 4.0] Update AlwaysInliner pass header and constructor
rustc: ./syntex-0.42.2-incr-clean
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
   Compiling syntex_syntax v0.42.0
time: 0.092; rss: 71MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 71MB	recursion limit
time: 0.000; rss: 71MB	crate injection
time: 0.000; rss: 71MB	plugin loading
time: 0.000; rss: 71MB	plugin registration
time: 0.236; rss: 146MB	expansion
time: 0.000; rss: 146MB	maybe building test harness
time: 0.006; rss: 146MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 146MB	checking for inline asm in case the target doesn't support it
time: 0.013; rss: 146MB	complete gated feature checking
time: 0.023; rss: 146MB	early lint checks
time: 0.007; rss: 146MB	AST validation
time: 0.076; rss: 161MB	name resolution
time: 0.044; rss: 186MB	lowering ast -> hir
time: 0.008; rss: 197MB	indexing hir
time: 0.006; rss: 197MB	attribute checking
time: 0.005; rss: 152MB	language item collection
time: 0.010; rss: 152MB	lifetime resolution
time: 0.000; rss: 152MB	looking for entry point
time: 0.000; rss: 152MB	looking for plugin registrar
time: 0.040; rss: 173MB	region resolution
time: 0.005; rss: 173MB	loop checking
time: 0.005; rss: 173MB	static item recursion checking
time: 0.329; rss: 173MB	compute_incremental_hashes_map
time: 0.000; rss: 173MB	load_dep_graph
time: 0.048; rss: 171MB	type collecting
time: 0.001; rss: 171MB	variance inference
time: 0.002; rss: 171MB	impl wf inference
time: 0.018; rss: 174MB	coherence checking
time: 0.087; rss: 177MB	wf checking
time: 0.179; rss: 182MB	item-types checking
time: 6.196; rss: 234MB	item-bodies checking
time: 0.000; rss: 234MB	drop-impl checking
time: 0.215; rss: 249MB	const checking
time: 0.048; rss: 249MB	privacy checking
time: 0.006; rss: 249MB	stability index
time: 0.017; rss: 249MB	intrinsic checking
time: 0.014; rss: 249MB	effect checking
time: 0.045; rss: 249MB	match checking
time: 0.050; rss: 250MB	liveness checking
time: 0.176; rss: 250MB	rvalue checking
time: 0.360; rss: 438MB	MIR dump
  time: 0.056; rss: 439MB	SimplifyCfg
  time: 0.072; rss: 439MB	QualifyAndPromoteConstants
  time: 0.103; rss: 439MB	TypeckMir
  time: 0.004; rss: 439MB	SimplifyBranches
  time: 0.030; rss: 440MB	SimplifyCfg
time: 0.266; rss: 440MB	MIR cleanup and validation
time: 0.544; rss: 441MB	borrow checking
time: 0.019; rss: 441MB	reachability checking
time: 0.039; rss: 441MB	death checking
time: 0.030; rss: 443MB	stability checking
time: 0.000; rss: 443MB	unused lib feature checking
time: 0.193; rss: 443MB	lint checking
time: 0.000; rss: 443MB	resolving dependency formats
  time: 0.003; rss: 443MB	NoLandingPads
  time: 0.026; rss: 443MB	SimplifyCfg
  time: 0.060; rss: 451MB	EraseRegions
  time: 0.011; rss: 451MB	AddCallGuards
  time: 0.269; rss: 467MB	ElaborateDrops
  time: 0.003; rss: 467MB	NoLandingPads
  time: 0.051; rss: 467MB	SimplifyCfg
  time: 0.028; rss: 467MB	InstCombine
  time: 0.012; rss: 467MB	Deaggregator
  time: 0.002; rss: 467MB	CopyPropagation
  time: 0.034; rss: 467MB	SimplifyLocals
  time: 0.010; rss: 467MB	AddCallGuards
  time: 0.002; rss: 467MB	PreTrans
time: 0.512; rss: 467MB	MIR optimisations
  time: 0.060; rss: 476MB	write metadata
  time: 0.396; rss: 490MB	translation item collection
  time: 0.066; rss: 498MB	codegen unit partitioning
  time: 0.047; rss: 741MB	internalize symbols
time: 4.477; rss: 741MB	translation
time: 0.000; rss: 741MB	assert dep graph
time: 0.000; rss: 741MB	serialize dep graph
incremental: re-using 0 out of 1 modules
  time: 0.524; rss: 419MB	llvm function passes [0]
  time: 0.246; rss: 428MB	llvm module passes [0]
  time: 10.229; rss: 428MB	codegen passes [0]
  time: 0.000; rss: 428MB	codegen passes [0]
time: 11.745; rss: 428MB	LLVM passes
time: 0.000; rss: 428MB	serialize work products
time: 0.337; rss: 105MB	linking
done
