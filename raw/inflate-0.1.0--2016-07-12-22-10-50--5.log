commit 26fd0117f9a5128d39a30ae36efc731042bd1fec
Merge: 3085ec7 a7220d9
Author: bors <bors@rust-lang.org>
Date:   Tue Jul 12 15:15:56 2016 -0700

    Auto merge of #34705 - alexcrichton:clean-deprecated, r=brson
    
    std: Clean out deprecated APIs
    
    This primarily removes a lot of `sync::Static*` APIs and rejiggers the
    associated implementations. While doing this it was discovered that the
    `is_poisoned` method can actually result in a data race for the Mutex/RwLock
    primitives, so the inner `Cell<bool>` was changed to an `AtomicBool` to prevent
    the associated data race. Otherwise the usage/gurantees should be the same
    they were before.
rustc: ./inflate-0.1.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling inflate v0.1.0 (file:///root/benchmarks/inflate-0.1.0)
time: 0.004; rss: 83MB	parsing
Lines of code:             956
Pre-expansion node count:  4738
time: 0.001; rss: 87MB	configuration
time: 0.000; rss: 87MB	recursion limit
time: 0.000; rss: 87MB	crate injection
time: 0.000; rss: 87MB	plugin loading
time: 0.000; rss: 87MB	plugin registration
time: 0.110; rss: 126MB	expansion
time: 0.000; rss: 126MB	maybe building test harness
time: 0.000; rss: 126MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 126MB	complete gated feature checking
Post-expansion node count: 55769
time: 0.004; rss: 126MB	assigning node ids
time: 0.005; rss: 129MB	collecting defs
time: 0.001; rss: 129MB	external crate/lib resolution
time: 0.003; rss: 129MB	early lint checks
time: 0.000; rss: 129MB	AST validation
time: 0.007; rss: 131MB	name resolution
time: 0.006; rss: 133MB	lowering ast -> hir
time: 0.001; rss: 135MB	indexing hir
time: 0.000; rss: 135MB	attribute checking
time: 0.001; rss: 133MB	language item collection
time: 0.001; rss: 133MB	lifetime resolution
time: 0.000; rss: 133MB	looking for entry point
time: 0.000; rss: 133MB	looking for plugin registrar
time: 0.003; rss: 135MB	region resolution
time: 0.000; rss: 135MB	loop checking
time: 0.000; rss: 135MB	static item recursion checking
time: 0.000; rss: 135MB	load_dep_graph
time: 0.002; rss: 135MB	type collecting
time: 0.000; rss: 135MB	variance inference
time: 0.010; rss: 138MB	coherence checking
time: 0.002; rss: 139MB	wf checking
time: 0.002; rss: 139MB	item-types checking
time: 3.584; rss: 153MB	item-bodies checking
time: 0.000; rss: 153MB	drop-impl checking
time: 0.015; rss: 152MB	const checking
time: 0.001; rss: 152MB	privacy checking
time: 0.000; rss: 152MB	stability index
time: 0.001; rss: 152MB	intrinsic checking
time: 0.001; rss: 152MB	effect checking
time: 0.005; rss: 152MB	match checking
time: 0.069; rss: 151MB	liveness checking
time: 0.011; rss: 151MB	rvalue checking
time: 0.038; rss: 168MB	MIR dump
time: 0.023; rss: 164MB	MIR passes
time: 0.247; rss: 165MB	borrow checking
time: 0.000; rss: 165MB	reachability checking
time: 0.003; rss: 165MB	death checking
time: 0.003; rss: 165MB	stability checking
time: 0.000; rss: 165MB	unused lib feature checking
time: 0.021; rss: 166MB	lint checking
time: 0.000; rss: 166MB	resolving dependency formats
time: 0.124; rss: 163MB	Prepare MIR codegen passes
  time: 0.003; rss: 164MB	write metadata
  time: 0.010; rss: 166MB	translation item collection
  time: 0.001; rss: 166MB	codegen unit partitioning
time: 0.821; rss: 179MB	translation
time: 0.000; rss: 179MB	assert dep graph
time: 0.000; rss: 179MB	serialize dep graph
  time: 0.301; rss: 148MB	llvm function passes [0]
  time: 0.075; rss: 148MB	llvm module passes [0]
  time: 4.611; rss: 152MB	codegen passes [0]
  time: 0.001; rss: 152MB	codegen passes [0]
time: 5.247; rss: 152MB	LLVM passes
time: 0.034; rss: 140MB	linking
done
