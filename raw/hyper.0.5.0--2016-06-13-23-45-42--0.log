commit 6551acc8e560d242f317f4fe4324be0962c5db75
Merge: ab0b874 297742e
Author: bors <bors@rust-lang.org>
Date:   Mon Jun 13 18:26:30 2016 -0700

    Auto merge of #34262 - dsprenkels:enum_pattern_resolve_ice, r=eddyb
    
    Add regression test for #33293
    
    This PR adds a regression test for #33293.
    
    Closes #33293.
    r? @eddyb
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling log v0.3.6
   Compiling libc v0.2.12
   Compiling matches v0.1.2
   Compiling libc v0.1.12
   Compiling typeable v0.1.2
   Compiling winapi v0.2.7
   Compiling bitflags v0.3.3
   Compiling httparse v0.1.6
   Compiling traitobject v0.0.1
   Compiling winapi-build v0.1.1
   Compiling rustc-serialize v0.3.19
   Compiling pkg-config v0.3.8
   Compiling kernel32-sys v0.2.2
   Compiling mime v0.0.11
   Compiling gcc v0.3.28
   Compiling lazy_static v0.1.16
   Compiling unicase v0.1.0
   Compiling num_cpus v0.2.12
   Compiling rand v0.3.14
   Compiling time v0.1.35
   Compiling openssl-sys v0.6.7
   Compiling openssl v0.6.7
   Compiling uuid v0.1.18
   Compiling url v0.2.38
   Compiling cookie v0.1.21
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.041; rss: 54MB	parsing
Lines of code:             9154
Pre-expansion node count:  44646
time: 0.005; rss: 54MB	configuration 1
time: 0.000; rss: 54MB	recursion limit
time: 0.000; rss: 55MB	crate injection
time: 0.000; rss: 55MB	plugin loading
time: 0.000; rss: 55MB	plugin registration
time: 0.201; rss: 96MB	expansion
time: 0.000; rss: 96MB	gated configuration checking
time: 0.000; rss: 96MB	maybe building test harness
time: 0.000; rss: 96MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 96MB	complete gated feature checking
Post-expansion node count: 100536
time: 0.008; rss: 96MB	assigning node ids
time: 0.003; rss: 98MB	collecting defs
time: 0.011; rss: 108MB	external crate/lib resolution
time: 0.006; rss: 108MB	early lint checks
time: 0.001; rss: 108MB	AST validation
time: 0.032; rss: 113MB	name resolution
time: 0.019; rss: 119MB	lowering ast -> hir
time: 0.002; rss: 120MB	indexing hir
time: 0.002; rss: 120MB	attribute checking
time: 0.001; rss: 112MB	language item collection
time: 0.002; rss: 112MB	lifetime resolution
time: 0.000; rss: 112MB	looking for entry point
time: 0.000; rss: 112MB	looking for plugin registrar
time: 0.011; rss: 115MB	region resolution
time: 0.001; rss: 115MB	loop checking
time: 0.001; rss: 115MB	static item recursion checking
time: 0.000; rss: 115MB	load_dep_graph
time: 0.033; rss: 118MB	type collecting
time: 0.000; rss: 118MB	variance inference
time: 0.050; rss: 125MB	coherence checking
time: 0.095; rss: 126MB	wf checking
time: 0.035; rss: 127MB	item-types checking
time: 0.545; rss: 137MB	item-bodies checking
time: 0.000; rss: 137MB	drop-impl checking
time: 0.048; rss: 139MB	const checking
time: 0.008; rss: 139MB	privacy checking
time: 0.001; rss: 139MB	stability index
time: 0.006; rss: 139MB	intrinsic checking
time: 0.002; rss: 139MB	effect checking
time: 0.014; rss: 139MB	match checking
time: 0.005; rss: 139MB	liveness checking
time: 0.031; rss: 139MB	rvalue checking
time: 0.080; rss: 149MB	MIR dump
time: 0.043; rss: 149MB	MIR passes
time: 0.071; rss: 150MB	borrow checking
time: 0.003; rss: 150MB	reachability checking
time: 0.005; rss: 150MB	death checking
time: 0.006; rss: 150MB	stability checking
time: 0.000; rss: 150MB	unused lib feature checking
time: 0.050; rss: 150MB	lint checking
time: 0.000; rss: 150MB	resolving dependency formats
time: 0.097; rss: 153MB	Prepare MIR codegen passes
  time: 0.140; rss: 160MB	write metadata
  time: 0.181; rss: 162MB	translation item collection
  time: 0.010; rss: 163MB	codegen unit partitioning
time: 1.919; rss: 281MB	translation
time: 0.001; rss: 281MB	assert dep graph
time: 0.000; rss: 281MB	serialize dep graph
  time: 0.097; rss: 176MB	llvm function passes [0]
  time: 0.048; rss: 178MB	llvm module passes [0]
  time: 1.635; rss: 181MB	codegen passes [0]
  time: 0.001; rss: 131MB	codegen passes [0]
time: 1.984; rss: 131MB	LLVM passes
time: 0.176; rss: 129MB	linking
done
