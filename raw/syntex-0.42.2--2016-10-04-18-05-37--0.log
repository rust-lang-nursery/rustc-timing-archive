commit 1a4192804518199623fb88bf43bde69d6b0203cb
Merge: a5dac7a 4625642
Author: bors <bors@rust-lang.org>
Date:   Tue Oct 4 13:23:09 2016 -0700

    Auto merge of #36933 - alexcrichton:less-neon-again, r=eddyb
    
    rustc: Try again to disable NEON on armv7 linux
    
    This is a follow-up to #35814 which apparently didn't disable it hard enough. It
    looks like LLVM's default armv7 target enables NEON so we'd otherwise have to
    pass `-neon`, but we're already enabling armv7 with `+v7` supposedly, so let's
    try just telling LLVM that the armv7 target is arm and then enable features
    selectively.
    
    Closes #36913
rustc: ./syntex-0.42.2
cargo rustc -p syntex_syntax -- -Ztime-passes -Zinput-stats
   Compiling libc v0.2.15
   Compiling log v0.3.6
   Compiling unicode-xid v0.0.3
   Compiling rustc-serialize v0.3.19
   Compiling winapi-build v0.1.1
   Compiling winapi v0.2.8
   Compiling bitflags v0.5.0
   Compiling kernel32-sys v0.2.2
   Compiling term v0.4.4
   Compiling syntex_pos v0.42.0
   Compiling syntex_errors v0.42.0
   Compiling syntex_syntax v0.42.0
time: 0.107; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  224033
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.273; rss: 147MB	expansion
time: 0.000; rss: 147MB	maybe building test harness
time: 0.007; rss: 147MB	maybe creating a macro crate
Post-expansion node count: 641571
time: 0.000; rss: 147MB	checking for inline asm in case the target doesn't support it
time: 0.014; rss: 147MB	complete gated feature checking
time: 0.023; rss: 147MB	early lint checks
time: 0.007; rss: 147MB	AST validation
time: 0.084; rss: 162MB	name resolution
time: 0.050; rss: 201MB	lowering ast -> hir
time: 0.009; rss: 210MB	indexing hir
time: 0.007; rss: 210MB	attribute checking
time: 0.006; rss: 160MB	language item collection
time: 0.012; rss: 160MB	lifetime resolution
time: 0.000; rss: 160MB	looking for entry point
time: 0.000; rss: 160MB	looking for plugin registrar
time: 0.045; rss: 172MB	region resolution
time: 0.006; rss: 172MB	loop checking
time: 0.006; rss: 172MB	static item recursion checking
time: 0.262; rss: 173MB	compute_incremental_hashes_map
time: 0.000; rss: 173MB	load_dep_graph
time: 0.080; rss: 178MB	type collecting
time: 0.001; rss: 178MB	variance inference
time: 0.039; rss: 180MB	coherence checking
time: 0.101; rss: 182MB	wf checking
time: 0.194; rss: 187MB	item-types checking
time: 3.939; rss: 241MB	item-bodies checking
time: 0.000; rss: 241MB	drop-impl checking
time: 0.315; rss: 242MB	const checking
time: 0.055; rss: 242MB	privacy checking
time: 0.007; rss: 242MB	stability index
time: 0.022; rss: 242MB	intrinsic checking
time: 0.019; rss: 242MB	effect checking
time: 0.056; rss: 242MB	match checking
time: 0.055; rss: 236MB	liveness checking
time: 0.291; rss: 236MB	rvalue checking
time: 0.423; rss: 425MB	MIR dump
  time: 0.057; rss: 428MB	SimplifyCfg
  time: 0.084; rss: 428MB	QualifyAndPromoteConstants
  time: 0.112; rss: 428MB	TypeckMir
  time: 0.004; rss: 428MB	SimplifyBranches
  time: 0.037; rss: 428MB	SimplifyCfg
time: 0.295; rss: 428MB	MIR passes
time: 0.690; rss: 429MB	borrow checking
time: 0.022; rss: 429MB	reachability checking
time: 0.045; rss: 429MB	death checking
time: 0.042; rss: 429MB	stability checking
time: 0.000; rss: 429MB	unused lib feature checking
time: 0.222; rss: 429MB	lint checking
time: 0.000; rss: 429MB	resolving dependency formats
  time: 0.003; rss: 429MB	NoLandingPads
  time: 0.027; rss: 429MB	SimplifyCfg
  time: 0.072; rss: 442MB	EraseRegions
  time: 0.011; rss: 442MB	AddCallGuards
  time: 1.045; rss: 458MB	ElaborateDrops
  time: 0.003; rss: 458MB	NoLandingPads
  time: 0.052; rss: 458MB	SimplifyCfg
  time: 0.030; rss: 458MB	InstCombine
  time: 0.012; rss: 458MB	Deaggregator
  time: 0.003; rss: 458MB	CopyPropagation
  time: 0.009; rss: 458MB	AddCallGuards
  time: 0.003; rss: 458MB	PreTrans
time: 1.271; rss: 458MB	Prepare MIR codegen passes
  time: 0.265; rss: 464MB	write metadata
  time: 0.470; rss: 475MB	translation item collection
  time: 0.068; rss: 480MB	codegen unit partitioning
  time: 0.058; rss: 725MB	internalize symbols
time: 5.123; rss: 603MB	translation
time: 0.000; rss: 603MB	assert dep graph
time: 0.000; rss: 603MB	serialize dep graph
  time: 0.516; rss: 412MB	llvm function passes [0]
  time: 0.247; rss: 420MB	llvm module passes [0]
  time: 10.107; rss: 421MB	codegen passes [0]
  time: 0.001; rss: 423MB	codegen passes [0]
time: 11.618; rss: 423MB	LLVM passes
time: 0.000; rss: 423MB	serialize work products
time: 0.660; rss: 107MB	linking
done
