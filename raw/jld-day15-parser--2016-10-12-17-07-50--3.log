commit 9cb01365eed598811aef847a8ee414dab576f3c8
Merge: acb50e3 d9e6430
Author: bors <bors@rust-lang.org>
Date:   Wed Oct 12 11:28:53 2016 -0700

    Auto merge of #36762 - achanda:sockaddr_type, r=alexcrichton
    
    Add two functions to check type of SockAddr
    
    These can be used to determine the type of the underlying IP
    address
    
    r? @alexcrichton
rustc: ./jld-day15-parser
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling day15 v0.1.0 (file:///root/benchmarks/jld-day15-parser)
time: 0.000; rss: 41MB	parsing
Lines of code:             72
Pre-expansion node count:  654
time: 0.000; rss: 41MB	recursion limit
time: 0.000; rss: 41MB	crate injection
time: 0.000; rss: 41MB	plugin loading
time: 0.000; rss: 41MB	plugin registration
time: 0.016; rss: 64MB	expansion
time: 0.000; rss: 64MB	maybe building test harness
time: 0.000; rss: 64MB	maybe creating a macro crate
Post-expansion node count: 1155
time: 0.000; rss: 64MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 64MB	complete gated feature checking
time: 0.000; rss: 64MB	early lint checks
time: 0.000; rss: 64MB	AST validation
time: 0.003; rss: 64MB	name resolution
time: 0.000; rss: 64MB	lowering ast -> hir
time: 0.000; rss: 64MB	indexing hir
time: 0.000; rss: 64MB	attribute checking
time: 0.000; rss: 64MB	language item collection
time: 0.000; rss: 64MB	lifetime resolution
time: 0.000; rss: 64MB	looking for entry point
time: 0.000; rss: 64MB	looking for plugin registrar
time: 0.000; rss: 64MB	region resolution
time: 0.000; rss: 64MB	loop checking
time: 0.000; rss: 64MB	static item recursion checking
time: 0.000; rss: 64MB	compute_incremental_hashes_map
time: 0.000; rss: 64MB	load_dep_graph
time: 0.001; rss: 68MB	type collecting
time: 0.000; rss: 68MB	variance inference
time: 0.005; rss: 68MB	coherence checking
time: 0.005; rss: 68MB	wf checking
time: 0.000; rss: 68MB	item-types checking
time: 0.029; rss: 72MB	item-bodies checking
time: 0.000; rss: 72MB	drop-impl checking
time: 0.001; rss: 72MB	const checking
time: 0.000; rss: 72MB	privacy checking
time: 0.000; rss: 72MB	stability index
time: 0.000; rss: 72MB	intrinsic checking
time: 0.000; rss: 72MB	effect checking
time: 0.000; rss: 72MB	match checking
time: 0.000; rss: 72MB	liveness checking
time: 0.000; rss: 72MB	rvalue checking
time: 0.001; rss: 72MB	MIR dump
  time: 0.000; rss: 72MB	SimplifyCfg
  time: 0.000; rss: 72MB	QualifyAndPromoteConstants
  time: 0.000; rss: 72MB	TypeckMir
  time: 0.000; rss: 72MB	SimplifyBranches
  time: 0.000; rss: 72MB	SimplifyCfg
time: 0.001; rss: 72MB	MIR passes
time: 0.001; rss: 72MB	borrow checking
time: 0.000; rss: 72MB	reachability checking
time: 0.000; rss: 72MB	death checking
time: 0.000; rss: 72MB	stability checking
time: 0.000; rss: 72MB	unused lib feature checking
time: 0.003; rss: 72MB	lint checking
time: 0.001; rss: 72MB	resolving dependency formats
  time: 0.000; rss: 72MB	NoLandingPads
  time: 0.000; rss: 72MB	SimplifyCfg
  time: 0.000; rss: 72MB	EraseRegions
  time: 0.000; rss: 72MB	AddCallGuards
  time: 0.001; rss: 72MB	ElaborateDrops
  time: 0.000; rss: 72MB	NoLandingPads
  time: 0.000; rss: 72MB	SimplifyCfg
  time: 0.000; rss: 72MB	InstCombine
  time: 0.003; rss: 72MB	Deaggregator
  time: 0.000; rss: 72MB	CopyPropagation
  time: 0.000; rss: 72MB	AddCallGuards
  time: 0.000; rss: 72MB	PreTrans
time: 0.004; rss: 72MB	Prepare MIR codegen passes
  time: 0.000; rss: 72MB	write metadata
  time: 0.144; rss: 79MB	translation item collection
  time: 0.003; rss: 81MB	codegen unit partitioning
  time: 0.003; rss: 95MB	internalize symbols
time: 0.669; rss: 95MB	translation
time: 0.000; rss: 95MB	assert dep graph
time: 0.000; rss: 95MB	serialize dep graph
  time: 0.018; rss: 87MB	llvm function passes [0]
  time: 0.001; rss: 87MB	llvm module passes [0]
  time: 0.356; rss: 93MB	codegen passes [0]
  time: 0.000; rss: 92MB	codegen passes [0]
time: 0.376; rss: 92MB	LLVM passes
time: 0.000; rss: 92MB	serialize work products
  time: 0.081; rss: 82MB	running linker
time: 0.083; rss: 82MB	linking
done
