commit bcda58f49133921abd091d7f800732fe2c4e5a98
Merge: 0b9995b 3855fa9
Author: bors <bors@rust-lang.org>
Date:   Wed Mar 9 20:16:20 2016 -0800

    Auto merge of #31710 - eddyb:reify, r=nikomatsakis
    
    Distinguish fn item types to allow reification from nothing to fn pointers.
    
    The first commit is a rebase of #26284, except for files that have moved since.
    
    This is a [breaking-change], due to:
    * each FFI function has a distinct type, like all other functions currently do
    * all generic parameters on functions are recorded in their item types, e.g.:
    `size_of::<u8>` & `size_of::<i8>`'s types differ despite their identical signature.
    * function items are zero-sized, which will stop transmutes from working on them
    
    The first two cases are handled in most cases with the new coerce-unify logic,
    which will combine incompatible function item types into function pointers,
    at the outer-most level of if-else chains, match arms and array literals.
    
    The last case is specially handled during type-checking such that transmutes
    from a function item type to a pointer or integer type will continue to work for
    another release cycle, but are being linted against. To get rid of warnings and
    ensure your code will continue to compile, cast to a pointer before transmuting.
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling unicase v0.1.0
   Compiling typeable v0.1.2
   Compiling matches v0.1.2
   Compiling rustc-serialize v0.3.18
   Compiling lazy_static v0.1.15
   Compiling bitflags v0.3.3
   Compiling libc v0.2.8
   Compiling winapi v0.2.5
   Compiling libc v0.1.12
   Compiling httparse v0.1.6
   Compiling gcc v0.3.25
   Compiling pkg-config v0.3.8
   Compiling winapi-build v0.1.1
   Compiling traitobject v0.0.1
   Compiling kernel32-sys v0.2.1
   Compiling rand v0.3.14
   Compiling time v0.1.34
   Compiling log v0.3.5
   Compiling num_cpus v0.2.11
   Compiling mime v0.0.11
   Compiling openssl-sys v0.6.7
   Compiling openssl v0.6.7
   Compiling uuid v0.1.18
   Compiling url v0.2.38
   Compiling cookie v0.1.21
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.030; rss: 45MB	parsing
Lines of code:             9154
Pre-expansion node count:  45594
time: 0.009; rss: 45MB	configuration 1
time: 0.000; rss: 45MB	recursion limit
time: 0.000; rss: 45MB	gated macro checking
time: 0.000; rss: 45MB	crate injection
time: 0.004; rss: 50MB	macro loading
time: 0.000; rss: 50MB	plugin loading
time: 0.000; rss: 50MB	plugin registration
time: 0.193; rss: 60MB	expansion
time: 0.005; rss: 60MB	complete gated feature checking 1
time: 0.034; rss: 60MB	configuration 2
time: 0.000; rss: 60MB	gated configuration checking
time: 0.014; rss: 60MB	maybe building test harness
time: 0.010; rss: 60MB	prelude injection
time: 0.001; rss: 60MB	checking that all macro invocations are gone
time: 0.000; rss: 60MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 60MB	complete gated feature checking 2
time: 0.001; rss: 60MB	const fn bodies and arguments
Post-expansion node count: 109138
time: 0.010; rss: 60MB	assigning node ids
time: 0.011; rss: 64MB	lowering ast -> hir
time: 0.004; rss: 68MB	indexing hir
time: 0.002; rss: 68MB	attribute checking
time: 0.006; rss: 68MB	early lint checks
time: 0.003; rss: 63MB	external crate/lib resolution
time: 0.001; rss: 63MB	language item collection
time: 0.024; rss: 83MB	resolution
time: 0.002; rss: 83MB	lifetime resolution
time: 0.000; rss: 83MB	looking for entry point
time: 0.000; rss: 83MB	looking for plugin registrar
time: 0.005; rss: 85MB	region resolution
time: 0.001; rss: 85MB	loop checking
time: 0.001; rss: 85MB	static item recursion checking
time: 0.013; rss: 87MB	type collecting
time: 0.000; rss: 87MB	variance inference
time: 0.039; rss: 106MB	coherence checking
time: 0.077; rss: 107MB	wf checking
time: 0.024; rss: 109MB	item-types checking
time: 0.488; rss: 132MB	item-bodies checking
time: 0.000; rss: 132MB	drop-impl checking
time: 0.036; rss: 133MB	const checking
time: 0.008; rss: 133MB	privacy checking
time: 0.001; rss: 133MB	stability index
time: 0.004; rss: 133MB	intrinsic checking
time: 0.002; rss: 133MB	effect checking
time: 0.012; rss: 133MB	match checking
time: 0.005; rss: 133MB	liveness checking
time: 0.032; rss: 133MB	rvalue checking
time: 0.059; rss: 136MB	MIR dump
time: 0.000; rss: 136MB	MIR passes
time: 0.064; rss: 136MB	borrow checking
time: 0.003; rss: 136MB	reachability checking
time: 0.006; rss: 136MB	death checking
time: 0.005; rss: 136MB	stability checking
time: 0.000; rss: 136MB	unused lib feature checking
time: 0.046; rss: 136MB	lint checking
time: 0.000; rss: 136MB	resolving dependency formats
time: 0.007; rss: 136MB	erasing regions from MIR
  time: 0.184; rss: 158MB	translation item collection
  time: 0.138; rss: 277MB	write metadata
time: 1.382; rss: 277MB	translation
  time: 0.096; rss: 164MB	llvm function passes [0]
  time: 0.047; rss: 166MB	llvm module passes [0]
  time: 1.623; rss: 167MB	codegen passes [0]
  time: 0.001; rss: 119MB	codegen passes [0]
time: 1.966; rss: 118MB	LLVM passes
time: 0.170; rss: 116MB	linking
done
