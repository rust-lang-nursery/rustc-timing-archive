commit e64f68817d850ccbe642d7f067083bc655115d84
Merge: d3c3de8 d77a136
Author: bors <bors@rust-lang.org>
Date:   Sat Aug 13 01:20:46 2016 -0700

    Auto merge of #35348 - scottcarr:discriminant2, r=nikomatsakis
    
    [MIR] Add explicit SetDiscriminant StatementKind for deaggregating enums
    
    cc #35186
    
    To deaggregate enums, we need to be able to explicitly set the discriminant.  This PR implements a new StatementKind that does that.
    
    I think some of the places that have `panics!` now could maybe do something smarter.
rustc: ./issue-32278-big-array-of-strings
/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc big-array-of-strings.rs -Ztime-passes -Zinput-stats
time: 0.140; rss: 71MB	parsing
Lines of code:             65577
Pre-expansion node count:  65552
time: 0.006; rss: 71MB	configuration
time: 0.000; rss: 71MB	recursion limit
time: 0.000; rss: 71MB	crate injection
time: 0.000; rss: 71MB	plugin loading
time: 0.000; rss: 71MB	plugin registration
time: 0.023; rss: 105MB	expansion
time: 0.000; rss: 105MB	maybe building test harness
time: 0.004; rss: 105MB	assigning node ids
Post-expansion node count: 65565
time: 0.000; rss: 105MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 105MB	complete gated feature checking
time: 0.001; rss: 105MB	collecting defs
time: 0.003; rss: 105MB	external crate/lib resolution
time: 0.004; rss: 105MB	early lint checks
time: 0.000; rss: 105MB	AST validation
time: 0.002; rss: 105MB	name resolution
time: 0.008; rss: 125MB	lowering ast -> hir
time: 0.002; rss: 129MB	indexing hir
time: 0.001; rss: 129MB	attribute checking
time: 0.001; rss: 119MB	language item collection
time: 0.001; rss: 119MB	lifetime resolution
time: 0.000; rss: 119MB	looking for entry point
time: 0.000; rss: 119MB	looking for plugin registrar
time: 0.006; rss: 125MB	region resolution
time: 0.001; rss: 125MB	loop checking
time: 0.001; rss: 125MB	static item recursion checking
time: 0.000; rss: 126MB	load_dep_graph
time: 0.000; rss: 126MB	type collecting
time: 0.000; rss: 126MB	variance inference
time: 0.005; rss: 128MB	coherence checking
time: 0.001; rss: 128MB	wf checking
time: 0.895; rss: 143MB	item-types checking
time: 0.000; rss: 143MB	item-bodies checking
time: 0.000; rss: 143MB	drop-impl checking
time: 0.021; rss: 146MB	const checking
time: 0.002; rss: 146MB	privacy checking
time: 0.001; rss: 146MB	stability index
time: 0.001; rss: 146MB	intrinsic checking
time: 0.000; rss: 146MB	effect checking
time: 0.000; rss: 146MB	match checking
time: 0.001; rss: 146MB	liveness checking
time: 0.000; rss: 146MB	rvalue checking
time: 0.044; rss: 152MB	MIR dump
time: 0.002; rss: 152MB	MIR passes
time: 0.001; rss: 152MB	borrow checking
time: 0.000; rss: 152MB	reachability checking
time: 0.001; rss: 152MB	death checking
time: 0.001; rss: 152MB	stability checking
time: 0.000; rss: 152MB	unused lib feature checking
time: 0.024; rss: 152MB	lint checking
time: 0.001; rss: 152MB	resolving dependency formats
time: 0.001; rss: 152MB	Prepare MIR codegen passes
  time: 0.000; rss: 152MB	write metadata
  time: 0.001; rss: 152MB	translation item collection
  time: 0.000; rss: 152MB	codegen unit partitioning
  time: 0.001; rss: 158MB	internalize symbols
time: 0.071; rss: 158MB	translation
time: 0.000; rss: 158MB	assert dep graph
time: 0.000; rss: 158MB	serialize dep graph
  time: 0.008; rss: 112MB	llvm function passes [0]
  time: 0.000; rss: 112MB	llvm module passes [0]
  time: 0.173; rss: 111MB	codegen passes [0]
  time: 0.000; rss: 111MB	codegen passes [0]
time: 0.182; rss: 111MB	LLVM passes
time: 0.000; rss: 111MB	serialize work products
  time: 0.187; rss: 100MB	running linker
time: 0.188; rss: 100MB	linking
done
