commit eb38d426c41aa8487e8cb8a9dafbfcf3528201f9
Merge: dfd98eb cde42cd
Author: bors <bors@rust-lang.org>
Date:   Wed Oct 19 22:05:13 2016 -0700

    Auto merge of #36973 - nnethercote:dep_graph, r=nikomatsakis
    
    Don't enqueue onto a disabled dep_graph.
    
    This commit guards all calls to `DepGraphThreadData::enqueue` with a
    check to make sure it is enabled. This avoids some useless allocation
    and vector manipulations when it is disabled (i.e. when incremental
    compilation is off) which improves speed by 1--2% on most of the
    rustc-benchmarks.
    
    This commit has an observable functional change: when the dep_graph is
    disabled its `shadow_graph` will no longer receive messages. This should
    be ok because these message are only used when debug assertions are
    enabled.
    
    r? @nikomatsakis
rustc: ./regex.0.1.30
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling regex v0.1.30 (file:///root/benchmarks/regex.0.1.30)
time: 0.050; rss: 57MB	parsing
Lines of code:             8558
Pre-expansion node count:  58080
time: 0.000; rss: 57MB	recursion limit
time: 0.000; rss: 57MB	crate injection
time: 0.000; rss: 57MB	plugin loading
time: 0.000; rss: 57MB	plugin registration
time: 0.031; rss: 80MB	expansion
time: 0.000; rss: 80MB	maybe building test harness
time: 0.001; rss: 80MB	maybe creating a macro crate
Post-expansion node count: 68134
time: 0.000; rss: 80MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 80MB	complete gated feature checking
time: 0.003; rss: 80MB	early lint checks
time: 0.001; rss: 80MB	AST validation
time: 0.006; rss: 81MB	name resolution
time: 0.007; rss: 89MB	lowering ast -> hir
time: 0.002; rss: 91MB	indexing hir
time: 0.001; rss: 91MB	attribute checking
time: 0.001; rss: 83MB	language item collection
time: 0.001; rss: 83MB	lifetime resolution
time: 0.000; rss: 83MB	looking for entry point
time: 0.000; rss: 83MB	looking for plugin registrar
time: 0.005; rss: 86MB	region resolution
time: 0.001; rss: 86MB	loop checking
time: 0.001; rss: 86MB	static item recursion checking
time: 0.029; rss: 86MB	compute_incremental_hashes_map
time: 0.000; rss: 86MB	load_dep_graph
time: 0.006; rss: 88MB	type collecting
time: 0.000; rss: 88MB	variance inference
time: 0.017; rss: 91MB	coherence checking
time: 0.008; rss: 91MB	wf checking
time: 0.167; rss: 103MB	item-types checking
time: 0.132; rss: 105MB	item-bodies checking
time: 0.000; rss: 105MB	drop-impl checking
time: 0.025; rss: 107MB	const checking
time: 0.003; rss: 107MB	privacy checking
time: 0.000; rss: 107MB	stability index
time: 0.001; rss: 107MB	intrinsic checking
time: 0.001; rss: 107MB	effect checking
time: 0.003; rss: 107MB	match checking
time: 0.002; rss: 107MB	liveness checking
time: 0.007; rss: 107MB	rvalue checking
time: 0.041; rss: 119MB	MIR dump
  time: 0.003; rss: 119MB	SimplifyCfg
  time: 0.005; rss: 119MB	QualifyAndPromoteConstants
  time: 0.009; rss: 119MB	TypeckMir
  time: 0.000; rss: 119MB	SimplifyBranches
  time: 0.001; rss: 119MB	SimplifyCfg
time: 0.018; rss: 119MB	MIR passes
time: 0.021; rss: 119MB	borrow checking
time: 0.000; rss: 119MB	reachability checking
time: 0.002; rss: 119MB	death checking
time: 0.002; rss: 119MB	stability checking
time: 0.000; rss: 119MB	unused lib feature checking
time: 0.024; rss: 119MB	lint checking
time: 0.000; rss: 119MB	resolving dependency formats
  time: 0.000; rss: 119MB	NoLandingPads
  time: 0.001; rss: 119MB	SimplifyCfg
  time: 0.004; rss: 121MB	EraseRegions
  time: 0.000; rss: 121MB	AddCallGuards
  time: 0.007; rss: 121MB	ElaborateDrops
  time: 0.000; rss: 121MB	NoLandingPads
  time: 0.002; rss: 121MB	SimplifyCfg
  time: 0.002; rss: 121MB	InstCombine
  time: 0.000; rss: 121MB	Deaggregator
  time: 0.000; rss: 121MB	CopyPropagation
  time: 0.000; rss: 121MB	AddCallGuards
  time: 0.000; rss: 121MB	PreTrans
time: 0.018; rss: 121MB	Prepare MIR codegen passes
  time: 0.018; rss: 125MB	write metadata
  time: 0.048; rss: 131MB	translation item collection
  time: 0.006; rss: 131MB	codegen unit partitioning
  time: 0.006; rss: 156MB	internalize symbols
time: 0.439; rss: 149MB	translation
time: 0.000; rss: 149MB	assert dep graph
time: 0.000; rss: 149MB	serialize dep graph
  time: 0.035; rss: 105MB	llvm function passes [0]
  time: 0.018; rss: 107MB	llvm module passes [0]
  time: 0.674; rss: 110MB	codegen passes [0]
  time: 0.000; rss: 110MB	codegen passes [0]
time: 0.785; rss: 110MB	LLVM passes
time: 0.000; rss: 110MB	serialize work products
time: 0.065; rss: 83MB	linking
done
