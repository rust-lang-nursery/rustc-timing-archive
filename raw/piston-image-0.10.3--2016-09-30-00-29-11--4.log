commit 7660bdf70ae0c6a434dd12cfdeb8250ce77c69c7
Merge: c717cfa aaf32aa
Author: bors <bors@rust-lang.org>
Date:   Thu Sep 29 20:25:45 2016 -0700

    Auto merge of #36557 - sfackler:fix-hashdos-docs, r=alexcrichton
    
    Clean up hasher discussion on HashMap
    
    * We never want to make guarantees about protecting against attacks.
    * "True randomness" is not the right terminology to be using in this
        context.
    * There is significantly more nuance to the performance of SipHash than
        "somewhat slow".
    
    r? @steveklabnik
    
    Follow up to discussion on #35371
rustc: ./piston-image-0.10.3
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling image v0.10.3 (file:///root/benchmarks/piston-image-0.10.3)
time: 0.045; rss: 57MB	parsing
Lines of code:             12000
Pre-expansion node count:  90272
time: 0.000; rss: 57MB	recursion limit
time: 0.000; rss: 57MB	crate injection
time: 0.000; rss: 57MB	plugin loading
time: 0.000; rss: 57MB	plugin registration
time: 0.079; rss: 95MB	expansion
time: 0.000; rss: 95MB	maybe building test harness
time: 0.002; rss: 95MB	maybe creating a macro crate
Post-expansion node count: 148999
time: 0.000; rss: 95MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 95MB	complete gated feature checking
time: 0.006; rss: 95MB	early lint checks
time: 0.001; rss: 95MB	AST validation
time: 0.021; rss: 97MB	name resolution
time: 0.013; rss: 110MB	lowering ast -> hir
time: 0.003; rss: 114MB	indexing hir
time: 0.002; rss: 114MB	attribute checking
time: 0.002; rss: 103MB	language item collection
time: 0.003; rss: 103MB	lifetime resolution
time: 0.000; rss: 103MB	looking for entry point
time: 0.000; rss: 103MB	looking for plugin registrar
time: 0.011; rss: 108MB	region resolution
time: 0.002; rss: 108MB	loop checking
time: 0.001; rss: 108MB	static item recursion checking
time: 0.057; rss: 109MB	compute_incremental_hashes_map
time: 0.000; rss: 109MB	load_dep_graph
time: 0.025; rss: 109MB	type collecting
time: 0.000; rss: 109MB	variance inference
time: 0.031; rss: 113MB	coherence checking
time: 0.092; rss: 114MB	wf checking
time: 0.144; rss: 119MB	item-types checking
time: 0.903; rss: 133MB	item-bodies checking
time: 0.000; rss: 133MB	drop-impl checking
time: 0.066; rss: 133MB	const checking
time: 0.012; rss: 133MB	privacy checking
time: 0.002; rss: 133MB	stability index
time: 0.008; rss: 133MB	intrinsic checking
time: 0.003; rss: 133MB	effect checking
time: 0.017; rss: 133MB	match checking
time: 0.011; rss: 133MB	liveness checking
time: 0.059; rss: 133MB	rvalue checking
time: 0.103; rss: 176MB	MIR dump
  time: 0.011; rss: 176MB	SimplifyCfg
  time: 0.024; rss: 176MB	QualifyAndPromoteConstants
  time: 0.024; rss: 176MB	TypeckMir
  time: 0.001; rss: 176MB	SimplifyBranches
  time: 0.007; rss: 176MB	SimplifyCfg
time: 0.067; rss: 176MB	MIR passes
time: 0.144; rss: 176MB	borrow checking
time: 0.004; rss: 176MB	reachability checking
time: 0.009; rss: 176MB	death checking
time: 0.010; rss: 176MB	stability checking
time: 0.000; rss: 176MB	unused lib feature checking
time: 0.073; rss: 176MB	lint checking
time: 0.000; rss: 176MB	resolving dependency formats
  time: 0.001; rss: 176MB	NoLandingPads
  time: 0.005; rss: 176MB	SimplifyCfg
  time: 0.013; rss: 178MB	EraseRegions
  time: 0.002; rss: 178MB	AddCallGuards
  time: 0.091; rss: 182MB	ElaborateDrops
  time: 0.001; rss: 182MB	NoLandingPads
  time: 0.009; rss: 182MB	SimplifyCfg
  time: 0.006; rss: 182MB	InstCombine
  time: 0.002; rss: 182MB	Deaggregator
  time: 0.000; rss: 182MB	CopyPropagation
  time: 0.002; rss: 182MB	AddCallGuards
  time: 0.000; rss: 182MB	PreTrans
time: 0.131; rss: 182MB	Prepare MIR codegen passes
  time: 0.073; rss: 185MB	write metadata
  time: 0.581; rss: 197MB	translation item collection
  time: 0.031; rss: 199MB	codegen unit partitioning
  time: 0.027; rss: 321MB	internalize symbols
time: 3.211; rss: 293MB	translation
time: 0.000; rss: 293MB	assert dep graph
time: 0.000; rss: 293MB	serialize dep graph
  time: 0.201; rss: 224MB	llvm function passes [0]
  time: 0.081; rss: 227MB	llvm module passes [0]
  time: 4.099; rss: 232MB	codegen passes [0]
  time: 0.001; rss: 232MB	codegen passes [0]
time: 4.671; rss: 232MB	LLVM passes
time: 0.000; rss: 232MB	serialize work products
time: 0.268; rss: 100MB	linking
done
