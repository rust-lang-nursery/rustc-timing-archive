commit 9cf6fba955736fff590a67293733755172d51cb9
Merge: c2aaad4 8984242
Author: bors <bors@rust-lang.org>
Date:   Tue Apr 19 19:17:08 2016 -0700

    Auto merge of #31253 - ranma42:improve-unicode-iter-offset, r=brson
    
    Improve computation of offset in `EscapeUnicode`
    
    Unify the computation of `offset` and use `leading_zeros` instead of manually scanning the bits.
    This PR removes some duplicated code and makes it a little simpler .
    The computation of `offset` is also faster, but it is unlikely to have an impact on actual code.
    
    (split from #31049)
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.029; rss: 48MB	parsing
Lines of code:             9154
Pre-expansion node count:  45594
time: 0.008; rss: 48MB	configuration 1
time: 0.000; rss: 48MB	recursion limit
time: 0.000; rss: 48MB	gated macro checking
time: 0.000; rss: 48MB	crate injection
time: 0.004; rss: 53MB	macro loading
time: 0.000; rss: 53MB	plugin loading
time: 0.000; rss: 53MB	plugin registration
time: 0.187; rss: 62MB	expansion
time: 0.005; rss: 62MB	complete gated feature checking 1
time: 0.030; rss: 62MB	configuration 2
time: 0.000; rss: 62MB	gated configuration checking
time: 0.011; rss: 62MB	maybe building test harness
time: 0.008; rss: 62MB	prelude injection
time: 0.001; rss: 62MB	checking that all macro invocations are gone
time: 0.000; rss: 62MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 62MB	complete gated feature checking 2
time: 0.001; rss: 62MB	const fn bodies and arguments
Post-expansion node count: 107125
time: 0.008; rss: 62MB	assigning node ids
time: 0.011; rss: 66MB	lowering ast -> hir
time: 0.004; rss: 69MB	indexing hir
time: 0.001; rss: 69MB	attribute checking
time: 0.006; rss: 69MB	early lint checks
time: 0.004; rss: 66MB	external crate/lib resolution
time: 0.001; rss: 66MB	language item collection
time: 0.022; rss: 82MB	resolution
time: 0.002; rss: 82MB	lifetime resolution
time: 0.000; rss: 82MB	looking for entry point
time: 0.000; rss: 82MB	looking for plugin registrar
time: 0.006; rss: 86MB	region resolution
time: 0.001; rss: 86MB	loop checking
time: 0.001; rss: 86MB	static item recursion checking
time: 0.000; rss: 86MB	load_dep_graph
time: 0.018; rss: 95MB	type collecting
time: 0.000; rss: 95MB	variance inference
time: 0.042; rss: 113MB	coherence checking
time: 0.072; rss: 113MB	wf checking
time: 0.027; rss: 115MB	item-types checking
time: 0.459; rss: 138MB	item-bodies checking
time: 0.000; rss: 138MB	drop-impl checking
time: 0.037; rss: 140MB	const checking
time: 0.009; rss: 140MB	privacy checking
time: 0.001; rss: 140MB	stability index
time: 0.004; rss: 140MB	intrinsic checking
time: 0.002; rss: 140MB	effect checking
time: 0.011; rss: 140MB	match checking
time: 0.005; rss: 140MB	liveness checking
time: 0.032; rss: 140MB	rvalue checking
time: 0.049; rss: 147MB	MIR dump
time: 0.022; rss: 147MB	MIR passes
time: 0.064; rss: 147MB	borrow checking
time: 0.003; rss: 147MB	reachability checking
time: 0.006; rss: 147MB	death checking
time: 0.006; rss: 147MB	stability checking
time: 0.000; rss: 147MB	unused lib feature checking
time: 0.046; rss: 147MB	lint checking
time: 0.000; rss: 147MB	resolving dependency formats
time: 0.010; rss: 147MB	Prepare MIR codegen passes
  time: 0.178; rss: 174MB	translation item collection
  time: 0.007; rss: 174MB	codegen unit partitioning
  time: 0.137; rss: 295MB	write metadata
time: 1.456; rss: 295MB	translation
time: 0.001; rss: 295MB	assert dep graph
time: 0.000; rss: 295MB	serialize dep graph
  time: 0.096; rss: 173MB	llvm function passes [0]
  time: 0.046; rss: 175MB	llvm module passes [0]
  time: 1.620; rss: 178MB	codegen passes [0]
  time: 0.001; rss: 125MB	codegen passes [0]
time: 1.961; rss: 124MB	LLVM passes
time: 0.186; rss: 122MB	linking
done
