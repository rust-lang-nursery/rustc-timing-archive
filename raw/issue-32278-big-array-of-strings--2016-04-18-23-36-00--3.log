commit d36ad55aa5176eeec0da6d2a7b1689c263195e8a
Merge: b324fa7 b325baf
Author: bors <bors@rust-lang.org>
Date:   Mon Apr 18 17:53:58 2016 -0700

    Auto merge of #32755 - alexcrichton:rustbuild-start-test, r=brson
    
    rustbuild: Add support for compiletest test suites
    
    This commit adds support in rustbuild for running all of the compiletest test
    suites as part of `make check`. The `compiletest` program was moved to
    `src/tools` (like `rustbook` and others) and is now just compiled like any other
    old tool. Each test suite has a pretty standard set of dependencies and just
    tweaks various parameters to the final compiletest executable.
    
    Note that full support is lacking in terms of:
    
    * Once a test suite has passed, that's not remembered. When a test suite is
      requested to be run, it's always run.
    * The arguments to compiletest probably don't work for every possible
      combination of platforms and testing environments just yet. There will likely
      need to be future updates to tweak various pieces here and there.
    * Cross compiled test suites probably don't work just yet, support for that will
      come in a follow-up patch.
rustc: ./issue-32278-big-array-of-strings
/root/rust/x86_64-unknown-linux-gnu/stage2/bin/rustc big-array-of-strings.rs -Ztime-passes -Zinput-stats
time: 0.188; rss: 58MB	parsing
Lines of code:             65577
Pre-expansion node count:  65552
time: 0.011; rss: 58MB	configuration 1
time: 0.000; rss: 58MB	recursion limit
time: 0.001; rss: 58MB	gated macro checking
time: 0.000; rss: 58MB	crate injection
time: 0.004; rss: 63MB	macro loading
time: 0.000; rss: 63MB	plugin loading
time: 0.000; rss: 63MB	plugin registration
time: 0.043; rss: 69MB	expansion
time: 0.001; rss: 69MB	complete gated feature checking 1
time: 0.011; rss: 69MB	configuration 2
time: 0.000; rss: 69MB	gated configuration checking
time: 0.005; rss: 69MB	maybe building test harness
time: 0.005; rss: 69MB	prelude injection
time: 0.000; rss: 69MB	checking that all macro invocations are gone
time: 0.000; rss: 69MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 69MB	complete gated feature checking 2
time: 0.001; rss: 69MB	const fn bodies and arguments
Post-expansion node count: 65565
time: 0.006; rss: 69MB	assigning node ids
time: 0.009; rss: 82MB	lowering ast -> hir
time: 0.002; rss: 84MB	indexing hir
time: 0.001; rss: 84MB	attribute checking
time: 0.008; rss: 84MB	early lint checks
time: 0.001; rss: 71MB	external crate/lib resolution
time: 0.001; rss: 71MB	language item collection
time: 0.002; rss: 74MB	resolution
time: 0.001; rss: 74MB	lifetime resolution
time: 0.000; rss: 74MB	looking for entry point
time: 0.000; rss: 74MB	looking for plugin registrar
time: 0.007; rss: 80MB	region resolution
time: 0.001; rss: 80MB	loop checking
time: 0.001; rss: 80MB	static item recursion checking
time: 0.000; rss: 81MB	load_dep_graph
time: 0.000; rss: 81MB	type collecting
time: 0.000; rss: 81MB	variance inference
time: 0.006; rss: 90MB	coherence checking
time: 0.001; rss: 90MB	wf checking
time: 1.091; rss: 190MB	item-types checking
time: 0.000; rss: 190MB	item-bodies checking
time: 0.000; rss: 190MB	drop-impl checking
time: 0.019; rss: 191MB	const checking
time: 0.002; rss: 191MB	privacy checking
time: 0.001; rss: 191MB	stability index
time: 0.001; rss: 191MB	intrinsic checking
time: 0.001; rss: 191MB	effect checking
time: 0.001; rss: 191MB	match checking
time: 0.001; rss: 191MB	liveness checking
time: 0.001; rss: 191MB	rvalue checking
time: 0.001; rss: 191MB	MIR dump
time: 0.000; rss: 191MB	MIR passes
time: 0.001; rss: 191MB	borrow checking
time: 0.000; rss: 191MB	reachability checking
time: 0.001; rss: 191MB	death checking
time: 0.001; rss: 191MB	stability checking
time: 0.000; rss: 191MB	unused lib feature checking
time: 0.029; rss: 191MB	lint checking
time: 0.001; rss: 191MB	resolving dependency formats
time: 0.000; rss: 191MB	Prepare MIR codegen passes
  time: 0.001; rss: 200MB	translation item collection
  time: 0.000; rss: 200MB	codegen unit partitioning
  time: 0.000; rss: 205MB	write metadata
time: 0.088; rss: 205MB	translation
time: 0.000; rss: 205MB	assert dep graph
time: 0.000; rss: 205MB	serialize dep graph
  time: 0.003; rss: 86MB	llvm function passes [0]
  time: 0.000; rss: 86MB	llvm module passes [0]
  time: 0.169; rss: 88MB	codegen passes [0]
  time: 0.000; rss: 75MB	codegen passes [0]
time: 0.184; rss: 75MB	LLVM passes
  time: 0.187; rss: 75MB	running linker
time: 0.188; rss: 75MB	linking
done
