commit eac41469d778d18ae7bf38fa917ed0fe122f944b
Merge: 4473130 59e5e0b
Author: bors <bors@rust-lang.org>
Date:   Tue Aug 30 16:28:32 2016 -0700

    Auto merge of #35048 - tmiasko:monotonic-wait-timeout, r=alexcrichton
    
    Use monotonic time in condition variables.
    
    Configure condition variables to use monotonic time using
    pthread_condattr_setclock on systems where this is possible.
    This fixes the issue when thread waiting on condition variable is
    woken up too late when system time is moved backwards.
rustc: ./inflate-0.1.0
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling inflate v0.1.0 (file:///root/benchmarks/inflate-0.1.0)
time: 0.004; rss: 44MB	parsing
Lines of code:             956
Pre-expansion node count:  4740
time: 0.000; rss: 44MB	configuration
time: 0.000; rss: 44MB	recursion limit
time: 0.000; rss: 44MB	crate injection
time: 0.000; rss: 44MB	plugin loading
time: 0.000; rss: 44MB	plugin registration
time: 0.073; rss: 71MB	expansion
time: 0.000; rss: 71MB	maybe building test harness
time: 0.003; rss: 71MB	assigning node ids
Post-expansion node count: 55770
time: 0.000; rss: 71MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 71MB	complete gated feature checking
time: 0.005; rss: 71MB	collecting defs
time: 0.001; rss: 71MB	external crate/lib resolution
time: 0.002; rss: 71MB	early lint checks
time: 0.000; rss: 71MB	AST validation
time: 0.007; rss: 74MB	name resolution
time: 0.006; rss: 78MB	lowering ast -> hir
time: 0.001; rss: 80MB	indexing hir
time: 0.001; rss: 80MB	attribute checking
time: 0.001; rss: 77MB	language item collection
time: 0.001; rss: 77MB	lifetime resolution
time: 0.000; rss: 77MB	looking for entry point
time: 0.000; rss: 77MB	looking for plugin registrar
time: 0.003; rss: 78MB	region resolution
time: 0.000; rss: 78MB	loop checking
time: 0.000; rss: 78MB	static item recursion checking
time: 0.005; rss: 78MB	compute_incremental_hashes_map
time: 0.000; rss: 78MB	load_dep_graph
time: 0.001; rss: 78MB	type collecting
time: 0.000; rss: 78MB	variance inference
time: 0.008; rss: 81MB	coherence checking
time: 0.002; rss: 81MB	wf checking
time: 0.002; rss: 81MB	item-types checking
time: 2.417; rss: 95MB	item-bodies checking
time: 0.000; rss: 95MB	drop-impl checking
time: 0.016; rss: 95MB	const checking
time: 0.001; rss: 95MB	privacy checking
time: 0.000; rss: 95MB	stability index
time: 0.001; rss: 95MB	intrinsic checking
time: 0.001; rss: 95MB	effect checking
time: 0.004; rss: 95MB	match checking
time: 0.062; rss: 93MB	liveness checking
time: 0.012; rss: 93MB	rvalue checking
time: 0.036; rss: 115MB	MIR dump
time: 0.022; rss: 113MB	MIR passes
time: 0.207; rss: 114MB	borrow checking
time: 0.000; rss: 114MB	reachability checking
time: 0.003; rss: 114MB	death checking
time: 0.002; rss: 114MB	stability checking
time: 0.000; rss: 114MB	unused lib feature checking
time: 0.019; rss: 115MB	lint checking
time: 0.000; rss: 115MB	resolving dependency formats
time: 0.181; rss: 114MB	Prepare MIR codegen passes
  time: 0.003; rss: 115MB	write metadata
  time: 0.009; rss: 116MB	translation item collection
  time: 0.001; rss: 116MB	codegen unit partitioning
  time: 0.002; rss: 130MB	internalize symbols
time: 0.185; rss: 117MB	translation
time: 0.000; rss: 117MB	assert dep graph
time: 0.000; rss: 117MB	serialize dep graph
  time: 0.026; rss: 91MB	llvm function passes [0]
  time: 0.005; rss: 91MB	llvm module passes [0]
  time: 0.628; rss: 96MB	codegen passes [0]
  time: 0.000; rss: 96MB	codegen passes [0]
time: 0.825; rss: 96MB	LLVM passes
time: 0.000; rss: 96MB	serialize work products
time: 0.046; rss: 84MB	linking
done
