commit 32683ce1930ef1390f20e4ab72650e6804fd1c1b
Merge: 50909f2 dcdf761
Author: bors <bors@rust-lang.org>
Date:   Mon May 9 04:32:39 2016 -0700

    Auto merge of #33478 - xen0n:normalize-callee-trait-ref, r=eddyb
    
    trans: callee: normalize trait_ref before use
    
    This fixes #33436 and #33461. Ran the tests and nothing else seems to be affected.
    
    P.S. How to write the regression test for this fix? Does this qualify as run-pass or run-make, as the test only needs to be successfully compiled to be considered passed? Will add the testcase (the minimal example in #33461 seems fit) after clarifying this.
rustc: ./regex.0.1.30
cargo rustc -- -Ztime-passes -Zinput-stats
   Compiling regex v0.1.30 (file:///root/benchmarks/regex.0.1.30)
time: 0.105; rss: 55MB	parsing
Lines of code:             8558
Pre-expansion node count:  58217
time: 0.011; rss: 55MB	configuration 1
time: 0.000; rss: 55MB	recursion limit
time: 0.000; rss: 55MB	crate injection
time: 0.003; rss: 60MB	macro loading
time: 0.000; rss: 60MB	plugin loading
time: 0.000; rss: 60MB	plugin registration
time: 0.058; rss: 62MB	expansion
time: 0.013; rss: 62MB	configuration 2
time: 0.000; rss: 62MB	gated configuration checking
time: 0.006; rss: 62MB	maybe building test harness
time: 0.006; rss: 62MB	prelude injection
time: 0.001; rss: 62MB	checking that all macro invocations are gone
time: 0.000; rss: 62MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 62MB	complete gated feature checking
Post-expansion node count: 68491
time: 0.006; rss: 62MB	assigning node ids
time: 0.001; rss: 62MB	collecting defs
time: 0.001; rss: 62MB	external crate/lib resolution
time: 0.009; rss: 72MB	lowering ast -> hir
time: 0.005; rss: 74MB	indexing hir
time: 0.001; rss: 74MB	attribute checking
time: 0.006; rss: 74MB	early lint checks
time: 0.001; rss: 66MB	language item collection
time: 0.009; rss: 76MB	name resolution
time: 0.001; rss: 76MB	lifetime resolution
time: 0.000; rss: 76MB	looking for entry point
time: 0.000; rss: 76MB	looking for plugin registrar
time: 0.011; rss: 79MB	region resolution
time: 0.001; rss: 79MB	loop checking
time: 0.001; rss: 79MB	static item recursion checking
time: 0.000; rss: 79MB	load_dep_graph
time: 0.007; rss: 90MB	type collecting
time: 0.000; rss: 90MB	variance inference
time: 0.025; rss: 100MB	coherence checking
time: 0.011; rss: 100MB	wf checking
time: 0.283; rss: 105MB	item-types checking
time: 0.207; rss: 114MB	item-bodies checking
time: 0.000; rss: 114MB	drop-impl checking
time: 0.031; rss: 117MB	const checking
time: 0.004; rss: 117MB	privacy checking
time: 0.001; rss: 117MB	stability index
time: 0.001; rss: 117MB	intrinsic checking
time: 0.001; rss: 117MB	effect checking
time: 0.003; rss: 117MB	match checking
time: 0.002; rss: 118MB	liveness checking
time: 0.006; rss: 118MB	rvalue checking
time: 0.063; rss: 127MB	MIR dump
time: 0.017; rss: 127MB	MIR passes
time: 0.020; rss: 127MB	borrow checking
time: 0.000; rss: 127MB	reachability checking
time: 0.003; rss: 127MB	death checking
time: 0.003; rss: 127MB	stability checking
time: 0.000; rss: 127MB	unused lib feature checking
time: 0.029; rss: 127MB	lint checking
time: 0.000; rss: 127MB	resolving dependency formats
time: 0.007; rss: 128MB	Prepare MIR codegen passes
  time: 0.063; rss: 135MB	translation item collection
  time: 0.002; rss: 135MB	codegen unit partitioning
  time: 0.195; rss: 187MB	write metadata
time: 0.781; rss: 184MB	translation
time: 0.000; rss: 184MB	assert dep graph
time: 0.000; rss: 184MB	serialize dep graph
  time: 0.036; rss: 119MB	llvm function passes [0]
  time: 0.016; rss: 121MB	llvm module passes [0]
  time: 0.612; rss: 125MB	codegen passes [0]
  time: 0.001; rss: 106MB	codegen passes [0]
time: 0.739; rss: 104MB	LLVM passes
time: 0.066; rss: 103MB	linking
done
