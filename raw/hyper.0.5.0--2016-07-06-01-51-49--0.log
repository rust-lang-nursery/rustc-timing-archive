commit d1e5e3ab43b02817e22a47a9678ee39ad4c6c96d
Merge: 731d375 76f22f4
Author: bors <bors@rust-lang.org>
Date:   Tue Jul 5 20:16:40 2016 -0700

    Auto merge of #34587 - ollie27:rustdoc_prim_titles, r=steveklabnik
    
    rustdoc: Remove paths from primitive page <title> tags
    
    Currently primitive pages have a title like "std::u8 - Rust" this changes
    it to "u8 - Rust" as "std::u8" is the name of a module not a primitive
    type.
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling typeable v0.1.2
   Compiling traitobject v0.0.1
   Compiling httparse v0.1.6
   Compiling rustc-serialize v0.3.19
   Compiling matches v0.1.2
   Compiling winapi v0.2.7
   Compiling pkg-config v0.3.8
   Compiling gcc v0.3.28
   Compiling libc v0.1.12
   Compiling lazy_static v0.1.16
   Compiling log v0.3.6
   Compiling bitflags v0.3.3
   Compiling libc v0.2.13
   Compiling winapi-build v0.1.1
   Compiling unicase v0.1.0
   Compiling mime v0.0.11
   Compiling kernel32-sys v0.2.2
   Compiling time v0.1.35
   Compiling rand v0.3.14
   Compiling num_cpus v0.2.13
   Compiling openssl-sys v0.6.7
   Compiling openssl v0.6.7
   Compiling uuid v0.1.18
   Compiling url v0.2.38
   Compiling cookie v0.1.21
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.040; rss: 87MB	parsing
Lines of code:             9154
Pre-expansion node count:  44838
time: 0.006; rss: 87MB	configuration
time: 0.000; rss: 91MB	recursion limit
time: 0.000; rss: 91MB	crate injection
time: 0.000; rss: 91MB	plugin loading
time: 0.000; rss: 91MB	plugin registration
time: 0.179; rss: 129MB	expansion
time: 0.000; rss: 129MB	maybe building test harness
time: 0.000; rss: 129MB	checking for inline asm in case the target doesn't support it
time: 0.003; rss: 129MB	complete gated feature checking
Post-expansion node count: 101579
time: 0.007; rss: 129MB	assigning node ids
time: 0.003; rss: 131MB	collecting defs
time: 0.011; rss: 140MB	external crate/lib resolution
time: 0.005; rss: 140MB	early lint checks
time: 0.001; rss: 140MB	AST validation
time: 0.017; rss: 144MB	name resolution
time: 0.009; rss: 153MB	lowering ast -> hir
time: 0.001; rss: 155MB	indexing hir
time: 0.001; rss: 155MB	attribute checking
time: 0.001; rss: 148MB	language item collection
time: 0.002; rss: 148MB	lifetime resolution
time: 0.000; rss: 148MB	looking for entry point
time: 0.000; rss: 148MB	looking for plugin registrar
time: 0.005; rss: 151MB	region resolution
time: 0.001; rss: 151MB	loop checking
time: 0.001; rss: 151MB	static item recursion checking
time: 0.000; rss: 151MB	load_dep_graph
time: 0.032; rss: 154MB	type collecting
time: 0.000; rss: 154MB	variance inference
time: 0.044; rss: 162MB	coherence checking
time: 0.096; rss: 163MB	wf checking
time: 0.035; rss: 163MB	item-types checking
time: 0.519; rss: 175MB	item-bodies checking
time: 0.000; rss: 175MB	drop-impl checking
time: 0.044; rss: 177MB	const checking
time: 0.008; rss: 177MB	privacy checking
time: 0.001; rss: 177MB	stability index
time: 0.006; rss: 177MB	intrinsic checking
time: 0.002; rss: 177MB	effect checking
time: 0.014; rss: 177MB	match checking
time: 0.004; rss: 177MB	liveness checking
time: 0.031; rss: 177MB	rvalue checking
time: 0.064; rss: 187MB	MIR dump
time: 0.043; rss: 187MB	MIR passes
time: 0.072; rss: 187MB	borrow checking
time: 0.003; rss: 187MB	reachability checking
time: 0.006; rss: 187MB	death checking
time: 0.006; rss: 187MB	stability checking
time: 0.000; rss: 187MB	unused lib feature checking
time: 0.047; rss: 187MB	lint checking
time: 0.000; rss: 187MB	resolving dependency formats
time: 0.093; rss: 189MB	Prepare MIR codegen passes
  time: 0.132; rss: 195MB	write metadata
  time: 0.187; rss: 199MB	translation item collection
  time: 0.006; rss: 201MB	codegen unit partitioning
time: 3.722; rss: 321MB	translation
time: 0.001; rss: 321MB	assert dep graph
time: 0.000; rss: 321MB	serialize dep graph
  time: 1.130; rss: 211MB	llvm function passes [0]
  time: 0.432; rss: 211MB	llvm module passes [0]
  time: 16.085; rss: 213MB	codegen passes [0]
  time: 0.002; rss: 213MB	codegen passes [0]
time: 18.751; rss: 213MB	LLVM passes
time: 0.177; rss: 164MB	linking
done
