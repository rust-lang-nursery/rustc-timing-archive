commit f5e7a5910d4f1dfa72724f6ee8125a6eade1665b
Merge: 42903d9 f4dd1f9
Author: bors <bors@rust-lang.org>
Date:   Sun Aug 7 05:48:47 2016 -0700

    Auto merge of #35362 - medzin:E0252, r=GuillaumeGomez
    
    Updated error message E0252
    
    Fixes #35306 as part of #35233.
    
    r? @GuillaumeGomez
rustc: ./hyper.0.5.0
cargo rustc -- -Ztime-passes -Zinput-stats
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling bitflags v0.3.3
   Compiling winapi-build v0.1.1
   Compiling gcc v0.3.32
   Compiling pkg-config v0.3.8
   Compiling libc v0.2.15
   Compiling rustc-serialize v0.3.19
   Compiling winapi v0.2.8
   Compiling unicase v0.1.0
   Compiling httparse v0.1.6
   Compiling log v0.3.6
   Compiling libc v0.1.12
   Compiling typeable v0.1.2
   Compiling traitobject v0.0.1
   Compiling kernel32-sys v0.2.2
   Compiling lazy_static v0.1.16
   Compiling mime v0.0.11
   Compiling matches v0.1.2
   Compiling num_cpus v0.2.13
   Compiling time v0.1.35
   Compiling rand v0.3.14
   Compiling openssl-sys v0.6.7
   Compiling openssl v0.6.7
   Compiling uuid v0.1.18
   Compiling url v0.2.38
   Compiling cookie v0.1.21
   Compiling hyper v0.5.0 (file:///root/benchmarks/hyper.0.5.0)
time: 0.026; rss: 58MB	parsing
Lines of code:             9154
Pre-expansion node count:  44838
time: 0.003; rss: 58MB	configuration
time: 0.000; rss: 58MB	recursion limit
time: 0.000; rss: 58MB	crate injection
time: 0.000; rss: 58MB	plugin loading
time: 0.000; rss: 58MB	plugin registration
time: 0.091; rss: 99MB	expansion
time: 0.000; rss: 99MB	maybe building test harness
time: 0.005; rss: 99MB	assigning node ids
Post-expansion node count: 101581
time: 0.000; rss: 99MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 99MB	complete gated feature checking
time: 0.002; rss: 99MB	collecting defs
time: 0.009; rss: 110MB	external crate/lib resolution
time: 0.003; rss: 110MB	early lint checks
time: 0.001; rss: 110MB	AST validation
time: 0.017; rss: 114MB	name resolution
time: 0.008; rss: 123MB	lowering ast -> hir
time: 0.001; rss: 125MB	indexing hir
time: 0.001; rss: 125MB	attribute checking
time: 0.001; rss: 118MB	language item collection
time: 0.002; rss: 118MB	lifetime resolution
time: 0.000; rss: 118MB	looking for entry point
time: 0.000; rss: 118MB	looking for plugin registrar
time: 0.006; rss: 122MB	region resolution
time: 0.001; rss: 122MB	loop checking
time: 0.001; rss: 122MB	static item recursion checking
time: 0.000; rss: 122MB	load_dep_graph
time: 0.023; rss: 123MB	type collecting
time: 0.000; rss: 123MB	variance inference
time: 0.045; rss: 132MB	coherence checking
time: 0.076; rss: 133MB	wf checking
time: 0.032; rss: 134MB	item-types checking
time: 0.463; rss: 145MB	item-bodies checking
time: 0.000; rss: 145MB	drop-impl checking
time: 0.041; rss: 147MB	const checking
time: 0.006; rss: 147MB	privacy checking
time: 0.001; rss: 147MB	stability index
time: 0.005; rss: 147MB	intrinsic checking
time: 0.002; rss: 147MB	effect checking
time: 0.013; rss: 147MB	match checking
time: 0.005; rss: 147MB	liveness checking
time: 0.029; rss: 147MB	rvalue checking
time: 0.050; rss: 159MB	MIR dump
time: 0.039; rss: 159MB	MIR passes
time: 0.066; rss: 159MB	borrow checking
time: 0.003; rss: 159MB	reachability checking
time: 0.005; rss: 159MB	death checking
time: 0.005; rss: 159MB	stability checking
time: 0.000; rss: 159MB	unused lib feature checking
time: 0.045; rss: 159MB	lint checking
time: 0.000; rss: 159MB	resolving dependency formats
time: 0.088; rss: 161MB	Prepare MIR codegen passes
  time: 0.124; rss: 165MB	write metadata
  time: 0.168; rss: 171MB	translation item collection
  time: 0.019; rss: 173MB	codegen unit partitioning
  time: 0.033; rss: 302MB	internalize symbols
time: 1.716; rss: 302MB	translation
time: 0.001; rss: 302MB	assert dep graph
time: 0.000; rss: 302MB	serialize dep graph
  time: 0.099; rss: 189MB	llvm function passes [0]
  time: 0.048; rss: 190MB	llvm module passes [0]
  time: 1.810; rss: 191MB	codegen passes [0]
  time: 0.001; rss: 191MB	codegen passes [0]
time: 2.116; rss: 190MB	LLVM passes
time: 0.000; rss: 190MB	serialize work products
time: 0.155; rss: 124MB	linking
done
