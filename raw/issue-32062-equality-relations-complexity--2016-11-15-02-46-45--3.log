commit 0ed951993fb5721a303ca5fa743543dd9f3f6b10
Merge: bd6a54d 7cd8a49
Author: bors <bors@rust-lang.org>
Date:   Mon Nov 14 18:12:26 2016 -0800

    Auto merge of #37775 - alexcrichton:try-fix-dox, r=brson
    
    rustbuild: Tweak default rule inclusion
    
    If a rule is flagged with `default(true)` then the pseudo-rule `default:foo`
    will include that. If a rule is also flagged with `.host(true)`, however, then
    the rule shouldn't be included for targets that aren't in the host array. This
    adds a filter to ensure we don't pull in host rules for targets by accident.
rustc: ./issue-32062-equality-relations-complexity
cargo rustc  -- -Ztime-passes -Zinput-stats
   Compiling issue-32062-equality-relations-complexity v0.1.0 (file:///root/benchmarks/issue-32062-equality-relations-complexity)
time: 0.000; rss: 34MB	parsing
Lines of code:             60
Pre-expansion node count:  580
time: 0.000; rss: 34MB	recursion limit
time: 0.000; rss: 34MB	crate injection
time: 0.000; rss: 34MB	plugin loading
time: 0.000; rss: 34MB	plugin registration
time: 0.019; rss: 56MB	expansion
time: 0.000; rss: 56MB	maybe building test harness
time: 0.000; rss: 59MB	maybe creating a macro crate
Post-expansion node count: 593
time: 0.000; rss: 59MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 59MB	complete gated feature checking
time: 0.000; rss: 59MB	early lint checks
time: 0.000; rss: 59MB	AST validation
time: 0.002; rss: 59MB	name resolution
time: 0.000; rss: 59MB	lowering ast -> hir
time: 0.000; rss: 59MB	indexing hir
time: 0.000; rss: 59MB	attribute checking
time: 0.000; rss: 59MB	language item collection
time: 0.000; rss: 59MB	lifetime resolution
time: 0.000; rss: 59MB	looking for entry point
time: 0.000; rss: 59MB	looking for plugin registrar
time: 0.000; rss: 59MB	region resolution
time: 0.000; rss: 59MB	loop checking
time: 0.000; rss: 59MB	static item recursion checking
time: 0.000; rss: 59MB	compute_incremental_hashes_map
time: 0.000; rss: 59MB	load_dep_graph
time: 0.000; rss: 61MB	type collecting
time: 0.000; rss: 61MB	variance inference
time: 0.004; rss: 62MB	coherence checking
time: 0.007; rss: 63MB	wf checking
time: 0.000; rss: 63MB	item-types checking
time: 0.012; rss: 64MB	item-bodies checking
time: 0.000; rss: 64MB	drop-impl checking
time: 0.000; rss: 64MB	const checking
time: 0.000; rss: 64MB	privacy checking
time: 0.000; rss: 64MB	stability index
time: 0.000; rss: 64MB	intrinsic checking
time: 0.000; rss: 64MB	effect checking
time: 0.000; rss: 64MB	match checking
time: 0.000; rss: 64MB	liveness checking
time: 0.000; rss: 64MB	rvalue checking
time: 0.000; rss: 64MB	MIR dump
  time: 0.000; rss: 64MB	SimplifyCfg
  time: 0.000; rss: 64MB	QualifyAndPromoteConstants
  time: 0.000; rss: 64MB	TypeckMir
  time: 0.000; rss: 64MB	SimplifyBranches
  time: 0.000; rss: 64MB	SimplifyCfg
time: 0.000; rss: 64MB	MIR cleanup and validation
time: 0.001; rss: 64MB	borrow checking
time: 0.000; rss: 64MB	reachability checking
time: 0.000; rss: 64MB	death checking
time: 0.000; rss: 64MB	stability checking
time: 0.000; rss: 64MB	unused lib feature checking
time: 0.000; rss: 64MB	lint checking
time: 0.001; rss: 64MB	resolving dependency formats
  time: 0.000; rss: 64MB	NoLandingPads
  time: 0.000; rss: 64MB	SimplifyCfg
  time: 0.000; rss: 64MB	EraseRegions
  time: 0.000; rss: 64MB	AddCallGuards
  time: 0.000; rss: 64MB	ElaborateDrops
  time: 0.000; rss: 64MB	NoLandingPads
  time: 0.000; rss: 64MB	SimplifyCfg
  time: 0.000; rss: 64MB	InstCombine
  time: 0.000; rss: 64MB	Deaggregator
  time: 0.000; rss: 64MB	CopyPropagation
  time: 0.000; rss: 64MB	SimplifyLocals
  time: 0.000; rss: 64MB	AddCallGuards
  time: 0.000; rss: 64MB	PreTrans
time: 0.001; rss: 64MB	MIR optimisations
  time: 0.000; rss: 64MB	write metadata
  time: 0.014; rss: 64MB	translation item collection
  time: 0.000; rss: 64MB	codegen unit partitioning
  time: 0.000; rss: 66MB	internalize symbols
time: 0.033; rss: 66MB	translation
time: 0.000; rss: 66MB	assert dep graph
time: 0.000; rss: 66MB	serialize dep graph
  time: 0.000; rss: 66MB	llvm function passes [0]
  time: 0.000; rss: 66MB	llvm module passes [0]
  time: 0.011; rss: 71MB	codegen passes [0]
  time: 0.000; rss: 71MB	codegen passes [0]
time: 0.012; rss: 71MB	LLVM passes
time: 0.000; rss: 71MB	serialize work products
  time: 0.074; rss: 71MB	running linker
time: 0.075; rss: 72MB	linking
done
