commit b33873f5411d4ad6a3bd5a4a18dffce8a960a316
Merge: 391939b f9cc166
Author: bors <bors@rust-lang.org>
Date:   Fri Nov 11 20:46:59 2016 -0800

    Auto merge of #37469 - meh:fix-term, r=alexcrichton
    
    Fix terminfo database search path
    
    This is more consistent with what every other program does, I happened to have `TERMINFO` set as `/usr/share/terminfo` but had the actual database in `~/.terminfo`, regardless of that every other terminfo/ncurses based software picked up the one in the home correctly.
    
    This just puts the path in `TERMINFO` at the top of the search paths, and moves the home checking to the default search paths section.
rustc: ./html5ever-2016-08-25
cargo rustc  -- -Ztime-passes -Zinput-stats
   Compiling html5ever v0.5.4 (file:///root/benchmarks/html5ever-2016-08-25)
time: 0.024; rss: 48MB	parsing
Lines of code:             8210
Pre-expansion node count:  52140
time: 0.000; rss: 48MB	recursion limit
time: 0.000; rss: 48MB	crate injection
time: 0.000; rss: 48MB	plugin loading
time: 0.000; rss: 48MB	plugin registration
time: 0.672; rss: 102MB	expansion
time: 0.000; rss: 102MB	maybe building test harness
time: 0.002; rss: 102MB	maybe creating a macro crate
Post-expansion node count: 163412
time: 0.000; rss: 102MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 102MB	complete gated feature checking
time: 0.008; rss: 102MB	early lint checks
time: 0.002; rss: 102MB	AST validation
time: 0.016; rss: 105MB	name resolution
time: 0.012; rss: 114MB	lowering ast -> hir
time: 0.002; rss: 118MB	indexing hir
time: 0.002; rss: 118MB	attribute checking
time: 0.001; rss: 98MB	language item collection
time: 0.002; rss: 98MB	lifetime resolution
time: 0.000; rss: 98MB	looking for entry point
time: 0.000; rss: 98MB	looking for plugin registrar
time: 0.011; rss: 107MB	region resolution
time: 0.001; rss: 107MB	loop checking
time: 0.001; rss: 107MB	static item recursion checking
time: 0.020; rss: 107MB	compute_incremental_hashes_map
time: 0.000; rss: 107MB	load_dep_graph
time: 0.008; rss: 108MB	type collecting
time: 0.000; rss: 108MB	variance inference
time: 0.011; rss: 109MB	coherence checking
time: 0.020; rss: 110MB	wf checking
time: 0.285; rss: 122MB	item-types checking
time: 0.419; rss: 129MB	item-bodies checking
time: 0.000; rss: 129MB	drop-impl checking
time: 0.060; rss: 137MB	const checking
time: 0.006; rss: 137MB	privacy checking
time: 0.001; rss: 137MB	stability index
time: 0.002; rss: 137MB	intrinsic checking
time: 0.002; rss: 137MB	effect checking
time: 0.014; rss: 137MB	match checking
time: 0.011; rss: 132MB	liveness checking
time: 0.021; rss: 132MB	rvalue checking
time: 0.109; rss: 176MB	MIR dump
  time: 0.008; rss: 176MB	SimplifyCfg
  time: 0.014; rss: 176MB	QualifyAndPromoteConstants
  time: 0.020; rss: 176MB	TypeckMir
  time: 0.000; rss: 176MB	SimplifyBranches
  time: 0.004; rss: 176MB	SimplifyCfg
time: 0.045; rss: 176MB	MIR cleanup and validation
time: 0.079; rss: 181MB	borrow checking
time: 0.002; rss: 181MB	reachability checking
time: 0.005; rss: 181MB	death checking
time: 0.006; rss: 181MB	stability checking
time: 0.000; rss: 181MB	unused lib feature checking
time: 0.056; rss: 181MB	lint checking
time: 0.000; rss: 181MB	resolving dependency formats
  time: 0.000; rss: 181MB	NoLandingPads
  time: 0.004; rss: 181MB	SimplifyCfg
  time: 0.009; rss: 181MB	EraseRegions
  time: 0.001; rss: 181MB	AddCallGuards
  time: 0.073; rss: 186MB	ElaborateDrops
  time: 0.000; rss: 186MB	NoLandingPads
  time: 0.007; rss: 182MB	SimplifyCfg
  time: 0.007; rss: 180MB	InstCombine
  time: 0.001; rss: 180MB	Deaggregator
  time: 0.000; rss: 180MB	CopyPropagation
  time: 0.007; rss: 178MB	SimplifyLocals
  time: 0.001; rss: 178MB	AddCallGuards
  time: 0.000; rss: 178MB	PreTrans
time: 0.110; rss: 178MB	MIR optimisations
  time: 0.011; rss: 180MB	write metadata
  time: 0.041; rss: 181MB	translation item collection
  time: 0.005; rss: 181MB	codegen unit partitioning
  time: 0.005; rss: 195MB	internalize symbols
time: 0.268; rss: 195MB	translation
time: 0.000; rss: 195MB	assert dep graph
time: 0.000; rss: 195MB	serialize dep graph
  time: 0.021; rss: 104MB	llvm function passes [0]
  time: 0.012; rss: 105MB	llvm module passes [0]
  time: 0.468; rss: 109MB	codegen passes [0]
  time: 0.000; rss: 109MB	codegen passes [0]
time: 0.541; rss: 109MB	LLVM passes
time: 0.000; rss: 109MB	serialize work products
time: 0.024; rss: 92MB	linking
done
